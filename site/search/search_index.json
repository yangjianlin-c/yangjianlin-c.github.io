{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mekesim Documents ESP32 Flotherm","title":"Mekesim Documents"},{"location":"#mekesim-documents","text":"ESP32 Flotherm","title":"Mekesim Documents"},{"location":"Arduino/","text":"","title":"Index"},{"location":"Arduino/Arduino%20%E8%B6%85%E5%A3%B0%E6%B3%A2%E4%BC%A0%E6%84%9F%E5%99%A8/","text":"\u8d85\u58f0\u6ce2\u4f20\u611f\u5668 \u8d85\u58f0\u6ce2\u4f20\u611f\u5668\u662f\u4e00\u79cd\u4f7f\u7528\u58f0\u6ce2\u6d4b\u91cf\u7269\u4f53\u8ddd\u79bb\u7684\u8bbe\u5907\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u53d1\u51fa\u8d85\u58f0\u6ce2\uff0c\u5e76\u7b49\u5f85\u5b83\u4ece\u7269\u4f53\u53cd\u5c04\u56de\u6765\uff0c\u6d4b\u91cf\u4ece\u53d1\u5c04\u8d85\u58f0\u6ce2\u5230\u63a5\u6536\u5230\u8d85\u58f0\u6ce2\u7684\u65f6\u95f4\u5dee \\(\\Delta t\\) \uff0c\u7136\u540e\u6839\u636e\u58f0\u6ce2\u5728\u7a7a\u6c14\u4e2d\u7684\u4f20\u8f93\u901f\u5ea6\u8ba1\u7b97\u8ddd\u79bb\u3002 $$ d=v\\times \\Delta t/2 $$ \u6211\u4eec\u5c06\u8ddd\u79bb\u516c\u5f0f\u9664\u4ee52\uff0c\u56e0\u4e3a\u58f0\u6ce2\u6cbf\u7740\u5f80\u8fd4\u884c\u8fdb\uff0c\u5373\u4ece\u4f20\u611f\u5668\u8fd4\u56de\u4f20\u611f\u5668\uff0c\u4f7f\u5b9e\u9645\u8ddd\u79bb\u52a0\u500d\u3002 HC-SR04\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\u63d0\u4f9b\u4e86\u975e\u5e38\u597d\u7684\u975e\u63a5\u89e6\u8303\u56f4\u68c0\u6d4b\uff0c\u51c6\u786e\u5ea6\u9ad8\uff0c\u8bfb\u6570\u7a33\u5b9a\uff0c\u6613\u4e8e\u4f7f\u7528\uff0c\u6d4b\u91cf\u8303\u56f4\u5927\u81f4\u4ece2cm\u5230400cm\u3002 \u5176\u64cd\u4f5c\u4e0d\u53d7\u9633\u5149\u6216\u9ed1\u8272\u6750\u6599\u7684\u5f71\u54cd\uff0c\u5c3d\u7ba1\u5728\u58f0\u5b66\u4e0a\uff0c\u67d4\u8f6f\u7684\u6750\u6599\uff08\u5982\u5e03\u6599\u7b49\uff09\u53ef\u80fd\u96be\u4ee5\u68c0\u6d4b\u5230\u3002\u5b83\u914d\u6709\u8d85\u58f0\u6ce2\u53d1\u5c04\u5668\u548c\u63a5\u6536\u5668\u6a21\u5757\u3002 \u6280\u672f\u89c4\u683c \u5de5\u4f5c\u7535\u538b\uff1a5V DC \u5de5\u4f5c\u7535\u6d41\uff1a15mA \u9759\u6001\u7535\u6d41\uff1a<2mA \u6d4b\u91cf\u89d2\u5ea6\uff1a<15\u00b0 \u6d4b\u8ddd\uff1a2cm \u2013 4m \u5206\u8fa8\u7387\uff1a0.3\u5398\u7c73 \u4f7f\u7528\u8bf4\u660e HC-SR04\u4e0a\u6709\u56db\u4e2a\u9488\u811a\u3002\u4ed6\u4eec\u662f \uff1a Vcc\uff085V\u7535\u6e90\uff09 Gnd\uff08\u5730\u9762\uff09 Trig\uff08\u89e6\u53d1\u5668\uff09 \u56de\u58f0\uff08\u63a5\u6536\uff09 Trigger \u548c Echo \u5206\u522b\u63a5\u5230\u63a7\u5236\u677f\u7684\u4e24\u4e2a\u6570\u5b57\u5f15\u811a\u3002 \u5c06Trig\u5f15\u811a\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\uff0c\u81f3\u5c1110us\uff0c\u89e6\u53d1\u6a21\u5757\u6d4b\u8ddd\u529f\u80fd\u3002 \u89e6\u53d1\u7b49\u5f85\u7ea6200us\u540e\uff0c\u6a21\u5757\u4f1a\u81ea\u52a8\u53d1\u9001 8 \u4e2a 40KHz \u7684\u8d85\u58f0\u6ce2\u8109\u51b2\u3002 \u8109\u51b2\u53d1\u9001\u5b8c\u6210\u540e\uff0cEcho \u5f15\u811a\u7acb\u5373\u8f93\u51fa\u9ad8\u7535\u5e73\u3002 \u5f53\u6a21\u5757\u68c0\u6d4b\u5230\u8fd4\u56de\u7684\u5b8c\u6574\u76848\u4e2a40KHz \u7684\u8d85\u58f0\u6ce2\u8109\u51b2\u540e\uff0cEcho \u5f15\u811a\u53d8\u4e3a\u4f4e\u7535\u5e73\u3002\u8fd9\u6b65\u4f1a\u7531\u6a21\u5757\u5185\u90e8\u81ea\u52a8\u5b8c\u6210\u3002 \u56e0\u6b64\uff0cEcho \u5f15\u811a\u9ad8\u7535\u5e73\u6301\u7eed\u7684\u65f6\u95f4\u5c31\u662f\u8d85\u58f0\u6ce2\u4ece\u53d1\u5c04\u5230\u8fd4\u56de\u7684\u65f6\u95f4\u3002\u4f7f\u7528 pulseIn() \u51fd\u6570\u83b7\u8ba1\u7b97Echo\u9ad8\u7535\u5e73\u6301\u7eed\u7684\u65f6\u95f4\uff0c\u4e58\u4ee5\u58f0\u6ce2\u5728\u7a7a\u6c14\u4e2d\u7684\u4f20\u64ad\u901f\u5ea6\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8fd9\u6bb5\u8d85\u58f0\u6ce2\u8109\u51b2\u4ece\u53d1\u5c04\u5230\u63a5\u6536\u7ecf\u5386\u7684\u8ddd\u79bb\u3002 Arduino\u4ee3\u7801 /* * Ultrasonic Sensor HC-SR04 interfacing with Arduino. */ // defining the pins const int trigPin = 9 ; const int echoPin = 10 ; // defining variables long duration ; int distance ; void setup () { pinMode ( trigPin , OUTPUT ); // Sets the trigPin as an Output pinMode ( echoPin , INPUT ); // Sets the echoPin as an Input Serial . begin ( 9600 ); // Starts the serial communication } void loop () { // Clears the trigPin digitalWrite ( trigPin , LOW ); delayMicroseconds ( 2 ); // Sets the trigPin on HIGH state for 10 micro seconds digitalWrite ( trigPin , HIGH ); delayMicroseconds ( 10 ); digitalWrite ( trigPin , LOW ); // \u5f00\u59cb\u53d1\u5c04\u58f0\u6ce2\uff0cEcho\u7aef\u8ba1\u65f6\u5f00\u59cb duration = pulseIn ( echoPin , HIGH ); // Calculating the distance, mm distance = duration * 0.034 / 2 ; // Prints the distance on the Serial Monitor Serial . print ( \"Distance: \" ); Serial . println ( distance ); } \u4ee3\u7801\u8bf4\u660e Arduino\u4e2d\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570pulseIn()\u3002 pulseIn()\u51fd\u6570\u7528\u6765\u8bfb\u53d6\u4e00\u4e2a\u5f15\u811a\u7684\u7535\u5e73\u6301\u7eed\u65f6\u95f4\uff08HIGH\u6216LOW\uff09\u3002\u4f8b\u5982\uff0c\u5982\u679cvalue\u662fHIGH\uff0cpulseIn()\u4f1a\u7b49\u5f85\u5f15\u811a\u53d8\u4e3aHIGH\uff0c\u5f00\u59cb\u8ba1\u65f6\uff0c\u518d\u7b49\u5f85\u5f15\u811a\u53d8\u4e3aLOW\u5e76\u505c\u6b62\u8ba1\u65f6\u3002\u8fd4\u56de\u8109\u51b2\u7684\u957f\u5ea6\uff0c\u5355\u4f4d\u6beb\u79d2\u3002\u5982\u679c\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\u65e0\u8109\u51b2\u51fd\u6570\u8fd4\u56de\u3002 \u8ba1\u65f6\u8303\u56f4\u4ece10\u5fae\u79d2\u81f33\u5206\u949f\u3002\uff081\u79d2=1000\u6beb\u79d2=1000000\u5fae\u79d2\uff09 \u8d85\u58f0\u6ce2\u6d4b\u8ddd\u7684\u4f7f\u7528\u9650\u5236 \u4ece\u524d\u9762\u4ecb\u7ecd\u7684\u8d85\u58f0\u6ce2\u6d4b\u8ddd\u539f\u7406\u5bb9\u6613\u7406\u89e3\u8fd9\u79cd\u6d4b\u8ddd\u65b9\u5f0f\u6709\u5176\u5f0a\u7aef\u6216\u4e0d\u9002\u7528\u7684\u573a\u5408\u3002 \u6d4b\u91cf\u7ed3\u679c\u53d7\u7a7a\u6c14\u73af\u5883\u5f71\u54cd\u3002\u58f0\u6ce2\u5728\u7a7a\u6c14\u4e2d\u7684\u4f20\u64ad\u901f\u5ea6\u91c7\u7528340m/s\u53ea\u662f\u8fd1\u4f3c\u503c\uff0c\u7a7a\u6c14\u6e29\u6e7f\u5ea6\uff0c\u5bc6\u5ea6\u7684\u6539\u53d8\u90fd\u4f1a\u5bfc\u81f4\u58f0\u6ce2\u4f20\u8f93\u901f\u5ea6\u7684\u53d8\u5316\u3002\u800c\u4ee3\u7801\u4e2d\u5047\u8bbe\u58f0\u6ce2\u901f\u5ea6\u59cb\u7ec8\u4e3a340\u3002\u751a\u81f3\uff0c\u5728\u592a\u7a7a\u4e2d\u6ca1\u6709\u7a7a\u6c14\uff0c\u58f0\u6ce2\u65e0\u6cd5\u4f20\u64ad\uff0c\u6240\u4ee5\u8fd9\u79cd\u6d4b\u91cf\u65b9\u5f0f\u5c31\u65e0\u6cd5\u4f7f\u7528\u4e86\u3002 \u6d4b\u91cf\u89d2\u5ea6\u3002\u5982\u679c\u88ab\u6d4b\u5bf9\u8c61\u4e0e\u53d1\u51fa\u58f0\u6ce2\u7684\u65b9\u5411\u5e73\u884c\uff0c\u65e0\u6cd5\u5f62\u6210\u6709\u6548\u53cd\u5c04\uff0cecho\u7aef\u63a5\u6536\u4e0d\u5230\u53cd\u5c04\u4fe1\u53f7\uff0c\u4e5f\u65e0\u6cd5\u51c6\u786e\u6d4b\u91cf\u3002 \u6d4b\u91cf\u5bf9\u8c61\u5438\u6536\u58f0\u6ce2\u3002\u5982\u679c\u88ab\u6d4b\u5bf9\u8c61\u6bd4\u8f83\u67d4\u8f6f\uff0c\u50cf\u6ce1\u68c9\uff0c\u7ed2\u5a03\u5a03\uff0c\u4ed6\u4eec\u4f1a\u5438\u6536\u58f0\u6ce2\uff0c\u4e0d\u80fd\u6709\u6548\u5730\u53cd\u5c04\u58f0\u6ce2\u3002\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e5f\u65e0\u6cd5\u6d4b\u91cf\u3002","title":"\u8d85\u58f0\u6ce2\u4f20\u611f\u5668"},{"location":"Arduino/Arduino%20%E8%B6%85%E5%A3%B0%E6%B3%A2%E4%BC%A0%E6%84%9F%E5%99%A8/#_1","text":"\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\u662f\u4e00\u79cd\u4f7f\u7528\u58f0\u6ce2\u6d4b\u91cf\u7269\u4f53\u8ddd\u79bb\u7684\u8bbe\u5907\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u53d1\u51fa\u8d85\u58f0\u6ce2\uff0c\u5e76\u7b49\u5f85\u5b83\u4ece\u7269\u4f53\u53cd\u5c04\u56de\u6765\uff0c\u6d4b\u91cf\u4ece\u53d1\u5c04\u8d85\u58f0\u6ce2\u5230\u63a5\u6536\u5230\u8d85\u58f0\u6ce2\u7684\u65f6\u95f4\u5dee \\(\\Delta t\\) \uff0c\u7136\u540e\u6839\u636e\u58f0\u6ce2\u5728\u7a7a\u6c14\u4e2d\u7684\u4f20\u8f93\u901f\u5ea6\u8ba1\u7b97\u8ddd\u79bb\u3002 $$ d=v\\times \\Delta t/2 $$ \u6211\u4eec\u5c06\u8ddd\u79bb\u516c\u5f0f\u9664\u4ee52\uff0c\u56e0\u4e3a\u58f0\u6ce2\u6cbf\u7740\u5f80\u8fd4\u884c\u8fdb\uff0c\u5373\u4ece\u4f20\u611f\u5668\u8fd4\u56de\u4f20\u611f\u5668\uff0c\u4f7f\u5b9e\u9645\u8ddd\u79bb\u52a0\u500d\u3002 HC-SR04\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\u63d0\u4f9b\u4e86\u975e\u5e38\u597d\u7684\u975e\u63a5\u89e6\u8303\u56f4\u68c0\u6d4b\uff0c\u51c6\u786e\u5ea6\u9ad8\uff0c\u8bfb\u6570\u7a33\u5b9a\uff0c\u6613\u4e8e\u4f7f\u7528\uff0c\u6d4b\u91cf\u8303\u56f4\u5927\u81f4\u4ece2cm\u5230400cm\u3002 \u5176\u64cd\u4f5c\u4e0d\u53d7\u9633\u5149\u6216\u9ed1\u8272\u6750\u6599\u7684\u5f71\u54cd\uff0c\u5c3d\u7ba1\u5728\u58f0\u5b66\u4e0a\uff0c\u67d4\u8f6f\u7684\u6750\u6599\uff08\u5982\u5e03\u6599\u7b49\uff09\u53ef\u80fd\u96be\u4ee5\u68c0\u6d4b\u5230\u3002\u5b83\u914d\u6709\u8d85\u58f0\u6ce2\u53d1\u5c04\u5668\u548c\u63a5\u6536\u5668\u6a21\u5757\u3002","title":"\u8d85\u58f0\u6ce2\u4f20\u611f\u5668"},{"location":"Arduino/Arduino%20%E8%B6%85%E5%A3%B0%E6%B3%A2%E4%BC%A0%E6%84%9F%E5%99%A8/#_2","text":"\u5de5\u4f5c\u7535\u538b\uff1a5V DC \u5de5\u4f5c\u7535\u6d41\uff1a15mA \u9759\u6001\u7535\u6d41\uff1a<2mA \u6d4b\u91cf\u89d2\u5ea6\uff1a<15\u00b0 \u6d4b\u8ddd\uff1a2cm \u2013 4m \u5206\u8fa8\u7387\uff1a0.3\u5398\u7c73","title":"\u6280\u672f\u89c4\u683c"},{"location":"Arduino/Arduino%20%E8%B6%85%E5%A3%B0%E6%B3%A2%E4%BC%A0%E6%84%9F%E5%99%A8/#_3","text":"HC-SR04\u4e0a\u6709\u56db\u4e2a\u9488\u811a\u3002\u4ed6\u4eec\u662f \uff1a Vcc\uff085V\u7535\u6e90\uff09 Gnd\uff08\u5730\u9762\uff09 Trig\uff08\u89e6\u53d1\u5668\uff09 \u56de\u58f0\uff08\u63a5\u6536\uff09 Trigger \u548c Echo \u5206\u522b\u63a5\u5230\u63a7\u5236\u677f\u7684\u4e24\u4e2a\u6570\u5b57\u5f15\u811a\u3002 \u5c06Trig\u5f15\u811a\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\uff0c\u81f3\u5c1110us\uff0c\u89e6\u53d1\u6a21\u5757\u6d4b\u8ddd\u529f\u80fd\u3002 \u89e6\u53d1\u7b49\u5f85\u7ea6200us\u540e\uff0c\u6a21\u5757\u4f1a\u81ea\u52a8\u53d1\u9001 8 \u4e2a 40KHz \u7684\u8d85\u58f0\u6ce2\u8109\u51b2\u3002 \u8109\u51b2\u53d1\u9001\u5b8c\u6210\u540e\uff0cEcho \u5f15\u811a\u7acb\u5373\u8f93\u51fa\u9ad8\u7535\u5e73\u3002 \u5f53\u6a21\u5757\u68c0\u6d4b\u5230\u8fd4\u56de\u7684\u5b8c\u6574\u76848\u4e2a40KHz \u7684\u8d85\u58f0\u6ce2\u8109\u51b2\u540e\uff0cEcho \u5f15\u811a\u53d8\u4e3a\u4f4e\u7535\u5e73\u3002\u8fd9\u6b65\u4f1a\u7531\u6a21\u5757\u5185\u90e8\u81ea\u52a8\u5b8c\u6210\u3002 \u56e0\u6b64\uff0cEcho \u5f15\u811a\u9ad8\u7535\u5e73\u6301\u7eed\u7684\u65f6\u95f4\u5c31\u662f\u8d85\u58f0\u6ce2\u4ece\u53d1\u5c04\u5230\u8fd4\u56de\u7684\u65f6\u95f4\u3002\u4f7f\u7528 pulseIn() \u51fd\u6570\u83b7\u8ba1\u7b97Echo\u9ad8\u7535\u5e73\u6301\u7eed\u7684\u65f6\u95f4\uff0c\u4e58\u4ee5\u58f0\u6ce2\u5728\u7a7a\u6c14\u4e2d\u7684\u4f20\u64ad\u901f\u5ea6\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8fd9\u6bb5\u8d85\u58f0\u6ce2\u8109\u51b2\u4ece\u53d1\u5c04\u5230\u63a5\u6536\u7ecf\u5386\u7684\u8ddd\u79bb\u3002","title":"\u4f7f\u7528\u8bf4\u660e"},{"location":"Arduino/Arduino%20%E8%B6%85%E5%A3%B0%E6%B3%A2%E4%BC%A0%E6%84%9F%E5%99%A8/#arduino","text":"/* * Ultrasonic Sensor HC-SR04 interfacing with Arduino. */ // defining the pins const int trigPin = 9 ; const int echoPin = 10 ; // defining variables long duration ; int distance ; void setup () { pinMode ( trigPin , OUTPUT ); // Sets the trigPin as an Output pinMode ( echoPin , INPUT ); // Sets the echoPin as an Input Serial . begin ( 9600 ); // Starts the serial communication } void loop () { // Clears the trigPin digitalWrite ( trigPin , LOW ); delayMicroseconds ( 2 ); // Sets the trigPin on HIGH state for 10 micro seconds digitalWrite ( trigPin , HIGH ); delayMicroseconds ( 10 ); digitalWrite ( trigPin , LOW ); // \u5f00\u59cb\u53d1\u5c04\u58f0\u6ce2\uff0cEcho\u7aef\u8ba1\u65f6\u5f00\u59cb duration = pulseIn ( echoPin , HIGH ); // Calculating the distance, mm distance = duration * 0.034 / 2 ; // Prints the distance on the Serial Monitor Serial . print ( \"Distance: \" ); Serial . println ( distance ); }","title":"Arduino\u4ee3\u7801"},{"location":"Arduino/Arduino%20%E8%B6%85%E5%A3%B0%E6%B3%A2%E4%BC%A0%E6%84%9F%E5%99%A8/#_4","text":"Arduino\u4e2d\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570pulseIn()\u3002 pulseIn()\u51fd\u6570\u7528\u6765\u8bfb\u53d6\u4e00\u4e2a\u5f15\u811a\u7684\u7535\u5e73\u6301\u7eed\u65f6\u95f4\uff08HIGH\u6216LOW\uff09\u3002\u4f8b\u5982\uff0c\u5982\u679cvalue\u662fHIGH\uff0cpulseIn()\u4f1a\u7b49\u5f85\u5f15\u811a\u53d8\u4e3aHIGH\uff0c\u5f00\u59cb\u8ba1\u65f6\uff0c\u518d\u7b49\u5f85\u5f15\u811a\u53d8\u4e3aLOW\u5e76\u505c\u6b62\u8ba1\u65f6\u3002\u8fd4\u56de\u8109\u51b2\u7684\u957f\u5ea6\uff0c\u5355\u4f4d\u6beb\u79d2\u3002\u5982\u679c\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\u65e0\u8109\u51b2\u51fd\u6570\u8fd4\u56de\u3002 \u8ba1\u65f6\u8303\u56f4\u4ece10\u5fae\u79d2\u81f33\u5206\u949f\u3002\uff081\u79d2=1000\u6beb\u79d2=1000000\u5fae\u79d2\uff09","title":"\u4ee3\u7801\u8bf4\u660e"},{"location":"Arduino/Arduino%20%E8%B6%85%E5%A3%B0%E6%B3%A2%E4%BC%A0%E6%84%9F%E5%99%A8/#_5","text":"\u4ece\u524d\u9762\u4ecb\u7ecd\u7684\u8d85\u58f0\u6ce2\u6d4b\u8ddd\u539f\u7406\u5bb9\u6613\u7406\u89e3\u8fd9\u79cd\u6d4b\u8ddd\u65b9\u5f0f\u6709\u5176\u5f0a\u7aef\u6216\u4e0d\u9002\u7528\u7684\u573a\u5408\u3002 \u6d4b\u91cf\u7ed3\u679c\u53d7\u7a7a\u6c14\u73af\u5883\u5f71\u54cd\u3002\u58f0\u6ce2\u5728\u7a7a\u6c14\u4e2d\u7684\u4f20\u64ad\u901f\u5ea6\u91c7\u7528340m/s\u53ea\u662f\u8fd1\u4f3c\u503c\uff0c\u7a7a\u6c14\u6e29\u6e7f\u5ea6\uff0c\u5bc6\u5ea6\u7684\u6539\u53d8\u90fd\u4f1a\u5bfc\u81f4\u58f0\u6ce2\u4f20\u8f93\u901f\u5ea6\u7684\u53d8\u5316\u3002\u800c\u4ee3\u7801\u4e2d\u5047\u8bbe\u58f0\u6ce2\u901f\u5ea6\u59cb\u7ec8\u4e3a340\u3002\u751a\u81f3\uff0c\u5728\u592a\u7a7a\u4e2d\u6ca1\u6709\u7a7a\u6c14\uff0c\u58f0\u6ce2\u65e0\u6cd5\u4f20\u64ad\uff0c\u6240\u4ee5\u8fd9\u79cd\u6d4b\u91cf\u65b9\u5f0f\u5c31\u65e0\u6cd5\u4f7f\u7528\u4e86\u3002 \u6d4b\u91cf\u89d2\u5ea6\u3002\u5982\u679c\u88ab\u6d4b\u5bf9\u8c61\u4e0e\u53d1\u51fa\u58f0\u6ce2\u7684\u65b9\u5411\u5e73\u884c\uff0c\u65e0\u6cd5\u5f62\u6210\u6709\u6548\u53cd\u5c04\uff0cecho\u7aef\u63a5\u6536\u4e0d\u5230\u53cd\u5c04\u4fe1\u53f7\uff0c\u4e5f\u65e0\u6cd5\u51c6\u786e\u6d4b\u91cf\u3002 \u6d4b\u91cf\u5bf9\u8c61\u5438\u6536\u58f0\u6ce2\u3002\u5982\u679c\u88ab\u6d4b\u5bf9\u8c61\u6bd4\u8f83\u67d4\u8f6f\uff0c\u50cf\u6ce1\u68c9\uff0c\u7ed2\u5a03\u5a03\uff0c\u4ed6\u4eec\u4f1a\u5438\u6536\u58f0\u6ce2\uff0c\u4e0d\u80fd\u6709\u6548\u5730\u53cd\u5c04\u58f0\u6ce2\u3002\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e5f\u65e0\u6cd5\u6d4b\u91cf\u3002","title":"\u8d85\u58f0\u6ce2\u6d4b\u8ddd\u7684\u4f7f\u7528\u9650\u5236"},{"location":"Arduino/Car-basic/","text":"Arduino\u63a7\u5236\u5c0f\u8f66","title":"Arduino\u63a7\u5236\u5c0f\u8f66"},{"location":"Arduino/Car-basic/#arduino","text":"","title":"Arduino\u63a7\u5236\u5c0f\u8f66"},{"location":"Arduino/I2C%20Sanner/","text":"#include <Wire.h> void setup () { Wire . begin (); Serial . begin ( 9600 ); while ( ! Serial ); // Leonardo: wait for serial monitor Serial . println ( \" \\n I2C Scanner\" ); } void loop () { byte error , address ; int nDevices ; Serial . println ( \"Scanning...\" ); nDevices = 0 ; for ( address = 1 ; address < 127 ; address ++ ) { // The i2c_scanner uses the return value of // the Write.endTransmisstion to see if // a device did acknowledge to the address. Wire . beginTransmission ( address ); error = Wire . endTransmission (); if ( error == 0 ) { Serial . print ( \"I2C device found at address 0x\" ); if ( address < 16 ) Serial . print ( \"0\" ); Serial . print ( address , HEX ); Serial . println ( \" !\" ); nDevices ++ ; } else if ( error == 4 ) { Serial . print ( \"Unknown error at address 0x\" ); if ( address < 16 ) Serial . print ( \"0\" ); Serial . println ( address , HEX ); } } if ( nDevices == 0 ) Serial . println ( \"No I2C devices found \\n \" ); else Serial . println ( \"done \\n \" ); delay ( 5000 ); // wait 5 seconds for next scan }","title":"I2C Sanner"},{"location":"Arduino/L298N/","text":"L298N\u662f\u4e00\u79cd\u5e38\u7528\u7684\u76f4\u6d41\u7535\u673a\u9a71\u52a8\u6a21\u5757\u3002PIN\u811a\u5982\u4e0b\u56fe\uff1a L298N\u53ef\u4ee5\u5206\u522b\u5355\u72ec\u63a7\u5236\u4e24\u8def\u76f4\u6d41\u7535\u673a\u3002 IN1\uff0cIN2\u63a7\u5236\u7535\u673aA IN3\uff0cIN4\u63a7\u5236\u7535\u673aB \u4ee5\u7535\u673aA\u4e3a\u4f8b\uff0c\u63a7\u5236\u65b9\u5f0f\u5982\u4e0b\u8868\uff1a IN1 IN2 \u65cb\u8f6c\u65b9\u5f0f \u9ad8 \u4f4e \u6b63\u8f6c \u4f4e \u9ad8 \u53cd\u8f6c \u9ad8 \u9ad8 \u505c\u6b62 \u4f4e \u4f4e \u505c\u6b62 \u7b80\u5355\u6765\u8bf4\uff0cIN1\uff0cIN2\u4e00\u9ad8\u4e00\u4f4e\u65f6\u7535\u673a\u8f6c\u52a8\uff0c\u4e24\u8005\u540c\u65f6\u4e3a\u9ad8\u6216\u540c\u65f6\u4e3a\u4f4e\u65f6\u7535\u673a\u505c\u6b62\u8f6c\u52a8\u3002 L298N \u9a71\u52a8\u677f\u5f15\u811a\u8bf4\u660e VCC +12V \u5f15\u811a\uff0c\u4e3a\u7535\u673a\u4f9b\u7535\u7535\u6e90\u3002\u8f93\u5165\u7535\u538b\u53ef\u4ee5\u57285~35V\u4e4b\u95f4\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5982\u679c 5V-EN \u8df3\u7ebf\u5df2\u5c31\u4f4d\uff0c\u5219\u9700\u8981\u63d0\u4f9b\u6bd4\u7535\u673a\u5b9e\u9645\u7535\u538b\u8981\u6c42\u591a 2 \u4f0f\u7684\u7535\u538b\uff0c\u4ee5\u4fbf\u83b7\u5f97\u7535\u673a\u7684\u6700\u5927\u901f\u5ea6\u3002 GND \u5f15\u811a\uff0c\u516c\u5171\u63a5\u5730\u5f15\u811a\u3002 5V \u5f15\u811a\uff0c\u4e3aL298N IC\u5185\u90e8\u7535\u8def\u4f9b\u7535\u3002 OUT1 & OUT2\u5f15\u811a\uff0c\u8fde\u63a5\u5230\u7535\u673a A\u3002 OUT3 & OUT4\u5f15\u811a\uff0c\u8fde\u63a5\u5230\u7535\u673a B\u3002 IN1 & IN2\u5f15\u811a\uff0c\u7528\u4e8e\u63a7\u5236\u7535\u673aA\u7684\u65cb\u8f6c\u65b9\u5411\u3002\u5f53\u5176\u4e2d\u4e00\u4e2a\u662f\u9ad8\u7535\u5e73\u800c\u53e6\u4e00\u4e2a\u4e3a\u4f4e\u7535\u5e73\u65f6\uff0c\u7535\u673aA\u5c06\u65cb\u8f6c\u3002\u5982\u679c\u4e24\u4e2a\u8f93\u5165\u90fd\u4e3a\u9ad8\u7535\u5e73\u6216\u4f4e\u7535\u5e73\uff0c\u5219\u7535\u673a A \u5c06\u505c\u6b62\u3002 IN3 & IN4\u5f15\u811a\uff0c\u7528\u4e8e\u63a7\u5236\u7535\u673aB\u7684\u65cb\u8f6c\u65b9\u5411\u3002\u5f53\u5176\u4e2d\u4e00\u4e2a\u662f\u9ad8\u7535\u5e73\u800c\u53e6\u4e00\u4e2a\u4e3a\u4f4e\u7535\u5e73\u65f6\uff0c\u7535\u673aB\u5c06\u65cb\u8f6c\u3002\u5982\u679c\u4e24\u4e2a\u8f93\u5165\u90fd\u4e3a\u9ad8\u7535\u5e73\u6216\u4f4e\u7535\u5e73\uff0c\u5219\u7535\u673aB\u5c06\u505c\u6b62\u3002 ENA \u5f15\u811a\uff0c\u7528\u4e8e\u63a7\u5236\u7535\u673aA\u7684\u901f\u5ea6\uff0c\u5c06\u6b64\u5f15\u811a\u62c9\u81f3\u9ad8\u7535\u5e73\uff08\u4fdd\u6301\u8df3\u7ebf\u5230\u4f4d\uff09\u5c06\u4f7f\u7535\u673aA\u65cb\u8f6c\uff0c\u5c06\u5176\u62c9\u4f4e\u4f1a\u4f7f\u7535\u673a\u505c\u6b62\u3002\u5378\u4e0b\u8df3\u7ebf\u5e3d\u5e76\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230PWM\u8f93\u5165\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u63a7\u5236\u7535\u673aA\u7684\u901f\u5ea6\u3002 ENB \u5f15\u811a\uff0c\u7528\u4e8e\u63a7\u5236\u7535\u673aB\u7684\u901f\u5ea6\uff0c\u5c06\u6b64\u5f15\u811a\u62c9\u81f3\u9ad8\u7535\u5e73\uff08\u4fdd\u6301\u8df3\u7ebf\u5230\u4f4d\uff09\u5c06\u4f7f\u7535\u673aB\u65cb\u8f6c\uff0c\u5c06\u5176\u62c9\u4f4e\u4f1a\u4f7f\u7535\u673a\u505c\u6b62\u3002\u5378\u4e0b\u8df3\u7ebf\u5e3d\u5e76\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230PWM\u8f93\u5165\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u63a7\u5236\u7535\u673aB\u7684\u901f\u5ea6\u3002 \u53e6\u5916\uff0c\u6a21\u5757\u4e0a\u8fd8\u6709\u4e09\u4e2a\u8df3\u7ebf\u5e3d\uff1a 5V EN 5V - EN A\uff0c\u5c06EN A\u63a5\u52305V 5V - EN B\uff0c\u5c06EN B\u63a5\u52305V 5V EN\u8df3\u7ebf\u5e3d \u8fd9\u91cc\u6bd4\u8f83\u96be\u7406\u89e3\u7684\u662f5V EN\u8df3\u7ebf\u5e3d\u3002L298N \u9a71\u52a8\u677f\u7684\u539f\u7406\u56fe\u5982\u4e0b\uff1a L298N IC\u7684\u5de5\u4f5c\u7535\u538b\u4e3a5V\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u63d0\u4f9b5V\u7684\u7535\u538b\u7ed9\u82af\u7247\u3002\u800c\u6a21\u5757\u4e0a\u6709\u4e00\u4e2a\u7a33\u538b\u5668\u82af\u7247L78M05\uff0c\u5b83\u53ef\u4ee5\u5c06\u9ad8\u7535\u538b\u8f6c\u6362\u4e3a5V\u7535\u538b\u30025V EN\u8df3\u7ebf\u5e3d\u662f\u56fe\u4e2d\u7684JP1\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u662f\u7ed9L78M05\u7a33\u538b\u82af\u7247\u8f93\u5165\u7535\u538b\uff0c\u5982\u679c\u65ad\u5f00L78M\u6ca1\u6709\u7535\u538b\u8f93\u5165\uff0c\u4e0d\u5de5\u4f5c\uff1b\u63a5\u4e0a\u8df3\u7ebf\u5e3d\u5219L78M\u88ab\u4f9b\u7535\uff0c\u5b83\u63d0\u4f9b5V\u8f93\u51fa\uff0c\u65e2\u53ef\u4ee5\u7ed9L298\u63d0\u4f9b5V\u7535\u6e90\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u5916\u90e8\u5176\u4ed6\u7535\u8def\u63d0\u4f9b5V\u7535\u6e90\u3002 Note L78M05\u7684\u538b\u964d\u4e3a2V\uff0c\u610f\u5473\u7740\u5982\u679c\u8981\u5f97\u52305V\u7684\u8f93\u51fa\u7535\u538b\uff0c\u8f93\u5165\u7535\u538b\u5fc5\u987b\u5927\u4e8e7V\u3002 L78M05\u7684\u6700\u5927\u8f93\u5165\u7535\u538b\u4e3a35V\uff0c\u5982\u679c\u7535\u673a\u9a71\u52a8\u7535\u538b\u5927\u4e8e35V\uff0c\u5219\u4e0d\u8981\u4f7f\u7528\u8fd9\u4e2a\u7a33\u538b\u82af\u7247\u6765\u63d0\u4f9b5V\uff0c\u8981\u5c06\u8df3\u7ebf\u5e3d\u53d6\u6389\uff0c\u5c06\u7a33\u538b\u82af\u7247\u7684\u4f9b\u7535\u65ad\u6389\u3002\u4ece\u5176\u4ed6\u9014\u5f84\u7ed9\u6a21\u5757\u82af\u7247\u4f9b\u7535\u3002 \u56e0\u6b64\u548cArduino\u5f00\u53d1\u677f\u8fde\u63a5\u65f6\u6709\u591a\u79cd\u4f9b\u7535\u914d\u5408\u65b9\u5f0f\u3002 \u7528 L298N \u7ed9 Arduino \u4f9b\u7535 \u7528 Arduino \u7ed9 L298N \u4f9b\u7535 \u5982\u679cArduino\u5728\u8c03\u8bd5\uff0c\u63a5\u7684\u662f\u7535\u8111USB\u76845V\u7535\u538b\uff0c\u8fd9\u65f6\u5019\u7ed9\u7535\u673a\u7684\u7535\u538b\u53ea\u67093V\uff0c\u53ef\u80fd\u9a71\u52a8\u4e0d\u4e86\u7535\u673a\uff0c\u4f7f\u7535\u673a\u65e0\u6cd5\u8f6c\u52a8\u3002 Arduino \u548c L298N \u5355\u72ec\u4f9b\u7535 \u4e0d\u8bba\u54ea\u79cd\u60c5\u51b5\uff0cArduino \u7684\u5730\u9700\u548c L298N \u7684\u5730\u76f8\u8fde\u3002 Danger \u53e6\u5916\uff0c\u5982\u679c\u8df3\u7ebf\u5e3d\u63a5\u4e0a\u4e86\uff0c\u518d\u4e0d\u8981\u5c06\u9a71\u52a8\u677f\u76845V\u4e0e\u5916\u90e8\u7535\u6e90\u8f93\u5165\u76845V\u76f8\u8fde\u4e86\uff0c\u4e0d\u77e5\u9053\u8c01\u4f1a\u70e7\u4e86\u8c01\u3002 \u793a\u4f8b\u4ee3\u7801 \u8fd9\u91cc\u91c7\u7528 Arduino \u7ed9 L298N \u4f9b\u7535\u4e3a\u4f8b\uff0c\u63a5\u7ebf\u56fe\u5982\u4e0b\uff1a int motor1pin1 = 2 ; int motor1pin2 = 3 ; int motor2pin1 = 4 ; int motor2pin2 = 5 ; void setup () { // put your setup code here, to run once: pinMode ( motor1pin1 , OUTPUT ); pinMode ( motor1pin2 , OUTPUT ); pinMode ( motor2pin1 , OUTPUT ); pinMode ( motor2pin2 , OUTPUT ); } void loop () { // put your main code here, to run repeatedly: digitalWrite ( motor1pin1 , HIGH ); digitalWrite ( motor1pin2 , LOW ); digitalWrite ( motor2pin1 , HIGH ); digitalWrite ( motor2pin2 , LOW ); delay ( 1000 ); digitalWrite ( motor1pin1 , LOW ); digitalWrite ( motor1pin2 , HIGH ); digitalWrite ( motor2pin1 , LOW ); digitalWrite ( motor2pin2 , HIGH ); delay ( 1000 ); } 5V - EN A\uff0c5V - EN B \u8df3\u7ebf\u5e3d \u76f4\u6d41\u7535\u673a\u7684\u8f6c\u901f\u548c\u7535\u538b\u6210\u6b63\u6bd4\uff0cPWM\u5c31\u662f\u6539\u53d8\u5360\u7a7a\u6bd4\u6539\u53d8\u7535\u538b\u6765\u6539\u53d8\u8f6c\u901f\u3002\u5f53\u7136\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7\u63a7\u5236\u677f\u7684PWM\u8f93\u51fa\u6765\u9a71\u52a8\u7535\u673a\uff0c\u6240\u4ee5\u5148\u5c06\u63a7\u5236\u677f\u7684PWM\u4fe1\u53f7\u53d1\u7ed9L298N\u9a71\u52a8\u677f\u7684EN A\u6216EN B\uff0c\u518d\u9a71\u52a8\u677f\u53bb\u63a7\u5236\u4f9b\u7ed9\u7535\u673a\u7684\u7535\u538b\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u63a7\u5236\u7535\u673a\u901f\u5ea6\u3002 \u5982\u679c5V - EN \uff21\uff0c5V - EN B \u8df3\u7ebf\u5e3d\u63a5\u4e0a\u4e86\uff0c\u5219EN A\uff0c EN B\u7684\u7535\u538b\u59cb\u7ec8\u4e3a5V\uff0c\u610f\u5473\u7740\u4f9b\u7ed9\u7535\u673a\u7684\u7535\u538b\u59cb\u7ec8\u4e3a\u6700\u5927\u503c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u9700\u8981\u63a7\u5236\u7535\u673a\u8f6c\u901f\uff0c\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u8df3\u7ebf\u5e3d\u63a5\u4e0a\uff0c\u5c31\u53ef\u4ee5\u7701\u4e24\u6839\u63a7\u5236\u4fe1\u53f7\u7ebf\u3002 \u4f7f\u7528Arduino\u63a7\u5236\u8f6c\u901f\u53ea\u9700\u5c06EN A \u6216EN B\u4e0eArduino\u7684PWM\u8f93\u51fapin\u76f8\u8fde\uff0c\u4ee3\u7801\u5982\u4e0b\u3002 analogWrite ( ENA_pin , 50 );","title":"L298N"},{"location":"Arduino/L298N/#l298n","text":"VCC +12V \u5f15\u811a\uff0c\u4e3a\u7535\u673a\u4f9b\u7535\u7535\u6e90\u3002\u8f93\u5165\u7535\u538b\u53ef\u4ee5\u57285~35V\u4e4b\u95f4\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5982\u679c 5V-EN \u8df3\u7ebf\u5df2\u5c31\u4f4d\uff0c\u5219\u9700\u8981\u63d0\u4f9b\u6bd4\u7535\u673a\u5b9e\u9645\u7535\u538b\u8981\u6c42\u591a 2 \u4f0f\u7684\u7535\u538b\uff0c\u4ee5\u4fbf\u83b7\u5f97\u7535\u673a\u7684\u6700\u5927\u901f\u5ea6\u3002 GND \u5f15\u811a\uff0c\u516c\u5171\u63a5\u5730\u5f15\u811a\u3002 5V \u5f15\u811a\uff0c\u4e3aL298N IC\u5185\u90e8\u7535\u8def\u4f9b\u7535\u3002 OUT1 & OUT2\u5f15\u811a\uff0c\u8fde\u63a5\u5230\u7535\u673a A\u3002 OUT3 & OUT4\u5f15\u811a\uff0c\u8fde\u63a5\u5230\u7535\u673a B\u3002 IN1 & IN2\u5f15\u811a\uff0c\u7528\u4e8e\u63a7\u5236\u7535\u673aA\u7684\u65cb\u8f6c\u65b9\u5411\u3002\u5f53\u5176\u4e2d\u4e00\u4e2a\u662f\u9ad8\u7535\u5e73\u800c\u53e6\u4e00\u4e2a\u4e3a\u4f4e\u7535\u5e73\u65f6\uff0c\u7535\u673aA\u5c06\u65cb\u8f6c\u3002\u5982\u679c\u4e24\u4e2a\u8f93\u5165\u90fd\u4e3a\u9ad8\u7535\u5e73\u6216\u4f4e\u7535\u5e73\uff0c\u5219\u7535\u673a A \u5c06\u505c\u6b62\u3002 IN3 & IN4\u5f15\u811a\uff0c\u7528\u4e8e\u63a7\u5236\u7535\u673aB\u7684\u65cb\u8f6c\u65b9\u5411\u3002\u5f53\u5176\u4e2d\u4e00\u4e2a\u662f\u9ad8\u7535\u5e73\u800c\u53e6\u4e00\u4e2a\u4e3a\u4f4e\u7535\u5e73\u65f6\uff0c\u7535\u673aB\u5c06\u65cb\u8f6c\u3002\u5982\u679c\u4e24\u4e2a\u8f93\u5165\u90fd\u4e3a\u9ad8\u7535\u5e73\u6216\u4f4e\u7535\u5e73\uff0c\u5219\u7535\u673aB\u5c06\u505c\u6b62\u3002 ENA \u5f15\u811a\uff0c\u7528\u4e8e\u63a7\u5236\u7535\u673aA\u7684\u901f\u5ea6\uff0c\u5c06\u6b64\u5f15\u811a\u62c9\u81f3\u9ad8\u7535\u5e73\uff08\u4fdd\u6301\u8df3\u7ebf\u5230\u4f4d\uff09\u5c06\u4f7f\u7535\u673aA\u65cb\u8f6c\uff0c\u5c06\u5176\u62c9\u4f4e\u4f1a\u4f7f\u7535\u673a\u505c\u6b62\u3002\u5378\u4e0b\u8df3\u7ebf\u5e3d\u5e76\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230PWM\u8f93\u5165\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u63a7\u5236\u7535\u673aA\u7684\u901f\u5ea6\u3002 ENB \u5f15\u811a\uff0c\u7528\u4e8e\u63a7\u5236\u7535\u673aB\u7684\u901f\u5ea6\uff0c\u5c06\u6b64\u5f15\u811a\u62c9\u81f3\u9ad8\u7535\u5e73\uff08\u4fdd\u6301\u8df3\u7ebf\u5230\u4f4d\uff09\u5c06\u4f7f\u7535\u673aB\u65cb\u8f6c\uff0c\u5c06\u5176\u62c9\u4f4e\u4f1a\u4f7f\u7535\u673a\u505c\u6b62\u3002\u5378\u4e0b\u8df3\u7ebf\u5e3d\u5e76\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230PWM\u8f93\u5165\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u63a7\u5236\u7535\u673aB\u7684\u901f\u5ea6\u3002 \u53e6\u5916\uff0c\u6a21\u5757\u4e0a\u8fd8\u6709\u4e09\u4e2a\u8df3\u7ebf\u5e3d\uff1a 5V EN 5V - EN A\uff0c\u5c06EN A\u63a5\u52305V 5V - EN B\uff0c\u5c06EN B\u63a5\u52305V","title":"L298N \u9a71\u52a8\u677f\u5f15\u811a\u8bf4\u660e"},{"location":"Arduino/L298N/#5v-en","text":"\u8fd9\u91cc\u6bd4\u8f83\u96be\u7406\u89e3\u7684\u662f5V EN\u8df3\u7ebf\u5e3d\u3002L298N \u9a71\u52a8\u677f\u7684\u539f\u7406\u56fe\u5982\u4e0b\uff1a L298N IC\u7684\u5de5\u4f5c\u7535\u538b\u4e3a5V\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u63d0\u4f9b5V\u7684\u7535\u538b\u7ed9\u82af\u7247\u3002\u800c\u6a21\u5757\u4e0a\u6709\u4e00\u4e2a\u7a33\u538b\u5668\u82af\u7247L78M05\uff0c\u5b83\u53ef\u4ee5\u5c06\u9ad8\u7535\u538b\u8f6c\u6362\u4e3a5V\u7535\u538b\u30025V EN\u8df3\u7ebf\u5e3d\u662f\u56fe\u4e2d\u7684JP1\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u662f\u7ed9L78M05\u7a33\u538b\u82af\u7247\u8f93\u5165\u7535\u538b\uff0c\u5982\u679c\u65ad\u5f00L78M\u6ca1\u6709\u7535\u538b\u8f93\u5165\uff0c\u4e0d\u5de5\u4f5c\uff1b\u63a5\u4e0a\u8df3\u7ebf\u5e3d\u5219L78M\u88ab\u4f9b\u7535\uff0c\u5b83\u63d0\u4f9b5V\u8f93\u51fa\uff0c\u65e2\u53ef\u4ee5\u7ed9L298\u63d0\u4f9b5V\u7535\u6e90\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u5916\u90e8\u5176\u4ed6\u7535\u8def\u63d0\u4f9b5V\u7535\u6e90\u3002 Note L78M05\u7684\u538b\u964d\u4e3a2V\uff0c\u610f\u5473\u7740\u5982\u679c\u8981\u5f97\u52305V\u7684\u8f93\u51fa\u7535\u538b\uff0c\u8f93\u5165\u7535\u538b\u5fc5\u987b\u5927\u4e8e7V\u3002 L78M05\u7684\u6700\u5927\u8f93\u5165\u7535\u538b\u4e3a35V\uff0c\u5982\u679c\u7535\u673a\u9a71\u52a8\u7535\u538b\u5927\u4e8e35V\uff0c\u5219\u4e0d\u8981\u4f7f\u7528\u8fd9\u4e2a\u7a33\u538b\u82af\u7247\u6765\u63d0\u4f9b5V\uff0c\u8981\u5c06\u8df3\u7ebf\u5e3d\u53d6\u6389\uff0c\u5c06\u7a33\u538b\u82af\u7247\u7684\u4f9b\u7535\u65ad\u6389\u3002\u4ece\u5176\u4ed6\u9014\u5f84\u7ed9\u6a21\u5757\u82af\u7247\u4f9b\u7535\u3002 \u56e0\u6b64\u548cArduino\u5f00\u53d1\u677f\u8fde\u63a5\u65f6\u6709\u591a\u79cd\u4f9b\u7535\u914d\u5408\u65b9\u5f0f\u3002","title":"5V EN\u8df3\u7ebf\u5e3d"},{"location":"Arduino/L298N/#l298n-arduino","text":"","title":"\u7528 L298N \u7ed9 Arduino \u4f9b\u7535"},{"location":"Arduino/L298N/#arduino-l298n","text":"\u5982\u679cArduino\u5728\u8c03\u8bd5\uff0c\u63a5\u7684\u662f\u7535\u8111USB\u76845V\u7535\u538b\uff0c\u8fd9\u65f6\u5019\u7ed9\u7535\u673a\u7684\u7535\u538b\u53ea\u67093V\uff0c\u53ef\u80fd\u9a71\u52a8\u4e0d\u4e86\u7535\u673a\uff0c\u4f7f\u7535\u673a\u65e0\u6cd5\u8f6c\u52a8\u3002","title":"\u7528 Arduino \u7ed9 L298N \u4f9b\u7535"},{"location":"Arduino/L298N/#arduino-l298n_1","text":"\u4e0d\u8bba\u54ea\u79cd\u60c5\u51b5\uff0cArduino \u7684\u5730\u9700\u548c L298N \u7684\u5730\u76f8\u8fde\u3002 Danger \u53e6\u5916\uff0c\u5982\u679c\u8df3\u7ebf\u5e3d\u63a5\u4e0a\u4e86\uff0c\u518d\u4e0d\u8981\u5c06\u9a71\u52a8\u677f\u76845V\u4e0e\u5916\u90e8\u7535\u6e90\u8f93\u5165\u76845V\u76f8\u8fde\u4e86\uff0c\u4e0d\u77e5\u9053\u8c01\u4f1a\u70e7\u4e86\u8c01\u3002","title":"Arduino \u548c L298N \u5355\u72ec\u4f9b\u7535"},{"location":"Arduino/L298N/#_1","text":"\u8fd9\u91cc\u91c7\u7528 Arduino \u7ed9 L298N \u4f9b\u7535\u4e3a\u4f8b\uff0c\u63a5\u7ebf\u56fe\u5982\u4e0b\uff1a int motor1pin1 = 2 ; int motor1pin2 = 3 ; int motor2pin1 = 4 ; int motor2pin2 = 5 ; void setup () { // put your setup code here, to run once: pinMode ( motor1pin1 , OUTPUT ); pinMode ( motor1pin2 , OUTPUT ); pinMode ( motor2pin1 , OUTPUT ); pinMode ( motor2pin2 , OUTPUT ); } void loop () { // put your main code here, to run repeatedly: digitalWrite ( motor1pin1 , HIGH ); digitalWrite ( motor1pin2 , LOW ); digitalWrite ( motor2pin1 , HIGH ); digitalWrite ( motor2pin2 , LOW ); delay ( 1000 ); digitalWrite ( motor1pin1 , LOW ); digitalWrite ( motor1pin2 , HIGH ); digitalWrite ( motor2pin1 , LOW ); digitalWrite ( motor2pin2 , HIGH ); delay ( 1000 ); }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"Arduino/L298N/#5v-en-a5v-en-b","text":"\u76f4\u6d41\u7535\u673a\u7684\u8f6c\u901f\u548c\u7535\u538b\u6210\u6b63\u6bd4\uff0cPWM\u5c31\u662f\u6539\u53d8\u5360\u7a7a\u6bd4\u6539\u53d8\u7535\u538b\u6765\u6539\u53d8\u8f6c\u901f\u3002\u5f53\u7136\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7\u63a7\u5236\u677f\u7684PWM\u8f93\u51fa\u6765\u9a71\u52a8\u7535\u673a\uff0c\u6240\u4ee5\u5148\u5c06\u63a7\u5236\u677f\u7684PWM\u4fe1\u53f7\u53d1\u7ed9L298N\u9a71\u52a8\u677f\u7684EN A\u6216EN B\uff0c\u518d\u9a71\u52a8\u677f\u53bb\u63a7\u5236\u4f9b\u7ed9\u7535\u673a\u7684\u7535\u538b\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u63a7\u5236\u7535\u673a\u901f\u5ea6\u3002 \u5982\u679c5V - EN \uff21\uff0c5V - EN B \u8df3\u7ebf\u5e3d\u63a5\u4e0a\u4e86\uff0c\u5219EN A\uff0c EN B\u7684\u7535\u538b\u59cb\u7ec8\u4e3a5V\uff0c\u610f\u5473\u7740\u4f9b\u7ed9\u7535\u673a\u7684\u7535\u538b\u59cb\u7ec8\u4e3a\u6700\u5927\u503c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u9700\u8981\u63a7\u5236\u7535\u673a\u8f6c\u901f\uff0c\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u8df3\u7ebf\u5e3d\u63a5\u4e0a\uff0c\u5c31\u53ef\u4ee5\u7701\u4e24\u6839\u63a7\u5236\u4fe1\u53f7\u7ebf\u3002 \u4f7f\u7528Arduino\u63a7\u5236\u8f6c\u901f\u53ea\u9700\u5c06EN A \u6216EN B\u4e0eArduino\u7684PWM\u8f93\u51fapin\u76f8\u8fde\uff0c\u4ee3\u7801\u5982\u4e0b\u3002 analogWrite ( ENA_pin , 50 );","title":"5V - EN A\uff0c5V - EN B \u8df3\u7ebf\u5e3d"},{"location":"ESP32/02%EF%BC%9A%E4%B8%80%E6%96%87%E5%85%A8%E8%A7%A3%EF%BC%9A%E5%88%A9%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6Tensorflow%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E5%9B%BE%E7%89%87%EF%BC%88%E5%88%9D%E5%AD%A6%E8%80%85%E7%AF%87%EF%BC%89/","text":"02\uff1a\u4e00\u6587\u5168\u89e3\uff1a\u5229\u7528\u8c37\u6b4c\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6Tensorflow\u8bc6\u522b\u624b\u5199\u6570\u5b57\u56fe\u7247\uff08\u521d\u5b66\u8005\u7bc7\uff09 \u7b14\u8bb0\u6574\u7406\u8005\uff1a\u738b\u5c0f\u8349 \u7b14\u8bb0\u6574\u7406\u65f6\u95f42017\u5e742\u670824\u65e5 Tensorflow\u5b98\u65b9\u82f1\u6587\u6587\u6863\u5730\u5740\uff1a https://www.tensorflow.org/get_started/mnist/beginners \u672c\u6587\u6574\u7406\u65f6\u5b98\u65b9\u6587\u6863\u6700\u8fd1\u66f4\u65b0\u65f6\u95f4\uff1a2017\u5e742\u670815\u65e5 1.\u6848\u4f8b\u80cc\u666f \u672c\u6587\u662f\u8ddf\u7740Tensorflow\u5b98\u65b9\u6587\u6863\u7684\u7b2c\u4e8c\u7bc7\u6559\u7a0b\u2013\u8bc6\u522b\u624b\u5199\u6570\u5b57\u3002 MNIST\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u6570\u636e\u96c6\uff0c\u5b83\u662f\u7531\u4e00\u7cfb\u5217\u624b\u5199\u6570\u5b57\u56fe\u7247\u7ec4\u6210\u7684\uff0c\u6bd4\u5982\uff1a \u5728\u6570\u636e\u96c6\u4e2d\uff0c\u6bcf\u4e00\u5f20\u56fe\u7247\u4f1a\u6709\u4e00\u4e2a\u6807\u7b7elabel,\u8868\u793a\u8be5\u5f20\u56fe\u7247\u4e0a\u7684\u6570\u5b57\u662f\u4ec0\u4e48\u3002\u6bd4\u5982\u4ee5\u4e0a\u56fe\u7247\u6240\u5bf9\u5e94\u7684\u6807\u7b7e\u662f\uff1a5,0,4,1 \u5bf9\u4e8e\u521d\u5b66\u8005\uff0c\u4e3a\u4ec0\u4e48\u5f00\u7bc7\u5c31\u8981\u4ecb\u7ecd\u8fd9\u4e2a\u6848\u4f8b\u5462\uff1f\u4e3e\u4e2a\u6817\u5b50\uff0c \u5f53\u6211\u4eec\u5b66\u4e60\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u53e5\u6253\u5370\u7684\u5c31\u662f\u201cHello world\u201d\u3002\u90a3\u4e48MNIST\u76f8\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\uff0c\u5c31\u5982\u540c\u201cHello world\u201d\u76f8\u5bf9\u4e8e\u7a0b\u5e8f \u672c\u6587\u8981\u4ecb\u7ecd\u7684\u662f\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u6a21\u578b\u53ef\u4ee5\u6839\u636e\u8f93\u5165\u7684\u56fe\u7247\u9884\u6d4b\u51fa\u4e0a\u9762\u5199\u7684\u662f\u4ec0\u4e48\u6570\u5b57\u3002\u4f46\u662f\u672c\u6587\u7684\u76ee\u7684\u53ef\u4e0d\u662f\u53bb\u6559\u5927\u5bb6\u8bad\u7ec3\u4e00\u4e2a\u5177\u6709\u8d85\u7ea7\u4f18\u79c0\u8868\u73b0\u7684\u5b8c\u7f8e\u6a21\u578b\u54e6\uff08\u8fd9\u4e2a\u5728\u4e4b\u540e\u7684\u6587\u6863\u4e2d\u4f1a\u7ed9\u51fa\uff09\uff0c\u800c\u53ea\u662f\u53bb\u5efa\u7acb\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u578b\uff08softmax regression)\u8ba9\u5927\u5bb6\u521d\u5c1dtensorflow\u60c5\u6ecb\u5473. \u867d\u7136\u8981\u5b8c\u6210\u8fd9\u4e2a\u6a21\u578b\uff0c\u5bf9tensorflow\u53ea\u662f\u51e0\u884c\u4ee3\u7801\u7684\u4e8b\uff0c\u4f46\u7406\u89e3\u8fd9\u80cc\u540etensorflow\u8fd0\u4f5c\u7684\u539f\u7406\u4ee5\u53ca\u6838\u5fc3\u7684\u673a\u5668\u5b66\u4e60\u6982\u5ff5\u4e5f\u662f\u76f8\u5f53\u91cd\u8981\u5462\u3002\u6240\u4ee5\uff0c\u63a5\u4e0b\u53bb\u4f1a\u5bf9\u6574\u4e2a\u8fc7\u7a0b\u4e0e\u539f\u7406\u90fd\u8fdb\u884c\u8be6\u7ec6\u89e3\u91ca\u3002 2.\u6570\u636e\u7684\u83b7\u53d6\uff1aThe MNIST Data MNIST\u6570\u636e\u96c6\u53ef\u4ee5\u5728\u7f51\u7ad9 http://yann.lecun.com/exdb/mnist/ \u4e0b\u8f7d\u5230\u3002 \u4f46\u662f\u5728TensorFlow\u4e2d\u4e3a\u4e86\u65b9\u4fbf\u5b66\u4e60\u8005\u83b7\u53d6\u8fd9\u4e2a\u6570\u636e\uff0c\u5c01\u88c5\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u81ea\u52a8\u53bb\u4e0b\u8f7d\u548c\u83b7\u53d6\u6570\u636e\u96c6\u3002\u4ee3\u7801\u5982\u4e0b\uff1a // \u5bfc\u5165input_data\u8fd9\u4e2a\u7c7b from tensorflow.examples.tutorials.mnist import input_data // \u4ece\u8fd9\u4e2a\u7c7b\u91cc\u8c03\u7528read_data_sets\u8fd9\u4e2a\u65b9\u6cd5 mnist = input_data . read_data_sets ( \"MNIST_data/\" , one_hot = True ) 12345 \u83b7\u53d6\u5230\u7684\u6570\u636e\u96c6\u67093\u90e8\u5206\u7ec4\u6210\uff1a \uff081\uff0955,000\u4e2a\u8bad\u7ec3\u6837\u672c\uff08\u7528\u6765\u8bad\u7ec3\u6a21\u578b\uff09 \uff082\uff0910,000\u4e2a\u6d4b\u8bd5\u6837\u672c\uff08\u7528\u6765\u6d4b\u8bd5\u6a21\u578b\uff0c\u907f\u514d\u8fc7\u62df\u5408\uff09 \uff083\uff095,000\u4e2a\u9a8c\u8bc1\u6837\u672c\uff08\u7528\u6765\u9a8c\u8bc1\u8d85\u53c2\u6570\uff09 (\u4e00\u822c\u5728\u673a\u5668\u5b66\u4e60\u7684\u5efa\u6a21\u4e2d\uff0c\u90fd\u9700\u8981\u51c6\u5907\u8fd93\u7c7b\u6570\u636e\u96c6\u3002) \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6837\u672c\u70b9\uff0c\u6709\u4e24\u90e8\u5206\u6570\u636e\u7ec4\u6210\uff1a \uff081\uff09\u624b\u5199\u6570\u5b57\u56fe\u7247\uff0c\u8bb0\u505ax \uff082\uff09\u6807\u7b7e\uff0c\u8bb0\u505ay \u624b\u5199\u6570\u5b57\u56fe\u7247\u753128 28\u50cf\u7d20\u7ec4\u6210\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u6362\u621028 28\u7684\u7531\u6570\u5b57\u7ec4\u6210\u7684\u6570\u7ec4\u3002\u5982\u4e0b\u4f8b\u5b50\uff1a \u800c\u8fd9\u4e2a28 28\u7684\u6570\u7ec4\u53c8\u53ef\u4ee5\u94fa\u5e73\u62101 784\u7684\u4e00\u4e2a\u5411\u91cf\u3002\u81f3\u4e8e\u94fa\u5e73\u7684\u65b9\u5f0f\u65e0\u6240\u8c13\uff0c\u53ea\u8981\u4fdd\u8bc1\u6240\u6709\u56fe\u7247\u88ab\u94fa\u5e73\u7684\u65b9\u5f0f\u90fd\u4e00\u6837\u5c31\u884c\u5566\u3002\u6240\u4ee5\uff0c\u4e00\u4e2a\u56fe\u7247\u53ef\u4ee5\u88ab\u4e00\u4e2a1*784\u7684\u5411\u91cf\u6240\u8868\u793a\u3002 \u53ef\u80fd\u4f60\u4f1a\u95ee\uff0c\u628a\u56fe\u7247\u8fd9\u6837\u4ece\u4e8c\u7ef4\u7a7a\u95f4\u94fa\u5e73\u4f1a\u4e0d\u4f1a\u4e27\u5931\u4e86\u4e00\u4e9b\u4fe1\u606f\uff0c\u4f1a\u5e26\u6765\u574f\u7684\u5f71\u54cd\u5417\uff1f\u8fd9\u4e2a\u4f60\u653e\u5fc3\uff0c\u73b0\u5728\u90a3\u4e9b\u6700\u597d\u7684\u8ba1\u7b97\u673a\u56fe\u50cf\u5904\u7406\u65b9\u6cd5\u90fd\u662f\u7528\u4e86\u8fd9\u4e2a\u7ed3\u6784\u7684\uff0c\u8fd9\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u4e2d\u4f1a\u6709\u8bb2\u5230\u3002 \u597d\u4e86\uff0c\u5982\u679c\u8fd0\u884c\u4ee5\u4e0a\u4e24\u884c\u4ee3\u7801\u6210\u529f\uff0c\u90a3\u4e48\u6570\u636e\u5c31\u5df2\u7ecf\u4e0b\u8f7d\u4e0b\u6765\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528mnist.train.images\uff0c\u83b7\u53d6\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u56fe\u7247\uff0c \u8fd9\u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a[55000, 784]\u7684tensor\uff0c\u7b2c\u4e00\u7ef4\u662f55000\u5f20\u56fe\u7247\uff0c\u7b2c\u4e8c\u7ef4\u662f784\u4e2a\u50cf\u7d20\u3002\u50cf\u7d20\u7684\u5f3a\u5ea6\u662f\u75280-1\u4e4b\u95f4\u7684\u6570\u5b57\u8868\u793a\u7684\u3002 \u53e6\u5916\u4e0a\u9762\u4e5f\u8bf4\u4e86\uff0c\u6bcf\u4e2a\u56fe\u7247\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u6807\u7b7e\uff0c\u8868\u793a\u8fd9\u4e2a\u56fe\u7247\u4e0a\u5bf9\u5e94\u7684\u624b\u5199\u6570\u5b57\u3002 \u6839\u636e\u9700\u8981\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd90-9\u7684\u6570\u5b57\u6807\u7b7e\u8f6c\u6362\u6210one-hot\u7f16\u7801\uff0c\u4ec0\u4e48\u662fOne-hot\u7f16\u7801\uff0c\u4e3e\u4e2a\u4f8b\u5b50\u4e00\u770b\u4fbf\u77e5\uff0c\u6bd4\u5982\u539f\u6765\u7684\u6807\u7b7e\u662f3\uff0c\u7f16\u7801\u4e4b\u540e\u5c31\u53d8\u6210\u4e86[0,0,0,1,0,0,0,0,0,0],\u4e5f\u5c31\u662f\u751f\u6210\u4e00\u4e2a1*10\u7684\u5411\u91cf\uff0c\u5206\u522b\u5bf9\u5e940-9\u7684\u6570\u5b57\u57283\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e0a\u4e3a1\uff0c\u5176\u4f59\u4f4d\u7f6e\u4e0a\u90fd\u662f0. \u7ecf\u8fc7\u8fd9\u6837\u7f16\u7801\u4e4b\u540e\uff0c\u8bad\u7ec3\u96c6\u7684\u6807\u7b7e\u6570\u636e\u5c31\u53d8\u6210\u4e86[55000,10]\u7684\u6d6e\u70b9\u7c7b\u578b\u7684\u6570\u7ec4\u4e86\u3002 \u6069\u6069\uff0c\u6570\u636e\u90fd\u4e0b\u8f7d\u4e0b\u6765\uff0c\u5e76\u4e14\u6211\u4eec\u4e5f\u77e5\u9053\u6570\u636e\u7684\u5177\u4f53\u683c\u5f0f\u548c\u5185\u5bb9\u5566\uff0c\u63a5\u4e0b\u53bb\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u5efa\u7acb\u6a21\u578b\u5427~~ 3.\u5efa\u7acb\u591a\u5206\u7c7b\u6a21\u578b\uff1aSoftmax Regressions 3.1 Softmax Regressions\u539f\u7406 \u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u533a\u5206\u51fa0-9\u7684\u6570\u5b57\uff0c\u4e5f\u5c31\u662f\u8981\u5c06\u56fe\u7247\u5728\u8fd910\u4e2a\u7c7b\u4e2d\u8fdb\u884c\u5206\u7c7b\uff0c\u5c5e\u4e8e\u591a\u5143\u5206\u7c7b\u6a21\u578b\u3002\u5bf9\u4e8e\u4e00\u5f20\u56fe\u7247\uff0c\u6211\u4eec\u60f3\u8981\u6a21\u578b\u5f97\u5230\u7684\u662f\u5c5e\u4e8e\u8fd910\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6a21\u578b\u5224\u65ad\u4e00\u5f20\u56fe\u7247\u5c5e\u4e8e9\u7684\u6982\u7387\u753180%\uff0c\u5c5e\u4e8e8\u7684\u6982\u7387\u662f5%\uff0c\u5c5e\u4e8e\u5176\u4ed6\u6570\u5b57\u7684\u6982\u7387\u90fd\u5f88\u5c0f\uff0c\u90a3\u4e48\u6700\u540e\u8fd9\u5f20\u56fe\u7247\u5e94\u88ab\u5f52\u4e8e9\u7684\u7c7b\u522b\u3002 Softmax Regressions\u662f\u4e00\u4e2a\u975e\u5e38\u7ecf\u5178\u7684\u7528\u4e8e\u591a\u5206\u7c7b\u6a21\u578b\u7684\u65b9\u6cd5\u3002\u5c31\u7b97\u662f\u4e4b\u540e\u7684\u7b14\u8bb0\u4e2d\u8bb2\u5230\u7684\u66f4\u590d\u6742\u7684\u6a21\u578b\uff0c\u4ed6\u4eec\u7684\u6700\u540e\u4e00\u5c42\u4e5f\u662f\u4f1a\u8c03\u7528Softmax \u8fd9\u4e2a\u65b9\u6cd5\u7684\u3002 \u4e00\u4e2aSoftmax Regressions\u4e3b\u8981\u67092\u6b65\uff1a \uff081\uff09\u5206\u522b\u5c06\u8f93\u5165\u6570\u636e\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\u522b\u7684\u8bc1\u636e\u76f8\u52a0 \uff082\uff09\u5c06\u8fd9\u4e2a\u8bc1\u636e\u8f6c\u6362\u6210\u6982\u7387 \u597d\u4e86\uff0c\u90a3\u4e48\u9996\u5148\u8fd9\u4e2a\u8bc1\u636e\u662f\u4e2a\u795e\u9a6c\u4e1c\u4e1c\u5462\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff0c\u7531\u6743\u91cdw\uff0c\u4e0e\u504f\u6267\u9879b\u7ec4\u6210\uff1a i\u8868\u793a\u7b2ci\u7c7b\uff0cj\u8868\u793a\u8f93\u5165\u7684\u8fd9\u5f20\u56fe\u7247\u7684\u7b2cj\u4e2a\u50cf\u7d20\uff0c\u4e5f\u5c31\u662f\u6c42\u5c06\u6bcf\u4e2a\u50cf\u7d20\u4e58\u4ee5\u5b83\u7684\u6743\u91cdw\uff0c\u5728\u52a0\u4e0a\u504f\u6267\u9879\u7684\u548c\u3002 \u6c42\u51fa\u4e86evidence\u4e4b\u540e\uff0c\u5c31\u8981\u4f7f\u7528softmax\u51fd\u6570\u5c06\u5b83\u8f6c\u6362\u6210\u6982\u7387\u4e86\u3002 \u8fd9\u91cc\u7684softmax\u5176\u5b9e\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6fc0\u6d3b\u51fd\u6570\u6216\u8005\u8fde\u63a5\u51fd\u6570\uff0c\u5c06\u8f93\u51fa\u7684\u7ed3\u679c\u8f6c\u6362\u6210\u6211\u4eec\u60f3\u8981\u7684\u90a3\u79cd\u5f62\u5f0f\uff08\u5728\u8fd9\u91cc\uff0c\u662f\u8f6c\u6362\u621010\u5404\u7c7b\u522b\u4e0a\u7684\u6982\u7387\u5206\u5e03\uff09\u3002\u90a3\u4e48\u8fd9\u4e2asoftmax\u7684\u8fc7\u7a0b\u662f\u7ecf\u8fc7\u4e86\u4ec0\u4e48\u6837\u7684\u51fd\u6570\u8f6c\u6362\u5462\uff1f\u5982\u4e0b\u516c\u5f0f\uff1a \u5c55\u5f00\u4ee5\u4e0a\u516c\u5f0f: \u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u521a\u521a\u7684\u7ebf\u6027\u8f93\u51faevidence\u4f5c\u4e3asoftmax\u51fd\u6570\u91cc\u7684\u8f93\u5165x\uff0c\u5148\u8fdb\u8fc7\u4e00\u4e2a\u5e42\u51fd\u6570\uff0c\u7136\u540e\u505a\u6b63\u6001\u5316\uff0c\u4f7f\u5f97\u6240\u6709\u7684\u6982\u7387\u76f8\u52a0\u7b49\u4e8e1. \u5c06softmax regression\u7684\u8fc7\u7a0b\u753b\u51fa\u6765\u5982\u4e0b\uff1a \u5982\u679c\u5199\u6210\u516c\u5f0f\uff0c\u90a3\u5c31\u662f\u5982\u4e0b\uff1a \u5c06\u4ee5\u4e0a\u516c\u5f0f\u505a\u6539\u8fdb\uff0c\u53d8\u6210\u77e9\u9635\u548c\u5411\u91cf\u7684\u5f62\u5f0f\uff1a \u8981\u662f\u60f3\u7b80\u5355\u76f4\u89c2\u4e00\u70b9\uff0c\u90a3\u4e48\u5c31\u8fd9\u6837\uff1a \u81f3\u6b64\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u591a\u5143\u5206\u7c7bSoftmax Regressions\u7684\u8ba1\u7b97\u539f\u7406\uff0c\u90a3\u4e48\u63a5\u4e0b\u53bb\u5c31\u53ef\u4ee5\u53bb\u5c1d\u8bd5\u7528tensorflow\u6765\u5b9e\u73b0Softmax Regressions\u5566~ 2.2 Tensorflow\u5b9e\u73b0softmax regression 1.\u8981\u4f7f\u7528tensorflow,\u5b9e\u73b0\u5bfc\u5165tensorflow\u7684\u5e93\uff1a import tensorflow as tf1 2.\u4e3a\u8f93\u5165\u6570\u636ex\u521b\u5efa\u5360\u4f4d\u7b26 x = tf.placeholder(tf.float32, [None, 784])1 \u8fd9\u91cc\u7684x\u5e76\u4e0d\u662f\u5177\u4f53\u7684\u6570\u503c\uff0c\u800c\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5c31\u662f\u5148\u7ed9\u8981\u8f93\u5165\u7684\u6570\u636e\u9738\u5360\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7b49\u5f53\u771f\u7684\u8ba9TensorFlow\u8fd0\u884c\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u518d\u4f20\u5165x\u7684\u771f\u5b9e\u6570\u636e\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u8f93\u5165\u6570\u636en\u4e2a\u662f1*784\u7684\u5411\u91cf\uff0c\u53ef\u4ee5\u8868\u793a\u62102\u5c42\u7684tensor,\u5927\u5c0f\u662f[None,784],None\u8868\u793a\u5230\u65f6\u5019\u540e\u4f20\u8f93\u7684\u6570\u636e\u53ef\u4ee5\u4efb\u4f55\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u91cf\u7684\u6837\u672c\u70b9\u3002 3.\u521b\u5efa\u4e24\u4e2a\u6743\u91cd\u53d8\u91cf w\u548cb\u662f\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u6539\u53d8\u4e0d\u65ad\u4f18\u5316\u7684\uff0c\u4f7f\u7528Variable\u6765\u521b\u5efa\uff1a W = tf.Variable(tf.zeros([784, 10])) b = tf.Variable(tf.zeros([10]))12 \u4ee5\u4e0a\uff0c\u6211\u4eec\u521d\u59cb\u5316\u4e24\u4e2a\u6743\u91cd\u90fd\u4e3a0\uff0c\u5728\u4e4b\u540e\u7684\u8bad\u7ec3\u4e0e\u5b66\u4e60\u4e2d\u4f1a\u4e0d\u65ad\u88ab\u4f18\u5316\u6210\u5176\u4ed6\u503c\u3002\u6ce8\u610f\uff0cw\u7684\u5927\u5c0f\u662f[784,10]\u8868\u793a784\u4e2a\u50cf\u7d20\u8f93\u5165\u70b9\u4e58\u4ee510\u7ef4\u7684\u5411\u91cf\uff0810\u4e2a\u7c7b\u522b\uff09\u3002b\u7684\u5927\u5c0f\u662f[ 10 ] 4.\u5efa\u7acbsoftmax\u6a21\u578b y = tf.nn.softmax(tf.matmul(x, W) + b)1 \u4ee5\u4e0a\u4ee3\u7801\u53ef\u89c1\uff0c\u6211\u4eec\u5148\u5c06x\u4e0eW\u76f8\u4e58\u4e86\uff0c\u7136\u540e\u52a0\u4e0a\u4e86b\uff0c\u7136\u540e\u5c06\u7ebf\u6027\u8f93\u51fa\u7ecf\u8fc7softmax\u7684\u8f6c\u6362\u3002 \u55ef\uff0c\u81f3\u6b64softmax\u7684\u6a21\u578b\u5c31\u5199\u597d\u4e86\u3002 4.\u6a21\u578b\u8bad\u7ec3 1.\u5efa\u7acb\u635f\u5931\u51fd\u6570 \u4e0a\u9762\u6211\u4eec\u642d\u5efa\u4e86\u4e00\u4e2a\u521d\u59cb\u7684softmax\u7684\u6a21\u578b\uff0c\u6ce8\u610f\u6a21\u578b\u4e2d\u7684\u53c2\u6570w,b\u662f\u81ea\u5df1\u968f\u4fbf\u5b9a\u4e49\u7684\u3002\u90a3\u4e48\u8bad\u7ec3\u6a21\u578b\u7684\u76ee\u7684\u662f\u8ba9\u6a21\u578b\u5728\u5b66\u4e60\u6837\u672c\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5730\u4f18\u5316\u53c2\u6570\uff0c\u4f7f\u5f97\u6a21\u578b\u7684\u8868\u73b0\u6700\u597d\u3002 \u90a3\u4e48\u5982\u4f55\u8bc4\u4ef7\u6a21\u578b\u8868\u73b0\u7684\u597d\u574f\u5462\uff1f\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u635f\u5931\u51fd\u6570\u6765\u8bc4\u4ef7\u6a21\u578b\u7684\u597d\u574f\u3002\u5982\u679c\u6a21\u578b\u9884\u6d4b\u7684\u7ed3\u679c\u4e0e\u771f\u5b9e\u7684\u7ed3\u679c\u76f8\u5dee\u8d8a\u8fdc\uff0c\u90a3\u4e48\u635f\u5931\u5927\uff0c\u6a21\u578b\u7684\u8868\u73b0\u5c31\u8d8a\u4e0d\u597d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6e34\u671b\u53bb\u6700\u5c0f\u5316\u635f\u5931\u4ece\u800c\u5f97\u5230\u6700\u4f18\u7684\u6a21\u578b\u3002 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\u6700\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\uff1a\u4ea4\u53c9\u71b5\u635f\u5931\u3002\u516c\u5f0f\u5982\u4e0b\uff1a y\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6982\u7387\u5206\u5e03\uff0cy\u2019\u8868\u793a\u771f\u5b9e\u7684\u7c7b\u522b\u6982\u7387\u5206\u5e03\uff08\u5c31\u662f\u4e4b\u95f4one-hot\u7f16\u7801\u4e4b\u540e\u7684\u6807\u7b7e\uff09\u3002yi\u8868\u793a\u9884\u6d4b\u4e3a\u7b2ci\u4e2a\u7c7b\u7684\u6982\u7387\uff0c yi\u2019\u8868\u793a\u771f\u5b9e\u5c5e\u4e8ei\u7c7b\u7684\u6982\u7387\uff08\u53ea\u6709i\u7c7b\u4e3a1\uff0c\u5176\u4f59\u4e3a0\uff09 \u4ea4\u53c9\u71b5\u4ece\u4e00\u5b9a\u610f\u4e49\u4e0a\u53ef\u4ee5\u5ea6\u91cf\u6a21\u578b\u5bf9\u4e8e\u771f\u5b9e\u60c5\u51b5\u7684\u62df\u5408\u7a0b\u5ea6\uff0c\u4ea4\u53c9\u71b5\u8d8a\u5927\uff0c\u5219\u6a21\u578b\u8d8a\u4e0d\u62df\u5408\uff0c\u8868\u73b0\u529b\u8d8a\u5dee\u3002 \u8981\u5b9e\u73b0\u4ea4\u53c9\u71b5\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a // \u4e3a\u771f\u5b9e\u7684\u6807\u7b7e\u6dfb\u52a0\u5360\u4f4d\u7b26 y_ = tf.placeholder(tf.float32, [None, 10]) // \u521b\u5efa\u4ea4\u53c9\u71b5\u51fd\u6570 cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))12345 \u89e3\u91ca\u4e00\u4e0b\u4e0a\u9762\u7684\u4ee3\u7801\uff0ctf.log\u8868\u793a\u5c06y\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u505alog\u8fd0\u7b97\uff1b\u7136\u540e\u5c06\u5176\u4e58\u4ee5\u5bf9\u5e94\u7684\u771f\u5b9e\u6807\u7b7e\u7684\u7c7b\u522by_\u4e2d\u7684\u5143\u7d20\u3002tf.reduce_sum\u8868\u793a\u7684\u662f\u5c06\u7d22\u5f15\u4e3a1\u7684\u503c\u8fdb\u884c\u6c42\u548c\u3002tf.reduce_mean\u8868\u793a\u5bf9\u6240\u6709\u6837\u672c\u7684\u4ea4\u53c9\u71b5\u6c42\u5747\u503c\u3002 \u6ce8\u610f\u6ce8\u610f\uff0c\u5728\u6e90\u7801\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u8fd9\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u6837\u8ba1\u7b97\u4e0b\u53bb\u6570\u503c\u4e0d\u7a33\u5b9a\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u76f4\u63a5\u5728\u7ebf\u6027\u51fd\u6570\u4e4b\u540e\u5e94\u7528\u4e86tf.nn.softmax_cross_entropy_with_gogits\uff08\u5373\uff0c\u6ca1\u6709\u5355\u72ec\u7ecf\u8fc7softmax\u51fd\u6570\uff09\uff0c\u8fd9\u6837\u4f1a\u66f4\u52a0\u7a33\u5b9a\u3002 2.\u4f7f\u7528BP\u7b97\u6cd5\u4f18\u5316\u53c2\u6570 \u635f\u5931\u51fd\u6570\u5c31\u662f\u6211\u4eec\u7684\u76ee\u6807\u51fd\u6570\uff0c\u8981\u627e\u5230\u76ee\u6807\u51fd\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u662f\u5bf9\u53c2\u6570\u6c42\u504f\u5bfc\u7b49\u4e8e0.\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4f18\u5316\u5668\u53bb\u4e0d\u65ad\u5730\u964d\u4f4e\u635f\u5931\u5bfb\u627e\u6700\u4f18\u53c2\u6570\u3002\u6bd4\u5982\u8bf4\u6700\u5e38\u7528\u7684\u662f\u68af\u5ea6\u4e0b\u964d\u6cd5\u3002\u4ee3\u7801\u5982\u4e0b\uff1a train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)1 \u4e0a\u9762\u4f7f\u7528\u4e86\u68af\u5ea6\u4e0b\u964d\u6cd5\u6700\u5c0f\u5316\u4ea4\u53c9\u71b5\u635f\u5931\uff0c\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a0.5\uff0c\u6bcf\u4e00\u6b21\u8fed\u4ee3\uff0cw,b\u4e24\u7c7b\u53c2\u6570\u90fd\u4f1a\u6539\u53d8\uff0c\u76f4\u5230\u635f\u5931\u8fbe\u5230\u6700\u5c0f\u7684\u65f6\u5019\uff0c\u5c31\u83b7\u5f97\u4e86\u6700\u4f18\u7684w,b\u3002 \u4e0d\u8fc7tensorflow\u4e5f\u63d0\u4f9b\u4e86\u5f88\u591a\u5176\u4ed6\u7684\u4f18\u5316\u5668\uff08\u540e\u7eed\u4ecb\u7ecd\uff09 3.\u8fd0\u884c\u8fed\u4ee3 \u6a21\u578b\u8bad\u7ec3\u7684graph\u57fa\u672c\u5df2\u7ecf\u5b8c\u6210\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u521b\u5efa\u4f1a\u8bdd\uff0c\u6765\u8fdb\u884c\u5faa\u73af\u8bad\u7ec3\u4e86\u3002 // \u521b\u5efa\u4f1a\u8bdd sess = tf.InteractiveSession() // \u521d\u59cb\u5316\u6240\u6709\u53d8\u91cf tf.global_variables_initializer().run() //\u5faa\u73af1000\u6b21\u8bad\u7ec3\u6a21\u578b for _ in range(1000): # \u83b7\u53d6\u8bad\u7ec3\u96c6\u4e0e\u6807\u7b7e\u96c6\uff0c\u6bcf\u6b21\u83b7\u53d6100\u4e2a\u6837\u672c batch_xs, batch_ys = mnist.train.next_batch(100) # \u5582\u6570\u636e\uff0c\u8bad\u7ec3 sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})123456789101112 \u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u90fd\u4f1a\u4ece\u8bad\u7ec3\u96c6\u4e2d\u83b7\u53d6\u4e00\u6279\u6837\u672c\uff0c\u6bcf\u6279\u6709100\u4e2a\u6837\u672c\u3002\u7136\u540e\u8fd0\u884ctrain_step\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5e76\u4e14\u7ed9\u4e4b\u524d\u7684\u5360\u4f4d\u7b26\u5582\u5165\u6570\u636e\u3002 \u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u5947\u602a\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u62ff\u6240\u6709\u7684\u8bad\u7ec3\u96c6\u6765\u505a\u5faa\u73af\u8bad\u7ec3\uff0c\u4e3a\u5565\u6bcf\u6b21\u8981\u968f\u673a\u5730\u62ff100\u4e2a\u6837\u672c\u5462\uff1f\u8fd9\u91cc\u5e94\u7528\u4e86\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\u3002\u76f4\u63a5\u4f7f\u7528\u6240\u6709\u6837\u672c\u6765\u505a\u5faa\u73af\u8fed\u4ee3\u7684\u201c\u68af\u5ea6\u4e0b\u964d\u6cd5\u201d\u56fa\u7136\u66f4\u7406\u60f3\uff0c\u4f46\u662f\u4f1a\u5927\u5927\u589e\u52a0\u8ba1\u7b97\u7684\u6210\u672c\uff0c\u800c\u201c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\u201d\u51cf\u5c11\u4e86\u8ba1\u7b97\u91cf\u5e76\u4e14\u4e5f\u4fdd\u6301\u4e86\u76f8\u5bf9\u4e00\u81f4\u7684\u51c6\u786e\u7387\u3002 5.\u6a21\u578b\u8bc4\u4f30 \u901a\u8fc7\u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6700\u4f18\u7684\u53c2\u6570\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u6700\u4f18\u7684\u53c2\u6570\u4e0b\uff0c\u6a21\u578b\u7684\u8868\u73b0\u529b\u5230\u5e95\u5982\u4f55\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u770b\u770b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6a21\u578b\u9884\u6d4b\u7684label\u4e0e\u6837\u672c\u771f\u5b9e\u7684Label\u76f8\u540c\u7684\u6709\u591a\u5c11\u6bd4\u4f8b\u3002 tf.argmax\u8fd4\u56de\u7684\u662f\u4e00\u4e2atensor\u91cc\u5728\u67d0\u4e2a\u7ef4\u5ea6\u4e0a\u6700\u5927\u503c\u7684\u7d22\u5f15\uff0c\u6bd4\u5982tf.argmax(y,1)\u53d6\u51fa\u7684\u662f\u9884\u6d4b\u8f93\u51fa\u768410\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u5411\u91cf\u4e2d\u6700\u5927\u6982\u7387\u7684\u90a3\u4e2a\u7d22\u5f15\uff08\u5bf9\u5e94\u67d0\u4e2a\u7c7b\u522b\uff09\uff0ctf.argmax(y_,1)\u53d6\u51fa\u7684\u662f\u8be5\u6837\u672c\u7684\u771f\u5b9e\u7c7b\u522b\u7684\u7d22\u5f15\uff0c\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u6837\u672c\uff0c\u4e24\u8005\u76f8\u540c\uff0c\u5219\u8bf4\u660e\u5bf9\u8be5\u6837\u672c\u7684\u9884\u6d4b\u6b63\u786e\u3002\u4e0b\u9762\u4ee3\u7801\uff0c\u7528tf.equal\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u5217\u8868\u3002 correct_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))1 \u8981\u6c42\u51fa\u6b63\u786e\u7387\uff0c\u53ea\u8981\u5c06\u5e03\u5c14\u7c7b\u578b\u7684\u5217\u8868\u5168\u90e8\u6c42\u548c\u518d\u6c42\u5747\u503c\u5373\u53ef\uff1a accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))1 \u73b0\u5728\u6211\u4eec\u5582\u5165\u6d4b\u8bd5\u6570\u636e\u96c6\uff0c\u6765\u8fd0\u884c\u8ba1\u7b97\u6d4b\u8bd5\u96c6\u4e0a\u7684\u51c6\u786e\u7387\uff1a print(sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels}))1 \u6253\u5370\u51fa\u6765\u5927\u6982\u662f92%\u3002 \u8fd9\u4e2a\u7ed3\u679c\u597d\u5417\uff1f\u989d\u3002\u3002\u5176\u5b9e\u5e76\u6ca1\u6709\u5462\uff0c\u800c\u4e14\u53ef\u4ee5\u8bf4\u633a\u5dee\u7684\u3002\u3002 \u6a21\u578b\u8868\u73b0\u4e0d\u597d\u7684\u539f\u56e0\u5728\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u6a21\u578b\uff0c\u505a\u4e00\u4e9b\u5c0f\u7684\u6539\u826f\uff0c\u6b63\u786e\u7387\u53ef\u4ee5\u8fbe\u523097%\u3002\u6700\u597d\u7684\u6a21\u578b\u53ef\u4ee5\u8fbe\u523099.7\u7684\u51c6\u786e\u7387\uff01 \u81f3\u6b64\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5b8c\u6574\u7684\u7528tensorflow\u6765\u8bad\u7ec3softmax regression\u591a\u5143\u5206\u7c7b\u6a21\u578b\u7684\u6848\u4f8b\u3002","title":"02\uff1a\u4e00\u6587\u5168\u89e3\uff1a\u5229\u7528\u8c37\u6b4c\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6Tensorflow\u8bc6\u522b\u624b\u5199\u6570\u5b57\u56fe\u7247\uff08\u521d\u5b66\u8005\u7bc7\uff09"},{"location":"ESP32/02%EF%BC%9A%E4%B8%80%E6%96%87%E5%85%A8%E8%A7%A3%EF%BC%9A%E5%88%A9%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6Tensorflow%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E5%9B%BE%E7%89%87%EF%BC%88%E5%88%9D%E5%AD%A6%E8%80%85%E7%AF%87%EF%BC%89/#02tensorflow","text":"\u7b14\u8bb0\u6574\u7406\u8005\uff1a\u738b\u5c0f\u8349 \u7b14\u8bb0\u6574\u7406\u65f6\u95f42017\u5e742\u670824\u65e5 Tensorflow\u5b98\u65b9\u82f1\u6587\u6587\u6863\u5730\u5740\uff1a https://www.tensorflow.org/get_started/mnist/beginners \u672c\u6587\u6574\u7406\u65f6\u5b98\u65b9\u6587\u6863\u6700\u8fd1\u66f4\u65b0\u65f6\u95f4\uff1a2017\u5e742\u670815\u65e5","title":"02\uff1a\u4e00\u6587\u5168\u89e3\uff1a\u5229\u7528\u8c37\u6b4c\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6Tensorflow\u8bc6\u522b\u624b\u5199\u6570\u5b57\u56fe\u7247\uff08\u521d\u5b66\u8005\u7bc7\uff09"},{"location":"ESP32/02%EF%BC%9A%E4%B8%80%E6%96%87%E5%85%A8%E8%A7%A3%EF%BC%9A%E5%88%A9%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6Tensorflow%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E5%9B%BE%E7%89%87%EF%BC%88%E5%88%9D%E5%AD%A6%E8%80%85%E7%AF%87%EF%BC%89/#1","text":"\u672c\u6587\u662f\u8ddf\u7740Tensorflow\u5b98\u65b9\u6587\u6863\u7684\u7b2c\u4e8c\u7bc7\u6559\u7a0b\u2013\u8bc6\u522b\u624b\u5199\u6570\u5b57\u3002 MNIST\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u6570\u636e\u96c6\uff0c\u5b83\u662f\u7531\u4e00\u7cfb\u5217\u624b\u5199\u6570\u5b57\u56fe\u7247\u7ec4\u6210\u7684\uff0c\u6bd4\u5982\uff1a \u5728\u6570\u636e\u96c6\u4e2d\uff0c\u6bcf\u4e00\u5f20\u56fe\u7247\u4f1a\u6709\u4e00\u4e2a\u6807\u7b7elabel,\u8868\u793a\u8be5\u5f20\u56fe\u7247\u4e0a\u7684\u6570\u5b57\u662f\u4ec0\u4e48\u3002\u6bd4\u5982\u4ee5\u4e0a\u56fe\u7247\u6240\u5bf9\u5e94\u7684\u6807\u7b7e\u662f\uff1a5,0,4,1 \u5bf9\u4e8e\u521d\u5b66\u8005\uff0c\u4e3a\u4ec0\u4e48\u5f00\u7bc7\u5c31\u8981\u4ecb\u7ecd\u8fd9\u4e2a\u6848\u4f8b\u5462\uff1f\u4e3e\u4e2a\u6817\u5b50\uff0c \u5f53\u6211\u4eec\u5b66\u4e60\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u53e5\u6253\u5370\u7684\u5c31\u662f\u201cHello world\u201d\u3002\u90a3\u4e48MNIST\u76f8\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\uff0c\u5c31\u5982\u540c\u201cHello world\u201d\u76f8\u5bf9\u4e8e\u7a0b\u5e8f \u672c\u6587\u8981\u4ecb\u7ecd\u7684\u662f\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u6a21\u578b\u53ef\u4ee5\u6839\u636e\u8f93\u5165\u7684\u56fe\u7247\u9884\u6d4b\u51fa\u4e0a\u9762\u5199\u7684\u662f\u4ec0\u4e48\u6570\u5b57\u3002\u4f46\u662f\u672c\u6587\u7684\u76ee\u7684\u53ef\u4e0d\u662f\u53bb\u6559\u5927\u5bb6\u8bad\u7ec3\u4e00\u4e2a\u5177\u6709\u8d85\u7ea7\u4f18\u79c0\u8868\u73b0\u7684\u5b8c\u7f8e\u6a21\u578b\u54e6\uff08\u8fd9\u4e2a\u5728\u4e4b\u540e\u7684\u6587\u6863\u4e2d\u4f1a\u7ed9\u51fa\uff09\uff0c\u800c\u53ea\u662f\u53bb\u5efa\u7acb\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u578b\uff08softmax regression)\u8ba9\u5927\u5bb6\u521d\u5c1dtensorflow\u60c5\u6ecb\u5473. \u867d\u7136\u8981\u5b8c\u6210\u8fd9\u4e2a\u6a21\u578b\uff0c\u5bf9tensorflow\u53ea\u662f\u51e0\u884c\u4ee3\u7801\u7684\u4e8b\uff0c\u4f46\u7406\u89e3\u8fd9\u80cc\u540etensorflow\u8fd0\u4f5c\u7684\u539f\u7406\u4ee5\u53ca\u6838\u5fc3\u7684\u673a\u5668\u5b66\u4e60\u6982\u5ff5\u4e5f\u662f\u76f8\u5f53\u91cd\u8981\u5462\u3002\u6240\u4ee5\uff0c\u63a5\u4e0b\u53bb\u4f1a\u5bf9\u6574\u4e2a\u8fc7\u7a0b\u4e0e\u539f\u7406\u90fd\u8fdb\u884c\u8be6\u7ec6\u89e3\u91ca\u3002","title":"1.\u6848\u4f8b\u80cc\u666f"},{"location":"ESP32/02%EF%BC%9A%E4%B8%80%E6%96%87%E5%85%A8%E8%A7%A3%EF%BC%9A%E5%88%A9%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6Tensorflow%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E5%9B%BE%E7%89%87%EF%BC%88%E5%88%9D%E5%AD%A6%E8%80%85%E7%AF%87%EF%BC%89/#2the-mnist-data","text":"MNIST\u6570\u636e\u96c6\u53ef\u4ee5\u5728\u7f51\u7ad9 http://yann.lecun.com/exdb/mnist/ \u4e0b\u8f7d\u5230\u3002 \u4f46\u662f\u5728TensorFlow\u4e2d\u4e3a\u4e86\u65b9\u4fbf\u5b66\u4e60\u8005\u83b7\u53d6\u8fd9\u4e2a\u6570\u636e\uff0c\u5c01\u88c5\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u81ea\u52a8\u53bb\u4e0b\u8f7d\u548c\u83b7\u53d6\u6570\u636e\u96c6\u3002\u4ee3\u7801\u5982\u4e0b\uff1a // \u5bfc\u5165input_data\u8fd9\u4e2a\u7c7b from tensorflow.examples.tutorials.mnist import input_data // \u4ece\u8fd9\u4e2a\u7c7b\u91cc\u8c03\u7528read_data_sets\u8fd9\u4e2a\u65b9\u6cd5 mnist = input_data . read_data_sets ( \"MNIST_data/\" , one_hot = True ) 12345 \u83b7\u53d6\u5230\u7684\u6570\u636e\u96c6\u67093\u90e8\u5206\u7ec4\u6210\uff1a \uff081\uff0955,000\u4e2a\u8bad\u7ec3\u6837\u672c\uff08\u7528\u6765\u8bad\u7ec3\u6a21\u578b\uff09 \uff082\uff0910,000\u4e2a\u6d4b\u8bd5\u6837\u672c\uff08\u7528\u6765\u6d4b\u8bd5\u6a21\u578b\uff0c\u907f\u514d\u8fc7\u62df\u5408\uff09 \uff083\uff095,000\u4e2a\u9a8c\u8bc1\u6837\u672c\uff08\u7528\u6765\u9a8c\u8bc1\u8d85\u53c2\u6570\uff09 (\u4e00\u822c\u5728\u673a\u5668\u5b66\u4e60\u7684\u5efa\u6a21\u4e2d\uff0c\u90fd\u9700\u8981\u51c6\u5907\u8fd93\u7c7b\u6570\u636e\u96c6\u3002) \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6837\u672c\u70b9\uff0c\u6709\u4e24\u90e8\u5206\u6570\u636e\u7ec4\u6210\uff1a \uff081\uff09\u624b\u5199\u6570\u5b57\u56fe\u7247\uff0c\u8bb0\u505ax \uff082\uff09\u6807\u7b7e\uff0c\u8bb0\u505ay \u624b\u5199\u6570\u5b57\u56fe\u7247\u753128 28\u50cf\u7d20\u7ec4\u6210\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u6362\u621028 28\u7684\u7531\u6570\u5b57\u7ec4\u6210\u7684\u6570\u7ec4\u3002\u5982\u4e0b\u4f8b\u5b50\uff1a \u800c\u8fd9\u4e2a28 28\u7684\u6570\u7ec4\u53c8\u53ef\u4ee5\u94fa\u5e73\u62101 784\u7684\u4e00\u4e2a\u5411\u91cf\u3002\u81f3\u4e8e\u94fa\u5e73\u7684\u65b9\u5f0f\u65e0\u6240\u8c13\uff0c\u53ea\u8981\u4fdd\u8bc1\u6240\u6709\u56fe\u7247\u88ab\u94fa\u5e73\u7684\u65b9\u5f0f\u90fd\u4e00\u6837\u5c31\u884c\u5566\u3002\u6240\u4ee5\uff0c\u4e00\u4e2a\u56fe\u7247\u53ef\u4ee5\u88ab\u4e00\u4e2a1*784\u7684\u5411\u91cf\u6240\u8868\u793a\u3002 \u53ef\u80fd\u4f60\u4f1a\u95ee\uff0c\u628a\u56fe\u7247\u8fd9\u6837\u4ece\u4e8c\u7ef4\u7a7a\u95f4\u94fa\u5e73\u4f1a\u4e0d\u4f1a\u4e27\u5931\u4e86\u4e00\u4e9b\u4fe1\u606f\uff0c\u4f1a\u5e26\u6765\u574f\u7684\u5f71\u54cd\u5417\uff1f\u8fd9\u4e2a\u4f60\u653e\u5fc3\uff0c\u73b0\u5728\u90a3\u4e9b\u6700\u597d\u7684\u8ba1\u7b97\u673a\u56fe\u50cf\u5904\u7406\u65b9\u6cd5\u90fd\u662f\u7528\u4e86\u8fd9\u4e2a\u7ed3\u6784\u7684\uff0c\u8fd9\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u4e2d\u4f1a\u6709\u8bb2\u5230\u3002 \u597d\u4e86\uff0c\u5982\u679c\u8fd0\u884c\u4ee5\u4e0a\u4e24\u884c\u4ee3\u7801\u6210\u529f\uff0c\u90a3\u4e48\u6570\u636e\u5c31\u5df2\u7ecf\u4e0b\u8f7d\u4e0b\u6765\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528mnist.train.images\uff0c\u83b7\u53d6\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u56fe\u7247\uff0c \u8fd9\u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a[55000, 784]\u7684tensor\uff0c\u7b2c\u4e00\u7ef4\u662f55000\u5f20\u56fe\u7247\uff0c\u7b2c\u4e8c\u7ef4\u662f784\u4e2a\u50cf\u7d20\u3002\u50cf\u7d20\u7684\u5f3a\u5ea6\u662f\u75280-1\u4e4b\u95f4\u7684\u6570\u5b57\u8868\u793a\u7684\u3002 \u53e6\u5916\u4e0a\u9762\u4e5f\u8bf4\u4e86\uff0c\u6bcf\u4e2a\u56fe\u7247\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u6807\u7b7e\uff0c\u8868\u793a\u8fd9\u4e2a\u56fe\u7247\u4e0a\u5bf9\u5e94\u7684\u624b\u5199\u6570\u5b57\u3002 \u6839\u636e\u9700\u8981\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd90-9\u7684\u6570\u5b57\u6807\u7b7e\u8f6c\u6362\u6210one-hot\u7f16\u7801\uff0c\u4ec0\u4e48\u662fOne-hot\u7f16\u7801\uff0c\u4e3e\u4e2a\u4f8b\u5b50\u4e00\u770b\u4fbf\u77e5\uff0c\u6bd4\u5982\u539f\u6765\u7684\u6807\u7b7e\u662f3\uff0c\u7f16\u7801\u4e4b\u540e\u5c31\u53d8\u6210\u4e86[0,0,0,1,0,0,0,0,0,0],\u4e5f\u5c31\u662f\u751f\u6210\u4e00\u4e2a1*10\u7684\u5411\u91cf\uff0c\u5206\u522b\u5bf9\u5e940-9\u7684\u6570\u5b57\u57283\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e0a\u4e3a1\uff0c\u5176\u4f59\u4f4d\u7f6e\u4e0a\u90fd\u662f0. \u7ecf\u8fc7\u8fd9\u6837\u7f16\u7801\u4e4b\u540e\uff0c\u8bad\u7ec3\u96c6\u7684\u6807\u7b7e\u6570\u636e\u5c31\u53d8\u6210\u4e86[55000,10]\u7684\u6d6e\u70b9\u7c7b\u578b\u7684\u6570\u7ec4\u4e86\u3002 \u6069\u6069\uff0c\u6570\u636e\u90fd\u4e0b\u8f7d\u4e0b\u6765\uff0c\u5e76\u4e14\u6211\u4eec\u4e5f\u77e5\u9053\u6570\u636e\u7684\u5177\u4f53\u683c\u5f0f\u548c\u5185\u5bb9\u5566\uff0c\u63a5\u4e0b\u53bb\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u5efa\u7acb\u6a21\u578b\u5427~~","title":"2.\u6570\u636e\u7684\u83b7\u53d6\uff1aThe MNIST Data"},{"location":"ESP32/02%EF%BC%9A%E4%B8%80%E6%96%87%E5%85%A8%E8%A7%A3%EF%BC%9A%E5%88%A9%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6Tensorflow%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E5%9B%BE%E7%89%87%EF%BC%88%E5%88%9D%E5%AD%A6%E8%80%85%E7%AF%87%EF%BC%89/#3softmax-regressions","text":"","title":"3.\u5efa\u7acb\u591a\u5206\u7c7b\u6a21\u578b\uff1aSoftmax Regressions"},{"location":"ESP32/02%EF%BC%9A%E4%B8%80%E6%96%87%E5%85%A8%E8%A7%A3%EF%BC%9A%E5%88%A9%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6Tensorflow%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E5%9B%BE%E7%89%87%EF%BC%88%E5%88%9D%E5%AD%A6%E8%80%85%E7%AF%87%EF%BC%89/#31-softmax-regressions","text":"\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u533a\u5206\u51fa0-9\u7684\u6570\u5b57\uff0c\u4e5f\u5c31\u662f\u8981\u5c06\u56fe\u7247\u5728\u8fd910\u4e2a\u7c7b\u4e2d\u8fdb\u884c\u5206\u7c7b\uff0c\u5c5e\u4e8e\u591a\u5143\u5206\u7c7b\u6a21\u578b\u3002\u5bf9\u4e8e\u4e00\u5f20\u56fe\u7247\uff0c\u6211\u4eec\u60f3\u8981\u6a21\u578b\u5f97\u5230\u7684\u662f\u5c5e\u4e8e\u8fd910\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6a21\u578b\u5224\u65ad\u4e00\u5f20\u56fe\u7247\u5c5e\u4e8e9\u7684\u6982\u7387\u753180%\uff0c\u5c5e\u4e8e8\u7684\u6982\u7387\u662f5%\uff0c\u5c5e\u4e8e\u5176\u4ed6\u6570\u5b57\u7684\u6982\u7387\u90fd\u5f88\u5c0f\uff0c\u90a3\u4e48\u6700\u540e\u8fd9\u5f20\u56fe\u7247\u5e94\u88ab\u5f52\u4e8e9\u7684\u7c7b\u522b\u3002 Softmax Regressions\u662f\u4e00\u4e2a\u975e\u5e38\u7ecf\u5178\u7684\u7528\u4e8e\u591a\u5206\u7c7b\u6a21\u578b\u7684\u65b9\u6cd5\u3002\u5c31\u7b97\u662f\u4e4b\u540e\u7684\u7b14\u8bb0\u4e2d\u8bb2\u5230\u7684\u66f4\u590d\u6742\u7684\u6a21\u578b\uff0c\u4ed6\u4eec\u7684\u6700\u540e\u4e00\u5c42\u4e5f\u662f\u4f1a\u8c03\u7528Softmax \u8fd9\u4e2a\u65b9\u6cd5\u7684\u3002 \u4e00\u4e2aSoftmax Regressions\u4e3b\u8981\u67092\u6b65\uff1a \uff081\uff09\u5206\u522b\u5c06\u8f93\u5165\u6570\u636e\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\u522b\u7684\u8bc1\u636e\u76f8\u52a0 \uff082\uff09\u5c06\u8fd9\u4e2a\u8bc1\u636e\u8f6c\u6362\u6210\u6982\u7387 \u597d\u4e86\uff0c\u90a3\u4e48\u9996\u5148\u8fd9\u4e2a\u8bc1\u636e\u662f\u4e2a\u795e\u9a6c\u4e1c\u4e1c\u5462\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff0c\u7531\u6743\u91cdw\uff0c\u4e0e\u504f\u6267\u9879b\u7ec4\u6210\uff1a i\u8868\u793a\u7b2ci\u7c7b\uff0cj\u8868\u793a\u8f93\u5165\u7684\u8fd9\u5f20\u56fe\u7247\u7684\u7b2cj\u4e2a\u50cf\u7d20\uff0c\u4e5f\u5c31\u662f\u6c42\u5c06\u6bcf\u4e2a\u50cf\u7d20\u4e58\u4ee5\u5b83\u7684\u6743\u91cdw\uff0c\u5728\u52a0\u4e0a\u504f\u6267\u9879\u7684\u548c\u3002 \u6c42\u51fa\u4e86evidence\u4e4b\u540e\uff0c\u5c31\u8981\u4f7f\u7528softmax\u51fd\u6570\u5c06\u5b83\u8f6c\u6362\u6210\u6982\u7387\u4e86\u3002 \u8fd9\u91cc\u7684softmax\u5176\u5b9e\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6fc0\u6d3b\u51fd\u6570\u6216\u8005\u8fde\u63a5\u51fd\u6570\uff0c\u5c06\u8f93\u51fa\u7684\u7ed3\u679c\u8f6c\u6362\u6210\u6211\u4eec\u60f3\u8981\u7684\u90a3\u79cd\u5f62\u5f0f\uff08\u5728\u8fd9\u91cc\uff0c\u662f\u8f6c\u6362\u621010\u5404\u7c7b\u522b\u4e0a\u7684\u6982\u7387\u5206\u5e03\uff09\u3002\u90a3\u4e48\u8fd9\u4e2asoftmax\u7684\u8fc7\u7a0b\u662f\u7ecf\u8fc7\u4e86\u4ec0\u4e48\u6837\u7684\u51fd\u6570\u8f6c\u6362\u5462\uff1f\u5982\u4e0b\u516c\u5f0f\uff1a \u5c55\u5f00\u4ee5\u4e0a\u516c\u5f0f: \u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u521a\u521a\u7684\u7ebf\u6027\u8f93\u51faevidence\u4f5c\u4e3asoftmax\u51fd\u6570\u91cc\u7684\u8f93\u5165x\uff0c\u5148\u8fdb\u8fc7\u4e00\u4e2a\u5e42\u51fd\u6570\uff0c\u7136\u540e\u505a\u6b63\u6001\u5316\uff0c\u4f7f\u5f97\u6240\u6709\u7684\u6982\u7387\u76f8\u52a0\u7b49\u4e8e1. \u5c06softmax regression\u7684\u8fc7\u7a0b\u753b\u51fa\u6765\u5982\u4e0b\uff1a \u5982\u679c\u5199\u6210\u516c\u5f0f\uff0c\u90a3\u5c31\u662f\u5982\u4e0b\uff1a \u5c06\u4ee5\u4e0a\u516c\u5f0f\u505a\u6539\u8fdb\uff0c\u53d8\u6210\u77e9\u9635\u548c\u5411\u91cf\u7684\u5f62\u5f0f\uff1a \u8981\u662f\u60f3\u7b80\u5355\u76f4\u89c2\u4e00\u70b9\uff0c\u90a3\u4e48\u5c31\u8fd9\u6837\uff1a \u81f3\u6b64\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u591a\u5143\u5206\u7c7bSoftmax Regressions\u7684\u8ba1\u7b97\u539f\u7406\uff0c\u90a3\u4e48\u63a5\u4e0b\u53bb\u5c31\u53ef\u4ee5\u53bb\u5c1d\u8bd5\u7528tensorflow\u6765\u5b9e\u73b0Softmax Regressions\u5566~","title":"3.1 Softmax Regressions\u539f\u7406"},{"location":"ESP32/02%EF%BC%9A%E4%B8%80%E6%96%87%E5%85%A8%E8%A7%A3%EF%BC%9A%E5%88%A9%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6Tensorflow%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E5%9B%BE%E7%89%87%EF%BC%88%E5%88%9D%E5%AD%A6%E8%80%85%E7%AF%87%EF%BC%89/#22-tensorflowsoftmax-regression","text":"1.\u8981\u4f7f\u7528tensorflow,\u5b9e\u73b0\u5bfc\u5165tensorflow\u7684\u5e93\uff1a import tensorflow as tf1 2.\u4e3a\u8f93\u5165\u6570\u636ex\u521b\u5efa\u5360\u4f4d\u7b26 x = tf.placeholder(tf.float32, [None, 784])1 \u8fd9\u91cc\u7684x\u5e76\u4e0d\u662f\u5177\u4f53\u7684\u6570\u503c\uff0c\u800c\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5c31\u662f\u5148\u7ed9\u8981\u8f93\u5165\u7684\u6570\u636e\u9738\u5360\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7b49\u5f53\u771f\u7684\u8ba9TensorFlow\u8fd0\u884c\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u518d\u4f20\u5165x\u7684\u771f\u5b9e\u6570\u636e\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u8f93\u5165\u6570\u636en\u4e2a\u662f1*784\u7684\u5411\u91cf\uff0c\u53ef\u4ee5\u8868\u793a\u62102\u5c42\u7684tensor,\u5927\u5c0f\u662f[None,784],None\u8868\u793a\u5230\u65f6\u5019\u540e\u4f20\u8f93\u7684\u6570\u636e\u53ef\u4ee5\u4efb\u4f55\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u91cf\u7684\u6837\u672c\u70b9\u3002 3.\u521b\u5efa\u4e24\u4e2a\u6743\u91cd\u53d8\u91cf w\u548cb\u662f\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u6539\u53d8\u4e0d\u65ad\u4f18\u5316\u7684\uff0c\u4f7f\u7528Variable\u6765\u521b\u5efa\uff1a W = tf.Variable(tf.zeros([784, 10])) b = tf.Variable(tf.zeros([10]))12 \u4ee5\u4e0a\uff0c\u6211\u4eec\u521d\u59cb\u5316\u4e24\u4e2a\u6743\u91cd\u90fd\u4e3a0\uff0c\u5728\u4e4b\u540e\u7684\u8bad\u7ec3\u4e0e\u5b66\u4e60\u4e2d\u4f1a\u4e0d\u65ad\u88ab\u4f18\u5316\u6210\u5176\u4ed6\u503c\u3002\u6ce8\u610f\uff0cw\u7684\u5927\u5c0f\u662f[784,10]\u8868\u793a784\u4e2a\u50cf\u7d20\u8f93\u5165\u70b9\u4e58\u4ee510\u7ef4\u7684\u5411\u91cf\uff0810\u4e2a\u7c7b\u522b\uff09\u3002b\u7684\u5927\u5c0f\u662f[ 10 ] 4.\u5efa\u7acbsoftmax\u6a21\u578b y = tf.nn.softmax(tf.matmul(x, W) + b)1 \u4ee5\u4e0a\u4ee3\u7801\u53ef\u89c1\uff0c\u6211\u4eec\u5148\u5c06x\u4e0eW\u76f8\u4e58\u4e86\uff0c\u7136\u540e\u52a0\u4e0a\u4e86b\uff0c\u7136\u540e\u5c06\u7ebf\u6027\u8f93\u51fa\u7ecf\u8fc7softmax\u7684\u8f6c\u6362\u3002 \u55ef\uff0c\u81f3\u6b64softmax\u7684\u6a21\u578b\u5c31\u5199\u597d\u4e86\u3002","title":"2.2 Tensorflow\u5b9e\u73b0softmax regression"},{"location":"ESP32/02%EF%BC%9A%E4%B8%80%E6%96%87%E5%85%A8%E8%A7%A3%EF%BC%9A%E5%88%A9%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6Tensorflow%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E5%9B%BE%E7%89%87%EF%BC%88%E5%88%9D%E5%AD%A6%E8%80%85%E7%AF%87%EF%BC%89/#4","text":"1.\u5efa\u7acb\u635f\u5931\u51fd\u6570 \u4e0a\u9762\u6211\u4eec\u642d\u5efa\u4e86\u4e00\u4e2a\u521d\u59cb\u7684softmax\u7684\u6a21\u578b\uff0c\u6ce8\u610f\u6a21\u578b\u4e2d\u7684\u53c2\u6570w,b\u662f\u81ea\u5df1\u968f\u4fbf\u5b9a\u4e49\u7684\u3002\u90a3\u4e48\u8bad\u7ec3\u6a21\u578b\u7684\u76ee\u7684\u662f\u8ba9\u6a21\u578b\u5728\u5b66\u4e60\u6837\u672c\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5730\u4f18\u5316\u53c2\u6570\uff0c\u4f7f\u5f97\u6a21\u578b\u7684\u8868\u73b0\u6700\u597d\u3002 \u90a3\u4e48\u5982\u4f55\u8bc4\u4ef7\u6a21\u578b\u8868\u73b0\u7684\u597d\u574f\u5462\uff1f\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u635f\u5931\u51fd\u6570\u6765\u8bc4\u4ef7\u6a21\u578b\u7684\u597d\u574f\u3002\u5982\u679c\u6a21\u578b\u9884\u6d4b\u7684\u7ed3\u679c\u4e0e\u771f\u5b9e\u7684\u7ed3\u679c\u76f8\u5dee\u8d8a\u8fdc\uff0c\u90a3\u4e48\u635f\u5931\u5927\uff0c\u6a21\u578b\u7684\u8868\u73b0\u5c31\u8d8a\u4e0d\u597d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6e34\u671b\u53bb\u6700\u5c0f\u5316\u635f\u5931\u4ece\u800c\u5f97\u5230\u6700\u4f18\u7684\u6a21\u578b\u3002 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\u6700\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\uff1a\u4ea4\u53c9\u71b5\u635f\u5931\u3002\u516c\u5f0f\u5982\u4e0b\uff1a y\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6982\u7387\u5206\u5e03\uff0cy\u2019\u8868\u793a\u771f\u5b9e\u7684\u7c7b\u522b\u6982\u7387\u5206\u5e03\uff08\u5c31\u662f\u4e4b\u95f4one-hot\u7f16\u7801\u4e4b\u540e\u7684\u6807\u7b7e\uff09\u3002yi\u8868\u793a\u9884\u6d4b\u4e3a\u7b2ci\u4e2a\u7c7b\u7684\u6982\u7387\uff0c yi\u2019\u8868\u793a\u771f\u5b9e\u5c5e\u4e8ei\u7c7b\u7684\u6982\u7387\uff08\u53ea\u6709i\u7c7b\u4e3a1\uff0c\u5176\u4f59\u4e3a0\uff09 \u4ea4\u53c9\u71b5\u4ece\u4e00\u5b9a\u610f\u4e49\u4e0a\u53ef\u4ee5\u5ea6\u91cf\u6a21\u578b\u5bf9\u4e8e\u771f\u5b9e\u60c5\u51b5\u7684\u62df\u5408\u7a0b\u5ea6\uff0c\u4ea4\u53c9\u71b5\u8d8a\u5927\uff0c\u5219\u6a21\u578b\u8d8a\u4e0d\u62df\u5408\uff0c\u8868\u73b0\u529b\u8d8a\u5dee\u3002 \u8981\u5b9e\u73b0\u4ea4\u53c9\u71b5\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a // \u4e3a\u771f\u5b9e\u7684\u6807\u7b7e\u6dfb\u52a0\u5360\u4f4d\u7b26 y_ = tf.placeholder(tf.float32, [None, 10]) // \u521b\u5efa\u4ea4\u53c9\u71b5\u51fd\u6570 cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))12345 \u89e3\u91ca\u4e00\u4e0b\u4e0a\u9762\u7684\u4ee3\u7801\uff0ctf.log\u8868\u793a\u5c06y\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u505alog\u8fd0\u7b97\uff1b\u7136\u540e\u5c06\u5176\u4e58\u4ee5\u5bf9\u5e94\u7684\u771f\u5b9e\u6807\u7b7e\u7684\u7c7b\u522by_\u4e2d\u7684\u5143\u7d20\u3002tf.reduce_sum\u8868\u793a\u7684\u662f\u5c06\u7d22\u5f15\u4e3a1\u7684\u503c\u8fdb\u884c\u6c42\u548c\u3002tf.reduce_mean\u8868\u793a\u5bf9\u6240\u6709\u6837\u672c\u7684\u4ea4\u53c9\u71b5\u6c42\u5747\u503c\u3002 \u6ce8\u610f\u6ce8\u610f\uff0c\u5728\u6e90\u7801\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u8fd9\u4e2a\u516c\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u6837\u8ba1\u7b97\u4e0b\u53bb\u6570\u503c\u4e0d\u7a33\u5b9a\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u76f4\u63a5\u5728\u7ebf\u6027\u51fd\u6570\u4e4b\u540e\u5e94\u7528\u4e86tf.nn.softmax_cross_entropy_with_gogits\uff08\u5373\uff0c\u6ca1\u6709\u5355\u72ec\u7ecf\u8fc7softmax\u51fd\u6570\uff09\uff0c\u8fd9\u6837\u4f1a\u66f4\u52a0\u7a33\u5b9a\u3002 2.\u4f7f\u7528BP\u7b97\u6cd5\u4f18\u5316\u53c2\u6570 \u635f\u5931\u51fd\u6570\u5c31\u662f\u6211\u4eec\u7684\u76ee\u6807\u51fd\u6570\uff0c\u8981\u627e\u5230\u76ee\u6807\u51fd\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u662f\u5bf9\u53c2\u6570\u6c42\u504f\u5bfc\u7b49\u4e8e0.\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4f18\u5316\u5668\u53bb\u4e0d\u65ad\u5730\u964d\u4f4e\u635f\u5931\u5bfb\u627e\u6700\u4f18\u53c2\u6570\u3002\u6bd4\u5982\u8bf4\u6700\u5e38\u7528\u7684\u662f\u68af\u5ea6\u4e0b\u964d\u6cd5\u3002\u4ee3\u7801\u5982\u4e0b\uff1a train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)1 \u4e0a\u9762\u4f7f\u7528\u4e86\u68af\u5ea6\u4e0b\u964d\u6cd5\u6700\u5c0f\u5316\u4ea4\u53c9\u71b5\u635f\u5931\uff0c\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a0.5\uff0c\u6bcf\u4e00\u6b21\u8fed\u4ee3\uff0cw,b\u4e24\u7c7b\u53c2\u6570\u90fd\u4f1a\u6539\u53d8\uff0c\u76f4\u5230\u635f\u5931\u8fbe\u5230\u6700\u5c0f\u7684\u65f6\u5019\uff0c\u5c31\u83b7\u5f97\u4e86\u6700\u4f18\u7684w,b\u3002 \u4e0d\u8fc7tensorflow\u4e5f\u63d0\u4f9b\u4e86\u5f88\u591a\u5176\u4ed6\u7684\u4f18\u5316\u5668\uff08\u540e\u7eed\u4ecb\u7ecd\uff09 3.\u8fd0\u884c\u8fed\u4ee3 \u6a21\u578b\u8bad\u7ec3\u7684graph\u57fa\u672c\u5df2\u7ecf\u5b8c\u6210\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u521b\u5efa\u4f1a\u8bdd\uff0c\u6765\u8fdb\u884c\u5faa\u73af\u8bad\u7ec3\u4e86\u3002 // \u521b\u5efa\u4f1a\u8bdd sess = tf.InteractiveSession() // \u521d\u59cb\u5316\u6240\u6709\u53d8\u91cf tf.global_variables_initializer().run() //\u5faa\u73af1000\u6b21\u8bad\u7ec3\u6a21\u578b for _ in range(1000): # \u83b7\u53d6\u8bad\u7ec3\u96c6\u4e0e\u6807\u7b7e\u96c6\uff0c\u6bcf\u6b21\u83b7\u53d6100\u4e2a\u6837\u672c batch_xs, batch_ys = mnist.train.next_batch(100) # \u5582\u6570\u636e\uff0c\u8bad\u7ec3 sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})123456789101112 \u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u90fd\u4f1a\u4ece\u8bad\u7ec3\u96c6\u4e2d\u83b7\u53d6\u4e00\u6279\u6837\u672c\uff0c\u6bcf\u6279\u6709100\u4e2a\u6837\u672c\u3002\u7136\u540e\u8fd0\u884ctrain_step\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5e76\u4e14\u7ed9\u4e4b\u524d\u7684\u5360\u4f4d\u7b26\u5582\u5165\u6570\u636e\u3002 \u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u5947\u602a\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u62ff\u6240\u6709\u7684\u8bad\u7ec3\u96c6\u6765\u505a\u5faa\u73af\u8bad\u7ec3\uff0c\u4e3a\u5565\u6bcf\u6b21\u8981\u968f\u673a\u5730\u62ff100\u4e2a\u6837\u672c\u5462\uff1f\u8fd9\u91cc\u5e94\u7528\u4e86\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\u3002\u76f4\u63a5\u4f7f\u7528\u6240\u6709\u6837\u672c\u6765\u505a\u5faa\u73af\u8fed\u4ee3\u7684\u201c\u68af\u5ea6\u4e0b\u964d\u6cd5\u201d\u56fa\u7136\u66f4\u7406\u60f3\uff0c\u4f46\u662f\u4f1a\u5927\u5927\u589e\u52a0\u8ba1\u7b97\u7684\u6210\u672c\uff0c\u800c\u201c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\u201d\u51cf\u5c11\u4e86\u8ba1\u7b97\u91cf\u5e76\u4e14\u4e5f\u4fdd\u6301\u4e86\u76f8\u5bf9\u4e00\u81f4\u7684\u51c6\u786e\u7387\u3002","title":"4.\u6a21\u578b\u8bad\u7ec3"},{"location":"ESP32/02%EF%BC%9A%E4%B8%80%E6%96%87%E5%85%A8%E8%A7%A3%EF%BC%9A%E5%88%A9%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6Tensorflow%E8%AF%86%E5%88%AB%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E5%9B%BE%E7%89%87%EF%BC%88%E5%88%9D%E5%AD%A6%E8%80%85%E7%AF%87%EF%BC%89/#5","text":"\u901a\u8fc7\u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6700\u4f18\u7684\u53c2\u6570\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u6700\u4f18\u7684\u53c2\u6570\u4e0b\uff0c\u6a21\u578b\u7684\u8868\u73b0\u529b\u5230\u5e95\u5982\u4f55\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u770b\u770b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6a21\u578b\u9884\u6d4b\u7684label\u4e0e\u6837\u672c\u771f\u5b9e\u7684Label\u76f8\u540c\u7684\u6709\u591a\u5c11\u6bd4\u4f8b\u3002 tf.argmax\u8fd4\u56de\u7684\u662f\u4e00\u4e2atensor\u91cc\u5728\u67d0\u4e2a\u7ef4\u5ea6\u4e0a\u6700\u5927\u503c\u7684\u7d22\u5f15\uff0c\u6bd4\u5982tf.argmax(y,1)\u53d6\u51fa\u7684\u662f\u9884\u6d4b\u8f93\u51fa\u768410\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u5411\u91cf\u4e2d\u6700\u5927\u6982\u7387\u7684\u90a3\u4e2a\u7d22\u5f15\uff08\u5bf9\u5e94\u67d0\u4e2a\u7c7b\u522b\uff09\uff0ctf.argmax(y_,1)\u53d6\u51fa\u7684\u662f\u8be5\u6837\u672c\u7684\u771f\u5b9e\u7c7b\u522b\u7684\u7d22\u5f15\uff0c\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u6837\u672c\uff0c\u4e24\u8005\u76f8\u540c\uff0c\u5219\u8bf4\u660e\u5bf9\u8be5\u6837\u672c\u7684\u9884\u6d4b\u6b63\u786e\u3002\u4e0b\u9762\u4ee3\u7801\uff0c\u7528tf.equal\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u5217\u8868\u3002 correct_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))1 \u8981\u6c42\u51fa\u6b63\u786e\u7387\uff0c\u53ea\u8981\u5c06\u5e03\u5c14\u7c7b\u578b\u7684\u5217\u8868\u5168\u90e8\u6c42\u548c\u518d\u6c42\u5747\u503c\u5373\u53ef\uff1a accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))1 \u73b0\u5728\u6211\u4eec\u5582\u5165\u6d4b\u8bd5\u6570\u636e\u96c6\uff0c\u6765\u8fd0\u884c\u8ba1\u7b97\u6d4b\u8bd5\u96c6\u4e0a\u7684\u51c6\u786e\u7387\uff1a print(sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels}))1 \u6253\u5370\u51fa\u6765\u5927\u6982\u662f92%\u3002 \u8fd9\u4e2a\u7ed3\u679c\u597d\u5417\uff1f\u989d\u3002\u3002\u5176\u5b9e\u5e76\u6ca1\u6709\u5462\uff0c\u800c\u4e14\u53ef\u4ee5\u8bf4\u633a\u5dee\u7684\u3002\u3002 \u6a21\u578b\u8868\u73b0\u4e0d\u597d\u7684\u539f\u56e0\u5728\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u6a21\u578b\uff0c\u505a\u4e00\u4e9b\u5c0f\u7684\u6539\u826f\uff0c\u6b63\u786e\u7387\u53ef\u4ee5\u8fbe\u523097%\u3002\u6700\u597d\u7684\u6a21\u578b\u53ef\u4ee5\u8fbe\u523099.7\u7684\u51c6\u786e\u7387\uff01 \u81f3\u6b64\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5b8c\u6574\u7684\u7528tensorflow\u6765\u8bad\u7ec3softmax regression\u591a\u5143\u5206\u7c7b\u6a21\u578b\u7684\u6848\u4f8b\u3002","title":"5.\u6a21\u578b\u8bc4\u4f30"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/","text":"10\u5206\u949f\u4e0a\u624bESP32 Arduino \u672c\u6587\u662fESP32\u5f00\u53d1\u677f\u7684\u5165\u95e8\u6307\u5357\u3002ESP32\u662f\u5b83ESP8266\u7684\u540e\u7ee7\u4ea7\u54c1\uff0c\u663e\u8457\u7684\u533a\u522b\u662fESP32\u62e5\u6709\u53cc\u6838\uff0c\u53ca\u652f\u6301\u84dd\u7259\u3002ESP32\u4e0eESP8266\u4e4b\u95f4\u7684\u5dee\u5f02\uff1a ESP32\u4e0eESP8266 \u2013\u4f18\u7f3a\u70b9 ESP32 DEVKIT DOIT \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528ESP32 DEVKIT DOIT\u5f00\u53d1\u677f\u3002\u4f46\u662f\u6b64\u9875\u9762\u4e0a\u7684\u4fe1\u606f\u4e5f\u4e0e\u5176\u4ed6\u4f7f\u7528ESP-WROOM-32\u82af\u7247\u7684ESP32\u5f00\u53d1\u677f\u517c\u5bb9\u3002 \u6280\u672f\u6307\u6807 \u5173\u4e8eESP32\u5173\u952e\u53c2\u6570\uff1a ESP32\u662f\u53cc\u6838\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u67092\u4e2a\u5904\u7406\u5668\u3002 \u5177\u6709Wi-Fi\u548c\u5185\u7f6e\u84dd\u7259\u3002 \u8fd0\u884c32\u4f4d\u7a0b\u5e8f\u3002 \u65f6\u949f\u9891\u7387\u53ef\u4ee5\u9ad8\u8fbe240MHz\uff0c\u5e76\u4e14\u5177\u6709512 kB RAM\u3002 \u8be5\u7279\u5b9a\u677f\u670930\u621636\u4e2a\u5f15\u811a\uff0c\u6bcf\u884c15\u4e2a\u3002 \u5b83\u8fd8\u5177\u6709\u591a\u79cd\u53ef\u7528\u7684\u5916\u8bbe\uff0c\u4f8b\u5982\uff1a\u7535\u5bb9\u5f0f\u89e6\u6478\uff0cADC\uff0cDAC\uff0cUART\uff0cSPI\uff0cI2C\u7b49\u3002 \u5b83\u5e26\u6709\u5185\u7f6e\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u548c\u5185\u7f6e\u6e29\u5ea6\u4f20\u611f\u5668\u3002 \u8981\u4e86\u89e3\u6709\u5173ESP32 GPIO\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb\u6211\u4eec\u7684GPIO\u53c2\u8003\u6307\u5357\uff1a ESP32\u5f15\u811a\u53c2\u8003\u3002 \u8f6f\u4ef6\u5f00\u53d1\u73af\u5883 ESP32\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7f16\u7a0b\u73af\u5883\u4e2d\u8fdb\u884c\u7f16\u7a0b\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\uff1a Arduino IDE Espressif IDF\uff08IoT\u5f00\u53d1\u6846\u67b6\uff09 Micropython JavaScript LUA \u2026 \u5728\u6211\u4eec\u7684\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u4f7f\u7528Arduino IDE\u6216MicroPython\u5bf9ESP32\u8fdb\u884c\u7f16\u7a0b\u3002 \u5728Arduino IDE\u4e2d\u51c6\u5907ESP32\u5f00\u53d1\u677f Arduino IDE\u6709\u4e00\u4e2a\u9644\u52a0\u5f00\u53d1\u677f\u9009\u9879\uff0c\u53ef\u8ba9\u60a8\u4f7f\u7528Arduino IDE\u53ca\u5176\u7f16\u7a0b\u8bed\u8a00\u5bf9ESP32\u8fdb\u884c\u7f16\u7a0b\u3002\u8bf7\u9075\u5faa\u4ee5\u4e0b\u6559\u7a0b\u4e4b\u4e00\u6765\u51c6\u5907Arduino IDE\uff1a Windows \u7248\u2013\u5728Arduino IDE\u4e2d\u5b89\u88c5ESP32\u5f00\u53d1\u677f Mac\u548cLinux \u7248\u2013\u5728Arduino IDE\u4e2d\u5b89\u88c5ESP32\u5f00\u53d1\u677f ESP32\u5f15\u811a\u6307\u5357 \u4f7f\u7528ESP32\u5f00\u53d1\u677f\u9996\u5148\u9700\u4e86\u89e3\u5176\u5f15\u811a\u7684\u5206\u5e03\u53ca\u5bf9\u5e94\u7f16\u53f7\u3002ESP32 Devkit V1\u6709\u4e24\u79cd\u7248\u672c\uff0c32\u5f15\u811a\u548c36\u5f15\u811a\u7684\u7248\u672c\u3002\u4e24\u79cd\u7248\u672c\u5bf9\u5e94\u7684\u5f15\u811a\u540d\u79f0\u5982\u4e0b\uff1a \u5177\u670930\u4e2aGPIO\u7684\u7248\u672c \u5177\u670936\u4e2aGPIO\u7684\u7248\u672c Tip \u5f00\u53d1\u677f\u4e0a\u5370\u7684\u5f15\u811a\u7f16\u53f7\u4e3aD0, D1, ...\uff0c\u5b83\u4ee3\u8868\u7684\u542b\u4e49\u5c31\u662fGPIO0, GPIO1, ... \u4f7f\u7528Arduino IDE\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230ESP32 \u4e3a\u4e86\u6f14\u793a\u5982\u4f55\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230ESP32\u5f00\u53d1\u677f\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u4f7fLED\u95ea\u70c1\u3002 \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230\u60a8\u7684Arduino IDE\u4e2d\uff1a /* Blink */ // ledPin refers to ESP32 GPIO 23 const int ledPin = 23 ; // the setup function runs once when you press reset or power the board void setup () { // initialize digital pin ledPin as an output. pinMode ( ledPin , OUTPUT ); } // the loop function runs over and over again forever void loop () { digitalWrite ( ledPin , HIGH ); // turn the LED on (HIGH is the voltage level) delay ( 1000 ); // wait for a second digitalWrite ( ledPin , LOW ); // turn the LED off by making the voltage LOW delay ( 1000 ); // wait for a second } \u5c06ESP32\u5f00\u53d1\u677f\u63d2\u5165\u8ba1\u7b97\u673a\uff0c\u7136\u540e\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\uff1a 1\uff09\u8f6c\u5230 Tools > Board \uff0c\u5411\u4e0b\u6eda\u52a8\u5230ESP32\u90e8\u5206\uff0c\u7136\u540e\u9009\u62e9\u60a8\u7684ESP32\u677f\u7684\u540d\u79f0\u3002\u5c31\u6211\u800c\u8a00\uff0c\u5b83\u662fDOIT ESP32 DEVKIT V1\u5f00\u53d1\u677f\u3002 2\uff09\u8f6c\u5230 Tools > Port \uff0c\u7136\u540e\u9009\u62e9\u53ef\u7528\u7684COM\u7aef\u53e3\u3002 3\uff09\u6309\u4e0b\u4e0a\u4f20\u6309\u94ae\u3002 \u6ce8\u610f\uff1a \u5982\u679c\u60a8\u5728\u5c1d\u8bd5\u4e0a\u4f20\u4ee3\u7801\u65f6\u9047\u5230\u4ee5\u4e0b\u9519\u8bef\uff0c\u5219\u8bf4\u660e\u60a8\u7684ESP32\u672a\u5904\u4e8e\u5237\u65b0/\u4e0a\u4f20\u6a21\u5f0f\u3002 Failed to connect to ESP32: Timed out... Connecting... \u5982\u679c\u4f60\u7684\u5f00\u53d1\u677f\u6ca1\u6709\u9009\u62e9\u9519\u8bef\u7684\u8bdd\uff0c\u8981\u4e0a\u4f20\u4ee3\u7801\uff0c\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u6309\u4f4fESP32\u5f00\u53d1\u677f\u4e2d\u7684\u201c BOOT \u201d\u6309\u94ae \u5f53Arduino IDE\u4e2d\u663e\u793a Connecting\u2026. \u6d88\u606f\uff0c\u5373\u53ef\u677e\u5f00\u201c BOOT \u201d\u6309\u94ae \u4e4b\u540e\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u201c Done uploading \u201d\u6d88\u606f\u3002 \u4e0a\u8f7d\u65b0\u4ee3\u7801\u540e\uff0c\u60a8\u53ef\u4ee5\u6309\u201c EN \u201d\u6309\u94ae\u91cd\u542fESP32\u5e76\u8fd0\u884c\u65b0\u4e0a\u8f7d\u7684\u4ee3\u7801\u3002 \u6f14\u793a\u7ed3\u679c \u4e0a\u8f7d\u4ee3\u7801\u540e\uff0c\u8fde\u63a5\u5230GPIO 23\u7684LED\u5e94\u8be5\u6bcf\u9694\u4e00\u79d2\u95ea\u70c1\u4e00\u6b21\u3002 https://www.mediavine.com/) \u603b\u7ed3 \u6211\u4eec\u5e0c\u671b\u60a8\u53d1\u73b0\u672c\u5165\u95e8\u6307\u5357\u5f88\u6709\u7528\u3002LED\u95ea\u70c1\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9879\u76ee\uff0c\u53ef\u8ba9\u60a8\u5f00\u59cb\u4f7f\u7528ESP32\u3002\u8fd9\u4e5f\u662f\u5b66\u4e60\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u677f\u4e0a\u6240\u9700\u7684\u8fc7\u7a0b\u7684\u597d\u65b9\u6cd5\u3002","title":"10\u5206\u949f\u4e0a\u624bESP32 Arduino"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/#10esp32-arduino","text":"\u672c\u6587\u662fESP32\u5f00\u53d1\u677f\u7684\u5165\u95e8\u6307\u5357\u3002ESP32\u662f\u5b83ESP8266\u7684\u540e\u7ee7\u4ea7\u54c1\uff0c\u663e\u8457\u7684\u533a\u522b\u662fESP32\u62e5\u6709\u53cc\u6838\uff0c\u53ca\u652f\u6301\u84dd\u7259\u3002ESP32\u4e0eESP8266\u4e4b\u95f4\u7684\u5dee\u5f02\uff1a ESP32\u4e0eESP8266 \u2013\u4f18\u7f3a\u70b9","title":"10\u5206\u949f\u4e0a\u624bESP32 Arduino"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/#esp32-devkit-doit","text":"\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528ESP32 DEVKIT DOIT\u5f00\u53d1\u677f\u3002\u4f46\u662f\u6b64\u9875\u9762\u4e0a\u7684\u4fe1\u606f\u4e5f\u4e0e\u5176\u4ed6\u4f7f\u7528ESP-WROOM-32\u82af\u7247\u7684ESP32\u5f00\u53d1\u677f\u517c\u5bb9\u3002","title":"ESP32 DEVKIT DOIT"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/#_1","text":"\u5173\u4e8eESP32\u5173\u952e\u53c2\u6570\uff1a ESP32\u662f\u53cc\u6838\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u67092\u4e2a\u5904\u7406\u5668\u3002 \u5177\u6709Wi-Fi\u548c\u5185\u7f6e\u84dd\u7259\u3002 \u8fd0\u884c32\u4f4d\u7a0b\u5e8f\u3002 \u65f6\u949f\u9891\u7387\u53ef\u4ee5\u9ad8\u8fbe240MHz\uff0c\u5e76\u4e14\u5177\u6709512 kB RAM\u3002 \u8be5\u7279\u5b9a\u677f\u670930\u621636\u4e2a\u5f15\u811a\uff0c\u6bcf\u884c15\u4e2a\u3002 \u5b83\u8fd8\u5177\u6709\u591a\u79cd\u53ef\u7528\u7684\u5916\u8bbe\uff0c\u4f8b\u5982\uff1a\u7535\u5bb9\u5f0f\u89e6\u6478\uff0cADC\uff0cDAC\uff0cUART\uff0cSPI\uff0cI2C\u7b49\u3002 \u5b83\u5e26\u6709\u5185\u7f6e\u970d\u5c14\u6548\u5e94\u4f20\u611f\u5668\u548c\u5185\u7f6e\u6e29\u5ea6\u4f20\u611f\u5668\u3002 \u8981\u4e86\u89e3\u6709\u5173ESP32 GPIO\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb\u6211\u4eec\u7684GPIO\u53c2\u8003\u6307\u5357\uff1a ESP32\u5f15\u811a\u53c2\u8003\u3002","title":"\u6280\u672f\u6307\u6807"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/#_2","text":"ESP32\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7f16\u7a0b\u73af\u5883\u4e2d\u8fdb\u884c\u7f16\u7a0b\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\uff1a Arduino IDE Espressif IDF\uff08IoT\u5f00\u53d1\u6846\u67b6\uff09 Micropython JavaScript LUA \u2026 \u5728\u6211\u4eec\u7684\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u4f7f\u7528Arduino IDE\u6216MicroPython\u5bf9ESP32\u8fdb\u884c\u7f16\u7a0b\u3002","title":"\u8f6f\u4ef6\u5f00\u53d1\u73af\u5883"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/#arduino-ideesp32","text":"Arduino IDE\u6709\u4e00\u4e2a\u9644\u52a0\u5f00\u53d1\u677f\u9009\u9879\uff0c\u53ef\u8ba9\u60a8\u4f7f\u7528Arduino IDE\u53ca\u5176\u7f16\u7a0b\u8bed\u8a00\u5bf9ESP32\u8fdb\u884c\u7f16\u7a0b\u3002\u8bf7\u9075\u5faa\u4ee5\u4e0b\u6559\u7a0b\u4e4b\u4e00\u6765\u51c6\u5907Arduino IDE\uff1a Windows \u7248\u2013\u5728Arduino IDE\u4e2d\u5b89\u88c5ESP32\u5f00\u53d1\u677f Mac\u548cLinux \u7248\u2013\u5728Arduino IDE\u4e2d\u5b89\u88c5ESP32\u5f00\u53d1\u677f","title":"\u5728Arduino IDE\u4e2d\u51c6\u5907ESP32\u5f00\u53d1\u677f"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/#esp32","text":"\u4f7f\u7528ESP32\u5f00\u53d1\u677f\u9996\u5148\u9700\u4e86\u89e3\u5176\u5f15\u811a\u7684\u5206\u5e03\u53ca\u5bf9\u5e94\u7f16\u53f7\u3002ESP32 Devkit V1\u6709\u4e24\u79cd\u7248\u672c\uff0c32\u5f15\u811a\u548c36\u5f15\u811a\u7684\u7248\u672c\u3002\u4e24\u79cd\u7248\u672c\u5bf9\u5e94\u7684\u5f15\u811a\u540d\u79f0\u5982\u4e0b\uff1a \u5177\u670930\u4e2aGPIO\u7684\u7248\u672c \u5177\u670936\u4e2aGPIO\u7684\u7248\u672c Tip \u5f00\u53d1\u677f\u4e0a\u5370\u7684\u5f15\u811a\u7f16\u53f7\u4e3aD0, D1, ...\uff0c\u5b83\u4ee3\u8868\u7684\u542b\u4e49\u5c31\u662fGPIO0, GPIO1, ...","title":"ESP32\u5f15\u811a\u6307\u5357"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/#arduino-ideesp32_1","text":"\u4e3a\u4e86\u6f14\u793a\u5982\u4f55\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230ESP32\u5f00\u53d1\u677f\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u4f7fLED\u95ea\u70c1\u3002 \u5c06\u4ee5\u4e0b\u4ee3\u7801\u590d\u5236\u5230\u60a8\u7684Arduino IDE\u4e2d\uff1a /* Blink */ // ledPin refers to ESP32 GPIO 23 const int ledPin = 23 ; // the setup function runs once when you press reset or power the board void setup () { // initialize digital pin ledPin as an output. pinMode ( ledPin , OUTPUT ); } // the loop function runs over and over again forever void loop () { digitalWrite ( ledPin , HIGH ); // turn the LED on (HIGH is the voltage level) delay ( 1000 ); // wait for a second digitalWrite ( ledPin , LOW ); // turn the LED off by making the voltage LOW delay ( 1000 ); // wait for a second } \u5c06ESP32\u5f00\u53d1\u677f\u63d2\u5165\u8ba1\u7b97\u673a\uff0c\u7136\u540e\u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\uff1a 1\uff09\u8f6c\u5230 Tools > Board \uff0c\u5411\u4e0b\u6eda\u52a8\u5230ESP32\u90e8\u5206\uff0c\u7136\u540e\u9009\u62e9\u60a8\u7684ESP32\u677f\u7684\u540d\u79f0\u3002\u5c31\u6211\u800c\u8a00\uff0c\u5b83\u662fDOIT ESP32 DEVKIT V1\u5f00\u53d1\u677f\u3002 2\uff09\u8f6c\u5230 Tools > Port \uff0c\u7136\u540e\u9009\u62e9\u53ef\u7528\u7684COM\u7aef\u53e3\u3002 3\uff09\u6309\u4e0b\u4e0a\u4f20\u6309\u94ae\u3002 \u6ce8\u610f\uff1a \u5982\u679c\u60a8\u5728\u5c1d\u8bd5\u4e0a\u4f20\u4ee3\u7801\u65f6\u9047\u5230\u4ee5\u4e0b\u9519\u8bef\uff0c\u5219\u8bf4\u660e\u60a8\u7684ESP32\u672a\u5904\u4e8e\u5237\u65b0/\u4e0a\u4f20\u6a21\u5f0f\u3002 Failed to connect to ESP32: Timed out... Connecting... \u5982\u679c\u4f60\u7684\u5f00\u53d1\u677f\u6ca1\u6709\u9009\u62e9\u9519\u8bef\u7684\u8bdd\uff0c\u8981\u4e0a\u4f20\u4ee3\u7801\uff0c\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u6309\u4f4fESP32\u5f00\u53d1\u677f\u4e2d\u7684\u201c BOOT \u201d\u6309\u94ae \u5f53Arduino IDE\u4e2d\u663e\u793a Connecting\u2026. \u6d88\u606f\uff0c\u5373\u53ef\u677e\u5f00\u201c BOOT \u201d\u6309\u94ae \u4e4b\u540e\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u201c Done uploading \u201d\u6d88\u606f\u3002 \u4e0a\u8f7d\u65b0\u4ee3\u7801\u540e\uff0c\u60a8\u53ef\u4ee5\u6309\u201c EN \u201d\u6309\u94ae\u91cd\u542fESP32\u5e76\u8fd0\u884c\u65b0\u4e0a\u8f7d\u7684\u4ee3\u7801\u3002","title":"\u4f7f\u7528Arduino IDE\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230ESP32"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/#_3","text":"\u4e0a\u8f7d\u4ee3\u7801\u540e\uff0c\u8fde\u63a5\u5230GPIO 23\u7684LED\u5e94\u8be5\u6bcf\u9694\u4e00\u79d2\u95ea\u70c1\u4e00\u6b21\u3002 https://www.mediavine.com/)","title":"\u6f14\u793a\u7ed3\u679c"},{"location":"ESP32/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BESP32%20Arduino/#_4","text":"\u6211\u4eec\u5e0c\u671b\u60a8\u53d1\u73b0\u672c\u5165\u95e8\u6307\u5357\u5f88\u6709\u7528\u3002LED\u95ea\u70c1\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9879\u76ee\uff0c\u53ef\u8ba9\u60a8\u5f00\u59cb\u4f7f\u7528ESP32\u3002\u8fd9\u4e5f\u662f\u5b66\u4e60\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230\u677f\u4e0a\u6240\u9700\u7684\u8fc7\u7a0b\u7684\u597d\u65b9\u6cd5\u3002","title":"\u603b\u7ed3"},{"location":"ESP32/AD/","text":"ESP32 AD\u8f93\u5165 0~3.3V 12bit https://randomnerdtutorials.com/esp32-adc-analog-read-arduino-ide/ // Potentiometer is connected to GPIO 34 (Analog ADC1_CH6) const int potPin = 34 ; // variable for storing the potentiometer value int potValue = 0 ; void setup () { Serial . begin ( 115200 ); delay ( 1000 ); } void loop () { // Reading potentiometer value potValue = analogRead ( potPin ); Serial . println ( potValue ); delay ( 500 ); } Fast sampling from analog input The first part of the OScope project is to implement the Arduino sketch to read the input values from an analog pin. In this article will describe how to achieve a reliable sampling of analog signals up to 615 KHz using some advanced techniques. Arduino provides an convenient way to read analog input this using the analogRead() function. Without going into much details the analogRead() function takes 100 microseconds leading to a theoretical sampling rate of 9600 Hz. You can read more about this topic here . The following piece of code takes 1000 samples using the analogRead() calculates some statistics. void setup () { Serial . begin ( 115200 ); pinMode ( A0 , INPUT ); } void loop () { long t0 , t ; t0 = micros (); for ( int i = 0 ; i < 1000 ; i ++ ) { analogRead ( A0 ); } t = micros () - t0 ; // calculate elapsed time Serial . print ( \"Time per sample: \" ); Serial . println (( float ) t / 1000 ); Serial . print ( \"Frequency: \" ); Serial . println (( float ) 1000 * 1000000 / t ); Serial . println (); delay ( 2000 ); } This code gives 112us per sample for a 8928 Hz sampling rate . So how can we increase sampling rate? Speedup the analogRead() function We now need a little more details. The ADC clock is 16 MHz divided by a 'prescale factor'. The prescale is set by default to 128 which leads to 16MHz/128 = 125 KHz ADC clock. Since a conversion takes 13 ADC clocks, the default sample rate is about 9600 Hz (125KHz/13). Adding few lines of code in the setup() function we can set an ADC prescale to 16 to have a clock of 1 MHz and a sample rate of 76.8KHz . #define cbi(sfr, bit) (_SFR_BYTE(sfr) &= ~_BV(bit)) #define sbi(sfr, bit) (_SFR_BYTE(sfr) |= _BV(bit)) void setup() { sbi(ADCSRA, ADPS2); cbi(ADCSRA, ADPS1); cbi(ADCSRA, ADPS0); ... The real frequency measured with the test program is 17us per sample for a 58.6 KHz sampling rate . The following table shows prescale values with registers values and theoretical sample rates. Note that prescale values below 16 are not recommended because the ADC clock is rated. Prescale ADPS2 ADPS1 ADPS0 Clock freq (MHz) Sampling rate (KHz) 2 0 0 1 8 615 4 0 1 0 4 307 8 0 1 1 2 153 16 1 0 0 1 76.8 32 1 0 1 0.5 38.4 64 1 1 0 0.25 19.2 128 1 1 1 0.125 9.6 Interrupts A better strategy is to avoid calling the analogRead() function and use the 'ADC Free Running mode'. This is a mode in which the ADC continuously converts the input and throws an interrupt at the end of each conversion. This approach has two major advantages: Do not waste time waiting for the next sample allowing to execute additional logic in the loop function. Improve accuracy of sampling reducing jitter. In this new test program I set the prescale to 16 as the example above getting a 76.8 KHz sampling rate . int numSamples=0; long t, t0; void setup() { Serial.begin(115200); ADCSRA = 0; // clear ADCSRA register ADCSRB = 0; // clear ADCSRB register ADMUX |= (0 & 0x07); // set A0 analog input pin ADMUX |= (1 << REFS0); // set reference voltage ADMUX |= (1 << ADLAR); // left align ADC value to 8 bits from ADCH register // sampling rate is [ADC clock] / [prescaler] / [conversion clock cycles] // for Arduino Uno ADC clock is 16 MHz and a conversion takes 13 clock cycles //ADCSRA |= (1 << ADPS2) | (1 << ADPS0); // 32 prescaler for 38.5 KHz ADCSRA |= (1 << ADPS2); // 16 prescaler for 76.9 KHz //ADCSRA |= (1 << ADPS1) | (1 << ADPS0); // 8 prescaler for 153.8 KHz ADCSRA |= (1 << ADATE); // enable auto trigger ADCSRA |= (1 << ADIE); // enable interrupts when measurement complete ADCSRA |= (1 << ADEN); // enable ADC ADCSRA |= (1 << ADSC); // start ADC measurements } ISR(ADC_vect) { byte x = ADCH; // read 8 bit value from ADC numSamples++; } void loop() { if (numSamples>=1000) { t = micros()-t0; // calculate elapsed time Serial.print(\"Sampling frequency: \"); Serial.print((float)1000000/t); Serial.println(\" KHz\"); delay(2000); // restart t0 = micros(); numSamples=0; } } If you want to learn more on ADC Free Running mode and tweaking ADC register you can look at the following pages. \u200eAVR Guide - Analog Inputs Instructables - Girino - Fast Arduino Oscilloscope Instructables - Arduino Audio Input Arduino Forum - Faster Analog Read","title":"ESP32 AD\u8f93\u5165"},{"location":"ESP32/AD/#esp32-ad","text":"0~3.3V 12bit https://randomnerdtutorials.com/esp32-adc-analog-read-arduino-ide/ // Potentiometer is connected to GPIO 34 (Analog ADC1_CH6) const int potPin = 34 ; // variable for storing the potentiometer value int potValue = 0 ; void setup () { Serial . begin ( 115200 ); delay ( 1000 ); } void loop () { // Reading potentiometer value potValue = analogRead ( potPin ); Serial . println ( potValue ); delay ( 500 ); }","title":"ESP32 AD\u8f93\u5165"},{"location":"ESP32/AD/#fast-sampling-from-analog-input","text":"The first part of the OScope project is to implement the Arduino sketch to read the input values from an analog pin. In this article will describe how to achieve a reliable sampling of analog signals up to 615 KHz using some advanced techniques. Arduino provides an convenient way to read analog input this using the analogRead() function. Without going into much details the analogRead() function takes 100 microseconds leading to a theoretical sampling rate of 9600 Hz. You can read more about this topic here . The following piece of code takes 1000 samples using the analogRead() calculates some statistics. void setup () { Serial . begin ( 115200 ); pinMode ( A0 , INPUT ); } void loop () { long t0 , t ; t0 = micros (); for ( int i = 0 ; i < 1000 ; i ++ ) { analogRead ( A0 ); } t = micros () - t0 ; // calculate elapsed time Serial . print ( \"Time per sample: \" ); Serial . println (( float ) t / 1000 ); Serial . print ( \"Frequency: \" ); Serial . println (( float ) 1000 * 1000000 / t ); Serial . println (); delay ( 2000 ); } This code gives 112us per sample for a 8928 Hz sampling rate . So how can we increase sampling rate?","title":"Fast sampling from analog input"},{"location":"ESP32/AD/#speedup-the-analogread-function","text":"We now need a little more details. The ADC clock is 16 MHz divided by a 'prescale factor'. The prescale is set by default to 128 which leads to 16MHz/128 = 125 KHz ADC clock. Since a conversion takes 13 ADC clocks, the default sample rate is about 9600 Hz (125KHz/13). Adding few lines of code in the setup() function we can set an ADC prescale to 16 to have a clock of 1 MHz and a sample rate of 76.8KHz . #define cbi(sfr, bit) (_SFR_BYTE(sfr) &= ~_BV(bit)) #define sbi(sfr, bit) (_SFR_BYTE(sfr) |= _BV(bit)) void setup() { sbi(ADCSRA, ADPS2); cbi(ADCSRA, ADPS1); cbi(ADCSRA, ADPS0); ... The real frequency measured with the test program is 17us per sample for a 58.6 KHz sampling rate . The following table shows prescale values with registers values and theoretical sample rates. Note that prescale values below 16 are not recommended because the ADC clock is rated. Prescale ADPS2 ADPS1 ADPS0 Clock freq (MHz) Sampling rate (KHz) 2 0 0 1 8 615 4 0 1 0 4 307 8 0 1 1 2 153 16 1 0 0 1 76.8 32 1 0 1 0.5 38.4 64 1 1 0 0.25 19.2 128 1 1 1 0.125 9.6","title":"Speedup the analogRead() function"},{"location":"ESP32/AD/#interrupts","text":"A better strategy is to avoid calling the analogRead() function and use the 'ADC Free Running mode'. This is a mode in which the ADC continuously converts the input and throws an interrupt at the end of each conversion. This approach has two major advantages: Do not waste time waiting for the next sample allowing to execute additional logic in the loop function. Improve accuracy of sampling reducing jitter. In this new test program I set the prescale to 16 as the example above getting a 76.8 KHz sampling rate . int numSamples=0; long t, t0; void setup() { Serial.begin(115200); ADCSRA = 0; // clear ADCSRA register ADCSRB = 0; // clear ADCSRB register ADMUX |= (0 & 0x07); // set A0 analog input pin ADMUX |= (1 << REFS0); // set reference voltage ADMUX |= (1 << ADLAR); // left align ADC value to 8 bits from ADCH register // sampling rate is [ADC clock] / [prescaler] / [conversion clock cycles] // for Arduino Uno ADC clock is 16 MHz and a conversion takes 13 clock cycles //ADCSRA |= (1 << ADPS2) | (1 << ADPS0); // 32 prescaler for 38.5 KHz ADCSRA |= (1 << ADPS2); // 16 prescaler for 76.9 KHz //ADCSRA |= (1 << ADPS1) | (1 << ADPS0); // 8 prescaler for 153.8 KHz ADCSRA |= (1 << ADATE); // enable auto trigger ADCSRA |= (1 << ADIE); // enable interrupts when measurement complete ADCSRA |= (1 << ADEN); // enable ADC ADCSRA |= (1 << ADSC); // start ADC measurements } ISR(ADC_vect) { byte x = ADCH; // read 8 bit value from ADC numSamples++; } void loop() { if (numSamples>=1000) { t = micros()-t0; // calculate elapsed time Serial.print(\"Sampling frequency: \"); Serial.print((float)1000000/t); Serial.println(\" KHz\"); delay(2000); // restart t0 = micros(); numSamples=0; } } If you want to learn more on ADC Free Running mode and tweaking ADC register you can look at the following pages. \u200eAVR Guide - Analog Inputs Instructables - Girino - Fast Arduino Oscilloscope Instructables - Arduino Audio Input Arduino Forum - Faster Analog Read","title":"Interrupts"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/","text":"\u603b\u89c8 ADXL345\u662f\u4e00\u6b3e\u4f4e\u529f\u8017\uff0c\u4e09\u8f74MEMS\u52a0\u901f\u5ea6\u8ba1\u6a21\u5757\uff0c\u5177\u6709I2C\u548cSPI\u63a5\u53e3\u3002\u8fd9\u4e9b\u6a21\u5757\u7684Adafruit Breakout\u677f\u8f7d\u677f\u8f7d3.3v\u7535\u538b\u8c03\u8282\u548c\u7535\u5e73\u8f6c\u6362\u529f\u80fd\uff0c\u4f7f\u5176\u6613\u4e8e\u4e0eArduino\u7b495v\u5fae\u63a7\u5236\u5668\u63a5\u53e3\u3002 ADXL345\u5177\u67094\u79cd\u7075\u654f\u5ea6\u8303\u56f4\uff0c\u4ece+/- 2G\u5230+/- 16G\u3002\u5b83\u652f\u630110Hz\u81f33200Hz\u7684\u8f93\u51fa\u6570\u636e\u901f\u7387\u3002 ADXL345\u6570\u636e\u8868 \u5de5\u4f5c\u539f\u7406 MEMS-\u5fae\u673a\u7535\u7cfb\u7edf \u8be5\u4f20\u611f\u5668\u7531\u7845\u6676\u7247\u4e0a\u7684\u5fae\u673a\u68b0\u7ed3\u6784\u7ec4\u6210\u3002\u8be5\u7ed3\u6784\u7531\u591a\u6676\u7845\u5f39\u7c27\u60ac\u6302\uff0c\u5f53\u5728X\uff0cY\u548c/\u6216Z\u8f74\u4e0a\u53d7\u5230\u52a0\u901f\u65f6\uff0c\u591a\u6676\u7845\u5f39\u7c27\u53ef\u4ee5\u4f7f\u8be5\u7ed3\u6784\u5728\u4efb\u4f55\u65b9\u5411\u4e0a\u5e73\u7a33\u504f\u8f6c\u3002\u6320\u66f2\u4f1a\u5bfc\u81f4\u56fa\u5b9a\u677f\u548c\u8fde\u63a5\u5230\u60ac\u6302\u7ed3\u6784\u7684\u677f\u4e4b\u95f4\u7684\u7535\u5bb9\u53d1\u751f\u53d8\u5316\u3002\u6bcf\u4e2a\u8f74\u4e0a\u7684\u7535\u5bb9\u53d8\u5316\u90fd\u4f1a\u8f6c\u6362\u4e3a\u4e0e\u8be5\u8f74\u4e0a\u7684\u52a0\u901f\u5ea6\u6210\u6bd4\u4f8b\u7684\u8f93\u51fa\u7535\u538b\u3002 https://learn.adafruit.com/assets/6359 \u7ec4\u88c5\u4e0e\u63a5\u7ebf https://learn.adafruit.com/assets/6362 \u8bc4\u4f30\u677f\u5e26\u6709\u6240\u6709\u9884\u710a\u63a5\u7684\u8868\u9762\u5b89\u88c5\u7ec4\u4ef6\u3002\u968f\u9644\u7684\u63a5\u5934\u677f\u53ef\u4ee5\u710a\u63a5\uff0c\u4ee5\u4fbf\u5728\u9762\u5305\u677f\u4e0a\u6216\u5e26\u67090.1\u82f1\u5bf8\u8fde\u63a5\u5668\u7684\u60c5\u51b5\u4e0b\u65b9\u4fbf\u4f7f\u7528\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u627f\u53d7\u6781\u9ad8\u52a0\u901f\u5ea6\uff0c\u51b2\u51fb\u6216\u632f\u52a8\u7684\u5e94\u7528\uff0c\u5efa\u8bae\u4f7f\u7528\u9501\u5b9a\u8fde\u63a5\u5668\u6216\u76f4\u63a5\u710a\u63a5\u3002 \u90e8\u4ef6\uff1a \u653e\u7f6e\u6807\u9898\uff1a\u5982\u6709\u5fc5\u8981\uff0c\u5c06\u9875\u7709\u5207\u6210\u9002\u5f53\u7684\u5927\u5c0f\u3002\u7136\u540e\u5c06\u63d2\u5934\uff08\u957f\u9488\u5411\u4e0b\uff09\u63d2\u5165\u9762\u5305\u677f\uff0c\u4ee5\u7a33\u5b9a\u5176\u710a\u63a5\u6027\u3002 \u6dfb\u52a0\u5206\u7ec4\u8ba8\u8bba\uff1a\u5bf9\u9f50\u5206\u7ebf\u677f\uff0c\u5e76\u5c06\u5176\u653e\u5728\u9762\u5305\u677f\u4e0a\u7684\u6392\u9488\u4e0a\u3002 \u8fd8\u6709\u710a\u9521\uff01\u786e\u4fdd\u710a\u63a5\u6240\u6709\u5f15\u811a\u4ee5\u786e\u4fdd\u826f\u597d\u7684\u7535\u6c14\u63a5\u89e6\u3002 I2C\u63a5\u7ebf\uff1a ADXL345\u5206\u652f\u7684I2C\u5730\u5740\u4e3a0x53\u3002\u53ea\u8981\u6bcf\u4e2a\u8bbe\u5907\u5177\u6709\u552f\u4e00\u7684\u5730\u5740\uff0c\u5b83\u5c31\u53ef\u4ee5\u4e0e\u5176\u4ed6I2C\u8bbe\u5907\u5171\u4eabI2C\u603b\u7ebf\u3002I2C\u901a\u4fe1\u4ec5\u9700\u89814\u4e2a\u8fde\u63a5\uff1a GND->GND VIN->+5v SDA->SDA (GPIO 21) SCL->SCL (GPIO 22) Adafruit\u5206\u652f\u5177\u6709\u7535\u5e73\u8f6c\u6362\u548c\u8c03\u8282\u7535\u8def\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4ece3-5V\u4f9b\u7535\uff0c\u5e76\u4e3ai2c\u4f7f\u75283V\u62165V\u903b\u8f91\u7535\u5e73 https://learn.adafruit.com/assets/6366 \u7f16\u7a0b\u548c\u6821\u51c6 \u5b89\u88c5\u5e93\uff1a \u4e0b\u8f7d ADXL345\u5e93 \u5e76\u5b89\u88c5\u5b83\u3002\u5982\u679c\u5c1a\u672a\u5b89\u88c5 Adafruit\u4f20\u611f\u5668\u5e93\uff0c \u5219\u4e5f\u5c06\u9700\u8981\u5b83\u3002 \u672c\u6307\u5357 \u5c06\u5e2e\u52a9\u60a8\u5b8c\u6210\u5b89\u88c5\u8fc7\u7a0b\u3002 \u6d4b\u8bd5\uff1a \u5355\u51fb\u201cFile->Examples->Adafruit_ADXL345->sensortest\u201d\u4ee5\u4ece\u5e93\u4e2d\u52a0\u8f7d\u793a\u4f8b\u3002 #include <Wire.h> #include <Adafruit_Sensor.h> #include <Adafruit_ADXL345_U.h> /* Assign a unique ID to this sensor at the same time */ Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified ( 12345 ); void displaySensorDetails ( void ) { sensor_t sensor ; accel . getSensor ( & sensor ); Serial . println ( \"------------------------------------\" ); Serial . print ( \"Sensor: \" ); Serial . println ( sensor . name ); Serial . print ( \"Driver Ver: \" ); Serial . println ( sensor . version ); Serial . print ( \"Unique ID: \" ); Serial . println ( sensor . sensor_id ); Serial . print ( \"Max Value: \" ); Serial . print ( sensor . max_value ); Serial . println ( \" m/s^2\" ); Serial . print ( \"Min Value: \" ); Serial . print ( sensor . min_value ); Serial . println ( \" m/s^2\" ); Serial . print ( \"Resolution: \" ); Serial . print ( sensor . resolution ); Serial . println ( \" m/s^2\" ); Serial . println ( \"------------------------------------\" ); Serial . println ( \"\" ); delay ( 500 ); } void displayDataRate ( void ) { Serial . print ( \"Data Rate: \" ); switch ( accel . getDataRate ()) { case ADXL345_DATARATE_3200_HZ : Serial . print ( \"3200 \" ); break ; case ADXL345_DATARATE_1600_HZ : Serial . print ( \"1600 \" ); break ; case ADXL345_DATARATE_800_HZ : Serial . print ( \"800 \" ); break ; case ADXL345_DATARATE_400_HZ : Serial . print ( \"400 \" ); break ; case ADXL345_DATARATE_200_HZ : Serial . print ( \"200 \" ); break ; case ADXL345_DATARATE_100_HZ : Serial . print ( \"100 \" ); break ; case ADXL345_DATARATE_50_HZ : Serial . print ( \"50 \" ); break ; case ADXL345_DATARATE_25_HZ : Serial . print ( \"25 \" ); break ; case ADXL345_DATARATE_12_5_HZ : Serial . print ( \"12.5 \" ); break ; case ADXL345_DATARATE_6_25HZ : Serial . print ( \"6.25 \" ); break ; case ADXL345_DATARATE_3_13_HZ : Serial . print ( \"3.13 \" ); break ; case ADXL345_DATARATE_1_56_HZ : Serial . print ( \"1.56 \" ); break ; case ADXL345_DATARATE_0_78_HZ : Serial . print ( \"0.78 \" ); break ; case ADXL345_DATARATE_0_39_HZ : Serial . print ( \"0.39 \" ); break ; case ADXL345_DATARATE_0_20_HZ : Serial . print ( \"0.20 \" ); break ; case ADXL345_DATARATE_0_10_HZ : Serial . print ( \"0.10 \" ); break ; default : Serial . print ( \"???? \" ); break ; } Serial . println ( \" Hz\" ); } void displayRange ( void ) { Serial . print ( \"Range: +/- \" ); switch ( accel . getRange ()) { case ADXL345_RANGE_16_G : Serial . print ( \"16 \" ); break ; case ADXL345_RANGE_8_G : Serial . print ( \"8 \" ); break ; case ADXL345_RANGE_4_G : Serial . print ( \"4 \" ); break ; case ADXL345_RANGE_2_G : Serial . print ( \"2 \" ); break ; default : Serial . print ( \"?? \" ); break ; } Serial . println ( \" g\" ); } void setup ( void ) { #ifndef ESP8266 while ( ! Serial ); // for Leonardo/Micro/Zero #endif Serial . begin ( 115200 ); Serial . println ( \"Accelerometer Test\" ); Serial . println ( \"\" ); /* Initialise the sensor */ if ( ! accel . begin ()) { /* There was a problem detecting the ADXL345 ... check your connections */ Serial . println ( \"Ooops, no ADXL345 detected ... Check your wiring!\" ); while ( 1 ); } /* Set the range to whatever is appropriate for your project */ accel . setRange ( ADXL345_RANGE_16_G ); // accel.setRange(ADXL345_RANGE_8_G); // accel.setRange(ADXL345_RANGE_4_G); // accel.setRange(ADXL345_RANGE_2_G); /* Display some basic information on this sensor */ displaySensorDetails (); /* Display additional settings (outside the scope of sensor_t) */ displayDataRate (); displayRange (); Serial . println ( \"\" ); } void loop ( void ) { /* Get a new sensor event */ sensors_event_t event ; accel . getEvent ( & event ); /* Display the results (acceleration is measured in m/s^2) */ Serial . print ( \"X: \" ); Serial . print ( event . acceleration . x ); Serial . print ( \" \" ); Serial . print ( \"Y: \" ); Serial . print ( event . acceleration . y ); Serial . print ( \" \" ); Serial . print ( \"Z: \" ); Serial . print ( event . acceleration . z ); Serial . print ( \" \" ); Serial . println ( \"m/s^2 \" ); delay ( 10 ); } \u7136\u540e\u5355\u51fb\u7f16\u8bd1/\u4e0a\u4f20\u6309\u94ae\u8fdb\u884c\u7f16\u8bd1\u5e76\u5c06\u7a0b\u5e8f\u4e0a\u4f20\u5230Arduino\u3002\u60a8\u5e94\u8be5\u770b\u5230\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7684\u8f93\u51fa\u3002\u89c2\u5bdf\u79fb\u52a8\u5f00\u53d1\u677f\u65f6\u503c\u7684\u53d8\u5316\u3002 \u6821\u51c6\uff1a ADXL\u82af\u7247\u5728\u5de5\u5382\u5df2\u6821\u51c6\u81f3\u8db3\u4ee5\u6ee1\u8db3\u5927\u591a\u6570\u7528\u9014\u7684\u7cbe\u5ea6\u6c34\u5e73\u3002\u5bf9\u4e8e\u8981\u6c42\u66f4\u9ad8\u7cbe\u786e\u5ea6\u7684\u5173\u952e\u5e94\u7528\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u81ea\u5df1\u91cd\u65b0\u6821\u51c6\u4f20\u611f\u5668\u3002 \u6821\u51c6\u4e0d\u4f1a\u6539\u53d8\u4f20\u611f\u5668\u7684\u8f93\u51fa\u3002\u4f46\u662f\uff0c\u5b83\u544a\u8bc9\u60a8\u5728\u6bcf\u4e2a\u8f74\u4e0a\u4e24\u4e2a\u65b9\u5411\u4e0a\u5df2\u77e5\u7684\u7a33\u5b9a\u53c2\u8003\u529b\u4e0b\u4f20\u611f\u5668\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\u3002\u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\uff0c\u60a8\u53ef\u4ee5\u4ece\u4f20\u611f\u5668\u8bfb\u6570\u8ba1\u7b97\u51fa\u6821\u6b63\u540e\u7684\u8f93\u51fa\u3002 \u91cd\u529b\u4f5c\u4e3a\u6821\u51c6\u53c2\u8003 \u52a0\u901f\u5ea6\u53ef\u4ee5\u4ee5\u91cd\u529b\u6216\u201c G\u201d\u4e3a\u5355\u4f4d\u8fdb\u884c\u6d4b\u91cf\uff0c\u5176\u4e2d1G\u8868\u793a\u5728\u5730\u7403\u8868\u9762\u7684\u91cd\u529b\u3002\u91cd\u529b\u662f\u4e00\u4e2a\u76f8\u5bf9\u7a33\u5b9a\u7684\u529b\uff0c\u53ef\u4e3a\u5730\u9762\u4f4f\u5b85\u7684\u63a5\u5730\u63d0\u4f9b\u65b9\u4fbf\u548c\u53ef\u9760\u7684\u6821\u51c6\u53c2\u8003\u3002 \u6821\u51c6\u65b9\u6cd5\uff1a \u8981\u5c06\u4f20\u611f\u5668\u6821\u51c6\u4e3a\u91cd\u529b\u53c2\u8003\uff0c\u9700\u8981\u786e\u5b9a\u6bcf\u4e2a\u8f74\u4e0e\u91cd\u529b\u62c9\u529b\u8f74\u7cbe\u786e\u5bf9\u51c6\u65f6\u7684\u4f20\u611f\u5668\u8f93\u51fa\u3002\u5b9e\u9a8c\u5ba4\u8d28\u91cf\u6821\u51c6\u4f7f\u7528\u7cbe\u5bc6\u5b9a\u4f4d\u5939\u5177\u3002\u8fd9\u91cc\u63cf\u8ff0\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u4ec5\u7528\u4e00\u5757\u6728\u5934\u5c31\u80fd\u83b7\u5f97\u4ee4\u4eba\u60ca\u8bb6\u7684\u597d\u7ed3\u679c\u3002 \u5b89\u88c5\u4f20\u611f\u5668\uff1a \u9996\u5148\u5c06\u4f20\u611f\u5668\u7262\u56fa\u5730\u5b89\u88c5\u5728\u6a21\u5757\u6216\u76d2\u5b50\u4e0a\u3002\u53ea\u8981\u6240\u6709\u4fa7\u9762\u6210\u76f4\u89d2\uff0c\u5927\u5c0f\u90fd\u4e0d\u91cd\u8981\u3002\u8be5\u6750\u6599\u5e76\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u5b83\u76f8\u5f53\u575a\u786c\u5373\u53ef\u3002 \u52a0\u8f7d\u6821\u51c6\u8349\u56fe\uff1a \u52a0\u8f7d\u5e76\u8fd0\u884c\u4e0b\u9762\u7684\u6821\u51c6\u8349\u56fe\u3002\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u7136\u540e\u7b49\u5f85\u63d0\u793a\u3002 \u5b9a\u4f4d\u5757\uff1a \u5c06\u5757\u653e\u7f6e\u5728\u575a\u56fa\u7684\u5e73\u9762\u4e0a\uff0c\u4f8b\u5982\u575a\u56fa\u7684\u684c\u5b50\u4e0a\u3002\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e2d\u952e\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u6309\u56de\u8f66\u952e\u3002\u8349\u56fe\u5c06\u5728\u8be5\u8f74\u4e0a\u8fdb\u884c\u6d4b\u91cf\u5e76\u6253\u5370\u7ed3\u679c\u3002 \u91cd\u65b0\u5b9a\u4f4d\u5757\uff1a\u65cb\u8f6c\u5757\uff0c\u4f7f\u684c\u5b50\u7684\u53e6\u4e00\u4fa7\u5e73\u5766\uff0c\u7136\u540e\u952e\u5165\u53e6\u4e00\u4e2a\u952e\u4ee5\u6d4b\u91cf\u8be5\u8f74\u3002 \u91cd\u590d\uff1a\u5bf9\u5757\u7684\u6240\u6709\u516d\u4e2a\u4fa7\u9762\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u4ee5\u6d4b\u91cf\u6bcf\u4e2a\u8f74\u7684\u6b63\u5411\u548c\u8d1f\u5411\u3002 \uff08\u6697\u793a\uff1a\uff09 \u5bf9\u4e8e\u88ab\u5206\u7ebf\u677f\u548c/\u6216\u7535\u7ebf\u963b\u585e\u7684\u4fa7\u9762\uff0c\u5728\u8bfb\u53d6\u6570\u636e\u7684\u540c\u65f6\u5c06\u6a21\u5757\u5411\u4e0a\u538b\u5728\u684c\u5b50\u5e95\u90e8\u3002 \u6821\u51c6\u7ed3\u679c\uff1a \u4e00\u65e6\u5bf9\u6240\u6709\u516d\u4e2a\u9762\u8fdb\u884c\u4e86\u91c7\u6837\uff0c\u4e32\u884c\u76d1\u89c6\u5668\u4e2d\u6253\u5370\u7684\u503c\u5c06\u4ee3\u8868\u6bcf\u4e2a\u8f74\u4e0a+/- 1G\u529b\u7684\u5b9e\u9645\u6d4b\u91cf\u503c\u3002\u8fd9\u4e9b\u503c\u53ef\u7528\u4e8e\u91cd\u65b0\u7f29\u653e\u8bfb\u6570\uff0c\u4ee5\u63d0\u9ad8\u51c6\u786e\u6027\u3002 \u6821\u51c6\u8349\u56fe\uff1a #include <Wire.h> #include <Adafruit_Sensor.h> #include <Adafruit_ADXL345_U.h> /* Assign a unique ID to this sensor at the same time */ Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified ( 12345 ); float AccelMinX = 0 ; float AccelMaxX = 0 ; float AccelMinY = 0 ; float AccelMaxY = 0 ; float AccelMinZ = 0 ; float AccelMaxZ = 0 ; void setup ( void ) { Serial . begin ( 9600 ); Serial . println ( \"ADXL345 Accelerometer Calibration\" ); Serial . println ( \"\" ); /* Initialise the sensor */ if ( ! accel . begin ()) { /* There was a problem detecting the ADXL345 ... check your connections */ Serial . println ( \"Ooops, no ADXL345 detected ... Check your wiring!\" ); while ( 1 ); } } void loop ( void ) { Serial . println ( \"Type key when ready...\" ); while ( ! Serial . available ()){} // wait for a character /* Get a new sensor event */ sensors_event_t accelEvent ; accel . getEvent ( & accelEvent ); if ( accelEvent . acceleration . x < AccelMinX ) AccelMinX = accelEvent . acceleration . x ; if ( accelEvent . acceleration . x > AccelMaxX ) AccelMaxX = accelEvent . acceleration . x ; if ( accelEvent . acceleration . y < AccelMinY ) AccelMinY = accelEvent . acceleration . y ; if ( accelEvent . acceleration . y > AccelMaxY ) AccelMaxY = accelEvent . acceleration . y ; if ( accelEvent . acceleration . z < AccelMinZ ) AccelMinZ = accelEvent . acceleration . z ; if ( accelEvent . acceleration . z > AccelMaxZ ) AccelMaxZ = accelEvent . acceleration . z ; Serial . print ( \"Accel Minimums: \" ); Serial . print ( AccelMinX ); Serial . print ( \" \" ); Serial . print ( AccelMinY ); Serial . print ( \" \" ); Serial . print ( AccelMinZ ); Serial . println (); Serial . print ( \"Accel Maximums: \" ); Serial . print ( AccelMaxX ); Serial . print ( \" \" ); Serial . print ( AccelMaxY ); Serial . print ( \" \" ); Serial . print ( AccelMaxZ ); Serial . println (); while ( Serial . available ()) { Serial . read (); // clear the input buffer } } \u5178\u578b\u6821\u51c6\u8f93\u51fa\uff1a \u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 ADXL345 \u52a0\u901f\u5ea6\u8ba1\u6821\u51c6 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u52a0\u901f\u6700\u5c0f\u503c\uff1a0.00 0.00 0.00 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 0.20 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u52a0\u901f\u6700\u5c0f\u503c\uff1a0.00 0.00 0.00 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 0.20 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u52a0\u901f\u6700\u5c0f\u503c\uff1a0.00 0.00 0.00 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 0.20 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u52a0\u901f\u6700\u5c0f\u503c\uff1a0.00 0.00 0.00 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 0.20 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a0.00 0.00 - 0.24 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a0.00 0.00 - 0.24 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a0.00 - 1.22 - 0.27 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a0.00 - 1.22 - 0.27 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a- 1.18 - 1.22 - 0.27 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e... \u6821\u51c6\u8349\u56fe\u7684\u7ed3\u679c\u53ef\u7528\u4e8e\u8fdb\u884c\u4e24\u70b9\u6821\u51c6\uff0c\u5982\u4e0b\u6240\u8ff0\uff1a \u4e24\u70b9\u6821\u51c6 \u56fe\u4e66\u9986\u53c2\u8003 \u6784\u9020\u51fd\u6570\uff1a Adafruit_ADXL345(int32_t sensorID = -1) \u6784\u9020ADXL345\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5bf9\u8c61\u7684\u5b9e\u4f8b\u3002\u201c sensorID\u201d\u662f\u8bbe\u5907\u6807\u8bc6\u7b26\u3002\u5728\u6bcf\u6b21\u8c03\u7528getEvent\uff08\uff09\u65f6\uff0c\u5b83\u5c06\u5728sensor_event\u4e2d\u8fd4\u56de\u8be5\u503c\u3002sensorID\u5bf9\u9a71\u52a8\u7a0b\u5e8f\u6216\u8bbe\u5907\u7684\u64cd\u4f5c\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u5728\u7ba1\u7406\u5177\u6709\u591a\u4e2a\u4f20\u611f\u5668\u7684\u7cfb\u7edf\u4e2d\u7684\u4f20\u611f\u5668\u4e8b\u4ef6\u65f6\u5f88\u6709\u7528\u3002 \u521d\u59cb\u5316\uff08\uff09 bool begin(void) begin\uff08\uff09\u51fd\u6570\u521d\u59cb\u5316\u4e0e\u8bbe\u5907\u7684\u901a\u4fe1\u3002\u5982\u679c\u6210\u529f\u8fde\u63a5\u5230ADXL345\uff0c\u5219\u8fd4\u56de\u503c\u4e3a\u201c true\u201d\u3002 \u4f20\u611f\u5668\u8be6\u7ec6\u4fe1\u606f\uff1a \u65e0\u6548\u7684getSensor\uff08sensor_t *\uff09; getSensor\uff08\uff09\u51fd\u6570\u8fd4\u56de\u6709\u5173\u4f20\u611f\u5668\u7684\u57fa\u672c\u4fe1\u606f\u3002\u6709\u5173sensor_t\u7ed3\u6784\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605Adafruit Sensor Library \u7684 \u81ea\u8ff0\u6587\u4ef6 \u3002 \u83b7\u53d6\u5e76\u8bbe\u7f6e\u5de5\u4f5c\u8303\u56f4\uff1a void setRange\uff08range_t range\uff09 setRange\uff08\uff09\u51fd\u6570\u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u64cd\u4f5c\u8303\u56f4\u3002\u503c\u8d8a\u9ad8\uff0c\u6d4b\u91cf\u8303\u56f4\u8d8a\u5e7f\u3002\u8f83\u4f4e\u7684\u503c\u5c06\u5177\u6709\u66f4\u9ad8\u7684\u7075\u654f\u5ea6\u3002 \u6709\u6548\u8303\u56f4\u5e38\u6570\u662f\uff1a ADXL345_RANGE_16_G ADXL345_RANGE_8_G ADXL345_RANGE_4_G ADXL345_RANGE_2_G (default value) range_t getRange\uff08void\uff09; getRange\uff08\uff09\u51fd\u6570\u8fd4\u56de\u7531setRange\uff08\uff09\u8bbe\u7f6e\u7684\u5f53\u524d\u64cd\u4f5c\u8303\u56f4 \u83b7\u53d6\u548c\u8bbe\u7f6e\u6570\u636e\u901f\u7387\uff1a void setDataRate\uff08dataRate_t dataRate\uff09; setDataRate\uff08\uff09\u51fd\u6570\u8bbe\u7f6e\u4f20\u611f\u5668\u8f93\u51fa\u66f4\u65b0\u7684\u901f\u7387\u3002\u9ad8\u4e8e100 Hz\u7684\u901f\u7387\u5c06\u663e\u793a\u589e\u52a0\u7684\u566a\u58f0\u3002\u4f4e\u4e8e6.25 Hz\u7684\u901f\u7387\u5c06\u5bf9\u6e29\u5ea6\u53d8\u5316\u66f4\u52a0\u654f\u611f\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6570\u636e\u8868 \u3002 \u6709\u6548\u6570\u636e\u901f\u7387\u5e38\u6570\u4e3a\uff1a ADXL345_DATARATE_3200_HZ ADXL345_DATARATE_1600_HZ ADXL345_DATARATE_800_HZ ADXL345_DATARATE_400_HZ ADXL345_DATARATE_200_HZ ADXL345_DATARATE_100_HZ ADXL345_DATARATE_50_HZ ADXL345_DATARATE_25_HZ ADXL345_DATARATE_12_5_HZ ADXL345_DATARATE_6_25HZ ADXL345_DATARATE_3_13_HZ ADXL345_DATARATE_1_56_HZ ADXL345_DATARATE_0_78_HZ ADXL345_DATARATE_0_39_HZ ADXL345_DATARATE_0_20_HZ ADXL345_DATARATE_0_10_HZ \uff08\u9ed8\u8ba4\u503c\uff09 dataRate_t getDataRate\uff08void\uff09; getDataRate\uff08\uff09\u51fd\u6570\u8fd4\u56de\u7531setDataRate\uff08\uff09\u8bbe\u7f6e\u7684\u5f53\u524d\u6570\u636e\u901f\u7387\u3002 \u8bfb\u53d6\u4f20\u611f\u5668\u4e8b\u4ef6\uff1a void getEvent(sensors_event_t*); getEvent\uff08\uff09\u51fd\u6570\u4ee5sensor_event\u7684\u5f62\u5f0f\u8fd4\u56de\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684\u8bfb\u6570\u3002sensor_event\u5305\u542b\u4f20\u9012\u7ed9\u6784\u9020\u51fd\u6570\u7684sensor_id\u4ee5\u53ca\u6765\u81ea\u52a0\u901f\u5ea6\u8ba1\u7684X\uff0cY\u548cZ\u8f74\u8bfb\u6570\u3002\u6709\u5173sensor_events\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1Adafruit Sensor Library \u7684 \u81ea\u8ff0\u6587\u4ef6 \u3002 Python\u548cCircuitPython \u5361\u7279\u5c3c\u00b7\u4f26\u535a \u5c06ADXL343\u6216ADXL345\u4e0ePython\u548cCircuitPython\u4ee5\u53ca Adafruit CircuitPython ADXL34x \u6a21\u5757\u4e00\u8d77\u4f7f\u7528\u5f88\u5bb9\u6613\u3002\u8be5\u6a21\u5757\u4f7f\u60a8\u53ef\u4ee5\u8f7b\u677e\u7f16\u5199Python\u4ee3\u7801\uff0c\u4ee5\u8bfb\u53d6\u7a81\u7834\u4e2d\u7684\u52a0\u901f\u5ea6\uff0c\u6572\u51fb\uff0c\u8fd0\u52a8\u7b49\u4fe1\u606f\u3002 \u7531\u4e8e\u6211\u4eec\u7684CircuitPython-for-Python\u517c\u5bb9\u6027\u5e93Adafruit_Blinka\uff0c \u60a8\u53ef\u4ee5\u5c06\u6b64\u4f20\u611f\u5668\u4e0e\u4efb\u4f55CircuitPython\u5fae\u63a7\u5236\u5668\u677f\u6216\u5177\u6709GPIO\u548cPython\u7684\u8ba1\u7b97\u673a\u4e00\u8d77\u4f7f\u7528\u3002 ADXL343\u548cADXL345\u4e0a\u7684\u5f15\u811a\u6392\u5217\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u82af\u7247\u57fa\u672c\u76f8\u540c\u3002\u6b64\u9875\u9762\u5305\u62ec\u6bcf\u4e2a\u63a5\u7ebf\u56fe\u7684\u4e0d\u540c\u63a5\u7ebf\u56fe\u3002\u9664\u4e86\u521d\u59cb\u5316\u9002\u5f53\u7684\u82af\u7247\u5916\uff0c\u4e24\u8005\u7684\u4ee3\u7801\u90fd\u76f8\u540c\uff01 CircuitPython\u5fae\u63a7\u5236\u5668\u63a5\u7ebf \u9996\u5148\uff0c\u5b8c\u5168\u6309\u7167\u4e0a\u4e00\u9875\u4e2d\u7684\u8bf4\u660e\u63a5\u7ebf\u3002\u8fd9\u662f\u5c06ADXL343\u8fde\u63a5\u5230\u7fbd\u6bdbM0\u7684\u793a\u4f8b\uff1a \u8fde\u63a5 SCL \u4e0a\u7684\u7fbd\u6bdb\uff0c\u4ee5 SCL \u7684ADXL343\u8fde\u63a5 SDA \u7684\u7fbd\u6bdb SDA \u7684ADXL343\u8fde\u63a5 GND \u7684\u7fbd\u6bdb\u5230 GND \u7684ADXL343\u8fde\u63a5 3.3V \u7684\u7fbd\u6bdb\u5230 VIN \u7684ADXL343 \u4e0b\u9762\u662f\u5c06ADXL345\u8fde\u63a5\u5230Feather M0\u7684\u793a\u4f8b\uff1a \u8fde\u63a5 SCL \u4e0a\u7684\u7fbd\u6bdb\uff0c\u4ee5 SCL \u7684ADXL345\u8fde\u63a5 SDA \u7684\u7fbd\u6bdb SDA \u7684ADXL345\u8fde\u63a5 GND \u7684\u7fbd\u6bdb\u5230 GND \u7684ADXL345\u5c06\u7fbd\u6bdb\u4e0a\u7684 3.3V \u8fde\u63a5 \u5230 ADXL345\u4e0a\u7684 VIN Python\u7535\u8111\u63a5\u7ebf \u7531\u4e8e \u60a8\u53ef\u4ee5\u4f7f\u7528 \u6570\u5341\u79cd Linux\u8ba1\u7b97\u673a/\u4e3b\u677f\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5c55\u793aRaspberry Pi\u7684\u63a5\u7ebf\u3002\u5bf9\u4e8e\u5176\u4ed6\u5e73\u53f0\uff0c \u8bf7\u8bbf\u95eeLinux\u4e0aCircuitPython\u6307\u5357\uff0c\u4ee5\u4e86\u89e3\u60a8\u7684\u5e73\u53f0\u662f\u5426\u53d7\u652f\u6301 \u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u8fde\u63a5\u5230ADXL343\u7684Raspberry Pi\uff1a \u8fde\u63a5 SCL \u7684RPI\u5230 SCL \u7684ADXL343\u8fde\u63a5 SDA \u4e0a\u7684RPI SDA \u7684ADXL343\u8fde\u63a5 GND \u4e0a\u7684RPI GND \u7684ADXL343\u8fde\u63a5 3.3V \u4e0a\u7684RPI VIN \u7684ADXL343 \u4e0b\u56fe\u663e\u793a\u4e86\u8fde\u63a5\u5230ADXL345\u7684Raspberry Pi\uff1a \u8fde\u63a5 SCL \u7684RPI\u5230 SCL \u7684ADXL345\u8fde\u63a5 SDA \u7684RPI\u5230 SDA \u7684ADXL345\u8fde\u63a5 GND \u7684RPI\u5230 GND \u7684ADXL345\u5c06RPi\u4e0a\u7684 3.3V \u8fde\u63a5 \u5230ADXL345\u4e0a\u7684 VIN \u5e93\u5b89\u88c5 \u60a8\u9700\u8981\u5728CircuitPython\u677f\u4e0a\u5b89\u88c5 Adafruit CircuitPython ADXL34x \u5e93\u3002 \u9996\u5148\uff0c\u8bf7\u786e\u4fdd \u4e3a\u60a8\u7684\u7535\u8def\u677f\u8fd0\u884c \u6700\u65b0\u7248\u672c\u7684Adafruit CircuitPython \u3002 \u63a5\u4e0b\u6765\uff0c\u60a8\u9700\u8981\u5b89\u88c5\u5fc5\u8981\u7684\u5e93\u4ee5\u4f7f\u7528\u786c\u4ef6-\u4ed4\u7ec6\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4ece Adafruit\u7684CircuitPython\u5e93\u6346\u7ed1\u5305\u4e2d \u67e5\u627e\u548c\u5b89\u88c5\u8fd9\u4e9b\u5e93 \u3002\u6211\u4eec\u7684CircuitPython\u5165\u95e8\u6307\u5357\u4e0a\u6709 \u4e00\u4e2a\u5f88\u68d2\u7684\u9875\u9762\uff0c\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5\u5e93\u5305 \u3002 \u5bf9\u4e8eTrinket M0\u6216Gemma M0\u7b49\u975e\u8868\u8fbe\u677f\uff0c\u60a8\u9700\u8981\u4ece\u6346\u7ed1\u5305\u4e2d\u624b\u52a8\u5b89\u88c5\u5fc5\u8981\u7684\u5e93\uff1a adafruit_adxl34x.mpy adafruit_bus_device \u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5f00\u53d1\u677f\u7684lib\u6587\u4ef6\u5939\u6216\u6839\u6587\u4ef6\u7cfb\u7edf\u5df2 \u590d\u5236\u4e86 adafruit_adxl34x.mpy \u548c adafruit_bus_device \u6587\u4ef6\u548c\u6587\u4ef6\u5939 \u3002 \u63a5\u4e0b\u6765\uff0c \u8fde\u63a5\u5230\u5f00\u53d1\u677f\u7684\u4e32\u884cREPL\uff0c \u4ee5\u4fbf\u60a8\u5728CircuitPython >>> \u63d0\u793a\u7b26\u4e0b\u3002 ADXL34x\u5e93\u7684Python\u5b89\u88c5 \u60a8\u9700\u8981\u5b89\u88c5 Adafruit_Blinka \u5e93\uff0c\u8be5\u5e93\u5728Python\u4e2d\u63d0\u4f9b\u4e86CircuitPython\u652f\u6301\u3002\u8fd9\u53ef\u80fd\u8fd8\u9700\u8981\u5728\u60a8\u7684\u5e73\u53f0\u4e0a\u542f\u7528I2C\u5e76\u9a8c\u8bc1\u60a8\u6b63\u5728\u8fd0\u884c Python3 \u3002 \u7531\u4e8e\u6bcf\u4e2a\u5e73\u53f0\u90fd\u6709\u6240\u4e0d\u540c\uff0c\u5e76\u4e14Linux\u7ecf\u5e38\u66f4\u6539\uff0c\u8bf7\u8bbf\u95eeLinux\u4e0a\u7684CircuitPython\u6307\u5357\u4ee5\u4f7f\u60a8\u7684\u8ba1\u7b97\u673a\u51c6\u5907\u5c31\u7eea \uff01 \u5b8c\u6210\u540e\uff0c\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a sudo pip3 install adafruit-circuitpython-adxl34x \u5982\u679c\u60a8\u7684\u9ed8\u8ba4Python\u662f\u7248\u672c3\uff0c\u5219\u53ef\u80fd\u9700\u8981\u8fd0\u884c\u201c pip\u201d\u3002\u53ea\u8981\u786e\u4fdd\u60a8\u4e0d\u5c1d\u8bd5\u5728Python 2.x\u4e0a\u4f7f\u7528CircuitPython\uff0c\u5c31\u4e0d\u652f\u6301\u5b83\uff01 CircuitPython\u548cPython\u7684\u7528\u6cd5 \u4e3a\u4e86\u6f14\u793a\u7a81\u7834\u7684\u7528\u6cd5\uff0c\u6211\u4eec\u5c06\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5e76\u4ece\u5f00\u53d1\u677f\u7684Python REPL\u4e2d\u8bfb\u53d6\u52a0\u901f\u5ea6\u4ee5\u53ca\u66f4\u591a\u4fe1\u606f\u3002 \u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u5bfc\u5165\u5fc5\u8981\u7684\u6a21\u5757\u5e76\u521b\u5efaI2C\u5bf9\u8c61\uff1a \u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 \u5bfc\u5165\u65f6\u95f4\u8fdb\u53e3\u677f\u8fdb\u53e3\u4e1a\u52a1\u5bfc\u5165adafruit_adxl34x i2c = busio \u3002 I2C \uff08 \u677f \u3002 SCL \uff0c \u677f \u3002 SDA \uff09 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f ADXL343 \uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u4f7f\u7528 \u4e2d\u65ad \u521d\u59cb\u5316I2C\u8fde\u63a5\uff1a \u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 \u52a0\u901f\u5ea6\u8ba1 = adafruit_adxl34x \u3002 ADXL343 \uff08 i2c \uff09 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f ADXL345 \uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u4f7f\u7528 \u4e2d\u65ad \u521d\u59cb\u5316I2C\u8fde\u63a5\uff1a \u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 \u52a0\u901f\u5ea6\u8ba1 = adafruit_adxl34x \u3002 ADXL345 \uff08 i2c \uff09 \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4efb\u4f55\u4e00\u79cd\u65b9\u6cd5\u4ece\u7a81\u7834\u4e2d\u8bfb\u53d6\u503c\u5e76\u542f\u7528\u5176\u529f\u80fd\uff1a \u52a0\u901f\u5ea6 -x\uff0cy\u548cz\u8f74\u4e0a\u7684\u52a0\u901f\u5ea6\u503c enable_motion_detection- \u542f\u7528\u8fd0\u52a8\u68c0\u6d4b\u3002\u5141\u8bb8\u8bbe\u7f6e\u9608\u503c\u3002\u9608\u503c\u9ed8\u8ba4\u4e3a18\u3002 enable_tap_detection- \u542f\u7528\u70b9\u51fb\u68c0\u6d4b\u3002\u5141\u8bb8\u5355\u51fb\u6216\u53cc\u51fb\u68c0\u6d4b\u3002 enable_freefall_detection- \u542f\u7528\u81ea\u7531\u843d\u4f53\u68c0\u6d4b\u3002\u5141\u8bb8\u8bbe\u7f6e\u9608\u503c\u548c\u65f6\u95f4\u3002\u9608\u503c\u9ed8\u8ba4\u4e3a10\uff0c\u65f6\u95f4\u9ed8\u8ba4\u4e3a25\u3002 \u4e8b\u4ef6 -\u7528\u4e8e\u5728\u542f\u7528\u8fd0\u52a8\u68c0\u6d4b\uff0c\u6572\u51fb\u68c0\u6d4b\u548c\u81ea\u7531\u843d\u4f53\u68c0\u6d4b\u65f6\u8bfb\u53d6\u4e8b\u4ef6\u3002\u9700\u8981\u6307\u5b9a\u60a8\u5c1d\u8bd5\u8bfb\u53d6\u7684\u4e8b\u4ef6\u3002 \u8981\u6253\u5370\u52a0\u901f\u5ea6\u503c\uff1a \u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 \u800cTrue \uff1a \u6253\u5370 \uff08 \u52a0\u901f\u5ea6\u8ba1 \u3002 \u52a0\u901f\u5ea6 \uff09 \u65f6\u95f4 \u3002 \u7761\u7720 \uff08 0.2 \uff09 \u8fd9\u662f\u4f7f\u7528CircuitPython\u4eceADXL343\u548cADXL345\u8bfb\u53d6\u52a0\u901f\u5ea6\u503c\u7684\u5168\u90e8\u5185\u5bb9\uff01 \u5b8c\u6574\u793a\u4f8b\u4ee3\u7801 \u4e0b\u8f7d\uff1a Project Zip \u6216 adxl34x_simpletest.py | \u5728Github\u4e0a\u67e5\u770b \u590d\u5236\u4ee3\u7801 \u5bfc\u5165\u65f6\u95f4\u8fdb\u53e3\u677f\u8fdb\u53e3\u4e1a\u52a1\u5bfc\u5165adafruit_adxl34x i2c = busio \u3002I2C \uff08\u677f\u3002SCL \uff0c\u677f\u3002SDA \uff09 \uff03\u9002\u7528\u4e8eADXL343\u52a0\u901f\u5ea6\u8ba1= adafruit_adxl34x \u3002ADXL343 \uff08i2c \uff09\uff03\u9002\u7528\u4e8eADXL345\uff03\u52a0\u901f\u5ea6\u8ba1= adafruit_adxl34x.ADXL345\uff08i2c\uff09 \u800cTrue \uff1a \u6253\u5370\uff08\u201c\uff05f\uff05f\uff05f\u201d \uff05\u52a0\u901f\u5ea6\u8ba1\u3002\u52a0\u901f\u5ea6\uff09 \u65f6\u95f4\u3002\u7761\u7720\uff080.2 \uff09 \u8fd0\u52a8\uff0c\u70b9\u51fb\u548c\u81ea\u7531\u843d\u4f53 GitHub\u4e0a\u63d0\u4f9b\u4e86\u542f\u7528\u548c\u4f7f\u7528\u8fd0\u52a8\uff0c\u70b9\u51fb\u548c\u81ea\u7531\u843d\u4f53\u7684\u793a\u4f8b\uff1a ADXL343\u548cADXL345\u4e0a\u7684\u8fd0\u52a8\u68c0\u6d4b ADXL343\u548cADXL345\u4e0a\u7684\u62bd\u5934\u68c0\u6d4b ADXL343\u548cADXL345\u4e0a\u7684\u81ea\u7531\u843d\u4f53\u68c0\u6d4b \u5c06\u4efb\u4f55\u6587\u4ef6\u53e6\u5b58\u4e3a CircuitPython \u677f\u4e0a\u7684code.py\uff0c\u6216\u4eceLinux\u8ba1\u7b97\u673a\u4e0a\u7684Python REPL\u8fd0\u884c\u5b83\u4eec\uff0c\u4ee5\u8fdb\u884c\u5c1d\u8bd5\u3002 \u8d44\u6599\u4e0b\u8f7d \u4e39\u5c3c\u00b7\u8bfa\u68ee\u8bfa\u7ef4\u5179\uff08Danny Nosonowitz\uff09 \u6863\u6848 ADXL345\u6570\u636e\u8868 Adafruit Fritzing\u5e93\u4e2d\u7684Fritzing\u5bf9\u8c61 GitHub\u4e0a\u7684EagleCAD PCB\u6587\u4ef6 \u539f\u7406\u56fe\u548c\u88c5\u914d\u56fe \u672c\u6307\u5357\u4e8e2013\u5e743\u670826\u65e5\u9996\u6b21\u53d1\u5e03\u3002\u6700\u540e\u4e8e2013\u5e743\u670826\u65e5\u66f4\u65b0\u3002","title":"\u603b\u89c8"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_1","text":"ADXL345\u662f\u4e00\u6b3e\u4f4e\u529f\u8017\uff0c\u4e09\u8f74MEMS\u52a0\u901f\u5ea6\u8ba1\u6a21\u5757\uff0c\u5177\u6709I2C\u548cSPI\u63a5\u53e3\u3002\u8fd9\u4e9b\u6a21\u5757\u7684Adafruit Breakout\u677f\u8f7d\u677f\u8f7d3.3v\u7535\u538b\u8c03\u8282\u548c\u7535\u5e73\u8f6c\u6362\u529f\u80fd\uff0c\u4f7f\u5176\u6613\u4e8e\u4e0eArduino\u7b495v\u5fae\u63a7\u5236\u5668\u63a5\u53e3\u3002 ADXL345\u5177\u67094\u79cd\u7075\u654f\u5ea6\u8303\u56f4\uff0c\u4ece+/- 2G\u5230+/- 16G\u3002\u5b83\u652f\u630110Hz\u81f33200Hz\u7684\u8f93\u51fa\u6570\u636e\u901f\u7387\u3002 ADXL345\u6570\u636e\u8868","title":"\u603b\u89c8"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_2","text":"","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#mems-","text":"\u8be5\u4f20\u611f\u5668\u7531\u7845\u6676\u7247\u4e0a\u7684\u5fae\u673a\u68b0\u7ed3\u6784\u7ec4\u6210\u3002\u8be5\u7ed3\u6784\u7531\u591a\u6676\u7845\u5f39\u7c27\u60ac\u6302\uff0c\u5f53\u5728X\uff0cY\u548c/\u6216Z\u8f74\u4e0a\u53d7\u5230\u52a0\u901f\u65f6\uff0c\u591a\u6676\u7845\u5f39\u7c27\u53ef\u4ee5\u4f7f\u8be5\u7ed3\u6784\u5728\u4efb\u4f55\u65b9\u5411\u4e0a\u5e73\u7a33\u504f\u8f6c\u3002\u6320\u66f2\u4f1a\u5bfc\u81f4\u56fa\u5b9a\u677f\u548c\u8fde\u63a5\u5230\u60ac\u6302\u7ed3\u6784\u7684\u677f\u4e4b\u95f4\u7684\u7535\u5bb9\u53d1\u751f\u53d8\u5316\u3002\u6bcf\u4e2a\u8f74\u4e0a\u7684\u7535\u5bb9\u53d8\u5316\u90fd\u4f1a\u8f6c\u6362\u4e3a\u4e0e\u8be5\u8f74\u4e0a\u7684\u52a0\u901f\u5ea6\u6210\u6bd4\u4f8b\u7684\u8f93\u51fa\u7535\u538b\u3002 https://learn.adafruit.com/assets/6359","title":"MEMS-\u5fae\u673a\u7535\u7cfb\u7edf"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_3","text":"https://learn.adafruit.com/assets/6362 \u8bc4\u4f30\u677f\u5e26\u6709\u6240\u6709\u9884\u710a\u63a5\u7684\u8868\u9762\u5b89\u88c5\u7ec4\u4ef6\u3002\u968f\u9644\u7684\u63a5\u5934\u677f\u53ef\u4ee5\u710a\u63a5\uff0c\u4ee5\u4fbf\u5728\u9762\u5305\u677f\u4e0a\u6216\u5e26\u67090.1\u82f1\u5bf8\u8fde\u63a5\u5668\u7684\u60c5\u51b5\u4e0b\u65b9\u4fbf\u4f7f\u7528\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u627f\u53d7\u6781\u9ad8\u52a0\u901f\u5ea6\uff0c\u51b2\u51fb\u6216\u632f\u52a8\u7684\u5e94\u7528\uff0c\u5efa\u8bae\u4f7f\u7528\u9501\u5b9a\u8fde\u63a5\u5668\u6216\u76f4\u63a5\u710a\u63a5\u3002","title":"\u7ec4\u88c5\u4e0e\u63a5\u7ebf"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_4","text":"\u653e\u7f6e\u6807\u9898\uff1a\u5982\u6709\u5fc5\u8981\uff0c\u5c06\u9875\u7709\u5207\u6210\u9002\u5f53\u7684\u5927\u5c0f\u3002\u7136\u540e\u5c06\u63d2\u5934\uff08\u957f\u9488\u5411\u4e0b\uff09\u63d2\u5165\u9762\u5305\u677f\uff0c\u4ee5\u7a33\u5b9a\u5176\u710a\u63a5\u6027\u3002 \u6dfb\u52a0\u5206\u7ec4\u8ba8\u8bba\uff1a\u5bf9\u9f50\u5206\u7ebf\u677f\uff0c\u5e76\u5c06\u5176\u653e\u5728\u9762\u5305\u677f\u4e0a\u7684\u6392\u9488\u4e0a\u3002 \u8fd8\u6709\u710a\u9521\uff01\u786e\u4fdd\u710a\u63a5\u6240\u6709\u5f15\u811a\u4ee5\u786e\u4fdd\u826f\u597d\u7684\u7535\u6c14\u63a5\u89e6\u3002","title":"\u90e8\u4ef6\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#i2c","text":"ADXL345\u5206\u652f\u7684I2C\u5730\u5740\u4e3a0x53\u3002\u53ea\u8981\u6bcf\u4e2a\u8bbe\u5907\u5177\u6709\u552f\u4e00\u7684\u5730\u5740\uff0c\u5b83\u5c31\u53ef\u4ee5\u4e0e\u5176\u4ed6I2C\u8bbe\u5907\u5171\u4eabI2C\u603b\u7ebf\u3002I2C\u901a\u4fe1\u4ec5\u9700\u89814\u4e2a\u8fde\u63a5\uff1a GND->GND VIN->+5v SDA->SDA (GPIO 21) SCL->SCL (GPIO 22) Adafruit\u5206\u652f\u5177\u6709\u7535\u5e73\u8f6c\u6362\u548c\u8c03\u8282\u7535\u8def\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4ece3-5V\u4f9b\u7535\uff0c\u5e76\u4e3ai2c\u4f7f\u75283V\u62165V\u903b\u8f91\u7535\u5e73 https://learn.adafruit.com/assets/6366","title":"I2C\u63a5\u7ebf\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_5","text":"","title":"\u7f16\u7a0b\u548c\u6821\u51c6"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_6","text":"\u4e0b\u8f7d ADXL345\u5e93 \u5e76\u5b89\u88c5\u5b83\u3002\u5982\u679c\u5c1a\u672a\u5b89\u88c5 Adafruit\u4f20\u611f\u5668\u5e93\uff0c \u5219\u4e5f\u5c06\u9700\u8981\u5b83\u3002 \u672c\u6307\u5357 \u5c06\u5e2e\u52a9\u60a8\u5b8c\u6210\u5b89\u88c5\u8fc7\u7a0b\u3002","title":"\u5b89\u88c5\u5e93\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_7","text":"\u5355\u51fb\u201cFile->Examples->Adafruit_ADXL345->sensortest\u201d\u4ee5\u4ece\u5e93\u4e2d\u52a0\u8f7d\u793a\u4f8b\u3002 #include <Wire.h> #include <Adafruit_Sensor.h> #include <Adafruit_ADXL345_U.h> /* Assign a unique ID to this sensor at the same time */ Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified ( 12345 ); void displaySensorDetails ( void ) { sensor_t sensor ; accel . getSensor ( & sensor ); Serial . println ( \"------------------------------------\" ); Serial . print ( \"Sensor: \" ); Serial . println ( sensor . name ); Serial . print ( \"Driver Ver: \" ); Serial . println ( sensor . version ); Serial . print ( \"Unique ID: \" ); Serial . println ( sensor . sensor_id ); Serial . print ( \"Max Value: \" ); Serial . print ( sensor . max_value ); Serial . println ( \" m/s^2\" ); Serial . print ( \"Min Value: \" ); Serial . print ( sensor . min_value ); Serial . println ( \" m/s^2\" ); Serial . print ( \"Resolution: \" ); Serial . print ( sensor . resolution ); Serial . println ( \" m/s^2\" ); Serial . println ( \"------------------------------------\" ); Serial . println ( \"\" ); delay ( 500 ); } void displayDataRate ( void ) { Serial . print ( \"Data Rate: \" ); switch ( accel . getDataRate ()) { case ADXL345_DATARATE_3200_HZ : Serial . print ( \"3200 \" ); break ; case ADXL345_DATARATE_1600_HZ : Serial . print ( \"1600 \" ); break ; case ADXL345_DATARATE_800_HZ : Serial . print ( \"800 \" ); break ; case ADXL345_DATARATE_400_HZ : Serial . print ( \"400 \" ); break ; case ADXL345_DATARATE_200_HZ : Serial . print ( \"200 \" ); break ; case ADXL345_DATARATE_100_HZ : Serial . print ( \"100 \" ); break ; case ADXL345_DATARATE_50_HZ : Serial . print ( \"50 \" ); break ; case ADXL345_DATARATE_25_HZ : Serial . print ( \"25 \" ); break ; case ADXL345_DATARATE_12_5_HZ : Serial . print ( \"12.5 \" ); break ; case ADXL345_DATARATE_6_25HZ : Serial . print ( \"6.25 \" ); break ; case ADXL345_DATARATE_3_13_HZ : Serial . print ( \"3.13 \" ); break ; case ADXL345_DATARATE_1_56_HZ : Serial . print ( \"1.56 \" ); break ; case ADXL345_DATARATE_0_78_HZ : Serial . print ( \"0.78 \" ); break ; case ADXL345_DATARATE_0_39_HZ : Serial . print ( \"0.39 \" ); break ; case ADXL345_DATARATE_0_20_HZ : Serial . print ( \"0.20 \" ); break ; case ADXL345_DATARATE_0_10_HZ : Serial . print ( \"0.10 \" ); break ; default : Serial . print ( \"???? \" ); break ; } Serial . println ( \" Hz\" ); } void displayRange ( void ) { Serial . print ( \"Range: +/- \" ); switch ( accel . getRange ()) { case ADXL345_RANGE_16_G : Serial . print ( \"16 \" ); break ; case ADXL345_RANGE_8_G : Serial . print ( \"8 \" ); break ; case ADXL345_RANGE_4_G : Serial . print ( \"4 \" ); break ; case ADXL345_RANGE_2_G : Serial . print ( \"2 \" ); break ; default : Serial . print ( \"?? \" ); break ; } Serial . println ( \" g\" ); } void setup ( void ) { #ifndef ESP8266 while ( ! Serial ); // for Leonardo/Micro/Zero #endif Serial . begin ( 115200 ); Serial . println ( \"Accelerometer Test\" ); Serial . println ( \"\" ); /* Initialise the sensor */ if ( ! accel . begin ()) { /* There was a problem detecting the ADXL345 ... check your connections */ Serial . println ( \"Ooops, no ADXL345 detected ... Check your wiring!\" ); while ( 1 ); } /* Set the range to whatever is appropriate for your project */ accel . setRange ( ADXL345_RANGE_16_G ); // accel.setRange(ADXL345_RANGE_8_G); // accel.setRange(ADXL345_RANGE_4_G); // accel.setRange(ADXL345_RANGE_2_G); /* Display some basic information on this sensor */ displaySensorDetails (); /* Display additional settings (outside the scope of sensor_t) */ displayDataRate (); displayRange (); Serial . println ( \"\" ); } void loop ( void ) { /* Get a new sensor event */ sensors_event_t event ; accel . getEvent ( & event ); /* Display the results (acceleration is measured in m/s^2) */ Serial . print ( \"X: \" ); Serial . print ( event . acceleration . x ); Serial . print ( \" \" ); Serial . print ( \"Y: \" ); Serial . print ( event . acceleration . y ); Serial . print ( \" \" ); Serial . print ( \"Z: \" ); Serial . print ( event . acceleration . z ); Serial . print ( \" \" ); Serial . println ( \"m/s^2 \" ); delay ( 10 ); } \u7136\u540e\u5355\u51fb\u7f16\u8bd1/\u4e0a\u4f20\u6309\u94ae\u8fdb\u884c\u7f16\u8bd1\u5e76\u5c06\u7a0b\u5e8f\u4e0a\u4f20\u5230Arduino\u3002\u60a8\u5e94\u8be5\u770b\u5230\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7684\u8f93\u51fa\u3002\u89c2\u5bdf\u79fb\u52a8\u5f00\u53d1\u677f\u65f6\u503c\u7684\u53d8\u5316\u3002","title":"\u6d4b\u8bd5\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_8","text":"ADXL\u82af\u7247\u5728\u5de5\u5382\u5df2\u6821\u51c6\u81f3\u8db3\u4ee5\u6ee1\u8db3\u5927\u591a\u6570\u7528\u9014\u7684\u7cbe\u5ea6\u6c34\u5e73\u3002\u5bf9\u4e8e\u8981\u6c42\u66f4\u9ad8\u7cbe\u786e\u5ea6\u7684\u5173\u952e\u5e94\u7528\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u81ea\u5df1\u91cd\u65b0\u6821\u51c6\u4f20\u611f\u5668\u3002 \u6821\u51c6\u4e0d\u4f1a\u6539\u53d8\u4f20\u611f\u5668\u7684\u8f93\u51fa\u3002\u4f46\u662f\uff0c\u5b83\u544a\u8bc9\u60a8\u5728\u6bcf\u4e2a\u8f74\u4e0a\u4e24\u4e2a\u65b9\u5411\u4e0a\u5df2\u77e5\u7684\u7a33\u5b9a\u53c2\u8003\u529b\u4e0b\u4f20\u611f\u5668\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\u3002\u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\uff0c\u60a8\u53ef\u4ee5\u4ece\u4f20\u611f\u5668\u8bfb\u6570\u8ba1\u7b97\u51fa\u6821\u6b63\u540e\u7684\u8f93\u51fa\u3002","title":"\u6821\u51c6\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_9","text":"\u52a0\u901f\u5ea6\u53ef\u4ee5\u4ee5\u91cd\u529b\u6216\u201c G\u201d\u4e3a\u5355\u4f4d\u8fdb\u884c\u6d4b\u91cf\uff0c\u5176\u4e2d1G\u8868\u793a\u5728\u5730\u7403\u8868\u9762\u7684\u91cd\u529b\u3002\u91cd\u529b\u662f\u4e00\u4e2a\u76f8\u5bf9\u7a33\u5b9a\u7684\u529b\uff0c\u53ef\u4e3a\u5730\u9762\u4f4f\u5b85\u7684\u63a5\u5730\u63d0\u4f9b\u65b9\u4fbf\u548c\u53ef\u9760\u7684\u6821\u51c6\u53c2\u8003\u3002","title":"\u91cd\u529b\u4f5c\u4e3a\u6821\u51c6\u53c2\u8003"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_10","text":"\u8981\u5c06\u4f20\u611f\u5668\u6821\u51c6\u4e3a\u91cd\u529b\u53c2\u8003\uff0c\u9700\u8981\u786e\u5b9a\u6bcf\u4e2a\u8f74\u4e0e\u91cd\u529b\u62c9\u529b\u8f74\u7cbe\u786e\u5bf9\u51c6\u65f6\u7684\u4f20\u611f\u5668\u8f93\u51fa\u3002\u5b9e\u9a8c\u5ba4\u8d28\u91cf\u6821\u51c6\u4f7f\u7528\u7cbe\u5bc6\u5b9a\u4f4d\u5939\u5177\u3002\u8fd9\u91cc\u63cf\u8ff0\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u4ec5\u7528\u4e00\u5757\u6728\u5934\u5c31\u80fd\u83b7\u5f97\u4ee4\u4eba\u60ca\u8bb6\u7684\u597d\u7ed3\u679c\u3002","title":"\u6821\u51c6\u65b9\u6cd5\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_11","text":"\u9996\u5148\u5c06\u4f20\u611f\u5668\u7262\u56fa\u5730\u5b89\u88c5\u5728\u6a21\u5757\u6216\u76d2\u5b50\u4e0a\u3002\u53ea\u8981\u6240\u6709\u4fa7\u9762\u6210\u76f4\u89d2\uff0c\u5927\u5c0f\u90fd\u4e0d\u91cd\u8981\u3002\u8be5\u6750\u6599\u5e76\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u5b83\u76f8\u5f53\u575a\u786c\u5373\u53ef\u3002","title":"\u5b89\u88c5\u4f20\u611f\u5668\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_12","text":"\u52a0\u8f7d\u5e76\u8fd0\u884c\u4e0b\u9762\u7684\u6821\u51c6\u8349\u56fe\u3002\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u7136\u540e\u7b49\u5f85\u63d0\u793a\u3002 \u5b9a\u4f4d\u5757\uff1a \u5c06\u5757\u653e\u7f6e\u5728\u575a\u56fa\u7684\u5e73\u9762\u4e0a\uff0c\u4f8b\u5982\u575a\u56fa\u7684\u684c\u5b50\u4e0a\u3002\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e2d\u952e\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u6309\u56de\u8f66\u952e\u3002\u8349\u56fe\u5c06\u5728\u8be5\u8f74\u4e0a\u8fdb\u884c\u6d4b\u91cf\u5e76\u6253\u5370\u7ed3\u679c\u3002 \u91cd\u65b0\u5b9a\u4f4d\u5757\uff1a\u65cb\u8f6c\u5757\uff0c\u4f7f\u684c\u5b50\u7684\u53e6\u4e00\u4fa7\u5e73\u5766\uff0c\u7136\u540e\u952e\u5165\u53e6\u4e00\u4e2a\u952e\u4ee5\u6d4b\u91cf\u8be5\u8f74\u3002 \u91cd\u590d\uff1a\u5bf9\u5757\u7684\u6240\u6709\u516d\u4e2a\u4fa7\u9762\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u4ee5\u6d4b\u91cf\u6bcf\u4e2a\u8f74\u7684\u6b63\u5411\u548c\u8d1f\u5411\u3002 \uff08\u6697\u793a\uff1a\uff09 \u5bf9\u4e8e\u88ab\u5206\u7ebf\u677f\u548c/\u6216\u7535\u7ebf\u963b\u585e\u7684\u4fa7\u9762\uff0c\u5728\u8bfb\u53d6\u6570\u636e\u7684\u540c\u65f6\u5c06\u6a21\u5757\u5411\u4e0a\u538b\u5728\u684c\u5b50\u5e95\u90e8\u3002","title":"\u52a0\u8f7d\u6821\u51c6\u8349\u56fe\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_13","text":"\u4e00\u65e6\u5bf9\u6240\u6709\u516d\u4e2a\u9762\u8fdb\u884c\u4e86\u91c7\u6837\uff0c\u4e32\u884c\u76d1\u89c6\u5668\u4e2d\u6253\u5370\u7684\u503c\u5c06\u4ee3\u8868\u6bcf\u4e2a\u8f74\u4e0a+/- 1G\u529b\u7684\u5b9e\u9645\u6d4b\u91cf\u503c\u3002\u8fd9\u4e9b\u503c\u53ef\u7528\u4e8e\u91cd\u65b0\u7f29\u653e\u8bfb\u6570\uff0c\u4ee5\u63d0\u9ad8\u51c6\u786e\u6027\u3002","title":"\u6821\u51c6\u7ed3\u679c\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_14","text":"#include <Wire.h> #include <Adafruit_Sensor.h> #include <Adafruit_ADXL345_U.h> /* Assign a unique ID to this sensor at the same time */ Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified ( 12345 ); float AccelMinX = 0 ; float AccelMaxX = 0 ; float AccelMinY = 0 ; float AccelMaxY = 0 ; float AccelMinZ = 0 ; float AccelMaxZ = 0 ; void setup ( void ) { Serial . begin ( 9600 ); Serial . println ( \"ADXL345 Accelerometer Calibration\" ); Serial . println ( \"\" ); /* Initialise the sensor */ if ( ! accel . begin ()) { /* There was a problem detecting the ADXL345 ... check your connections */ Serial . println ( \"Ooops, no ADXL345 detected ... Check your wiring!\" ); while ( 1 ); } } void loop ( void ) { Serial . println ( \"Type key when ready...\" ); while ( ! Serial . available ()){} // wait for a character /* Get a new sensor event */ sensors_event_t accelEvent ; accel . getEvent ( & accelEvent ); if ( accelEvent . acceleration . x < AccelMinX ) AccelMinX = accelEvent . acceleration . x ; if ( accelEvent . acceleration . x > AccelMaxX ) AccelMaxX = accelEvent . acceleration . x ; if ( accelEvent . acceleration . y < AccelMinY ) AccelMinY = accelEvent . acceleration . y ; if ( accelEvent . acceleration . y > AccelMaxY ) AccelMaxY = accelEvent . acceleration . y ; if ( accelEvent . acceleration . z < AccelMinZ ) AccelMinZ = accelEvent . acceleration . z ; if ( accelEvent . acceleration . z > AccelMaxZ ) AccelMaxZ = accelEvent . acceleration . z ; Serial . print ( \"Accel Minimums: \" ); Serial . print ( AccelMinX ); Serial . print ( \" \" ); Serial . print ( AccelMinY ); Serial . print ( \" \" ); Serial . print ( AccelMinZ ); Serial . println (); Serial . print ( \"Accel Maximums: \" ); Serial . print ( AccelMaxX ); Serial . print ( \" \" ); Serial . print ( AccelMaxY ); Serial . print ( \" \" ); Serial . print ( AccelMaxZ ); Serial . println (); while ( Serial . available ()) { Serial . read (); // clear the input buffer } }","title":"\u6821\u51c6\u8349\u56fe\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_15","text":"\u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 ADXL345 \u52a0\u901f\u5ea6\u8ba1\u6821\u51c6 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u52a0\u901f\u6700\u5c0f\u503c\uff1a0.00 0.00 0.00 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 0.20 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u52a0\u901f\u6700\u5c0f\u503c\uff1a0.00 0.00 0.00 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 0.20 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u52a0\u901f\u6700\u5c0f\u503c\uff1a0.00 0.00 0.00 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 0.20 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u52a0\u901f\u6700\u5c0f\u503c\uff1a0.00 0.00 0.00 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 0.20 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a0.00 0.00 - 0.24 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a0.00 0.00 - 0.24 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a0.00 - 1.22 - 0.27 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a0.00 - 1.22 - 0.27 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e...\u963f\u585e\u5c14\u6700\u4f4e\u91d1\u989d\uff1a- 1.18 - 1.22 - 0.27 \u52a0\u901f\u6700\u5927\u503c\uff1a0.12 1.37 1.14 \u51c6\u5907\u597d\u65f6\u952e\u5165\u952e... \u6821\u51c6\u8349\u56fe\u7684\u7ed3\u679c\u53ef\u7528\u4e8e\u8fdb\u884c\u4e24\u70b9\u6821\u51c6\uff0c\u5982\u4e0b\u6240\u8ff0\uff1a \u4e24\u70b9\u6821\u51c6","title":"\u5178\u578b\u6821\u51c6\u8f93\u51fa\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_16","text":"","title":"\u56fe\u4e66\u9986\u53c2\u8003"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_17","text":"Adafruit_ADXL345(int32_t sensorID = -1) \u6784\u9020ADXL345\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5bf9\u8c61\u7684\u5b9e\u4f8b\u3002\u201c sensorID\u201d\u662f\u8bbe\u5907\u6807\u8bc6\u7b26\u3002\u5728\u6bcf\u6b21\u8c03\u7528getEvent\uff08\uff09\u65f6\uff0c\u5b83\u5c06\u5728sensor_event\u4e2d\u8fd4\u56de\u8be5\u503c\u3002sensorID\u5bf9\u9a71\u52a8\u7a0b\u5e8f\u6216\u8bbe\u5907\u7684\u64cd\u4f5c\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u5728\u7ba1\u7406\u5177\u6709\u591a\u4e2a\u4f20\u611f\u5668\u7684\u7cfb\u7edf\u4e2d\u7684\u4f20\u611f\u5668\u4e8b\u4ef6\u65f6\u5f88\u6709\u7528\u3002","title":"\u6784\u9020\u51fd\u6570\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_18","text":"bool begin(void) begin\uff08\uff09\u51fd\u6570\u521d\u59cb\u5316\u4e0e\u8bbe\u5907\u7684\u901a\u4fe1\u3002\u5982\u679c\u6210\u529f\u8fde\u63a5\u5230ADXL345\uff0c\u5219\u8fd4\u56de\u503c\u4e3a\u201c true\u201d\u3002","title":"\u521d\u59cb\u5316\uff08\uff09"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_19","text":"\u65e0\u6548\u7684getSensor\uff08sensor_t *\uff09; getSensor\uff08\uff09\u51fd\u6570\u8fd4\u56de\u6709\u5173\u4f20\u611f\u5668\u7684\u57fa\u672c\u4fe1\u606f\u3002\u6709\u5173sensor_t\u7ed3\u6784\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605Adafruit Sensor Library \u7684 \u81ea\u8ff0\u6587\u4ef6 \u3002","title":"\u4f20\u611f\u5668\u8be6\u7ec6\u4fe1\u606f\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_20","text":"void setRange\uff08range_t range\uff09 setRange\uff08\uff09\u51fd\u6570\u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u64cd\u4f5c\u8303\u56f4\u3002\u503c\u8d8a\u9ad8\uff0c\u6d4b\u91cf\u8303\u56f4\u8d8a\u5e7f\u3002\u8f83\u4f4e\u7684\u503c\u5c06\u5177\u6709\u66f4\u9ad8\u7684\u7075\u654f\u5ea6\u3002 \u6709\u6548\u8303\u56f4\u5e38\u6570\u662f\uff1a ADXL345_RANGE_16_G ADXL345_RANGE_8_G ADXL345_RANGE_4_G ADXL345_RANGE_2_G (default value) range_t getRange\uff08void\uff09; getRange\uff08\uff09\u51fd\u6570\u8fd4\u56de\u7531setRange\uff08\uff09\u8bbe\u7f6e\u7684\u5f53\u524d\u64cd\u4f5c\u8303\u56f4","title":"\u83b7\u53d6\u5e76\u8bbe\u7f6e\u5de5\u4f5c\u8303\u56f4\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_21","text":"void setDataRate\uff08dataRate_t dataRate\uff09; setDataRate\uff08\uff09\u51fd\u6570\u8bbe\u7f6e\u4f20\u611f\u5668\u8f93\u51fa\u66f4\u65b0\u7684\u901f\u7387\u3002\u9ad8\u4e8e100 Hz\u7684\u901f\u7387\u5c06\u663e\u793a\u589e\u52a0\u7684\u566a\u58f0\u3002\u4f4e\u4e8e6.25 Hz\u7684\u901f\u7387\u5c06\u5bf9\u6e29\u5ea6\u53d8\u5316\u66f4\u52a0\u654f\u611f\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6570\u636e\u8868 \u3002 \u6709\u6548\u6570\u636e\u901f\u7387\u5e38\u6570\u4e3a\uff1a ADXL345_DATARATE_3200_HZ ADXL345_DATARATE_1600_HZ ADXL345_DATARATE_800_HZ ADXL345_DATARATE_400_HZ ADXL345_DATARATE_200_HZ ADXL345_DATARATE_100_HZ ADXL345_DATARATE_50_HZ ADXL345_DATARATE_25_HZ ADXL345_DATARATE_12_5_HZ ADXL345_DATARATE_6_25HZ ADXL345_DATARATE_3_13_HZ ADXL345_DATARATE_1_56_HZ ADXL345_DATARATE_0_78_HZ ADXL345_DATARATE_0_39_HZ ADXL345_DATARATE_0_20_HZ ADXL345_DATARATE_0_10_HZ \uff08\u9ed8\u8ba4\u503c\uff09 dataRate_t getDataRate\uff08void\uff09; getDataRate\uff08\uff09\u51fd\u6570\u8fd4\u56de\u7531setDataRate\uff08\uff09\u8bbe\u7f6e\u7684\u5f53\u524d\u6570\u636e\u901f\u7387\u3002","title":"\u83b7\u53d6\u548c\u8bbe\u7f6e\u6570\u636e\u901f\u7387\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_22","text":"void getEvent(sensors_event_t*); getEvent\uff08\uff09\u51fd\u6570\u4ee5sensor_event\u7684\u5f62\u5f0f\u8fd4\u56de\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684\u8bfb\u6570\u3002sensor_event\u5305\u542b\u4f20\u9012\u7ed9\u6784\u9020\u51fd\u6570\u7684sensor_id\u4ee5\u53ca\u6765\u81ea\u52a0\u901f\u5ea6\u8ba1\u7684X\uff0cY\u548cZ\u8f74\u8bfb\u6570\u3002\u6709\u5173sensor_events\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1Adafruit Sensor Library \u7684 \u81ea\u8ff0\u6587\u4ef6 \u3002","title":"\u8bfb\u53d6\u4f20\u611f\u5668\u4e8b\u4ef6\uff1a"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#pythoncircuitpython","text":"\u5361\u7279\u5c3c\u00b7\u4f26\u535a \u5c06ADXL343\u6216ADXL345\u4e0ePython\u548cCircuitPython\u4ee5\u53ca Adafruit CircuitPython ADXL34x \u6a21\u5757\u4e00\u8d77\u4f7f\u7528\u5f88\u5bb9\u6613\u3002\u8be5\u6a21\u5757\u4f7f\u60a8\u53ef\u4ee5\u8f7b\u677e\u7f16\u5199Python\u4ee3\u7801\uff0c\u4ee5\u8bfb\u53d6\u7a81\u7834\u4e2d\u7684\u52a0\u901f\u5ea6\uff0c\u6572\u51fb\uff0c\u8fd0\u52a8\u7b49\u4fe1\u606f\u3002 \u7531\u4e8e\u6211\u4eec\u7684CircuitPython-for-Python\u517c\u5bb9\u6027\u5e93Adafruit_Blinka\uff0c \u60a8\u53ef\u4ee5\u5c06\u6b64\u4f20\u611f\u5668\u4e0e\u4efb\u4f55CircuitPython\u5fae\u63a7\u5236\u5668\u677f\u6216\u5177\u6709GPIO\u548cPython\u7684\u8ba1\u7b97\u673a\u4e00\u8d77\u4f7f\u7528\u3002 ADXL343\u548cADXL345\u4e0a\u7684\u5f15\u811a\u6392\u5217\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u82af\u7247\u57fa\u672c\u76f8\u540c\u3002\u6b64\u9875\u9762\u5305\u62ec\u6bcf\u4e2a\u63a5\u7ebf\u56fe\u7684\u4e0d\u540c\u63a5\u7ebf\u56fe\u3002\u9664\u4e86\u521d\u59cb\u5316\u9002\u5f53\u7684\u82af\u7247\u5916\uff0c\u4e24\u8005\u7684\u4ee3\u7801\u90fd\u76f8\u540c\uff01","title":"Python\u548cCircuitPython"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#circuitpython","text":"\u9996\u5148\uff0c\u5b8c\u5168\u6309\u7167\u4e0a\u4e00\u9875\u4e2d\u7684\u8bf4\u660e\u63a5\u7ebf\u3002\u8fd9\u662f\u5c06ADXL343\u8fde\u63a5\u5230\u7fbd\u6bdbM0\u7684\u793a\u4f8b\uff1a \u8fde\u63a5 SCL \u4e0a\u7684\u7fbd\u6bdb\uff0c\u4ee5 SCL \u7684ADXL343\u8fde\u63a5 SDA \u7684\u7fbd\u6bdb SDA \u7684ADXL343\u8fde\u63a5 GND \u7684\u7fbd\u6bdb\u5230 GND \u7684ADXL343\u8fde\u63a5 3.3V \u7684\u7fbd\u6bdb\u5230 VIN \u7684ADXL343 \u4e0b\u9762\u662f\u5c06ADXL345\u8fde\u63a5\u5230Feather M0\u7684\u793a\u4f8b\uff1a \u8fde\u63a5 SCL \u4e0a\u7684\u7fbd\u6bdb\uff0c\u4ee5 SCL \u7684ADXL345\u8fde\u63a5 SDA \u7684\u7fbd\u6bdb SDA \u7684ADXL345\u8fde\u63a5 GND \u7684\u7fbd\u6bdb\u5230 GND \u7684ADXL345\u5c06\u7fbd\u6bdb\u4e0a\u7684 3.3V \u8fde\u63a5 \u5230 ADXL345\u4e0a\u7684 VIN","title":"CircuitPython\u5fae\u63a7\u5236\u5668\u63a5\u7ebf"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#python","text":"\u7531\u4e8e \u60a8\u53ef\u4ee5\u4f7f\u7528 \u6570\u5341\u79cd Linux\u8ba1\u7b97\u673a/\u4e3b\u677f\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5c55\u793aRaspberry Pi\u7684\u63a5\u7ebf\u3002\u5bf9\u4e8e\u5176\u4ed6\u5e73\u53f0\uff0c \u8bf7\u8bbf\u95eeLinux\u4e0aCircuitPython\u6307\u5357\uff0c\u4ee5\u4e86\u89e3\u60a8\u7684\u5e73\u53f0\u662f\u5426\u53d7\u652f\u6301 \u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u8fde\u63a5\u5230ADXL343\u7684Raspberry Pi\uff1a \u8fde\u63a5 SCL \u7684RPI\u5230 SCL \u7684ADXL343\u8fde\u63a5 SDA \u4e0a\u7684RPI SDA \u7684ADXL343\u8fde\u63a5 GND \u4e0a\u7684RPI GND \u7684ADXL343\u8fde\u63a5 3.3V \u4e0a\u7684RPI VIN \u7684ADXL343 \u4e0b\u56fe\u663e\u793a\u4e86\u8fde\u63a5\u5230ADXL345\u7684Raspberry Pi\uff1a \u8fde\u63a5 SCL \u7684RPI\u5230 SCL \u7684ADXL345\u8fde\u63a5 SDA \u7684RPI\u5230 SDA \u7684ADXL345\u8fde\u63a5 GND \u7684RPI\u5230 GND \u7684ADXL345\u5c06RPi\u4e0a\u7684 3.3V \u8fde\u63a5 \u5230ADXL345\u4e0a\u7684 VIN","title":"Python\u7535\u8111\u63a5\u7ebf"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_23","text":"\u60a8\u9700\u8981\u5728CircuitPython\u677f\u4e0a\u5b89\u88c5 Adafruit CircuitPython ADXL34x \u5e93\u3002 \u9996\u5148\uff0c\u8bf7\u786e\u4fdd \u4e3a\u60a8\u7684\u7535\u8def\u677f\u8fd0\u884c \u6700\u65b0\u7248\u672c\u7684Adafruit CircuitPython \u3002 \u63a5\u4e0b\u6765\uff0c\u60a8\u9700\u8981\u5b89\u88c5\u5fc5\u8981\u7684\u5e93\u4ee5\u4f7f\u7528\u786c\u4ef6-\u4ed4\u7ec6\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u4ece Adafruit\u7684CircuitPython\u5e93\u6346\u7ed1\u5305\u4e2d \u67e5\u627e\u548c\u5b89\u88c5\u8fd9\u4e9b\u5e93 \u3002\u6211\u4eec\u7684CircuitPython\u5165\u95e8\u6307\u5357\u4e0a\u6709 \u4e00\u4e2a\u5f88\u68d2\u7684\u9875\u9762\uff0c\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5\u5e93\u5305 \u3002 \u5bf9\u4e8eTrinket M0\u6216Gemma M0\u7b49\u975e\u8868\u8fbe\u677f\uff0c\u60a8\u9700\u8981\u4ece\u6346\u7ed1\u5305\u4e2d\u624b\u52a8\u5b89\u88c5\u5fc5\u8981\u7684\u5e93\uff1a adafruit_adxl34x.mpy adafruit_bus_device \u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5f00\u53d1\u677f\u7684lib\u6587\u4ef6\u5939\u6216\u6839\u6587\u4ef6\u7cfb\u7edf\u5df2 \u590d\u5236\u4e86 adafruit_adxl34x.mpy \u548c adafruit_bus_device \u6587\u4ef6\u548c\u6587\u4ef6\u5939 \u3002 \u63a5\u4e0b\u6765\uff0c \u8fde\u63a5\u5230\u5f00\u53d1\u677f\u7684\u4e32\u884cREPL\uff0c \u4ee5\u4fbf\u60a8\u5728CircuitPython >>> \u63d0\u793a\u7b26\u4e0b\u3002","title":"\u5e93\u5b89\u88c5"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#adxl34xpython","text":"\u60a8\u9700\u8981\u5b89\u88c5 Adafruit_Blinka \u5e93\uff0c\u8be5\u5e93\u5728Python\u4e2d\u63d0\u4f9b\u4e86CircuitPython\u652f\u6301\u3002\u8fd9\u53ef\u80fd\u8fd8\u9700\u8981\u5728\u60a8\u7684\u5e73\u53f0\u4e0a\u542f\u7528I2C\u5e76\u9a8c\u8bc1\u60a8\u6b63\u5728\u8fd0\u884c Python3 \u3002 \u7531\u4e8e\u6bcf\u4e2a\u5e73\u53f0\u90fd\u6709\u6240\u4e0d\u540c\uff0c\u5e76\u4e14Linux\u7ecf\u5e38\u66f4\u6539\uff0c\u8bf7\u8bbf\u95eeLinux\u4e0a\u7684CircuitPython\u6307\u5357\u4ee5\u4f7f\u60a8\u7684\u8ba1\u7b97\u673a\u51c6\u5907\u5c31\u7eea \uff01 \u5b8c\u6210\u540e\uff0c\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a sudo pip3 install adafruit-circuitpython-adxl34x \u5982\u679c\u60a8\u7684\u9ed8\u8ba4Python\u662f\u7248\u672c3\uff0c\u5219\u53ef\u80fd\u9700\u8981\u8fd0\u884c\u201c pip\u201d\u3002\u53ea\u8981\u786e\u4fdd\u60a8\u4e0d\u5c1d\u8bd5\u5728Python 2.x\u4e0a\u4f7f\u7528CircuitPython\uff0c\u5c31\u4e0d\u652f\u6301\u5b83\uff01","title":"ADXL34x\u5e93\u7684Python\u5b89\u88c5"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#circuitpythonpython","text":"\u4e3a\u4e86\u6f14\u793a\u7a81\u7834\u7684\u7528\u6cd5\uff0c\u6211\u4eec\u5c06\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5e76\u4ece\u5f00\u53d1\u677f\u7684Python REPL\u4e2d\u8bfb\u53d6\u52a0\u901f\u5ea6\u4ee5\u53ca\u66f4\u591a\u4fe1\u606f\u3002 \u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u5bfc\u5165\u5fc5\u8981\u7684\u6a21\u5757\u5e76\u521b\u5efaI2C\u5bf9\u8c61\uff1a \u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 \u5bfc\u5165\u65f6\u95f4\u8fdb\u53e3\u677f\u8fdb\u53e3\u4e1a\u52a1\u5bfc\u5165adafruit_adxl34x i2c = busio \u3002 I2C \uff08 \u677f \u3002 SCL \uff0c \u677f \u3002 SDA \uff09 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f ADXL343 \uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u4f7f\u7528 \u4e2d\u65ad \u521d\u59cb\u5316I2C\u8fde\u63a5\uff1a \u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 \u52a0\u901f\u5ea6\u8ba1 = adafruit_adxl34x \u3002 ADXL343 \uff08 i2c \uff09 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f ADXL345 \uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u4f7f\u7528 \u4e2d\u65ad \u521d\u59cb\u5316I2C\u8fde\u63a5\uff1a \u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 \u52a0\u901f\u5ea6\u8ba1 = adafruit_adxl34x \u3002 ADXL345 \uff08 i2c \uff09 \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4efb\u4f55\u4e00\u79cd\u65b9\u6cd5\u4ece\u7a81\u7834\u4e2d\u8bfb\u53d6\u503c\u5e76\u542f\u7528\u5176\u529f\u80fd\uff1a \u52a0\u901f\u5ea6 -x\uff0cy\u548cz\u8f74\u4e0a\u7684\u52a0\u901f\u5ea6\u503c enable_motion_detection- \u542f\u7528\u8fd0\u52a8\u68c0\u6d4b\u3002\u5141\u8bb8\u8bbe\u7f6e\u9608\u503c\u3002\u9608\u503c\u9ed8\u8ba4\u4e3a18\u3002 enable_tap_detection- \u542f\u7528\u70b9\u51fb\u68c0\u6d4b\u3002\u5141\u8bb8\u5355\u51fb\u6216\u53cc\u51fb\u68c0\u6d4b\u3002 enable_freefall_detection- \u542f\u7528\u81ea\u7531\u843d\u4f53\u68c0\u6d4b\u3002\u5141\u8bb8\u8bbe\u7f6e\u9608\u503c\u548c\u65f6\u95f4\u3002\u9608\u503c\u9ed8\u8ba4\u4e3a10\uff0c\u65f6\u95f4\u9ed8\u8ba4\u4e3a25\u3002 \u4e8b\u4ef6 -\u7528\u4e8e\u5728\u542f\u7528\u8fd0\u52a8\u68c0\u6d4b\uff0c\u6572\u51fb\u68c0\u6d4b\u548c\u81ea\u7531\u843d\u4f53\u68c0\u6d4b\u65f6\u8bfb\u53d6\u4e8b\u4ef6\u3002\u9700\u8981\u6307\u5b9a\u60a8\u5c1d\u8bd5\u8bfb\u53d6\u7684\u4e8b\u4ef6\u3002 \u8981\u6253\u5370\u52a0\u901f\u5ea6\u503c\uff1a \u4e0b\u8f7d\uff1a \u6587\u4ef6 \u590d\u5236\u4ee3\u7801 \u800cTrue \uff1a \u6253\u5370 \uff08 \u52a0\u901f\u5ea6\u8ba1 \u3002 \u52a0\u901f\u5ea6 \uff09 \u65f6\u95f4 \u3002 \u7761\u7720 \uff08 0.2 \uff09 \u8fd9\u662f\u4f7f\u7528CircuitPython\u4eceADXL343\u548cADXL345\u8bfb\u53d6\u52a0\u901f\u5ea6\u503c\u7684\u5168\u90e8\u5185\u5bb9\uff01","title":"CircuitPython\u548cPython\u7684\u7528\u6cd5"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_24","text":"\u4e0b\u8f7d\uff1a Project Zip \u6216 adxl34x_simpletest.py | \u5728Github\u4e0a\u67e5\u770b \u590d\u5236\u4ee3\u7801 \u5bfc\u5165\u65f6\u95f4\u8fdb\u53e3\u677f\u8fdb\u53e3\u4e1a\u52a1\u5bfc\u5165adafruit_adxl34x i2c = busio \u3002I2C \uff08\u677f\u3002SCL \uff0c\u677f\u3002SDA \uff09 \uff03\u9002\u7528\u4e8eADXL343\u52a0\u901f\u5ea6\u8ba1= adafruit_adxl34x \u3002ADXL343 \uff08i2c \uff09\uff03\u9002\u7528\u4e8eADXL345\uff03\u52a0\u901f\u5ea6\u8ba1= adafruit_adxl34x.ADXL345\uff08i2c\uff09 \u800cTrue \uff1a \u6253\u5370\uff08\u201c\uff05f\uff05f\uff05f\u201d \uff05\u52a0\u901f\u5ea6\u8ba1\u3002\u52a0\u901f\u5ea6\uff09 \u65f6\u95f4\u3002\u7761\u7720\uff080.2 \uff09","title":"\u5b8c\u6574\u793a\u4f8b\u4ee3\u7801"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_25","text":"GitHub\u4e0a\u63d0\u4f9b\u4e86\u542f\u7528\u548c\u4f7f\u7528\u8fd0\u52a8\uff0c\u70b9\u51fb\u548c\u81ea\u7531\u843d\u4f53\u7684\u793a\u4f8b\uff1a ADXL343\u548cADXL345\u4e0a\u7684\u8fd0\u52a8\u68c0\u6d4b ADXL343\u548cADXL345\u4e0a\u7684\u62bd\u5934\u68c0\u6d4b ADXL343\u548cADXL345\u4e0a\u7684\u81ea\u7531\u843d\u4f53\u68c0\u6d4b \u5c06\u4efb\u4f55\u6587\u4ef6\u53e6\u5b58\u4e3a CircuitPython \u677f\u4e0a\u7684code.py\uff0c\u6216\u4eceLinux\u8ba1\u7b97\u673a\u4e0a\u7684Python REPL\u8fd0\u884c\u5b83\u4eec\uff0c\u4ee5\u8fdb\u884c\u5c1d\u8bd5\u3002","title":"\u8fd0\u52a8\uff0c\u70b9\u51fb\u548c\u81ea\u7531\u843d\u4f53"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_26","text":"\u4e39\u5c3c\u00b7\u8bfa\u68ee\u8bfa\u7ef4\u5179\uff08Danny Nosonowitz\uff09","title":"\u8d44\u6599\u4e0b\u8f7d"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_27","text":"ADXL345\u6570\u636e\u8868 Adafruit Fritzing\u5e93\u4e2d\u7684Fritzing\u5bf9\u8c61 GitHub\u4e0a\u7684EagleCAD PCB\u6587\u4ef6","title":"\u6863\u6848"},{"location":"ESP32/ADXL345%E5%8A%A0%E9%80%9F%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/#_28","text":"\u672c\u6307\u5357\u4e8e2013\u5e743\u670826\u65e5\u9996\u6b21\u53d1\u5e03\u3002\u6700\u540e\u4e8e2013\u5e743\u670826\u65e5\u66f4\u65b0\u3002","title":"\u539f\u7406\u56fe\u548c\u88c5\u914d\u56fe"},{"location":"ESP32/Ansys%20Fail%20to%20Open/","text":"\u5982\u679c ANSYS \u4ee5\u524d\u53ef\u4ee5\u7528\uff0c\u4f46\u4e0d\u77e5\u4f55\u539f\u56e0\u51fa\u73b0License\u9519\u8bef\uff0c\u53ef\u80fd\u662fLicesen\u670d\u52a1\u5668\u6ca1\u6709\u542f\u52a8\u3002 \u53ef\u4ee5\u67e5\u770b\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684ANSYS Inc\\Shared Files\\Licensing\\license.log\u67e5\u770b\u5177\u4f53\u539f\u56e0\u3002 \u6781\u6709\u53ef\u80fd\u662f\u7531\u4e8e1055\u7aef\u53e3\u88ab\u5360\u7528\uff0c\u5bfc\u81f4FLEXl not running\uff0c\u89e3\u51b3\u529e\u6cd5\uff1a \u5f00cmd\uff0c\u8f93\u5165\uff1a netstat -a -n -o Active Connections Proto Local Address Foreign Address State PID TCP 0.0.0.0:135 0.0.0.0:0 LISTENING 984 TCP 0.0.0.0:445 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:1055 0.0.0.0:0 LISTENING 1116 TCP 0.0.0.0:2325 0.0.0.0:0 LISTENING 8556 TCP 0.0.0.0:5357 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:9145 0.0.0.0:0 LISTENING 10648 TCP 0.0.0.0:24800 0.0.0.0:0 LISTENING 6004 \u540e\u9762\u7701\u7565 \u627e\u52301055\u7aef\u53e3 \u5bf9\u5e94\u7684 pid\u503c\uff08\u6bd4\u59822036\uff09\u3002 \u627e\u5230\u540e\u6253\u5f00\u4efb\u52a1\u7ba1\u7406\u5668\u67e5\u770b\u8fdb\u7a0b\uff0c\u627e\u5230PID\u503c\u5bf9\u5e94\u7684\u6620\u50cf\u540d\u79f0\u5173\u95ed\u5373\u53ef\uff0c\u5219FLExlm \u5219\u81ea\u52a8\u8fd0\u884c\uff0c\u5982\u679c\u5728\u4efb\u52a1\u7ba1\u7406\u5668\u7684\u8fdb\u7a0b\u91cc\u627e\u4e0d\u5230PID\u503c \uff0c\u90a3\u4e48\u6253\u5f00\u201c\u67e5\u770b\u201d-\u201c\u9009\u9879\u5217\u201d\uff0c\u52fe\u9009PID\u9009\u9879\u5373\u53ef\u3002 \u5982\u679c\u5728\u4efb\u52a1\u7ba1\u7406\u5668\u91cc\u9762\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684PID\uff0c\u5219\u7528 \u7ba1\u7406\u5458\u6743\u9650 \u8fd0\u884c C:\\windows\\system32\\cmd.exe \u8f93\u5165\uff1a taskkill /pid 2036 /f \u5173\u95ed\u6b64\u8fdb\u7a0b\u3002 \u518d\u6b21stop, start License\u670d\u52a1\uff0c\u8bd5\u8bd5\uff0c\u5e94\u8be5\u6ca1\u95ee\u9898\u4e86\u3002","title":"ANSYS\u8fc7\u6bb5\u65f6\u95f4\u51fa\u73b0License\u9519\u8bef\u7684\u89e3\u51b3\u529e\u6cd5"},{"location":"ESP32/Arduino%20%E4%BD%BF%E7%94%A8Thermal%20Coupler/","text":"+++ date = \"2017-06-22\" image = \"pcbpic.jpg\" description = \"\" categories = [\"Arduino\", \"Learning\"] title = \"Arduino\u4f7f\u7528thermal coupler\u6d4b\u91cf\u6e29\u5ea6\" slug = \"Arduino thermal coupler\" tags = [\"AI\"] +++ MX6675 MX6675\u89c4\u683c\u4e66 Features Direct Digital Conversion of Type -K Thermocouple Output Cold-Junction Compensation Simple SPI-Compatible Serial Interface 12-Bit, 0.25\u00b0C Resolution Open Thermocouple Detection download the MAX6675 Arduino library code by going to the github page and clicking Download Source. Then uncompress the folder and rename it MAX6675 and install it into the library folder according to our handy tutorial . Restart the Arduino IDE and open up the File -> Examples->MAX6675/Adafruit_MAX31855 -> serialthermocouple sketch and upload it to your Arduino. Once uploaded, open up the serial port monitor to display the current temperatures in both Celsius and Fahrenheit","title":"Arduino \u4f7f\u7528Thermal Coupler"},{"location":"ESP32/Arduino%20%E4%BD%BF%E7%94%A8Thermal%20Coupler/#mx6675","text":"MX6675\u89c4\u683c\u4e66 Features Direct Digital Conversion of Type -K Thermocouple Output Cold-Junction Compensation Simple SPI-Compatible Serial Interface 12-Bit, 0.25\u00b0C Resolution Open Thermocouple Detection download the MAX6675 Arduino library code by going to the github page and clicking Download Source. Then uncompress the folder and rename it MAX6675 and install it into the library folder according to our handy tutorial . Restart the Arduino IDE and open up the File -> Examples->MAX6675/Adafruit_MAX31855 -> serialthermocouple sketch and upload it to your Arduino. Once uploaded, open up the serial port monitor to display the current temperatures in both Celsius and Fahrenheit","title":"MX6675"},{"location":"ESP32/Arduino/","text":"UNO \u63a5\u53e3\u793a\u610f\u56fe Here the pinout of UNO http://t.co/MKtmCILSdj and ATMEGA328 processor http://t.co/CdmDbWTWTf \u7f16\u8f91\u5668 Arduino Web Editor https://create.arduino.cc/getting-started/plugin http://fritzing.org/","title":"Arduino"},{"location":"ESP32/Arduino/#uno","text":"Here the pinout of UNO http://t.co/MKtmCILSdj and ATMEGA328 processor http://t.co/CdmDbWTWTf","title":"UNO \u63a5\u53e3\u793a\u610f\u56fe"},{"location":"ESP32/Arduino/#_1","text":"Arduino Web Editor https://create.arduino.cc/getting-started/plugin http://fritzing.org/","title":"\u7f16\u8f91\u5668"},{"location":"ESP32/CDMA%20Demostration/","text":"This article will use a simple example to demostrate CDMA. It will spreading a singal with PN code, then despreading it to recovery the signal. import numpy as np import matplotlib.pyplot as plt from scipy import signal plt . style . use ( 'ggplot' ) b = np . random . randint ( 2 , size = 8 ) ln = len ( b ) sig_len = 8 bb = b . repeat ( sig_len ) bbx = np . arange ( sig_len * ln ) lens = len ( bb ) # Signal Data plt . figure ( figsize = ( 8 , 4.5 )) plt . suptitle ( r 'Spreading' ) plt . subplot ( 311 ) plt . step ( bbx , bb ) plt . title ( r 'Signal Data' ) #PN Code pr_sig = np . random . randint ( 2 , size = lens ) plt . subplot ( 312 ) plt . step ( bbx , pr_sig ) plt . title ( r 'PN Code' ) # Spread Signal plt . subplot ( 313 ) C = np . logical_xor ( bb , pr_sig ) plt . step ( bbx , C ) plt . title ( r 'Spread Signal' ) plt . tight_layout () plt . subplots_adjust ( top = 0.88 ) ## De-spreading data plt . figure ( figsize = ( 8 , 4.5 )) plt . suptitle ( r 'De-Spreading' ) plt . subplot ( 311 ) C = np . logical_xor ( bb , pr_sig ) plt . step ( bbx , C ) plt . title ( r 'Spread Signal' ) plt . subplot ( 312 ) plt . step ( bbx , pr_sig ) plt . title ( r 'PN Code' ) D = np . logical_xor ( C , pr_sig ) plt . subplot ( 313 ) plt . step ( bbx , D ) plt . title ( r 'Signal Data' ) plt . tight_layout () plt . subplots_adjust ( top = 0.88 ) # De-spreading with wrong PN code plt . figure ( figsize = ( 8 , 4.5 )) plt . suptitle ( r 'De-spreading with wrong PN code' ) plt . subplot ( 311 ) plt . step ( bbx , C ) plt . title ( r 'Spread Signal' ) plt . subplot ( 312 ) pr_sig_w = np . random . randint ( 2 , size = lens ) plt . step ( bbx , pr_sig_w ) plt . title ( r 'Pn Code' ) D = np . logical_xor ( C , pr_sig_w ) plt . subplot ( 313 ) plt . step ( bbx , D ) plt . title ( 'Output data' ) plt . tight_layout () plt . subplots_adjust ( top = 0.88 ) plt . show ()","title":"CDMA code spreading demostrate with Python"},{"location":"ESP32/Centos%20Python3/","text":"\u5b89\u88c5Python3 sudo yum install gcc openssl-devel zlib-devel cd /usr/src wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz tar -xvJf Python-3.7.0.tar.xz cd Python-3.7.0 ./configure prefix=/usr/local/python3 make altinstall ln -s /opt/python3/bin/python3.6 /usr/bin/python3.6 yum install python34-pip sudo nohup python mqtt_simulator.py & chomd +x mqtt_simulator.py nohup python3 mqtt_simulator.py &","title":"Centos\u5b89\u88c5Python3"},{"location":"ESP32/Centos%20Python3/#python3","text":"sudo yum install gcc openssl-devel zlib-devel cd /usr/src wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz tar -xvJf Python-3.7.0.tar.xz cd Python-3.7.0 ./configure prefix=/usr/local/python3 make altinstall ln -s /opt/python3/bin/python3.6 /usr/bin/python3.6 yum install python34-pip sudo nohup python mqtt_simulator.py & chomd +x mqtt_simulator.py nohup python3 mqtt_simulator.py &","title":"\u5b89\u88c5Python3"},{"location":"ESP32/Doherty%20Amplifier/","text":"Doherty Amplifier invented in 1936 by W. H. Doherty. traditional PA, class AB for example, have a low efficiency(15~25%) at backoff powers. DPA enables high efficiency at backoff powers. Consist of: two PA in parallel, Main and peak two 90\u00b0 line at the input and output same phase when they are ON, and same output phase 180\u00b0 main PA is biased as class A, AB, B, F... peak PA is biased as class C. Which means it Vg<Vpinchoff","title":"Doherty Amplifier"},{"location":"ESP32/Doherty%20Amplifier/#doherty-amplifier","text":"invented in 1936 by W. H. Doherty. traditional PA, class AB for example, have a low efficiency(15~25%) at backoff powers. DPA enables high efficiency at backoff powers. Consist of: two PA in parallel, Main and peak two 90\u00b0 line at the input and output same phase when they are ON, and same output phase 180\u00b0 main PA is biased as class A, AB, B, F... peak PA is biased as class C. Which means it Vg<Vpinchoff","title":"Doherty Amplifier"},{"location":"ESP32/ESP-EYE/","text":"This article will introduce how to develop ESP-CAM board with Platform IO. Create a new project, choose board Al Thinker esp32cam . esp32cam introduction esp32cam is developed by AI thinker, while ESP-EYE is developed by Espressif itself. Microcontroller esp32cam Frequency 240MHz Flash 4MB RAM 320KB ESP32-CAM board is without a UART to serial converter, you need to buy one, and there is a coverter board. So suggest you to by this one. Streaming Video from ESP32-CAM Get the code from https://github.com/espressif/arduino-esp32/tree/master/libraries/ESP32/examples/Camera/CameraWebServer Copy CameraWebServer.ino content to main.c file, and create and copy other files containt to \\src folder. Uncomment line #define CAMERA_MODEL_AI_THINKER // Has PSRAM Delete #if 0 in file main.c and app_httpd.cpp. Modify wifi name and password build and upload project to ESP-CAM. Run the code and open the serial monitor in your PlatformIO. Notice to press the Reset button to start the application Now you can start streaming video from the ESP32-CAM. Open your browswer and copy the URL shown in the previous image: image classification Initializing the ESP32-CAM Acquiring picture send picture to cloud machine learning platform get the feedback #include <base64.h> void classifyImage () { // Capture picture camera_fb_t * fb = NULL ; fb = esp_camera_fb_get (); //captures image if ( ! fb ) { Serial . println ( \"Camera capture failed\" ); return ; } size_t size = fb -> len ; String buffer = base64 :: encode (( uint8_t * ) fb -> buf , fb -> len ); //encode in base64 the image String payload = \"{ \\\" inputs \\\" : [{ \\\" data \\\" : { \\\" image \\\" : { \\\" base64 \\\" : \\\" \" + buffer + \" \\\" }}}]}\" ; buffer = \"\" ; // Uncomment this if you want to show the payload // Serial.println(payload); esp_camera_fb_return ( fb ); // Generic model String model_id = \"aaa03c23b3724a16a56b629203edc62c\" ; HTTPClient http ; http . begin ( \"https://api.clarifai.com/v2/models/\" + model_id + \"/outputs\" ); http . addHeader ( \"Content-Type\" , \"application/json\" ); http . addHeader ( \"Authorization\" , \"Key your_key\" ); int response_code = http . POST ( payload ); } use tensorflow.js https://www.survivingwithandroid.com/esp32-cam-tensorflow-js/","title":"ESP EYE"},{"location":"ESP32/ESP-EYE/#esp32cam-introduction","text":"esp32cam is developed by AI thinker, while ESP-EYE is developed by Espressif itself. Microcontroller esp32cam Frequency 240MHz Flash 4MB RAM 320KB ESP32-CAM board is without a UART to serial converter, you need to buy one, and there is a coverter board. So suggest you to by this one.","title":"esp32cam introduction"},{"location":"ESP32/ESP-EYE/#streaming-video-from-esp32-cam","text":"Get the code from https://github.com/espressif/arduino-esp32/tree/master/libraries/ESP32/examples/Camera/CameraWebServer Copy CameraWebServer.ino content to main.c file, and create and copy other files containt to \\src folder. Uncomment line #define CAMERA_MODEL_AI_THINKER // Has PSRAM Delete #if 0 in file main.c and app_httpd.cpp. Modify wifi name and password build and upload project to ESP-CAM. Run the code and open the serial monitor in your PlatformIO. Notice to press the Reset button to start the application Now you can start streaming video from the ESP32-CAM. Open your browswer and copy the URL shown in the previous image:","title":"Streaming Video from ESP32-CAM"},{"location":"ESP32/ESP-EYE/#image-classification","text":"Initializing the ESP32-CAM Acquiring picture send picture to cloud machine learning platform get the feedback #include <base64.h> void classifyImage () { // Capture picture camera_fb_t * fb = NULL ; fb = esp_camera_fb_get (); //captures image if ( ! fb ) { Serial . println ( \"Camera capture failed\" ); return ; } size_t size = fb -> len ; String buffer = base64 :: encode (( uint8_t * ) fb -> buf , fb -> len ); //encode in base64 the image String payload = \"{ \\\" inputs \\\" : [{ \\\" data \\\" : { \\\" image \\\" : { \\\" base64 \\\" : \\\" \" + buffer + \" \\\" }}}]}\" ; buffer = \"\" ; // Uncomment this if you want to show the payload // Serial.println(payload); esp_camera_fb_return ( fb ); // Generic model String model_id = \"aaa03c23b3724a16a56b629203edc62c\" ; HTTPClient http ; http . begin ( \"https://api.clarifai.com/v2/models/\" + model_id + \"/outputs\" ); http . addHeader ( \"Content-Type\" , \"application/json\" ); http . addHeader ( \"Authorization\" , \"Key your_key\" ); int response_code = http . POST ( payload ); }","title":"image classification"},{"location":"ESP32/ESP-EYE/#use-tensorflowjs","text":"https://www.survivingwithandroid.com/esp32-cam-tensorflow-js/","title":"use tensorflow.js"},{"location":"ESP32/ESP-NOW/","text":"\u4ec0\u4e48\u662f ESP-NOW\uff1f ESP-NOW \u662f\u7531\u4e50\u946b\u5f00\u53d1\u7684\u53e6\u4e00\u6b3e\u65e0\u7ebf\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u4ee5\u4f7f\u591a\u4e2a\u8bbe\u5907\u5728\u6ca1\u6709\u6216\u4e0d\u4f7f\u7528 Wi-Fi \u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u901a\u4fe1\u3002\u8fd9\u79cd\u534f\u8bae\u7c7b\u4f3c\u5e38\u89c1\u4e8e\u65e0\u7ebf\u9f20\u6807\u4e2d\u7684\u4f4e\u529f\u8017 2.4GHz \u65e0\u7ebf\u8fde\u63a5\u2014\u2014\u8bbe\u5907\u5728\u8fdb\u884c\u901a\u4fe1\u4e4b\u524d\u8981\u8fdb\u884c\u914d\u5bf9\u3002\u914d\u5bf9\u4e4b\u540e\uff0c\u8bbe\u5907\u4e4b\u95f4\u7684\u8fde\u63a5\u662f\u6301\u7eed\u7684\u3001\u70b9\u5bf9\u70b9\u7684\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u63e1\u624b\u534f\u8bae\u3002\u5b83\u662f\u4e00\u79cd\u77ed\u6570\u636e\u4f20\u8f93\u3001\u65e0\u8fde\u63a5\u7684\u5feb\u901f\u901a\u4fe1\u6280\u672f\uff0c\u53ef\u4ee5\u8ba9\u4f4e\u529f\u8017\u63a7\u5236\u5668\u76f4\u63a5\u63a7\u5236\u6240\u6709\u667a\u80fd\u8bbe\u5907\u800c\u65e0\u9700\u8fde\u63a5\u8def\u7531\u5668\uff0c\u9002\u7528\u4e8e\u667a\u80fd\u706f\u3001\u9065\u63a7\u63a7\u5236\u3001\u4f20\u611f\u5668\u6570\u636e\u56de\u4f20\u7b49\u573a\u666f\u3002 \u4f7f\u7528\u4e86 ESP-NOW \u901a\u4fe1\u4e4b\u540e\uff0c\u5982\u679c\u67d0\u4e00\u4e2a\u8bbe\u5907\u7a81\u7136\u65ad\u7535\u4e4b\u540e\uff0c\u53ea\u8981\u5b83\u4e00\u65e6\u91cd\u542f\uff0c\u5c31\u662f\u81ea\u52a8\u8fde\u63a5\u5230\u5bf9\u5e94\u7684\u8282\u70b9\u4e2d\u91cd\u65b0\u8fdb\u884c\u901a\u4fe1\u3002 ESP-NOW \u652f\u6301\u5982\u4e0b\u7279\u6027\uff1a \u5355\u64ad\u5305\u52a0\u5bc6\u6216\u5355\u64ad\u5305\u4e0d\u52a0\u5bc6\u901a\u4fe1\uff1b \u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u548c\u975e\u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u6df7\u5408\u4f7f\u7528\uff1b \u53ef\u643a\u5e26\u6700\u957f\u4e3a 250 \u5b57\u8282\u7684\u6709\u6548 payload \u6570\u636e\uff1b \u652f\u6301\u8bbe\u7f6e\u53d1\u9001\u56de\u8c03\u51fd\u6570\u4ee5\u901a\u77e5\u5e94\u7528\u5c42\u5e27\u53d1\u9001\u5931\u8d25\u6216\u6210\u529f\u3002 \u540c\u6837\uff0cESP-NOW \u4e5f\u5b58\u5728\u4e00\u4e9b\u9650\u5236\uff1a \u6682\u65f6\u4e0d\u652f\u6301\u5e7f\u64ad\u5305\uff1b \u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u6709\u9650\u5236\uff0cStation \u6a21\u5f0f\u4e0b\u6700\u591a\u652f\u630110 \u4e2a\u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\uff1bSoftAP \u6216 SoftAP + Station \u6df7\u5408\u6a21\u5f0f\u4e0b\u6700\u591a\u652f\u6301 6 \u4e2a\u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u3002\u975e\u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u652f\u6301\u82e5\u5e72\uff0c\u4e0e\u52a0\u5bc6\u8bbe\u5907\u603b\u6570\u548c\u4e0d\u8d85\u8fc7 20 \u4e2a\uff1b \u6709\u6548 payload \u9650\u5236\u4e3a 250 \u5b57\u8282\u3002 ESP-NOW \u901a\u4fe1\u65b9\u5f0f ESP-NOW \u652f\u6301\u591a\u79cd\u901a\u4fe1\u65b9\u5f0f\uff1a \u4e00\u5bf9\u4e00\u5355\u5411\u901a\u4fe1 \u4e00\u5bf9\u591a\u5355\u5411\u901a\u4fe1 \u591a\u5bf9\u4e00\u5355\u5411\u901a\u4fe1 \u53cc\u5411\u901a\u4fe1 \u4e00\u5bf9\u4e00\u5355\u5411\u901a\u4fe1 \u4e00\u5bf9\u4e00\u5355\u5411\u901a\u4fe1\u662f\u6700\u7b80\u5355\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u8bbe\u5907\u8d1f\u8d23\u53d1\u9001\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u8bbe\u5907\u8d1f\u8d23\u63a5\u6536\u6570\u636e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e00\u5bf9\u591a\u5355\u5411\u901a\u4fe1 \u4e00\u5bf9\u591a\u5355\u5411\u901a\u4fe1\u662f\u6307\u4e00\u4e2a\u8bbe\u5907\u8d1f\u8d23\u53d1\u9001\u6570\u636e\uff0c\u591a\u4e2a\u8bbe\u5907\u8d1f\u8d23\u63a5\u6536\u6570\u636e\u3002\u5176\u4e2d\u6570\u636e\u53d1\u9001\u7aef\u5c31\u7c7b\u4f3c\u4e0e\u9065\u63a7\u5668\uff0c\u6570\u636e\u63a5\u6536\u7aef\u53ef\u4ee5\u8d1f\u8d23\u5206\u522b\u63a7\u5236\u4e0d\u540c\u7684\u8bbe\u5907\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u591a\u5bf9\u4e00\u5355\u5411\u901a\u4fe1 \u591a\u5bf9\u4e00\u5355\u5411\u901a\u4fe1\u662f\u6307\u4e00\u4e2a\u8bbe\u5907\u4e13\u95e8\u8d1f\u8d23\u63a5\u6536\u6570\u636e\uff0c\u5176\u4f59\u8bbe\u5907\u5219\u5411\u5b83\u53d1\u9001\u6570\u636e\u3002\u8fd9\u79cd\u573a\u666f\u4e3b\u8981\u5e94\u7528\u4e8e\u591a\u4e2a\u8bbe\u5907\u91c7\u96c6\u4e0d\u540c\u7684\u4f20\u611f\u5668\u6570\u636e\uff0c\u7136\u540e\u5411\u4e2d\u5fc3\u6216\u8005\u603b\u63a7\u5236\u5668\u6c47\u603b\u6570\u636e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u53cc\u5411\u901a\u4fe1 \u76f8\u5bf9\u4e8e\u5355\u5411\u901a\u4fe1\uff0c\u53cc\u5411\u901a\u4fe1\u662f\u6307\u901a\u4fe1\u7684\u53cc\u65b9\u65e2\u53ef\u4ee5\u53d1\u9001\u6570\u636e\u3001\u53c8\u53ef\u4ee5\u63a5\u6536\u6570\u636e\u3002\u4e00\u5bf9\u4e00\u53cc\u5411\u901a\u4fe1\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728\u53cc\u5411\u901a\u4fe1\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u52a0\u5165\u66f4\u591a\u7684\u8bbe\u5907\uff0c\u8fdb\u884c\u4e24\u4e24\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5f53\u7136\u4ee5\u4e0a\u7684\u8fd9\u4e9b\u901a\u4fe1\uff0c\u4e0d\u4ec5\u4ec5\u9650\u4e8e ESP32 \u5f00\u53d1\u677f\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u6240\u6709\u652f\u6301 ESP-NOW \u7684\u8bbe\u5907\u4e4b\u95f4\u90fd\u53ef\u4ee5\u8fdb\u884c\u901a\u4fe1\uff0c\u6bd4\u5982 ESP32 \u4e0e ESP32 \u4e4b\u95f4\u3001ESP8266 \u4e0e ESP8266 \u4e4b\u95f4\u3001\u751a\u81f3 ESP32 \u4e0e ESP8266 \u4e4b\u95f4\uff0c\u90fd\u53ef\u4ee5\u8fdb\u884c ESP-NOW \u65e0\u7ebf\u901a\u4fe1\u3002 \u5b9e\u4f8b \u4e0b\u9762\u6211\u4eec\u5c06\u901a\u8fc7\u5b9e\u9645\u7a0b\u5e8f\u6765\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 ESP-NOW \u8fdb\u884c\u901a\u4fe1\uff0c\u6b64\u5904\u4ee5 ESP32 \u4e3a\u4f8b\uff0c\u5176\u4ed6\u5f00\u53d1\u677f\u65b9\u6cd5\u7c7b\u4f3c\u3002 \u83b7\u53d6\u8bbe\u5907 MAC \u5730\u5740 ESP-NOW \u662f\u70b9\u5bf9\u70b9\u7684\u901a\u8baf\u65b9\u5f0f\uff0c\u5728\u53d1\u9001\u6570\u636e\u65f6\u9700\u8981\u6307\u5b9a\u63a5\u6536\u8bbe\u5907\uff0c\u8fd9\u597d\u6bd4\u4f60\u7ed9\u5bf9\u65b9\u53d1\u9001 QQ \u6d88\u606f\u5fc5\u987b\u77e5\u9053\u5bf9\u65b9\u7684 QQ \u53f7\u4e00\u6837\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u4e00\u822c\u901a\u8fc7\u8bbe\u5907\u7684 MAC \u5730\u5740\u4f5c\u4e3a\u533a\u5206\u4e0d\u540c\u63a5\u6536\u8bbe\u5907\u7684\u51ed\u8bc1\u3002\u90a3\u4ec0\u4e48\u662f MAC \u5730\u5740\u5462\uff1fMAC \u5730\u5740\u4e5f\u53eb\u7269\u7406\u5730\u5740\u3001\u786c\u4ef6\u5730\u5740\uff0c\u6bcf\u4e2a\u8bbe\u5907\u7684 MAC \u5730\u5740\u5728\u51fa\u5382\u65f6\u90fd\u662f\u4e0d\u540c\u7684\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7 Arduino \u4ee3\u7801\u6765\u83b7\u53d6 ESP32 \u5f00\u53d1\u677f\u7684 MAC \u5730\u5740\uff1a #include <WiFi.h> void setup () { Serial . begin ( 9600 ); Serial . println (); #ifdef ESP8266 Serial . print ( \"ESP8266 Board MAC Address: \" ); Serial . println ( WiFi . macAddress ()); #elif defined ESP32 WiFi . mode ( WIFI_MODE_STA ); Serial . print ( \"ESP32 Board MAC Address: \" ); Serial . println ( WiFi . macAddress ()); #endif } void loop () { } \u4e0a\u4f20\u7a0b\u5e8f\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u5c31\u53ef\u83b7\u5f97\u4e0d\u540c\u5f00\u53d1\u677f\u7684 MAC \u5730\u5740\uff1a \u5176\u4e2d 24:6F:28:88:62:80 \u5c31\u662f\u8be5 ESP32 \u5f00\u53d1\u677f\u7684 MAC \u5730\u5740\uff0c\u8be5\u5730\u5740\u7531 6 \u4f4d 16 \u8fdb\u5236\u6570\u6784\u6210\uff0c\u6bcf\u4e00\u5757\u5f00\u53d1\u677f\u90fd\u6709\u5bf9\u5e94\u72ec\u4e00\u65e0\u4e8c\u7684 MAC \u5730\u5740\u3002\u6211\u4eec\u8bb0\u5f55\u4e0b\u8fd9\u4e2a MAC \u5730\u5740\uff0c\u540e\u9762\u4f1a\u7528\u5230\u3002 \u5f53\u7136\u5728 ESP-NOW \u901a\u4fe1\u4e2d\uff0c\u4e0d\u6b62\u4e00\u5757\u5f00\u53d1\u677f\uff0c\u6211\u4eec\u7528\u540c\u6837\u7684\u65b9\u5f0f\uff0c\u8bb0\u5f55\u4e0b\u5176\u4ed6\u5f00\u53d1\u677f\u7684 MAC \u5730\u5740\u3002 ESP-NOW \u6570\u636e\u53d1\u9001 \u83b7\u53d6\u5230 MAC \u5730\u5740\u540e\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u7f16\u5199\u53d1\u9001\u6570\u636e\u7684\u7a0b\u5e8f\u3002 \u8fd9\u91cc\u4ee5\u638c\u63a7\u677f\u4e3a\u4f8b\uff0c\u5206\u522b\u5c06\u638c\u63a7\u677f\u4e0a\u7684\u5149\u7ebf\u4f20\u611f\u5668\u548c\u58f0\u97f3\u4f20\u611f\u5668\u6570\u636e\u53d1\u9001\u5230\u53e6\u4e00\u5757\u638c\u63a7\u677f\u4e0a\u3002\u5148\u6765\u770b\u4e00\u4e0b\u5b8c\u6574\u7684\u7a0b\u5e8f\u518d\u8fdb\u884c\u8bb2\u89e3\uff1a #include <WiFi.h> #include <esp_now.h> // \u8bbe\u7f6e\u638c\u63a7\u677f\u58f0\u97f3\u4f20\u611f\u5668\u4e0e\u5149\u7ebf\u4f20\u611f\u5668\u5f15\u811a\u7f16\u53f7 const int soundPin = 36 ; const int lightPin = 39 ; // \u8bbe\u7f6e\u6570\u636e\u7ed3\u6784\u4f53 typedef struct struct_message { String board_name ; double light ; double sound ; } struct_message ; struct_message myData ; // \u63a5\u6536\u8bbe\u5907\u7684 MAC \u5730\u5740 uint8_t broadcastAddress [] = { 0x24 , 0x6F , 0x28 , 0x88 , 0x62 , 0x80 }; // \u6570\u636e\u53d1\u9001\u56de\u8c03\u51fd\u6570 void OnDataSent ( const uint8_t * mac_addr , esp_now_send_status_t status ) { char macStr [ 18 ]; Serial . print ( \"Packet to: \" ); snprintf ( macStr , sizeof ( macStr ), \"%02x:%02x:%02x:%02x:%02x:%02x\" , mac_addr [ 0 ], mac_addr [ 1 ], mac_addr [ 2 ], mac_addr [ 3 ], mac_addr [ 4 ], mac_addr [ 5 ]); Serial . println ( macStr ); Serial . print ( \"Send status: \" ); Serial . println ( status == ESP_NOW_SEND_SUCCESS ? \"Delivery Success\" : \"Delivery Fail\" ); Serial . println (); } void setup () { Serial . begin ( 9600 ); // \u521d\u59cb\u5316 ESP-NOW WiFi . mode ( WIFI_STA ); if ( esp_now_init () != ESP_OK ) { Serial . println ( \"Error initializing ESP-NOW\" ); return ; } // \u8bbe\u7f6e\u53d1\u9001\u6570\u636e\u56de\u8c03\u51fd\u6570 esp_now_register_send_cb ( OnDataSent ); // \u7ed1\u5b9a\u6570\u636e\u63a5\u6536\u7aef esp_now_peer_info_t peerInfo ; memcpy ( peerInfo . peer_addr , broadcastAddress , 6 ); peerInfo . channel = 0 ; peerInfo . encrypt = false ; // \u68c0\u67e5\u8bbe\u5907\u662f\u5426\u914d\u5bf9\u6210\u529f if ( esp_now_add_peer ( & peerInfo ) != ESP_OK ) { Serial . println ( \"Failed to add peer\" ); return ; } } void loop () { // \u8bbe\u7f6e\u8981\u53d1\u9001\u7684\u6570\u636e myData . board_name = \"mPython_#1\" ; myData . light = analogRead ( lightPin ); myData . sound = analogRead ( soundPin ); // \u53d1\u9001\u6570\u636e esp_err_t result = esp_now_send ( broadcastAddress , ( uint8_t * ) & myData , sizeof ( myData )); // \u68c0\u67e5\u6570\u636e\u662f\u5426\u53d1\u9001\u6210\u529f if ( result == ESP_OK ) { Serial . println ( \"Sent with success\" ); } else { Serial . println ( \"Error sending the data\" ); } delay ( 1000 ); } \u8be5\u4f8b\u5b50\u6f14\u793a\u7684\u662f\u5c06\u5176\u4e2d\u4e00\u5757 ESP32 \u5f00\u53d1\u677f\uff08\u6b64\u5904\u4ee5\u638c\u63a7\u677f\u4e3a\u4f8b\uff09\u68c0\u6d4b\u5230\u7684\u6570\u636e\u53d1\u9001\u7ed9\u53e6\u4e00\u5757 ESP32 \u5f00\u53d1\u677f\u3002 \u9996\u5148\u5728\u5f00\u5934\u5f15\u5165\u4e86 ESP-NOW \u76f8\u5173\u7684\u5934\u6587\u4ef6\uff1aWiFi.h \u4e0e esp_now.h\u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4f20\u611f\u5668\u7684\u5f15\u811a\u548c\u4e00\u4e2a\u540d\u4e3a myData \u7684\u7ed3\u6784\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u7531 3 \u4e2a\u4e0d\u540c\u6570\u636e\u7ec4\u6210\uff0c\u5206\u522b\u662f\u5f00\u53d1\u677f\u540d\u79f0\uff08board_name\uff09\uff0c\u5149\u7ebf\u503c\uff08light\uff09\u4e0e\u58f0\u97f3\u503c\uff08sound\uff09\uff0c\u5176\u4e2d\u5f00\u53d1\u677f\u540d\u79f0\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5149\u7ebf\u503c\u4e0e\u58f0\u97f3\u503c\u4e3a\u6d6e\u70b9\u578b\u6570\u636e\u3002\u82e5\u6211\u4eec\u540c\u65f6\u6709\u591a\u4e2a\u4f20\u611f\u5668\u6570\u636e\u68c0\u6d4b\u7aef\uff0c\u53ef\u4ee5\u901a\u5f00\u53d1\u677f\u540d\u79f0\u6765\u533a\u5206\u6765\u81ea\u8bbe\u5907\u7684\u6570\u636e\u3002 \u63a5\u7740\u7528uint8_t broadcastAddress[] = {0x24, 0x6F, 0x28, 0x88, 0x62, 0x80} \u5b9a\u4e49\u4e86\u63a5\u6536\u8bbe\u5907\u7684 MAC \u5730\u5740\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u6ce8\u518c\u4e86\u4e00\u4e2a OnDataSent() \u7684\u6570\u636e\u53d1\u9001\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u53cd\u9988\u4e86 ESP-NOW \u6570\u636e\u7684\u53d1\u9001\u72b6\u6001\uff0c\u8be5\u4f8b\u5b50\u6bcf\u9694\u4e00\u79d2\u5c06\u5149\u7ebf\u503c\u548c\u58f0\u97f3\u503c\u53d1\u9001\u5230\u6307\u5b9a MAC \u5730\u5740\u7684\u5f00\u53d1\u677f\u3002 \u5728 setup() \u4e2d\uff0c\u6211\u4eec\u5148\u662f\u521d\u59cb\u5316\u4e86 ESP-NOW \u76f8\u5173\u7684\u529f\u80fd\uff0c\u7136\u540e\u8bbe\u7f6e\u4e86\u53d1\u9001\u6570\u636e\u7684\u56de\u8c03\u51fd\u6570\u3001\u4ee5\u53ca\u7ed1\u5b9a\u4e86\u6570\u636e\u63a5\u6536\u7aef\u7684 MAC \u5730\u5740\u3002 \u5728 loop() \u4e2d\uff0c\u6211\u4eec\u4e0d\u65ad\u8bfb\u53d6\u5149\u7ebf\u503c\u548c\u58f0\u97f3\u503c\uff0c\u5e76\u5c06\u4ed6\u4eec\u8d4b\u503c\u7ed9 myData \u7ed3\u6784\u4f53\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u53d1\u9001\u5230\u63a5\u6536\u7aef\uff0c\u5e76\u4e14\u53bb\u5224\u65ad\u6570\u636e\u662f\u5426\u53d1\u9001\u6210\u529f\u3002 ESP-NOW \u6570\u636e\u63a5\u6536 \u63a5\u4e0b\u6765\u6211\u4eec\u770b\u770b\u63a5\u6536\u7aef\u7684\u7a0b\u5e8f\u5982\u4f55\u7f16\u5199\u3002 \u7f16\u5199\u5982\u4e0b\u7a0b\u5e8f\uff0c\u4e0a\u4f20\u5230\u53e6\u4e00\u5757\u638c\u63a7\u677f\uff08\u524d\u9762\u6253\u5370\u8fc7 MAC \u5730\u5740\u7684\u90a3\u5757\u638c\u63a7\u677f\uff09\u4e2d\u3002 #include <WiFi.h> #include <esp_now.h> // \u8bbe\u7f6e\u6570\u636e\u7ed3\u6784\u4f53 typedef struct struct_message { String board_name ; double light ; double sound ; } struct_message ; struct_message myData ; // \u6570\u636e\u63a5\u6536\u56de\u8c03\u51fd\u6570 void OnDataRecv ( const uint8_t * mac , const uint8_t * incomingData , int len ) { memcpy ( & myData , incomingData , sizeof ( myData )); Serial . print ( \"board_name: \" ); Serial . println ( myData . board_name ); Serial . print ( \"light: \" ); Serial . println ( myData . light ); Serial . print ( \"sound:\" ); Serial . println ( myData . sound ); Serial . println (); } void setup () { Serial . begin ( 9600 ); // \u521d\u59cb\u5316 ESP-NOW WiFi . mode ( WIFI_STA ); if ( esp_now_init () != 0 ) { Serial . println ( \"Error initializing ESP-NOW\" ); return ; } // \u8bbe\u7f6e\u63a5\u6536\u6570\u636e\u56de\u8c03\u51fd\u6570 esp_now_register_recv_cb ( OnDataRecv ); } void loop () { } \u540c\u6837\uff0c\u6211\u4eec\u5728\u5f00\u5934\u5f15\u5165\u4e86 ESP-NOW \u76f8\u5173\u7684\u5934\u6587\u4ef6\uff1aWiFi.h \u4e0e esp_now.h\u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4f20\u611f\u5668\u7684\u5f15\u811a\u548c\u4e00\u4e2a\u540d\u4e3a myData \u7684\u7ed3\u6784\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u7531 3 \u4e2a\u4e0d\u540c\u6570\u636e\u7ec4\u6210\uff0c\u5206\u522b\u662f\u5f00\u53d1\u677f\u540d\u79f0\uff08board_name\uff09\uff0c\u5149\u7ebf\u503c\uff08light\uff09\u4e0e\u58f0\u97f3\u503c\uff08sound\uff09\uff0c\u4e0e\u6570\u636e\u53d1\u9001\u7aef\u5b9a\u4e49\u7684\u4e00\u6a21\u4e00\u6837\u3002 \u6211\u4eec\u6ce8\u518c\u4e86\u4e00\u4e2a OnDataRecv() \u7684\u6570\u636e\u63a5\u6536\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u53cd\u9988\u4e86 ESP-NOW \u6570\u636e\u7684\u63a5\u6536\u72b6\u6001\uff0c\u5f53\u63a5\u6536\u5230\u6765\u81ea\u5176\u4ed6\u5f00\u53d1\u677f\u7684\u6d88\u606f\u65f6\uff0c\u5c06\u6d88\u606f\u4fdd\u5b58\u5230\u7ed3\u6784\u4f53 myData \u4e2d\uff0c\u5e76\u5728\u4e32\u53e3\u4e2d\u6253\u5370\u51fa\u63a5\u6536\u5230\u7684\u6d88\u606f\u3002 \u8fd9\u91cc ESP-NOW \u7684\u6d88\u606f\u7684\u63a5\u6536\u5c5e\u4e8e\u65e0\u963b\u585e\u7684\u63a5\u6536\u65b9\u5f0f\uff0c\u4e0d\u53d7\u5ef6\u65f6\u51fd\u6570 delay() \u7684\u5f71\u54cd\uff0c\u8fd9\u610f\u5473\u7740 loop() \u91cc\u9762\u53ef\u4ee5\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u800c\u4e0d\u4f1a\u5f71\u54cd\u5230\u677f\u95f4\u7684\u901a\u8baf\uff0c\u540c\u4e00\u5757\u677f\u5b50\u65e2\u53ef\u4ee5\u5f53\u505a\u63a5\u6536\u65b9\u4ea6\u53ef\u4ee5\u5f53\u505a\u53d1\u9001\u65b9\u4e92\u4e0d\u5f71\u54cd\u3002\u8fd9\u91cc\u53ef\u4ee5\u540c\u65f6\u63a5\u6536\u6765\u81ea\u591a\u5757\u677f\u5b50\u7684\u4fe1\u606f\uff0c\u4f46\u524d\u63d0\u662f\u4fdd\u6301\u76f8\u540c\u7684\u7ed3\u6784\u4f53\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e0d\u7528\u7ed3\u6784\u4f53\u7528\u666e\u901a\u7684\u5355\u4e00\u7c7b\u578b\u7684\u6570\u636e\u7c7b\u578b\u6bd4\u5982\u5b57\u7b26\u4e32\u4e4b\u7c7b\u7684\uff0c\u8fd9\u91cc\u7528\u7ed3\u6784\u4f53\u7684\u539f\u56e0\u662f\u9700\u8981\u53d1\u9001\u7684\u6570\u636e\u7c7b\u578b\u6709\u591a\u4e2a\uff0c\u4f7f\u7528\u7ed3\u6784\u4f53\u76f8\u5bf9\u7075\u6d3b\u3002 \u5b9e\u9a8c\u7ed3\u679c \u5728\u4e24\u5757 ESP32 \u5f00\u53d1\u677f\u4e2d\u5206\u522b\u4e0a\u4f20\u53d1\u9001\u548c\u63a5\u6536\u7684\u7a0b\u5e8f\uff0c\u7136\u540e\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u4e00\u4e0b\u6548\u679c\u3002 \u53d1\u9001\u7aef\u4e32\u53e3\u76d1\u89c6\u5668\u5982\u4e0b\u56fe\uff1a \u63a5\u6536\u7aef\u4e32\u53e3\u76d1\u89c6\u5668\u5982\u4e0b\u56fe\uff1a \u53ef\u4ee5\u770b\u5230\u53d1\u9001\u7aef\u8bbe\u5907\u548c\u63a5\u6536\u7aef\u8bbe\u5907\u90fd\u6b63\u5e38\u8fd0\u884c\uff0c\u5e76\u4e14\u5728\u4e32\u53e3\u4e2d\u8f93\u51fa\u4e86\u76f8\u5e94\u7684\u4fe1\u606f\u3002 \u5c0f\u7ed3 \u81f3\u6b64\uff0cESP-NOW \u7684\u7b80\u5355\u5e94\u7528\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u6211\u4eec\u53c8\u5b66\u4e86\u4e00\u79cd\u65b0\u7684\u65e0\u7ebf\u901a\u4fe1\u65b9\u5f0f\u3002\u4e0a\u9762\u53ea\u662f\u7b80\u5355\u6f14\u793a\u4e86\u4e00\u5bf9\u4e00\u6570\u636e\u53d1\u9001\u548c\u63a5\u6536\u7684\u793a\u4f8b\uff0c\u5176\u5b9e\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u4e00\u3001\u591a\u5bf9\u591a\u7684\u6570\u636e\u53d1\u9001\u548c\u63a5\u6536\u4e5f\u662f\u4e00\u6837\u7684\u9053\u7406\uff0c\u53ea\u9700\u589e\u52a0\u76f8\u5e94\u7684\u4ee3\u7801\u5373\u53ef\u3002 \u4f60\u53ef\u4ee5\u8bd5\u8bd5\u5c06\u6559\u7a0b\u91cc\u7684\u6570\u636e\u53d1\u9001\u65f6\u95f4\u95f4\u9694\u6539\u5c0f\u4e00\u70b9\uff0c\u770b\u770b ESP-NOW \u901f\u5ea6\u7a76\u7adf\u6709\u591a\u5feb\u3002\u5728\u4ee5\u540e\u7684\u9879\u76ee\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5927\u91cf\u8fd0\u7528 ESP \u7cfb\u5217\u5f00\u53d1\u677f\u65f6\uff0c\u53ef\u4ee5\u501f\u52a9 ESP-NOW \u6280\u672f\u53ef\u4ee5\u8ba9\u6240\u6709\u7684 DIY \u9879\u76ee\u6709\u673a\u7684\u8054\u7cfb\u8d77\u6765\uff0c\u4ece\u800c\u5b9e\u73b0\u771f\u6b63\u7684\u4e07\u7269\u76f8\u8fde\uff0c\u8fd9\u4e2a\u5177\u4f53\u7684\u5e94\u7528\u6211\u4eec\u5c06\u5728\u4ee5\u540e\u7684\u5b66\u4e60\u4e2d\u9010\u6b65\u4e3a\u5927\u5bb6\u8fdb\u884c\u8bb2\u89e3\u3002","title":"ESP NOW"},{"location":"ESP32/ESP-NOW/#esp-now","text":"ESP-NOW \u662f\u7531\u4e50\u946b\u5f00\u53d1\u7684\u53e6\u4e00\u6b3e\u65e0\u7ebf\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u4ee5\u4f7f\u591a\u4e2a\u8bbe\u5907\u5728\u6ca1\u6709\u6216\u4e0d\u4f7f\u7528 Wi-Fi \u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u901a\u4fe1\u3002\u8fd9\u79cd\u534f\u8bae\u7c7b\u4f3c\u5e38\u89c1\u4e8e\u65e0\u7ebf\u9f20\u6807\u4e2d\u7684\u4f4e\u529f\u8017 2.4GHz \u65e0\u7ebf\u8fde\u63a5\u2014\u2014\u8bbe\u5907\u5728\u8fdb\u884c\u901a\u4fe1\u4e4b\u524d\u8981\u8fdb\u884c\u914d\u5bf9\u3002\u914d\u5bf9\u4e4b\u540e\uff0c\u8bbe\u5907\u4e4b\u95f4\u7684\u8fde\u63a5\u662f\u6301\u7eed\u7684\u3001\u70b9\u5bf9\u70b9\u7684\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u63e1\u624b\u534f\u8bae\u3002\u5b83\u662f\u4e00\u79cd\u77ed\u6570\u636e\u4f20\u8f93\u3001\u65e0\u8fde\u63a5\u7684\u5feb\u901f\u901a\u4fe1\u6280\u672f\uff0c\u53ef\u4ee5\u8ba9\u4f4e\u529f\u8017\u63a7\u5236\u5668\u76f4\u63a5\u63a7\u5236\u6240\u6709\u667a\u80fd\u8bbe\u5907\u800c\u65e0\u9700\u8fde\u63a5\u8def\u7531\u5668\uff0c\u9002\u7528\u4e8e\u667a\u80fd\u706f\u3001\u9065\u63a7\u63a7\u5236\u3001\u4f20\u611f\u5668\u6570\u636e\u56de\u4f20\u7b49\u573a\u666f\u3002 \u4f7f\u7528\u4e86 ESP-NOW \u901a\u4fe1\u4e4b\u540e\uff0c\u5982\u679c\u67d0\u4e00\u4e2a\u8bbe\u5907\u7a81\u7136\u65ad\u7535\u4e4b\u540e\uff0c\u53ea\u8981\u5b83\u4e00\u65e6\u91cd\u542f\uff0c\u5c31\u662f\u81ea\u52a8\u8fde\u63a5\u5230\u5bf9\u5e94\u7684\u8282\u70b9\u4e2d\u91cd\u65b0\u8fdb\u884c\u901a\u4fe1\u3002 ESP-NOW \u652f\u6301\u5982\u4e0b\u7279\u6027\uff1a \u5355\u64ad\u5305\u52a0\u5bc6\u6216\u5355\u64ad\u5305\u4e0d\u52a0\u5bc6\u901a\u4fe1\uff1b \u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u548c\u975e\u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u6df7\u5408\u4f7f\u7528\uff1b \u53ef\u643a\u5e26\u6700\u957f\u4e3a 250 \u5b57\u8282\u7684\u6709\u6548 payload \u6570\u636e\uff1b \u652f\u6301\u8bbe\u7f6e\u53d1\u9001\u56de\u8c03\u51fd\u6570\u4ee5\u901a\u77e5\u5e94\u7528\u5c42\u5e27\u53d1\u9001\u5931\u8d25\u6216\u6210\u529f\u3002 \u540c\u6837\uff0cESP-NOW \u4e5f\u5b58\u5728\u4e00\u4e9b\u9650\u5236\uff1a \u6682\u65f6\u4e0d\u652f\u6301\u5e7f\u64ad\u5305\uff1b \u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u6709\u9650\u5236\uff0cStation \u6a21\u5f0f\u4e0b\u6700\u591a\u652f\u630110 \u4e2a\u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\uff1bSoftAP \u6216 SoftAP + Station \u6df7\u5408\u6a21\u5f0f\u4e0b\u6700\u591a\u652f\u6301 6 \u4e2a\u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u3002\u975e\u52a0\u5bc6\u914d\u5bf9\u8bbe\u5907\u652f\u6301\u82e5\u5e72\uff0c\u4e0e\u52a0\u5bc6\u8bbe\u5907\u603b\u6570\u548c\u4e0d\u8d85\u8fc7 20 \u4e2a\uff1b \u6709\u6548 payload \u9650\u5236\u4e3a 250 \u5b57\u8282\u3002","title":"\u4ec0\u4e48\u662f ESP-NOW\uff1f"},{"location":"ESP32/ESP-NOW/#esp-now_1","text":"ESP-NOW \u652f\u6301\u591a\u79cd\u901a\u4fe1\u65b9\u5f0f\uff1a \u4e00\u5bf9\u4e00\u5355\u5411\u901a\u4fe1 \u4e00\u5bf9\u591a\u5355\u5411\u901a\u4fe1 \u591a\u5bf9\u4e00\u5355\u5411\u901a\u4fe1 \u53cc\u5411\u901a\u4fe1","title":"ESP-NOW \u901a\u4fe1\u65b9\u5f0f"},{"location":"ESP32/ESP-NOW/#_1","text":"\u4e00\u5bf9\u4e00\u5355\u5411\u901a\u4fe1\u662f\u6700\u7b80\u5355\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u8bbe\u5907\u8d1f\u8d23\u53d1\u9001\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u8bbe\u5907\u8d1f\u8d23\u63a5\u6536\u6570\u636e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u4e00\u5bf9\u4e00\u5355\u5411\u901a\u4fe1"},{"location":"ESP32/ESP-NOW/#_2","text":"\u4e00\u5bf9\u591a\u5355\u5411\u901a\u4fe1\u662f\u6307\u4e00\u4e2a\u8bbe\u5907\u8d1f\u8d23\u53d1\u9001\u6570\u636e\uff0c\u591a\u4e2a\u8bbe\u5907\u8d1f\u8d23\u63a5\u6536\u6570\u636e\u3002\u5176\u4e2d\u6570\u636e\u53d1\u9001\u7aef\u5c31\u7c7b\u4f3c\u4e0e\u9065\u63a7\u5668\uff0c\u6570\u636e\u63a5\u6536\u7aef\u53ef\u4ee5\u8d1f\u8d23\u5206\u522b\u63a7\u5236\u4e0d\u540c\u7684\u8bbe\u5907\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u4e00\u5bf9\u591a\u5355\u5411\u901a\u4fe1"},{"location":"ESP32/ESP-NOW/#_3","text":"\u591a\u5bf9\u4e00\u5355\u5411\u901a\u4fe1\u662f\u6307\u4e00\u4e2a\u8bbe\u5907\u4e13\u95e8\u8d1f\u8d23\u63a5\u6536\u6570\u636e\uff0c\u5176\u4f59\u8bbe\u5907\u5219\u5411\u5b83\u53d1\u9001\u6570\u636e\u3002\u8fd9\u79cd\u573a\u666f\u4e3b\u8981\u5e94\u7528\u4e8e\u591a\u4e2a\u8bbe\u5907\u91c7\u96c6\u4e0d\u540c\u7684\u4f20\u611f\u5668\u6570\u636e\uff0c\u7136\u540e\u5411\u4e2d\u5fc3\u6216\u8005\u603b\u63a7\u5236\u5668\u6c47\u603b\u6570\u636e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u591a\u5bf9\u4e00\u5355\u5411\u901a\u4fe1"},{"location":"ESP32/ESP-NOW/#_4","text":"\u76f8\u5bf9\u4e8e\u5355\u5411\u901a\u4fe1\uff0c\u53cc\u5411\u901a\u4fe1\u662f\u6307\u901a\u4fe1\u7684\u53cc\u65b9\u65e2\u53ef\u4ee5\u53d1\u9001\u6570\u636e\u3001\u53c8\u53ef\u4ee5\u63a5\u6536\u6570\u636e\u3002\u4e00\u5bf9\u4e00\u53cc\u5411\u901a\u4fe1\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728\u53cc\u5411\u901a\u4fe1\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u52a0\u5165\u66f4\u591a\u7684\u8bbe\u5907\uff0c\u8fdb\u884c\u4e24\u4e24\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5f53\u7136\u4ee5\u4e0a\u7684\u8fd9\u4e9b\u901a\u4fe1\uff0c\u4e0d\u4ec5\u4ec5\u9650\u4e8e ESP32 \u5f00\u53d1\u677f\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u6240\u6709\u652f\u6301 ESP-NOW \u7684\u8bbe\u5907\u4e4b\u95f4\u90fd\u53ef\u4ee5\u8fdb\u884c\u901a\u4fe1\uff0c\u6bd4\u5982 ESP32 \u4e0e ESP32 \u4e4b\u95f4\u3001ESP8266 \u4e0e ESP8266 \u4e4b\u95f4\u3001\u751a\u81f3 ESP32 \u4e0e ESP8266 \u4e4b\u95f4\uff0c\u90fd\u53ef\u4ee5\u8fdb\u884c ESP-NOW \u65e0\u7ebf\u901a\u4fe1\u3002","title":"\u53cc\u5411\u901a\u4fe1"},{"location":"ESP32/ESP-NOW/#_5","text":"\u4e0b\u9762\u6211\u4eec\u5c06\u901a\u8fc7\u5b9e\u9645\u7a0b\u5e8f\u6765\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 ESP-NOW \u8fdb\u884c\u901a\u4fe1\uff0c\u6b64\u5904\u4ee5 ESP32 \u4e3a\u4f8b\uff0c\u5176\u4ed6\u5f00\u53d1\u677f\u65b9\u6cd5\u7c7b\u4f3c\u3002","title":"\u5b9e\u4f8b"},{"location":"ESP32/ESP-NOW/#mac","text":"ESP-NOW \u662f\u70b9\u5bf9\u70b9\u7684\u901a\u8baf\u65b9\u5f0f\uff0c\u5728\u53d1\u9001\u6570\u636e\u65f6\u9700\u8981\u6307\u5b9a\u63a5\u6536\u8bbe\u5907\uff0c\u8fd9\u597d\u6bd4\u4f60\u7ed9\u5bf9\u65b9\u53d1\u9001 QQ \u6d88\u606f\u5fc5\u987b\u77e5\u9053\u5bf9\u65b9\u7684 QQ \u53f7\u4e00\u6837\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u4e00\u822c\u901a\u8fc7\u8bbe\u5907\u7684 MAC \u5730\u5740\u4f5c\u4e3a\u533a\u5206\u4e0d\u540c\u63a5\u6536\u8bbe\u5907\u7684\u51ed\u8bc1\u3002\u90a3\u4ec0\u4e48\u662f MAC \u5730\u5740\u5462\uff1fMAC \u5730\u5740\u4e5f\u53eb\u7269\u7406\u5730\u5740\u3001\u786c\u4ef6\u5730\u5740\uff0c\u6bcf\u4e2a\u8bbe\u5907\u7684 MAC \u5730\u5740\u5728\u51fa\u5382\u65f6\u90fd\u662f\u4e0d\u540c\u7684\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7 Arduino \u4ee3\u7801\u6765\u83b7\u53d6 ESP32 \u5f00\u53d1\u677f\u7684 MAC \u5730\u5740\uff1a #include <WiFi.h> void setup () { Serial . begin ( 9600 ); Serial . println (); #ifdef ESP8266 Serial . print ( \"ESP8266 Board MAC Address: \" ); Serial . println ( WiFi . macAddress ()); #elif defined ESP32 WiFi . mode ( WIFI_MODE_STA ); Serial . print ( \"ESP32 Board MAC Address: \" ); Serial . println ( WiFi . macAddress ()); #endif } void loop () { } \u4e0a\u4f20\u7a0b\u5e8f\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u5c31\u53ef\u83b7\u5f97\u4e0d\u540c\u5f00\u53d1\u677f\u7684 MAC \u5730\u5740\uff1a \u5176\u4e2d 24:6F:28:88:62:80 \u5c31\u662f\u8be5 ESP32 \u5f00\u53d1\u677f\u7684 MAC \u5730\u5740\uff0c\u8be5\u5730\u5740\u7531 6 \u4f4d 16 \u8fdb\u5236\u6570\u6784\u6210\uff0c\u6bcf\u4e00\u5757\u5f00\u53d1\u677f\u90fd\u6709\u5bf9\u5e94\u72ec\u4e00\u65e0\u4e8c\u7684 MAC \u5730\u5740\u3002\u6211\u4eec\u8bb0\u5f55\u4e0b\u8fd9\u4e2a MAC \u5730\u5740\uff0c\u540e\u9762\u4f1a\u7528\u5230\u3002 \u5f53\u7136\u5728 ESP-NOW \u901a\u4fe1\u4e2d\uff0c\u4e0d\u6b62\u4e00\u5757\u5f00\u53d1\u677f\uff0c\u6211\u4eec\u7528\u540c\u6837\u7684\u65b9\u5f0f\uff0c\u8bb0\u5f55\u4e0b\u5176\u4ed6\u5f00\u53d1\u677f\u7684 MAC \u5730\u5740\u3002","title":"\u83b7\u53d6\u8bbe\u5907 MAC \u5730\u5740"},{"location":"ESP32/ESP-NOW/#esp-now_2","text":"\u83b7\u53d6\u5230 MAC \u5730\u5740\u540e\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u7f16\u5199\u53d1\u9001\u6570\u636e\u7684\u7a0b\u5e8f\u3002 \u8fd9\u91cc\u4ee5\u638c\u63a7\u677f\u4e3a\u4f8b\uff0c\u5206\u522b\u5c06\u638c\u63a7\u677f\u4e0a\u7684\u5149\u7ebf\u4f20\u611f\u5668\u548c\u58f0\u97f3\u4f20\u611f\u5668\u6570\u636e\u53d1\u9001\u5230\u53e6\u4e00\u5757\u638c\u63a7\u677f\u4e0a\u3002\u5148\u6765\u770b\u4e00\u4e0b\u5b8c\u6574\u7684\u7a0b\u5e8f\u518d\u8fdb\u884c\u8bb2\u89e3\uff1a #include <WiFi.h> #include <esp_now.h> // \u8bbe\u7f6e\u638c\u63a7\u677f\u58f0\u97f3\u4f20\u611f\u5668\u4e0e\u5149\u7ebf\u4f20\u611f\u5668\u5f15\u811a\u7f16\u53f7 const int soundPin = 36 ; const int lightPin = 39 ; // \u8bbe\u7f6e\u6570\u636e\u7ed3\u6784\u4f53 typedef struct struct_message { String board_name ; double light ; double sound ; } struct_message ; struct_message myData ; // \u63a5\u6536\u8bbe\u5907\u7684 MAC \u5730\u5740 uint8_t broadcastAddress [] = { 0x24 , 0x6F , 0x28 , 0x88 , 0x62 , 0x80 }; // \u6570\u636e\u53d1\u9001\u56de\u8c03\u51fd\u6570 void OnDataSent ( const uint8_t * mac_addr , esp_now_send_status_t status ) { char macStr [ 18 ]; Serial . print ( \"Packet to: \" ); snprintf ( macStr , sizeof ( macStr ), \"%02x:%02x:%02x:%02x:%02x:%02x\" , mac_addr [ 0 ], mac_addr [ 1 ], mac_addr [ 2 ], mac_addr [ 3 ], mac_addr [ 4 ], mac_addr [ 5 ]); Serial . println ( macStr ); Serial . print ( \"Send status: \" ); Serial . println ( status == ESP_NOW_SEND_SUCCESS ? \"Delivery Success\" : \"Delivery Fail\" ); Serial . println (); } void setup () { Serial . begin ( 9600 ); // \u521d\u59cb\u5316 ESP-NOW WiFi . mode ( WIFI_STA ); if ( esp_now_init () != ESP_OK ) { Serial . println ( \"Error initializing ESP-NOW\" ); return ; } // \u8bbe\u7f6e\u53d1\u9001\u6570\u636e\u56de\u8c03\u51fd\u6570 esp_now_register_send_cb ( OnDataSent ); // \u7ed1\u5b9a\u6570\u636e\u63a5\u6536\u7aef esp_now_peer_info_t peerInfo ; memcpy ( peerInfo . peer_addr , broadcastAddress , 6 ); peerInfo . channel = 0 ; peerInfo . encrypt = false ; // \u68c0\u67e5\u8bbe\u5907\u662f\u5426\u914d\u5bf9\u6210\u529f if ( esp_now_add_peer ( & peerInfo ) != ESP_OK ) { Serial . println ( \"Failed to add peer\" ); return ; } } void loop () { // \u8bbe\u7f6e\u8981\u53d1\u9001\u7684\u6570\u636e myData . board_name = \"mPython_#1\" ; myData . light = analogRead ( lightPin ); myData . sound = analogRead ( soundPin ); // \u53d1\u9001\u6570\u636e esp_err_t result = esp_now_send ( broadcastAddress , ( uint8_t * ) & myData , sizeof ( myData )); // \u68c0\u67e5\u6570\u636e\u662f\u5426\u53d1\u9001\u6210\u529f if ( result == ESP_OK ) { Serial . println ( \"Sent with success\" ); } else { Serial . println ( \"Error sending the data\" ); } delay ( 1000 ); } \u8be5\u4f8b\u5b50\u6f14\u793a\u7684\u662f\u5c06\u5176\u4e2d\u4e00\u5757 ESP32 \u5f00\u53d1\u677f\uff08\u6b64\u5904\u4ee5\u638c\u63a7\u677f\u4e3a\u4f8b\uff09\u68c0\u6d4b\u5230\u7684\u6570\u636e\u53d1\u9001\u7ed9\u53e6\u4e00\u5757 ESP32 \u5f00\u53d1\u677f\u3002 \u9996\u5148\u5728\u5f00\u5934\u5f15\u5165\u4e86 ESP-NOW \u76f8\u5173\u7684\u5934\u6587\u4ef6\uff1aWiFi.h \u4e0e esp_now.h\u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4f20\u611f\u5668\u7684\u5f15\u811a\u548c\u4e00\u4e2a\u540d\u4e3a myData \u7684\u7ed3\u6784\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u7531 3 \u4e2a\u4e0d\u540c\u6570\u636e\u7ec4\u6210\uff0c\u5206\u522b\u662f\u5f00\u53d1\u677f\u540d\u79f0\uff08board_name\uff09\uff0c\u5149\u7ebf\u503c\uff08light\uff09\u4e0e\u58f0\u97f3\u503c\uff08sound\uff09\uff0c\u5176\u4e2d\u5f00\u53d1\u677f\u540d\u79f0\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5149\u7ebf\u503c\u4e0e\u58f0\u97f3\u503c\u4e3a\u6d6e\u70b9\u578b\u6570\u636e\u3002\u82e5\u6211\u4eec\u540c\u65f6\u6709\u591a\u4e2a\u4f20\u611f\u5668\u6570\u636e\u68c0\u6d4b\u7aef\uff0c\u53ef\u4ee5\u901a\u5f00\u53d1\u677f\u540d\u79f0\u6765\u533a\u5206\u6765\u81ea\u8bbe\u5907\u7684\u6570\u636e\u3002 \u63a5\u7740\u7528uint8_t broadcastAddress[] = {0x24, 0x6F, 0x28, 0x88, 0x62, 0x80} \u5b9a\u4e49\u4e86\u63a5\u6536\u8bbe\u5907\u7684 MAC \u5730\u5740\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u6ce8\u518c\u4e86\u4e00\u4e2a OnDataSent() \u7684\u6570\u636e\u53d1\u9001\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u53cd\u9988\u4e86 ESP-NOW \u6570\u636e\u7684\u53d1\u9001\u72b6\u6001\uff0c\u8be5\u4f8b\u5b50\u6bcf\u9694\u4e00\u79d2\u5c06\u5149\u7ebf\u503c\u548c\u58f0\u97f3\u503c\u53d1\u9001\u5230\u6307\u5b9a MAC \u5730\u5740\u7684\u5f00\u53d1\u677f\u3002 \u5728 setup() \u4e2d\uff0c\u6211\u4eec\u5148\u662f\u521d\u59cb\u5316\u4e86 ESP-NOW \u76f8\u5173\u7684\u529f\u80fd\uff0c\u7136\u540e\u8bbe\u7f6e\u4e86\u53d1\u9001\u6570\u636e\u7684\u56de\u8c03\u51fd\u6570\u3001\u4ee5\u53ca\u7ed1\u5b9a\u4e86\u6570\u636e\u63a5\u6536\u7aef\u7684 MAC \u5730\u5740\u3002 \u5728 loop() \u4e2d\uff0c\u6211\u4eec\u4e0d\u65ad\u8bfb\u53d6\u5149\u7ebf\u503c\u548c\u58f0\u97f3\u503c\uff0c\u5e76\u5c06\u4ed6\u4eec\u8d4b\u503c\u7ed9 myData \u7ed3\u6784\u4f53\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u53d1\u9001\u5230\u63a5\u6536\u7aef\uff0c\u5e76\u4e14\u53bb\u5224\u65ad\u6570\u636e\u662f\u5426\u53d1\u9001\u6210\u529f\u3002","title":"ESP-NOW \u6570\u636e\u53d1\u9001"},{"location":"ESP32/ESP-NOW/#esp-now_3","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u770b\u63a5\u6536\u7aef\u7684\u7a0b\u5e8f\u5982\u4f55\u7f16\u5199\u3002 \u7f16\u5199\u5982\u4e0b\u7a0b\u5e8f\uff0c\u4e0a\u4f20\u5230\u53e6\u4e00\u5757\u638c\u63a7\u677f\uff08\u524d\u9762\u6253\u5370\u8fc7 MAC \u5730\u5740\u7684\u90a3\u5757\u638c\u63a7\u677f\uff09\u4e2d\u3002 #include <WiFi.h> #include <esp_now.h> // \u8bbe\u7f6e\u6570\u636e\u7ed3\u6784\u4f53 typedef struct struct_message { String board_name ; double light ; double sound ; } struct_message ; struct_message myData ; // \u6570\u636e\u63a5\u6536\u56de\u8c03\u51fd\u6570 void OnDataRecv ( const uint8_t * mac , const uint8_t * incomingData , int len ) { memcpy ( & myData , incomingData , sizeof ( myData )); Serial . print ( \"board_name: \" ); Serial . println ( myData . board_name ); Serial . print ( \"light: \" ); Serial . println ( myData . light ); Serial . print ( \"sound:\" ); Serial . println ( myData . sound ); Serial . println (); } void setup () { Serial . begin ( 9600 ); // \u521d\u59cb\u5316 ESP-NOW WiFi . mode ( WIFI_STA ); if ( esp_now_init () != 0 ) { Serial . println ( \"Error initializing ESP-NOW\" ); return ; } // \u8bbe\u7f6e\u63a5\u6536\u6570\u636e\u56de\u8c03\u51fd\u6570 esp_now_register_recv_cb ( OnDataRecv ); } void loop () { } \u540c\u6837\uff0c\u6211\u4eec\u5728\u5f00\u5934\u5f15\u5165\u4e86 ESP-NOW \u76f8\u5173\u7684\u5934\u6587\u4ef6\uff1aWiFi.h \u4e0e esp_now.h\u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4f20\u611f\u5668\u7684\u5f15\u811a\u548c\u4e00\u4e2a\u540d\u4e3a myData \u7684\u7ed3\u6784\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u7531 3 \u4e2a\u4e0d\u540c\u6570\u636e\u7ec4\u6210\uff0c\u5206\u522b\u662f\u5f00\u53d1\u677f\u540d\u79f0\uff08board_name\uff09\uff0c\u5149\u7ebf\u503c\uff08light\uff09\u4e0e\u58f0\u97f3\u503c\uff08sound\uff09\uff0c\u4e0e\u6570\u636e\u53d1\u9001\u7aef\u5b9a\u4e49\u7684\u4e00\u6a21\u4e00\u6837\u3002 \u6211\u4eec\u6ce8\u518c\u4e86\u4e00\u4e2a OnDataRecv() \u7684\u6570\u636e\u63a5\u6536\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u53cd\u9988\u4e86 ESP-NOW \u6570\u636e\u7684\u63a5\u6536\u72b6\u6001\uff0c\u5f53\u63a5\u6536\u5230\u6765\u81ea\u5176\u4ed6\u5f00\u53d1\u677f\u7684\u6d88\u606f\u65f6\uff0c\u5c06\u6d88\u606f\u4fdd\u5b58\u5230\u7ed3\u6784\u4f53 myData \u4e2d\uff0c\u5e76\u5728\u4e32\u53e3\u4e2d\u6253\u5370\u51fa\u63a5\u6536\u5230\u7684\u6d88\u606f\u3002 \u8fd9\u91cc ESP-NOW \u7684\u6d88\u606f\u7684\u63a5\u6536\u5c5e\u4e8e\u65e0\u963b\u585e\u7684\u63a5\u6536\u65b9\u5f0f\uff0c\u4e0d\u53d7\u5ef6\u65f6\u51fd\u6570 delay() \u7684\u5f71\u54cd\uff0c\u8fd9\u610f\u5473\u7740 loop() \u91cc\u9762\u53ef\u4ee5\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u800c\u4e0d\u4f1a\u5f71\u54cd\u5230\u677f\u95f4\u7684\u901a\u8baf\uff0c\u540c\u4e00\u5757\u677f\u5b50\u65e2\u53ef\u4ee5\u5f53\u505a\u63a5\u6536\u65b9\u4ea6\u53ef\u4ee5\u5f53\u505a\u53d1\u9001\u65b9\u4e92\u4e0d\u5f71\u54cd\u3002\u8fd9\u91cc\u53ef\u4ee5\u540c\u65f6\u63a5\u6536\u6765\u81ea\u591a\u5757\u677f\u5b50\u7684\u4fe1\u606f\uff0c\u4f46\u524d\u63d0\u662f\u4fdd\u6301\u76f8\u540c\u7684\u7ed3\u6784\u4f53\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e0d\u7528\u7ed3\u6784\u4f53\u7528\u666e\u901a\u7684\u5355\u4e00\u7c7b\u578b\u7684\u6570\u636e\u7c7b\u578b\u6bd4\u5982\u5b57\u7b26\u4e32\u4e4b\u7c7b\u7684\uff0c\u8fd9\u91cc\u7528\u7ed3\u6784\u4f53\u7684\u539f\u56e0\u662f\u9700\u8981\u53d1\u9001\u7684\u6570\u636e\u7c7b\u578b\u6709\u591a\u4e2a\uff0c\u4f7f\u7528\u7ed3\u6784\u4f53\u76f8\u5bf9\u7075\u6d3b\u3002","title":"ESP-NOW \u6570\u636e\u63a5\u6536"},{"location":"ESP32/ESP-NOW/#_6","text":"\u5728\u4e24\u5757 ESP32 \u5f00\u53d1\u677f\u4e2d\u5206\u522b\u4e0a\u4f20\u53d1\u9001\u548c\u63a5\u6536\u7684\u7a0b\u5e8f\uff0c\u7136\u540e\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\u6765\u67e5\u770b\u4e00\u4e0b\u6548\u679c\u3002 \u53d1\u9001\u7aef\u4e32\u53e3\u76d1\u89c6\u5668\u5982\u4e0b\u56fe\uff1a \u63a5\u6536\u7aef\u4e32\u53e3\u76d1\u89c6\u5668\u5982\u4e0b\u56fe\uff1a \u53ef\u4ee5\u770b\u5230\u53d1\u9001\u7aef\u8bbe\u5907\u548c\u63a5\u6536\u7aef\u8bbe\u5907\u90fd\u6b63\u5e38\u8fd0\u884c\uff0c\u5e76\u4e14\u5728\u4e32\u53e3\u4e2d\u8f93\u51fa\u4e86\u76f8\u5e94\u7684\u4fe1\u606f\u3002","title":"\u5b9e\u9a8c\u7ed3\u679c"},{"location":"ESP32/ESP-NOW/#_7","text":"\u81f3\u6b64\uff0cESP-NOW \u7684\u7b80\u5355\u5e94\u7528\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u6211\u4eec\u53c8\u5b66\u4e86\u4e00\u79cd\u65b0\u7684\u65e0\u7ebf\u901a\u4fe1\u65b9\u5f0f\u3002\u4e0a\u9762\u53ea\u662f\u7b80\u5355\u6f14\u793a\u4e86\u4e00\u5bf9\u4e00\u6570\u636e\u53d1\u9001\u548c\u63a5\u6536\u7684\u793a\u4f8b\uff0c\u5176\u5b9e\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u4e00\u3001\u591a\u5bf9\u591a\u7684\u6570\u636e\u53d1\u9001\u548c\u63a5\u6536\u4e5f\u662f\u4e00\u6837\u7684\u9053\u7406\uff0c\u53ea\u9700\u589e\u52a0\u76f8\u5e94\u7684\u4ee3\u7801\u5373\u53ef\u3002 \u4f60\u53ef\u4ee5\u8bd5\u8bd5\u5c06\u6559\u7a0b\u91cc\u7684\u6570\u636e\u53d1\u9001\u65f6\u95f4\u95f4\u9694\u6539\u5c0f\u4e00\u70b9\uff0c\u770b\u770b ESP-NOW \u901f\u5ea6\u7a76\u7adf\u6709\u591a\u5feb\u3002\u5728\u4ee5\u540e\u7684\u9879\u76ee\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5927\u91cf\u8fd0\u7528 ESP \u7cfb\u5217\u5f00\u53d1\u677f\u65f6\uff0c\u53ef\u4ee5\u501f\u52a9 ESP-NOW \u6280\u672f\u53ef\u4ee5\u8ba9\u6240\u6709\u7684 DIY \u9879\u76ee\u6709\u673a\u7684\u8054\u7cfb\u8d77\u6765\uff0c\u4ece\u800c\u5b9e\u73b0\u771f\u6b63\u7684\u4e07\u7269\u76f8\u8fde\uff0c\u8fd9\u4e2a\u5177\u4f53\u7684\u5e94\u7528\u6211\u4eec\u5c06\u5728\u4ee5\u540e\u7684\u5b66\u4e60\u4e2d\u9010\u6b65\u4e3a\u5927\u5bb6\u8fdb\u884c\u8bb2\u89e3\u3002","title":"\u5c0f\u7ed3"},{"location":"ESP32/ESP32%20CAM%20Face/","text":"ESP32 CAM \u5b9e\u4f8b\u7a0b\u5e8f \u4eba\u8138\u8bc6\u522b \u914d\u7f6eArduino IDE Arduino\u88c5ESP32\u5f00\u53d1\u73af\u5883 \u6587\u4ef6\u2013>\u9996\u9009\u9879\u2013>\u9644\u52a0\u5f00\u53d1\u677f\u7ba1\u7406\u7f51\u5740 \u8f93\u5165 https://dl.espressif.com/dl/package_esp32_index.json \u5de5\u5177\u2013>\u5f00\u53d1\u677f\u2013>\u5f00\u53d1\u677f\u7ba1\u7406\u5668 \u641c\u7d22esp32\uff0c\u70b9\u51fb\u4e0b\u8f7d\u5b89\u88c5\uff0c\u5b89\u88c5\u8fc7\u7a0b\u4f1ahin\u6162\u3002\u81ea\u884c\u5176\u5b83\u5b89\u88c5\u65b9\u6cd5\u7ed3\u679c\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u7528\u3002\u3002\u3002\u3002\u522b\u95ee\uff0c\u95ee\u5c31\u662f\u6211 \u9009\u62e9\u5f00\u53d1\u677f \u5de5\u5177\u2013>\u5f00\u53d1\u677f\uff0c\u9009\u62e9ESP32 Wrover Module \u9009\u62e9Partition Scheme \u5de5\u5177\u2013>Partition scheme\uff0c\u9009\u62e9Huge APP \u793a\u4f8b\u7a0b\u5e8f\u4fee\u6539 \u8f7d\u5165\u5b9e\u4f8b\u7a0b\u5e8f \u6587\u4ef6\u2013> \u793a\u4f8b\u2013> ESP32 Camera\u2013> CameraWebServer \u4fee\u6539wifi\u4fe1\u606f wifi\u540d\u79f0\u548c\u5bc6\u7801\u6539\u4e3a\u81ea\u5bb6wifi\u8def\u7531\u5668\u7684 \u4fee\u6539\u6444\u50cf\u5934\u6a21\u5757 \u5e02\u9762\u4e0a\u5927\u591a\u7528\u7684\u662f\u5b89\u53ef\u4fe1\u7684\uff0c\u6240\u4ee5\u9009\u62e9\u7b2c\u4e94\u4e2a\u3002 \u4e0a\u4f20\u7a0b\u5e8f\u540e\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u63a7\uff0c\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff1a \u7f51\u9875\u754c\u9762 \u6309\u7167\u4e32\u53e3\u8f93\u51fa\u7684\u63d0\u793a\u4fe1\u606f\uff0c\u5728\u7535\u8111\u4e0a\u6253\u5f00\u7f51\u9875\u3002","title":"ESP32 CAM Face"},{"location":"ESP32/ESP32%20CAM%20Face/#esp32-cam","text":"","title":"ESP32 CAM \u5b9e\u4f8b\u7a0b\u5e8f \u4eba\u8138\u8bc6\u522b"},{"location":"ESP32/ESP32%20CAM%20Face/#arduino-ide","text":"","title":"\u914d\u7f6eArduino IDE"},{"location":"ESP32/ESP32%20CAM%20Face/#arduinoesp32","text":"\u6587\u4ef6\u2013>\u9996\u9009\u9879\u2013>\u9644\u52a0\u5f00\u53d1\u677f\u7ba1\u7406\u7f51\u5740 \u8f93\u5165 https://dl.espressif.com/dl/package_esp32_index.json \u5de5\u5177\u2013>\u5f00\u53d1\u677f\u2013>\u5f00\u53d1\u677f\u7ba1\u7406\u5668 \u641c\u7d22esp32\uff0c\u70b9\u51fb\u4e0b\u8f7d\u5b89\u88c5\uff0c\u5b89\u88c5\u8fc7\u7a0b\u4f1ahin\u6162\u3002\u81ea\u884c\u5176\u5b83\u5b89\u88c5\u65b9\u6cd5\u7ed3\u679c\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u7528\u3002\u3002\u3002\u3002\u522b\u95ee\uff0c\u95ee\u5c31\u662f\u6211","title":"Arduino\u88c5ESP32\u5f00\u53d1\u73af\u5883"},{"location":"ESP32/ESP32%20CAM%20Face/#_1","text":"\u5de5\u5177\u2013>\u5f00\u53d1\u677f\uff0c\u9009\u62e9ESP32 Wrover Module","title":"\u9009\u62e9\u5f00\u53d1\u677f"},{"location":"ESP32/ESP32%20CAM%20Face/#partition-scheme","text":"\u5de5\u5177\u2013>Partition scheme\uff0c\u9009\u62e9Huge APP","title":"\u9009\u62e9Partition Scheme"},{"location":"ESP32/ESP32%20CAM%20Face/#_2","text":"","title":"\u793a\u4f8b\u7a0b\u5e8f\u4fee\u6539"},{"location":"ESP32/ESP32%20CAM%20Face/#_3","text":"\u6587\u4ef6\u2013> \u793a\u4f8b\u2013> ESP32 Camera\u2013> CameraWebServer","title":"\u8f7d\u5165\u5b9e\u4f8b\u7a0b\u5e8f"},{"location":"ESP32/ESP32%20CAM%20Face/#wifi","text":"wifi\u540d\u79f0\u548c\u5bc6\u7801\u6539\u4e3a\u81ea\u5bb6wifi\u8def\u7531\u5668\u7684","title":"\u4fee\u6539wifi\u4fe1\u606f"},{"location":"ESP32/ESP32%20CAM%20Face/#_4","text":"\u5e02\u9762\u4e0a\u5927\u591a\u7528\u7684\u662f\u5b89\u53ef\u4fe1\u7684\uff0c\u6240\u4ee5\u9009\u62e9\u7b2c\u4e94\u4e2a\u3002 \u4e0a\u4f20\u7a0b\u5e8f\u540e\uff0c\u6253\u5f00\u4e32\u53e3\u76d1\u63a7\uff0c\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff1a","title":"\u4fee\u6539\u6444\u50cf\u5934\u6a21\u5757"},{"location":"ESP32/ESP32%20CAM%20Face/#_5","text":"\u6309\u7167\u4e32\u53e3\u8f93\u51fa\u7684\u63d0\u793a\u4fe1\u606f\uff0c\u5728\u7535\u8111\u4e0a\u6253\u5f00\u7f51\u9875\u3002","title":"\u7f51\u9875\u754c\u9762"},{"location":"ESP32/ESP32%20Connect%20Wifi/","text":"ESP32 \u8fde\u63a5Wifi \u624b\u52a8\u914d\u7f6ewifi\u8282\u70b9 \u8fd9\u79cd\u65b9\u5f0f\u662f\u5728\u4ee3\u7801\u4e2d\u914d\u7f6e\u597dwifi\u7684\u540d\u79f0\u548c\u5bc6\u7801\uff0c\u5728\u5237\u5230ESP32\u4e2d\uff0c\u5f00\u673a\u540e\u81ea\u52a8\u8fde\u63a5\u6b64wifi #include <WiFi.h> const char * ssid = \" SSID \" ; // The SSID (name) of the Wi-Fi network you want to connect to const char * password = \"PASSWORD\" ; // The password of the Wi-Fi network void setup () { Serial . begin ( 115200 ); WiFi . begin ( ssid , password ); // Connect to the network Serial . print ( \"Connecting to \" ); Serial . print ( ssid ); while ( WiFi . status () != WL_CONNECTED ) { // Wait for the Wi-Fi to connect delay ( 500 ); Serial . print ( '.' ); } Serial . println ( '\\n' ); Serial . println ( \"Connection established!\" ); Serial . print ( \"IP address: \\t \" ); Serial . println ( WiFi . localIP ()); // Send the IP address of the ESP8266 to the computer } void loop () { } \u8fd9\u79cd\u914d\u7f6e\u65b9\u5f0f\u7b80\u5355\uff0c\u4f46\u662f\u4e0d\u591f\u7075\u6d3b\u3002 AP\u6a21\u5f0f\uff0c\u901a\u8fc7\u624b\u673a\u914d\u7f6eWifi \u901a\u8fc7\u624b\u673aAPP\u914d\u7f51SmartConfig TI\u53d1\u660e\u7684\u201c SmartConfig\u201d\u3002\u8fd9\u79cd\u65b9\u5f0f\u4e0b\uff0c\u624b\u673aAPP\u5e7f\u64adwifi\u4fe1\u606f\uff0cESP32\u63a5\u6536\u5230\u4fe1\u606f\u540e\u914d\u7f6ewifi\u4fe1\u606f\u3002 \u7f3a\u70b9\u662f\u7528\u6237\u9700\u5b89\u88c5APP\u3002 \u624b\u673a\u5b89\u88c5APP Android: IOT_Espressif IOS: Espressif Esptouch ESP32 \u4ee3\u7801 #include \"WiFi.h\" void setup () { Serial . begin ( 115200 ); //Init WiFi as Station, start SmartConfig WiFi . mode ( WIFI_AP_STA ); WiFi . beginSmartConfig (); //Wait for SmartConfig packet from mobile Serial . println ( \"Waiting for SmartConfig.\" ); while ( ! WiFi . smartConfigDone ()) { delay ( 500 ); Serial . print ( \".\" ); } Serial . println ( \"\" ); Serial . println ( \"SmartConfig received.\" ); //Wait for WiFi to connect to AP Serial . println ( \"Waiting for WiFi\" ); while ( WiFi . status () != WL_CONNECTED ) { delay ( 500 ); Serial . print ( \".\" ); } Serial . println ( \"WiFi Connected.\" ); Serial . print ( \"IP Address: \" ); Serial . println ( WiFi . localIP ()); } void loop () { // put your main code here, to run repeatedly: } \u6216\u8005\u901a\u8fc7\u5fae\u4fe1\u914d\u7f51 \u5fae \u84dd\u2f5b\u914d\u2f79 \u901a\u8fc7\u84dd\u7259\u8fde\u63a5ESP32\uff0c\u7136\u540e\u5c06wifi\u4fe1\u606f\u53d1\u9001\u7ed9ESP32\u3002\u8fd9\u79cd\u65b9\u5f0f\u548cSmartConfig\u7c7b\u4f3c\uff0c\u9700\u624b\u673aAPP\u652f\u6301\u3002\u800c\u4e14\u8fd8\u5728\u84dd\u7259\u548cwifi\u4e2d\u5207\u6362\uff0c\u4e0d\u5982SmartConfig\u65b9\u4fbf\uff0c\u4e0d\u4ecb\u7ecd\u4e86\u3002 ESP32 AP \u548c SAT\u6a21\u5f0f AP \u662f Access Point \u7684\u7b80\u79f0\uff0cSAT \u662f Station\u7684\u7b80\u79f0\u3002\u8fd9\u4e24\u79cd\u6a21\u5f0f\u7684\u533a\u522b\u5982\u4e0b\u56fe\u3002 \u53ef\u4ee5\u770b\u5230AP\u6a21\u5f0f\u4e0b\uff0c\u4e0d\u901a\u8fc7\u8def\u7531\u5668\uff0c\u5ba2\u6237\u7aef\u76f4\u63a5\u8fde\u5230ESP32\u3002 \u800cSAT\u6a21\u5f0f\u4e0b\uff0cESP32\u548c\u5ba2\u6237\u7aef\u90fd\u8fde\u63a5\u5230\u8def\u7531\u5668\uff0c\u518d\u4e92\u76f8\u8bbf\u95ee\u3002 \u56e0\u4e3a\uff0c\u5728AP\u6a21\u5f0f\u4e0b\uff0cESP32\u4e0d\u518d\u8fdb\u4e00\u6b65\u8fde\u63a5\u5230\u4e92\u8054\u7f51\uff0c\u6240\u4ee5\u79f0\u4e3a\u8f6fAP (soft Access Point)\u3002\u8fd9\u5c31\u662f\u8bf4\u65e0\u6cd5\u4ece\u4e92\u8054\u7f51\u4e0b\u8f7djs\u6587\u4ef6\u6216\u5176\u4ed6\u8d44\u6e90\u3002 \u5b9e\u4f8b\u7a0b\u5e8f\uff1a File > Examples > ESP32 > Camera > CameraWebServer .","title":"ESP32 \u8fde\u63a5Wifi"},{"location":"ESP32/ESP32%20Connect%20Wifi/#esp32-wifi","text":"","title":"ESP32 \u8fde\u63a5Wifi"},{"location":"ESP32/ESP32%20Connect%20Wifi/#wifi","text":"\u8fd9\u79cd\u65b9\u5f0f\u662f\u5728\u4ee3\u7801\u4e2d\u914d\u7f6e\u597dwifi\u7684\u540d\u79f0\u548c\u5bc6\u7801\uff0c\u5728\u5237\u5230ESP32\u4e2d\uff0c\u5f00\u673a\u540e\u81ea\u52a8\u8fde\u63a5\u6b64wifi #include <WiFi.h> const char * ssid = \" SSID \" ; // The SSID (name) of the Wi-Fi network you want to connect to const char * password = \"PASSWORD\" ; // The password of the Wi-Fi network void setup () { Serial . begin ( 115200 ); WiFi . begin ( ssid , password ); // Connect to the network Serial . print ( \"Connecting to \" ); Serial . print ( ssid ); while ( WiFi . status () != WL_CONNECTED ) { // Wait for the Wi-Fi to connect delay ( 500 ); Serial . print ( '.' ); } Serial . println ( '\\n' ); Serial . println ( \"Connection established!\" ); Serial . print ( \"IP address: \\t \" ); Serial . println ( WiFi . localIP ()); // Send the IP address of the ESP8266 to the computer } void loop () { } \u8fd9\u79cd\u914d\u7f6e\u65b9\u5f0f\u7b80\u5355\uff0c\u4f46\u662f\u4e0d\u591f\u7075\u6d3b\u3002","title":"\u624b\u52a8\u914d\u7f6ewifi\u8282\u70b9"},{"location":"ESP32/ESP32%20Connect%20Wifi/#apwifi","text":"","title":"AP\u6a21\u5f0f\uff0c\u901a\u8fc7\u624b\u673a\u914d\u7f6eWifi"},{"location":"ESP32/ESP32%20Connect%20Wifi/#appsmartconfig","text":"TI\u53d1\u660e\u7684\u201c SmartConfig\u201d\u3002\u8fd9\u79cd\u65b9\u5f0f\u4e0b\uff0c\u624b\u673aAPP\u5e7f\u64adwifi\u4fe1\u606f\uff0cESP32\u63a5\u6536\u5230\u4fe1\u606f\u540e\u914d\u7f6ewifi\u4fe1\u606f\u3002 \u7f3a\u70b9\u662f\u7528\u6237\u9700\u5b89\u88c5APP\u3002 \u624b\u673a\u5b89\u88c5APP Android: IOT_Espressif IOS: Espressif Esptouch ESP32 \u4ee3\u7801 #include \"WiFi.h\" void setup () { Serial . begin ( 115200 ); //Init WiFi as Station, start SmartConfig WiFi . mode ( WIFI_AP_STA ); WiFi . beginSmartConfig (); //Wait for SmartConfig packet from mobile Serial . println ( \"Waiting for SmartConfig.\" ); while ( ! WiFi . smartConfigDone ()) { delay ( 500 ); Serial . print ( \".\" ); } Serial . println ( \"\" ); Serial . println ( \"SmartConfig received.\" ); //Wait for WiFi to connect to AP Serial . println ( \"Waiting for WiFi\" ); while ( WiFi . status () != WL_CONNECTED ) { delay ( 500 ); Serial . print ( \".\" ); } Serial . println ( \"WiFi Connected.\" ); Serial . print ( \"IP Address: \" ); Serial . println ( WiFi . localIP ()); } void loop () { // put your main code here, to run repeatedly: } \u6216\u8005\u901a\u8fc7\u5fae\u4fe1\u914d\u7f51","title":"\u901a\u8fc7\u624b\u673aAPP\u914d\u7f51SmartConfig"},{"location":"ESP32/ESP32%20Connect%20Wifi/#_1","text":"","title":"\u5fae"},{"location":"ESP32/ESP32%20Connect%20Wifi/#_2","text":"\u901a\u8fc7\u84dd\u7259\u8fde\u63a5ESP32\uff0c\u7136\u540e\u5c06wifi\u4fe1\u606f\u53d1\u9001\u7ed9ESP32\u3002\u8fd9\u79cd\u65b9\u5f0f\u548cSmartConfig\u7c7b\u4f3c\uff0c\u9700\u624b\u673aAPP\u652f\u6301\u3002\u800c\u4e14\u8fd8\u5728\u84dd\u7259\u548cwifi\u4e2d\u5207\u6362\uff0c\u4e0d\u5982SmartConfig\u65b9\u4fbf\uff0c\u4e0d\u4ecb\u7ecd\u4e86\u3002","title":"\u84dd\u2f5b\u914d\u2f79"},{"location":"ESP32/ESP32%20Connect%20Wifi/#esp32-ap-sat","text":"AP \u662f Access Point \u7684\u7b80\u79f0\uff0cSAT \u662f Station\u7684\u7b80\u79f0\u3002\u8fd9\u4e24\u79cd\u6a21\u5f0f\u7684\u533a\u522b\u5982\u4e0b\u56fe\u3002 \u53ef\u4ee5\u770b\u5230AP\u6a21\u5f0f\u4e0b\uff0c\u4e0d\u901a\u8fc7\u8def\u7531\u5668\uff0c\u5ba2\u6237\u7aef\u76f4\u63a5\u8fde\u5230ESP32\u3002 \u800cSAT\u6a21\u5f0f\u4e0b\uff0cESP32\u548c\u5ba2\u6237\u7aef\u90fd\u8fde\u63a5\u5230\u8def\u7531\u5668\uff0c\u518d\u4e92\u76f8\u8bbf\u95ee\u3002 \u56e0\u4e3a\uff0c\u5728AP\u6a21\u5f0f\u4e0b\uff0cESP32\u4e0d\u518d\u8fdb\u4e00\u6b65\u8fde\u63a5\u5230\u4e92\u8054\u7f51\uff0c\u6240\u4ee5\u79f0\u4e3a\u8f6fAP (soft Access Point)\u3002\u8fd9\u5c31\u662f\u8bf4\u65e0\u6cd5\u4ece\u4e92\u8054\u7f51\u4e0b\u8f7djs\u6587\u4ef6\u6216\u5176\u4ed6\u8d44\u6e90\u3002 \u5b9e\u4f8b\u7a0b\u5e8f\uff1a File > Examples > ESP32 > Camera > CameraWebServer .","title":"ESP32 AP \u548c SAT\u6a21\u5f0f"},{"location":"ESP32/ESP32%20GPIO/","text":"ESP32 Arduino GPIO \u4f7f\u7528 WROOM \u4e3a\u4f8b\uff0c\u6a21\u5757\u5f15\u811a\u547d\u540d\uff0c\u53ca\u529f\u80fd\u5982\u4e0b\u56fe\u3002 ESP32\u5916\u8bbe\u5305\u62ec\uff1a 18 Analog-to-Digital Converter (ADC) channels 3 SPI interfaces 3 UART interfaces 2 I2C interfaces 16 PWM output channels 2 Digital-to-Analog Converters (DAC) 2 I2S interfaces 10 Capacitive sensing GPIOs Pin\u7684\u8f93\u5165\u8f93\u51fa\u529f\u80fd GPIO Input Output Notes 0 pulled up OK outputs PWM signal at boot 1 TX pin OK debug output at boot 2 OK OK connected to on-board LED 3 OK RX pin HIGH at boot 4 OK OK 5 OK OK outputs PWM signal at boot 6 x x connected to the integrated SPI flash 7 x x connected to the integrated SPI flash 8 x x connected to the integrated SPI flash 9 x x connected to the integrated SPI flash 10 x x connected to the integrated SPI flash 11 x x connected to the integrated SPI flash 12 OK OK boot fail if pulled high 13 OK OK 14 OK OK outputs PWM signal at boot 15 OK OK outputs PWM signal at boot 16 OK OK 17 OK OK 18 OK OK 19 OK OK 21 OK OK 22 OK OK 23 OK OK 25 OK OK 26 OK OK 27 OK OK 32 OK OK 33 OK OK 34 OK input only 35 OK input only 36 OK input only 39 OK input only \u4e00\u3001\u4e2d\u65ad 1\u3001\u4e2d\u65ad\u89e6\u53d1\u65b9\u5f0f ESP32 Arduino \u6709\u4ee5\u4e0b\u56db\u79cd\u89e6\u53d1\u65b9\u5f0f\uff1a LOW \u4f4e\u7535\u5e73\u89e6\u53d1 CHANGE \u7535\u5e73\u53d8\u5316 RISING \u4e0a\u5347\u6cbf\u89e6\u53d1 FALLING \u4e0b\u964d\u6cbf\u89e6\u53d1 HIGH \u9ad8\u7535\u5e73\u89e6\u53d1 2\u3001\u914d\u7f6e\u4e2d\u65ad \u5728\u5b9a\u4e49\u4e2d\u65ad\u51fd\u6570\u540e\uff0c\u9700\u8981\u5728 setup \u51fd\u6570\u914d\u7f6e\u4e2d\u65ad\u51fd\u6570 // interrupt=\u4e2d\u65ad\u901a\u9053\u7f16\u53f7\uff0cfunction=\u4e2d\u65ad\u51fd\u6570\uff0cmode=\u4e2d\u65ad\u89e6\u53d1\u6a21\u5f0f attachInterrupt(interrupt, function, mode); // pin=\u4e2d\u65ad\u5f15\u811a\uff0cfunction=\u4e2d\u65ad\u51fd\u6570\uff0cmode=\u4e2d\u65ad\u89e6\u53d1\u6a21\u5f0f attachInterrupt(pin, function, mode); \u5982\u679c\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e0d\u9700\u8981\u4f7f\u7528\u5916\u90e8\u4e2d\u65ad\u4e86\uff0c\u53ef\u4ee5\u7528\u4e2d\u65ad\u5206\u79bb\u51fd\u6570\u6765\u53d6\u6d88\u8fd9\u4e00\u4e2d\u65ad\u8bbe\u7f6e\uff1a detachInterrupt(interrupt); detachInterrupt(Pin);\u3002 3\u3001\u793a\u4f8b void setup () { // \u521d\u59cb\u5316\u65e5\u5fd7\u6253\u5370\u4e32\u53e3 Serial . begin ( 115200 ); // \u914d\u7f6e\u4e2d\u65ad\u5f15\u811a pinMode ( 26 , INPUT | PULLUP ); // \u68c0\u6d4b\u5230\u5f15\u811a 26 \u4e0b\u964d\u6cbf\uff0c\u89e6\u53d1\u4e2d\u65ad\u51fd\u6570 blink attachInterrupt ( 26 , blink , FALLING ); Serial . println ( \" \\n start irq test\" ); } void loop () { } // \u4e2d\u65ad\u51fd\u6570 void blink () { Serial . println ( \"IRQ\" ); } \u4e8c\u3001IIC \u4f7f\u7528 \u793a\u4f8b\uff1a #include <Wire.h> void setup () { // \u542f\u52a8 i2c \u603b\u7ebf Wire . begin (); // \u521d\u59cb\u5316\u4e32\u53e3 Serial . begin ( 9600 ); } int reading = 0 ; void loop () { // step 1: \u542f\u52a8\u4e0e\u4ece\u8bbe\u5907 #112 0x70 \u7684\u6570\u636e\u4ea4\u4e92 Wire . beginTransmission ( 112 ); // \u53d1\u9001\u6570\u636e Wire . write ( byte ( 0x00 )); Wire . write ( byte ( 0x50 )); // \u7ed3\u675f\u901a\u4fe1 Wire . endTransmission (); // step 2: \u7b49\u5f85\u8bfb\u6570\u636e delay ( 70 ); // step 3: \u8bfb\u53d6\u6307\u5b9a\u5bc4\u5b58\u5668 Wire . beginTransmission ( 112 ); Wire . write ( byte ( 0x02 )); Wire . endTransmission (); // step 4: \u8bf7\u6c42\u8bfb 2 \u5b57\u8282\u6570\u636e Wire . requestFrom ( 112 , 2 ); // step 5: \u63a5\u6536\u6570\u636e if ( 2 <= Wire . available ()) { reading = Wire . read (); reading = reading << 8 ; reading |= Wire . read (); Serial . println ( reading ); } delay ( 250 ); } \u4e09\u3001SPI \u4f7f\u7528\u7b80\u6790 \u793a\u4f8b\uff1a /* The ESP32 has four SPi buses, however as of right now only two of * them are available to use , HSPI and VSPI . Simply using the SPI API * as illustrated in Arduino examples will use HSPI , leaving VSPI unused . * * However if we simply intialise two instance of the SPI class for both * of these buses both can be used . However when just using these the Arduino * way only will actually be outputting at a time . * * Logic analyser capture is in the same folder as this example as * \"multiple_bus_output.png\" * * created 30 / 04 / 2018 by Alistair Symonds */ * #include <SPI.h> static const int spiClk = 1000000 ; // 1 MHz //uninitalised pointers to SPI objects SPIClass * vspi = NULL ; SPIClass * hspi = NULL ; void setup () { // \u521d\u59cb\u5316 SPI \u5b9e\u4f8b VSPI\u3001HSPI vspi = new SPIClass ( VSPI ); hspi = new SPIClass ( HSPI ); //clock miso mosi ss //\u4f7f\u7528\u9ed8\u8ba4 VSPI \u5f15\u811a\uff1aSCLK = 18, MISO = 19, MOSI = 23, SS = 5 vspi -> begin (); // alternatively route through GPIO pins of your choice //vspi->begin(0, 2, 4, 33); // SCLK, MISO, MOSI, SS //\u4f7f\u7528\u9ed8\u8ba4\u5f15\u811a\u521d\u59cb\u5316 HSPI //SCLK = 14, MISO = 12, MOSI = 13, SS = 15 hspi -> begin (); //alternatively route through GPIO pins //hspi->begin(25, 26, 27, 32); //SCLK, MISO, MOSI, SS // \u521d\u59cb\u5316 ss \u7247\u9009\u5f15\u811a\uff0c\u9ed8\u8ba4\u4e3a\u4f4e\u7535\u5e73 pinMode ( 5 , OUTPUT ); //VSPI SS pinMode ( 15 , OUTPUT ); //HSPI SS } // the loop function runs over and over again until power down or reset void loop () { //use the SPI buses vspiCommand (); hspiCommand (); delay ( 100 ); } void vspiCommand () { // \u6a21\u62df\u6570\u636e byte data = 0b01010101 ; // \u542f\u52a8 VSPI \u4f20\u8f93 vspi -> beginTransaction ( SPISettings ( spiClk , MSBFIRST , SPI_MODE0 )); digitalWrite ( 5 , LOW ); vspi -> transfer ( data ); digitalWrite ( 5 , HIGH ); vspi -> endTransaction (); } void hspiCommand () { byte stuff = 0b11001100 ; hspi -> beginTransaction ( SPISettings ( spiClk , MSBFIRST , SPI_MODE0 )); digitalWrite ( 15 , LOW ); hspi -> transfer ( stuff ); digitalWrite ( 15 , HIGH ); hspi -> endTransaction (); }","title":"ESP32 Arduino GPIO \u4f7f\u7528"},{"location":"ESP32/ESP32%20GPIO/#esp32-arduino-gpio","text":"WROOM \u4e3a\u4f8b\uff0c\u6a21\u5757\u5f15\u811a\u547d\u540d\uff0c\u53ca\u529f\u80fd\u5982\u4e0b\u56fe\u3002","title":"ESP32 Arduino GPIO \u4f7f\u7528"},{"location":"ESP32/ESP32%20GPIO/#esp32","text":"18 Analog-to-Digital Converter (ADC) channels 3 SPI interfaces 3 UART interfaces 2 I2C interfaces 16 PWM output channels 2 Digital-to-Analog Converters (DAC) 2 I2S interfaces 10 Capacitive sensing GPIOs","title":"ESP32\u5916\u8bbe\u5305\u62ec\uff1a"},{"location":"ESP32/ESP32%20GPIO/#pin","text":"GPIO Input Output Notes 0 pulled up OK outputs PWM signal at boot 1 TX pin OK debug output at boot 2 OK OK connected to on-board LED 3 OK RX pin HIGH at boot 4 OK OK 5 OK OK outputs PWM signal at boot 6 x x connected to the integrated SPI flash 7 x x connected to the integrated SPI flash 8 x x connected to the integrated SPI flash 9 x x connected to the integrated SPI flash 10 x x connected to the integrated SPI flash 11 x x connected to the integrated SPI flash 12 OK OK boot fail if pulled high 13 OK OK 14 OK OK outputs PWM signal at boot 15 OK OK outputs PWM signal at boot 16 OK OK 17 OK OK 18 OK OK 19 OK OK 21 OK OK 22 OK OK 23 OK OK 25 OK OK 26 OK OK 27 OK OK 32 OK OK 33 OK OK 34 OK input only 35 OK input only 36 OK input only 39 OK input only","title":"Pin\u7684\u8f93\u5165\u8f93\u51fa\u529f\u80fd"},{"location":"ESP32/ESP32%20GPIO/#_1","text":"","title":"\u4e00\u3001\u4e2d\u65ad"},{"location":"ESP32/ESP32%20GPIO/#1","text":"ESP32 Arduino \u6709\u4ee5\u4e0b\u56db\u79cd\u89e6\u53d1\u65b9\u5f0f\uff1a LOW \u4f4e\u7535\u5e73\u89e6\u53d1 CHANGE \u7535\u5e73\u53d8\u5316 RISING \u4e0a\u5347\u6cbf\u89e6\u53d1 FALLING \u4e0b\u964d\u6cbf\u89e6\u53d1 HIGH \u9ad8\u7535\u5e73\u89e6\u53d1","title":"1\u3001\u4e2d\u65ad\u89e6\u53d1\u65b9\u5f0f"},{"location":"ESP32/ESP32%20GPIO/#2","text":"\u5728\u5b9a\u4e49\u4e2d\u65ad\u51fd\u6570\u540e\uff0c\u9700\u8981\u5728 setup \u51fd\u6570\u914d\u7f6e\u4e2d\u65ad\u51fd\u6570 // interrupt=\u4e2d\u65ad\u901a\u9053\u7f16\u53f7\uff0cfunction=\u4e2d\u65ad\u51fd\u6570\uff0cmode=\u4e2d\u65ad\u89e6\u53d1\u6a21\u5f0f attachInterrupt(interrupt, function, mode); // pin=\u4e2d\u65ad\u5f15\u811a\uff0cfunction=\u4e2d\u65ad\u51fd\u6570\uff0cmode=\u4e2d\u65ad\u89e6\u53d1\u6a21\u5f0f attachInterrupt(pin, function, mode); \u5982\u679c\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e0d\u9700\u8981\u4f7f\u7528\u5916\u90e8\u4e2d\u65ad\u4e86\uff0c\u53ef\u4ee5\u7528\u4e2d\u65ad\u5206\u79bb\u51fd\u6570\u6765\u53d6\u6d88\u8fd9\u4e00\u4e2d\u65ad\u8bbe\u7f6e\uff1a detachInterrupt(interrupt); detachInterrupt(Pin);\u3002","title":"2\u3001\u914d\u7f6e\u4e2d\u65ad"},{"location":"ESP32/ESP32%20GPIO/#3","text":"void setup () { // \u521d\u59cb\u5316\u65e5\u5fd7\u6253\u5370\u4e32\u53e3 Serial . begin ( 115200 ); // \u914d\u7f6e\u4e2d\u65ad\u5f15\u811a pinMode ( 26 , INPUT | PULLUP ); // \u68c0\u6d4b\u5230\u5f15\u811a 26 \u4e0b\u964d\u6cbf\uff0c\u89e6\u53d1\u4e2d\u65ad\u51fd\u6570 blink attachInterrupt ( 26 , blink , FALLING ); Serial . println ( \" \\n start irq test\" ); } void loop () { } // \u4e2d\u65ad\u51fd\u6570 void blink () { Serial . println ( \"IRQ\" ); }","title":"3\u3001\u793a\u4f8b"},{"location":"ESP32/ESP32%20GPIO/#iic","text":"\u793a\u4f8b\uff1a #include <Wire.h> void setup () { // \u542f\u52a8 i2c \u603b\u7ebf Wire . begin (); // \u521d\u59cb\u5316\u4e32\u53e3 Serial . begin ( 9600 ); } int reading = 0 ; void loop () { // step 1: \u542f\u52a8\u4e0e\u4ece\u8bbe\u5907 #112 0x70 \u7684\u6570\u636e\u4ea4\u4e92 Wire . beginTransmission ( 112 ); // \u53d1\u9001\u6570\u636e Wire . write ( byte ( 0x00 )); Wire . write ( byte ( 0x50 )); // \u7ed3\u675f\u901a\u4fe1 Wire . endTransmission (); // step 2: \u7b49\u5f85\u8bfb\u6570\u636e delay ( 70 ); // step 3: \u8bfb\u53d6\u6307\u5b9a\u5bc4\u5b58\u5668 Wire . beginTransmission ( 112 ); Wire . write ( byte ( 0x02 )); Wire . endTransmission (); // step 4: \u8bf7\u6c42\u8bfb 2 \u5b57\u8282\u6570\u636e Wire . requestFrom ( 112 , 2 ); // step 5: \u63a5\u6536\u6570\u636e if ( 2 <= Wire . available ()) { reading = Wire . read (); reading = reading << 8 ; reading |= Wire . read (); Serial . println ( reading ); } delay ( 250 ); }","title":"\u4e8c\u3001IIC \u4f7f\u7528"},{"location":"ESP32/ESP32%20GPIO/#spi","text":"\u793a\u4f8b\uff1a /* The ESP32 has four SPi buses, however as of right now only two of * them are available to use , HSPI and VSPI . Simply using the SPI API * as illustrated in Arduino examples will use HSPI , leaving VSPI unused . * * However if we simply intialise two instance of the SPI class for both * of these buses both can be used . However when just using these the Arduino * way only will actually be outputting at a time . * * Logic analyser capture is in the same folder as this example as * \"multiple_bus_output.png\" * * created 30 / 04 / 2018 by Alistair Symonds */ * #include <SPI.h> static const int spiClk = 1000000 ; // 1 MHz //uninitalised pointers to SPI objects SPIClass * vspi = NULL ; SPIClass * hspi = NULL ; void setup () { // \u521d\u59cb\u5316 SPI \u5b9e\u4f8b VSPI\u3001HSPI vspi = new SPIClass ( VSPI ); hspi = new SPIClass ( HSPI ); //clock miso mosi ss //\u4f7f\u7528\u9ed8\u8ba4 VSPI \u5f15\u811a\uff1aSCLK = 18, MISO = 19, MOSI = 23, SS = 5 vspi -> begin (); // alternatively route through GPIO pins of your choice //vspi->begin(0, 2, 4, 33); // SCLK, MISO, MOSI, SS //\u4f7f\u7528\u9ed8\u8ba4\u5f15\u811a\u521d\u59cb\u5316 HSPI //SCLK = 14, MISO = 12, MOSI = 13, SS = 15 hspi -> begin (); //alternatively route through GPIO pins //hspi->begin(25, 26, 27, 32); //SCLK, MISO, MOSI, SS // \u521d\u59cb\u5316 ss \u7247\u9009\u5f15\u811a\uff0c\u9ed8\u8ba4\u4e3a\u4f4e\u7535\u5e73 pinMode ( 5 , OUTPUT ); //VSPI SS pinMode ( 15 , OUTPUT ); //HSPI SS } // the loop function runs over and over again until power down or reset void loop () { //use the SPI buses vspiCommand (); hspiCommand (); delay ( 100 ); } void vspiCommand () { // \u6a21\u62df\u6570\u636e byte data = 0b01010101 ; // \u542f\u52a8 VSPI \u4f20\u8f93 vspi -> beginTransaction ( SPISettings ( spiClk , MSBFIRST , SPI_MODE0 )); digitalWrite ( 5 , LOW ); vspi -> transfer ( data ); digitalWrite ( 5 , HIGH ); vspi -> endTransaction (); } void hspiCommand () { byte stuff = 0b11001100 ; hspi -> beginTransaction ( SPISettings ( spiClk , MSBFIRST , SPI_MODE0 )); digitalWrite ( 15 , LOW ); hspi -> transfer ( stuff ); digitalWrite ( 15 , HIGH ); hspi -> endTransaction (); }","title":"\u4e09\u3001SPI \u4f7f\u7528\u7b80\u6790"},{"location":"ESP32/ESP32%20MQTT/","text":"ESP32 \u4f7f\u7528MQTT op1=>operation: \u751f\u6210\u5b9e\u4f8b wiFiclient, wifi\u5b9e\u4f8b PubSubclient, MQTT\u5b9e\u4f8b op2=>operation: \u521d\u59cb\u5316 setup_wifi() client.setserver() client.setcallback() cond=>condition: \u8fde\u63a5\u5230 MQTT\u670d\u52a1\u5668? c1=>operation: \u91cd\u65b0\u8fde\u63a5 \u8ba2\u9605\u4e3b\u9898 c2=>operation: client.loop() pb=>operation: \u53d1\u5e03\u4e3b\u9898 op1->op2->cond cond(yes)->c2 cond(no)->c1->c2 c2->pb(left)->cond \u5173\u4e8eMQTT\u7684\u51e0\u4e2a\u64cd\u4f5c\uff1a client.loop() \u4f1a\u66f4\u65b0\u72b6\u6001\uff0c\u6267\u884ccallback\u51fd\u6570\u7684\u5185\u5bb9 \u8fde\u63a5\u670d\u52a1\u5668 client.connect(clientID) \u8ba2\u9605\u4e3b\u9898 client.subscribe(topic_A) \u53d1\u5e03\u4e3b\u9898 client.publish(topic_B, \u201c\u5185\u5bb9\u201d) \u63a5\u6536\u5230\u7684\u5185\u5bb9\u5904\u7406 callback(topic, payload, length) \u8fde\u63a5\u963f\u91cc\u4e91MQTT TCP\u76f4\u8fde\uff1aClient ID\u4e2d securemode=3 \uff0c\u65e0\u9700\u8bbe\u7f6eSSL/TLS\u4fe1\u606f\u3002 \u963f\u91cc\u4e91 Broker Address \u8fde\u63a5\u57df\u540d\u3002\u683c\u5f0f\uff1a ${YourProductKey}.iot-as-mqtt.${region}.aliyuncs.com \u3002\u5176\u4e2d\uff0c${region}\u9700\u66ff\u6362\u4e3a\u60a8\u7269\u8054\u7f51\u5e73\u53f0\u670d\u52a1\u6240\u5728\u5730\u57df\u7684\u4ee3\u7801\u3002\u5730\u57df\u4ee3\u7801\uff0c\u8bf7\u53c2\u89c1 \u5730\u57df\u548c\u53ef\u7528\u533a \u3002\u5982\uff1a alxxxxxxxxxx.iot-as-mqtt.cn-shanghai.aliyuncs.com \u3002 Broker Port 1883 Client ID \u586b\u5199mqttClientId\uff0c\u7528\u4e8eMQTT\u7684\u5e95\u5c42\u534f\u8bae\u62a5\u6587\u3002\u683c\u5f0f\u56fa\u5b9a\uff1a ${clientId}|securemode=3,signmethod=hmacsha1| \u3002\u5b8c\u6574\u793a\u4f8b\uff1a 12345|securemode=3,signmethod=hmacsha1| \u3002\u5176\u4e2d\uff0c${clientId}\u4e3a\u8bbe\u5907\u7684ID\u4fe1\u606f\u3002\u53ef\u53d6\u4efb\u610f\u503c\uff0c\u957f\u5ea6\u572864\u5b57\u7b26\u4ee5\u5185\u3002\u5efa\u8bae\u4f7f\u7528\u8bbe\u5907\u7684MAC\u5730\u5740\u6216SN\u7801\u3002securemode\u4e3a\u5b89\u5168\u6a21\u5f0f\uff0cTCP\u76f4\u8fde\u6a21\u5f0f\u8bbe\u7f6e\u4e3a securemode=3 \uff0cTLS\u76f4\u8fde\u4e3a securemode=2 \u3002signmethod\u4e3a\u7b97\u6cd5\u7c7b\u578b\uff0c\u652f\u6301hmacmd5\u548chmacsha1\u3002 User Name \u7531\u8bbe\u5907\u540dDeviceName\u3001\u7b26\u53f7\uff08&\uff09\u548c\u4ea7\u54c1ProductKey\u7ec4\u6210\u3002\u56fa\u5b9a\u683c\u5f0f\uff1a ${YourDeviceName}&${YourPrductKey} \u3002\u5b8c\u6574\u793a\u4f8b\u5982\uff1a device&alxxxxxxxxxx \u3002 Password \u5bc6\u7801\u7531\u53c2\u6570\u503c\u62fc\u63a5\u52a0\u5bc6\u800c\u6210\u3002\u624b\u52a8\u751f\u6210\u65b9\u6cd5\u5982\u4e0b\uff1a\u62fc\u63a5\u53c2\u6570\u3002\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\u7684 clientId \u3001 deviceName \u3001 productKey \u548c timestamp \uff08timestamp\u4e3a\u975e\u5fc5\u9009\u53c2\u6570\uff09\u53c2\u6570\u53ca\u53c2\u6570\u503c\u4f9d\u6b21\u62fc\u63a5\u3002\u672c\u4f8b\u4e2d\uff0c clientId \u503c\u4e3a12345\uff0c deviceName \u503c\u4e3adevice\uff0c productKey \u503c\u4e3aalxxxxxxxxx\uff0c\u62fc\u63a5\u7ed3\u679c\u4e3a\uff1a clientId12345deviceNamedeviceproductKeyalxxxxxxxxx \u52a0\u5bc6\u3002\u901a\u8fc7 Client ID \u4e2d\u786e\u5b9a\u7684\u52a0\u5bc6\u65b9\u6cd5\uff0c\u4f7f\u7528\u8bbe\u5907 deviceSecret \uff0c\u5c06\u62fc\u63a5\u7ed3\u679c\u52a0\u5bc6\u3002\u5047\u8bbe\u8bbe\u5907\u7684 deviceSecret \u503c\u4e3aabc123\uff0c\u52a0\u5bc6\u8ba1\u7b97\u683c\u5f0f\u4e3a hmacsha1(abc123,clientId12345deviceNamedeviceproductKeyalxxxxxxxxxx) #include <WiFi.h> #include <PubSubClient.h> #include <ArduinoJson.h> #include \"aliyun_mqtt.h\" // GPIO 13, D7 on the Node MCU v3 #define SENSOR_PIN 13 #define WIFI_SSID \"iPhone\" #define WIFI_PASSWD \"12345678\" #define PRODUCT_KEY \"a1dFPZBlZKe\" #define DEVICE_NAME \"ESP32\" #define DEVICE_SECRET \"YvhVGrIFI3qTcS6wM7n4IDC14ba0jNpq\" #define ALINK_BODY_FORMAT \"{\\\"id\\\":\\\"123\\\",\\\"version\\\":\\\"1.0\\\",\\\"method\\\":\\\"%s\\\",\\\"params\\\":%s}\" #define ALINK_TOPIC_PROP_POST \"/sys/\" PRODUCT_KEY \"/\" DEVICE_NAME \"/thing/event/property/post\" #define ALINK_TOPIC_PROP_POSTRSP \"/sys/\" PRODUCT_KEY \"/\" DEVICE_NAME \"/thing/event/property/post_reply\" #define ALINK_TOPIC_PROP_SET \"/sys/\" PRODUCT_KEY \"/\" DEVICE_NAME \"/thing/service/property/set\" #define ALINK_METHOD_PROP_POST \"thing.event.property.post\" unsigned long lastMs = 0 ; WiFiClient espClient ; PubSubClient mqttClient ( espClient ); void initWifi ( const char * ssid , const char * password ) { WiFi . mode ( WIFI_STA ); WiFi . begin ( ssid , password ); while ( WiFi . status () != WL_CONNECTED ) { Serial . println ( \"WiFi does not connect, try again ...\" ); delay ( 3000 ); } Serial . println ( \"Wifi is connected.\" ); Serial . println ( \"IP address: \" ); Serial . println ( WiFi . localIP ()); } void callback ( char * topic , byte * payload , unsigned int length ) { Serial . print ( \"Message arrived [\" ); Serial . print ( topic ); Serial . print ( \"] \" ); payload [ length ] = '\\0' ; Serial . println (( char * ) payload ); // if (strstr(topic, ALINK_TOPIC_PROP_SET)) // { // StaticJsonBuffer<100> jsonBuffer; // JsonObject &root = jsonBuffer.parseObject(payload); // if (!root.success()) // { // Serial.println(\"parseObject() failed\"); // return; // } // } } void mqttCheckConnect () { while ( ! connectAliyunMQTT ( mqttClient , PRODUCT_KEY , DEVICE_NAME , DEVICE_SECRET )) { } Serial . println ( \"MQTT connect succeed!\" ); // client.subscribe(ALINK_TOPIC_PROP_POSTRSP); mqttClient . subscribe ( ALINK_TOPIC_PROP_SET ); Serial . println ( \"subscribe done\" ); } void mqttIntervalPost () { char param [ 32 ]; char jsonBuf [ 128 ]; sprintf ( param , \"{ \\\" MotionAlarmState \\\" :%d}\" , digitalRead ( 13 )); sprintf ( jsonBuf , ALINK_BODY_FORMAT , ALINK_METHOD_PROP_POST , param ); Serial . println ( jsonBuf ); mqttClient . publish ( ALINK_TOPIC_PROP_POST , jsonBuf ); } void setup () { pinMode ( SENSOR_PIN , INPUT ); /* initialize serial for debugging */ Serial . begin ( 115200 ); Serial . println ( \"Demo Start\" ); initWifi ( WIFI_SSID , WIFI_PASSWD ); mqttClient . setCallback ( callback ); } // the loop function runs over and over again forever void loop () { if ( millis () - lastMs >= 5000 ) { lastMs = millis (); mqttCheckConnect (); /* Post */ mqttIntervalPost (); } mqttClient . loop (); unsigned int WAIT_MS = 2000 ; if ( digitalRead ( SENSOR_PIN ) == HIGH ) { Serial . println ( \"Motion detected!\" ); } else { Serial . println ( \"Motion absent!\" ); } delay ( WAIT_MS ); // ms Serial . println ( millis () / WAIT_MS ); }","title":"ESP32 \u4f7f\u7528MQTT"},{"location":"ESP32/ESP32%20MQTT/#esp32-mqtt","text":"op1=>operation: \u751f\u6210\u5b9e\u4f8b wiFiclient, wifi\u5b9e\u4f8b PubSubclient, MQTT\u5b9e\u4f8b op2=>operation: \u521d\u59cb\u5316 setup_wifi() client.setserver() client.setcallback() cond=>condition: \u8fde\u63a5\u5230 MQTT\u670d\u52a1\u5668? c1=>operation: \u91cd\u65b0\u8fde\u63a5 \u8ba2\u9605\u4e3b\u9898 c2=>operation: client.loop() pb=>operation: \u53d1\u5e03\u4e3b\u9898 op1->op2->cond cond(yes)->c2 cond(no)->c1->c2 c2->pb(left)->cond \u5173\u4e8eMQTT\u7684\u51e0\u4e2a\u64cd\u4f5c\uff1a client.loop() \u4f1a\u66f4\u65b0\u72b6\u6001\uff0c\u6267\u884ccallback\u51fd\u6570\u7684\u5185\u5bb9 \u8fde\u63a5\u670d\u52a1\u5668 client.connect(clientID) \u8ba2\u9605\u4e3b\u9898 client.subscribe(topic_A) \u53d1\u5e03\u4e3b\u9898 client.publish(topic_B, \u201c\u5185\u5bb9\u201d) \u63a5\u6536\u5230\u7684\u5185\u5bb9\u5904\u7406 callback(topic, payload, length)","title":"ESP32 \u4f7f\u7528MQTT"},{"location":"ESP32/ESP32%20MQTT/#mqtt","text":"TCP\u76f4\u8fde\uff1aClient ID\u4e2d securemode=3 \uff0c\u65e0\u9700\u8bbe\u7f6eSSL/TLS\u4fe1\u606f\u3002 \u963f\u91cc\u4e91 Broker Address \u8fde\u63a5\u57df\u540d\u3002\u683c\u5f0f\uff1a ${YourProductKey}.iot-as-mqtt.${region}.aliyuncs.com \u3002\u5176\u4e2d\uff0c${region}\u9700\u66ff\u6362\u4e3a\u60a8\u7269\u8054\u7f51\u5e73\u53f0\u670d\u52a1\u6240\u5728\u5730\u57df\u7684\u4ee3\u7801\u3002\u5730\u57df\u4ee3\u7801\uff0c\u8bf7\u53c2\u89c1 \u5730\u57df\u548c\u53ef\u7528\u533a \u3002\u5982\uff1a alxxxxxxxxxx.iot-as-mqtt.cn-shanghai.aliyuncs.com \u3002 Broker Port 1883 Client ID \u586b\u5199mqttClientId\uff0c\u7528\u4e8eMQTT\u7684\u5e95\u5c42\u534f\u8bae\u62a5\u6587\u3002\u683c\u5f0f\u56fa\u5b9a\uff1a ${clientId}|securemode=3,signmethod=hmacsha1| \u3002\u5b8c\u6574\u793a\u4f8b\uff1a 12345|securemode=3,signmethod=hmacsha1| \u3002\u5176\u4e2d\uff0c${clientId}\u4e3a\u8bbe\u5907\u7684ID\u4fe1\u606f\u3002\u53ef\u53d6\u4efb\u610f\u503c\uff0c\u957f\u5ea6\u572864\u5b57\u7b26\u4ee5\u5185\u3002\u5efa\u8bae\u4f7f\u7528\u8bbe\u5907\u7684MAC\u5730\u5740\u6216SN\u7801\u3002securemode\u4e3a\u5b89\u5168\u6a21\u5f0f\uff0cTCP\u76f4\u8fde\u6a21\u5f0f\u8bbe\u7f6e\u4e3a securemode=3 \uff0cTLS\u76f4\u8fde\u4e3a securemode=2 \u3002signmethod\u4e3a\u7b97\u6cd5\u7c7b\u578b\uff0c\u652f\u6301hmacmd5\u548chmacsha1\u3002 User Name \u7531\u8bbe\u5907\u540dDeviceName\u3001\u7b26\u53f7\uff08&\uff09\u548c\u4ea7\u54c1ProductKey\u7ec4\u6210\u3002\u56fa\u5b9a\u683c\u5f0f\uff1a ${YourDeviceName}&${YourPrductKey} \u3002\u5b8c\u6574\u793a\u4f8b\u5982\uff1a device&alxxxxxxxxxx \u3002 Password \u5bc6\u7801\u7531\u53c2\u6570\u503c\u62fc\u63a5\u52a0\u5bc6\u800c\u6210\u3002\u624b\u52a8\u751f\u6210\u65b9\u6cd5\u5982\u4e0b\uff1a\u62fc\u63a5\u53c2\u6570\u3002\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\u7684 clientId \u3001 deviceName \u3001 productKey \u548c timestamp \uff08timestamp\u4e3a\u975e\u5fc5\u9009\u53c2\u6570\uff09\u53c2\u6570\u53ca\u53c2\u6570\u503c\u4f9d\u6b21\u62fc\u63a5\u3002\u672c\u4f8b\u4e2d\uff0c clientId \u503c\u4e3a12345\uff0c deviceName \u503c\u4e3adevice\uff0c productKey \u503c\u4e3aalxxxxxxxxx\uff0c\u62fc\u63a5\u7ed3\u679c\u4e3a\uff1a clientId12345deviceNamedeviceproductKeyalxxxxxxxxx \u52a0\u5bc6\u3002\u901a\u8fc7 Client ID \u4e2d\u786e\u5b9a\u7684\u52a0\u5bc6\u65b9\u6cd5\uff0c\u4f7f\u7528\u8bbe\u5907 deviceSecret \uff0c\u5c06\u62fc\u63a5\u7ed3\u679c\u52a0\u5bc6\u3002\u5047\u8bbe\u8bbe\u5907\u7684 deviceSecret \u503c\u4e3aabc123\uff0c\u52a0\u5bc6\u8ba1\u7b97\u683c\u5f0f\u4e3a hmacsha1(abc123,clientId12345deviceNamedeviceproductKeyalxxxxxxxxxx) #include <WiFi.h> #include <PubSubClient.h> #include <ArduinoJson.h> #include \"aliyun_mqtt.h\" // GPIO 13, D7 on the Node MCU v3 #define SENSOR_PIN 13 #define WIFI_SSID \"iPhone\" #define WIFI_PASSWD \"12345678\" #define PRODUCT_KEY \"a1dFPZBlZKe\" #define DEVICE_NAME \"ESP32\" #define DEVICE_SECRET \"YvhVGrIFI3qTcS6wM7n4IDC14ba0jNpq\" #define ALINK_BODY_FORMAT \"{\\\"id\\\":\\\"123\\\",\\\"version\\\":\\\"1.0\\\",\\\"method\\\":\\\"%s\\\",\\\"params\\\":%s}\" #define ALINK_TOPIC_PROP_POST \"/sys/\" PRODUCT_KEY \"/\" DEVICE_NAME \"/thing/event/property/post\" #define ALINK_TOPIC_PROP_POSTRSP \"/sys/\" PRODUCT_KEY \"/\" DEVICE_NAME \"/thing/event/property/post_reply\" #define ALINK_TOPIC_PROP_SET \"/sys/\" PRODUCT_KEY \"/\" DEVICE_NAME \"/thing/service/property/set\" #define ALINK_METHOD_PROP_POST \"thing.event.property.post\" unsigned long lastMs = 0 ; WiFiClient espClient ; PubSubClient mqttClient ( espClient ); void initWifi ( const char * ssid , const char * password ) { WiFi . mode ( WIFI_STA ); WiFi . begin ( ssid , password ); while ( WiFi . status () != WL_CONNECTED ) { Serial . println ( \"WiFi does not connect, try again ...\" ); delay ( 3000 ); } Serial . println ( \"Wifi is connected.\" ); Serial . println ( \"IP address: \" ); Serial . println ( WiFi . localIP ()); } void callback ( char * topic , byte * payload , unsigned int length ) { Serial . print ( \"Message arrived [\" ); Serial . print ( topic ); Serial . print ( \"] \" ); payload [ length ] = '\\0' ; Serial . println (( char * ) payload ); // if (strstr(topic, ALINK_TOPIC_PROP_SET)) // { // StaticJsonBuffer<100> jsonBuffer; // JsonObject &root = jsonBuffer.parseObject(payload); // if (!root.success()) // { // Serial.println(\"parseObject() failed\"); // return; // } // } } void mqttCheckConnect () { while ( ! connectAliyunMQTT ( mqttClient , PRODUCT_KEY , DEVICE_NAME , DEVICE_SECRET )) { } Serial . println ( \"MQTT connect succeed!\" ); // client.subscribe(ALINK_TOPIC_PROP_POSTRSP); mqttClient . subscribe ( ALINK_TOPIC_PROP_SET ); Serial . println ( \"subscribe done\" ); } void mqttIntervalPost () { char param [ 32 ]; char jsonBuf [ 128 ]; sprintf ( param , \"{ \\\" MotionAlarmState \\\" :%d}\" , digitalRead ( 13 )); sprintf ( jsonBuf , ALINK_BODY_FORMAT , ALINK_METHOD_PROP_POST , param ); Serial . println ( jsonBuf ); mqttClient . publish ( ALINK_TOPIC_PROP_POST , jsonBuf ); } void setup () { pinMode ( SENSOR_PIN , INPUT ); /* initialize serial for debugging */ Serial . begin ( 115200 ); Serial . println ( \"Demo Start\" ); initWifi ( WIFI_SSID , WIFI_PASSWD ); mqttClient . setCallback ( callback ); } // the loop function runs over and over again forever void loop () { if ( millis () - lastMs >= 5000 ) { lastMs = millis (); mqttCheckConnect (); /* Post */ mqttIntervalPost (); } mqttClient . loop (); unsigned int WAIT_MS = 2000 ; if ( digitalRead ( SENSOR_PIN ) == HIGH ) { Serial . println ( \"Motion detected!\" ); } else { Serial . println ( \"Motion absent!\" ); } delay ( WAIT_MS ); // ms Serial . println ( millis () / WAIT_MS ); }","title":"\u8fde\u63a5\u963f\u91cc\u4e91MQTT"},{"location":"ESP32/ESP32%20use%20MAX31855/","text":"ESP32 \u6e29\u5ea6\u6d4b\u91cf\u4eea MAX31855 \u4f7f\u7528 SPI \u63a5\u53e3\u3002 ESP32 SPI SPI0 \u63a7\u5236\u5668\u4f5c\u4e3a cache \u8bbf\u95ee\u5916\u90e8\u5b58\u50a8\u5355\u5143\u63a5\u53e3\u4f7f\u7528\uff0c SPI1 \u4f5c\u4e3a\u4e3b\u673a\u4f7f\u7528\uff0c SPI2 \u548c SPI3 \u63a7\u5236\u5668\u65e2\u53ef\u4f5c\u4e3a\u4e3b\u673a\u4f7f\u7528\u53c8\u53ef\u4f5c\u4e3a\u4ece\u673a\u4f7f\u7528\u3002\u4f5c\u4e3b\u673a\u4f7f\u7528\u65f6\uff0c\u6bcf\u4e2a SPI \u63a7\u5236\u5668\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u7247\u9009\u4fe1\u53f7 (CS0~CS2) \u6765\u8fde\u63a5\u591a\u4e2a SPI \u4ece\u673a\u8bbe\u5907\u3002 SPI\u76f8\u5f53\u4e8eSPI0\u6216SPI1\uff0cHSPI\u76f8\u5f53\u4e8eSPI2\uff0cVSPI\u76f8\u5f53\u4e8eSPI3\u3002 ESP32 SPI \u63a7\u5236\u5668\u7684 IO \u63a5\u53e3\uff1a MOSI MISO CLK CS VSPI GPIO 23 GPIO 19 GPIO 18 GPIO 5 HSPI GPIO 13 GPIO 12 GPIO 14 GPIO 15 ESP32\u7684\u63a5\u53e3\u5982\u4e0b\u56fe\u3002 MAX31885\u6a21\u5757 MAX31885 \u6a21\u5757\u6709\u4e24\u4e2a\u8f93\u5165\u53e3\uff0c\u8fde\u63a5\u70ed\u7535\u5076\uff0c6\u4e2a\u8f93\u51fa\u53e3\u3002\u5404Pin\u811a\u542b\u4e49\u5982\u4e0b\u8868\uff1a MAX31855 Function Vin 3~5V Power-Supply Voltage 3VO 3.3V out GND GND DO SO, MISO, Serial-Data Output CS Active-Low Chip Select. Set CS low to enable the serial interface. CLK Serial-Clock Input \u6a21\u5757\u7684\u4f7f\u7528\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003MAX31885\u6587\u6863\u7684\u4ecb\u7ecd\u3002 \u5bf9\u4e8e\u591a\u4e2a\u6a21\u5757\uff0cDO\uff0cCLK\u662f\u5171\u7528\u7684\uff0cCS\u9009\u5b9a\u67d0\u4e2a\u6a21\u5757\u3002 \u63a5\u7ebf\u56fe MISO MOSI CLK CS ESP 32 3V3 GND GPIO 19/12 GPIO 23/13 GPIO 18/14 GPIO 5/15 MAX31855 Vin GND DO CLK CS \u4ee3\u7801 #include <SPI.h> #include <WiFi.h> #include \"MAX31855.h\" int32_t rawData = 0 ; MAX31855 myMAX31855 ( 5 ); //chip select pin void setup () { Serial . begin ( 115200 ); /* start MAX31855 */ myMAX31855 . begin (); while ( myMAX31855 . getChipID () != MAX31855_ID ) { Serial . println ( F ( \"MAX31855 error\" )); //(F()) saves string to flash & keeps dynamic memory free delay ( 5000 ); } Serial . println ( F ( \"MAX31855 OK\" )); } void loop () { while ( myMAX31855 . detectThermocouple () != MAX31855_THERMOCOUPLE_OK ) { switch ( myMAX31855 . detectThermocouple ()) { case MAX31855_THERMOCOUPLE_SHORT_TO_VCC : Serial . println ( F ( \"Thermocouple short to VCC\" )); break ; case MAX31855_THERMOCOUPLE_SHORT_TO_GND : Serial . println ( F ( \"Thermocouple short to GND\" )); break ; case MAX31855_THERMOCOUPLE_NOT_CONNECTED : Serial . println ( F ( \"Thermocouple not connected\" )); break ; case MAX31855_THERMOCOUPLE_UNKNOWN : Serial . println ( F ( \"Thermocouple unknown error, check spi cable\" )); break ; } delay ( 5000 ); } rawData = myMAX31855 . readRawData (); Serial . print ( F ( \"Cold Junction: \" )); Serial . println ( myMAX31855 . getColdJunctionTemperature ( rawData )); Serial . print ( F ( \"Thermocouple: \" )); Serial . println ( myMAX31855 . getTemperature ( rawData )); delay ( 5000 ); } MAX31855.h /***************************************************************************************************/ /* This is an Arduino library for 14-bit MAX31855 K-Thermocouple to Digital Converter with 12-bit Cold Junction Compensation conneted to hardware 5Mhz SPI with maximum sampling rate ~9..10Hz. - MAX31855 maximum power supply voltage is 3.6v - K-type thermocouples have an absolute accuracy of around \u00b12\u00b0C..\u00b16\u00b0C. - Measurement tempereture range -200\u00b0C..+700\u00b0C \u00b12\u00b0C or -270\u00b0C..+1372\u00b0C \u00b16\u00b0C with 0.25\u00b0C resolution/increment. - Cold junction compensation range -40\u00b0C..+125\u00b0 \u00b13\u00b0C with 0.062\u00b0C resolution/increment. Optimal performance of cold junction compensation happends when the thermocouple cold junction & the MAX31855 are at the same temperature. Avoid placing heat-generating devices or components near the converter because this may produce an errors. - It is strongly recommended to add a 10nF/0.01mF ceramic surface-mount capacitor, placed across the T+ and T- pins, to filter noise on the thermocouple lines. written by : enjoyneering79 sourse code: https://github.com/enjoyneering/MAX31855 This sensor uses SPI bus to communicate, specials pins are required to interface Board: MOSI MISO SCLK SS, don't use for CS Level Uno, Mini, Pro, ATmega168, ATmega328..... 11 12 13 10 5v Mega, Mega2560, ATmega1280, ATmega2560... 51 50 52 53 5v Due, SAM3X8E............................. ICSP4 ICSP1 ICSP3 x 3.3v Leonardo, ProMicro, ATmega32U4........... 16 14 15 x 5v Blue Pill, STM32F103xxxx boards.......... PA17 PA6 PA5 PA4 3v NodeMCU 1.0, WeMos D1 Mini............... GPIO13/D7 GPIO12/D6 GPIO14/D5 GPIO15/D8* 3v/5v ESP32.................................... GPIO23/D23 GPIO19/D19 GPIO18/D18 x 3v *most boards has 10-12kOhm pullup-up resistor on GPIO2/D4 & GPIO0/D3 for flash & boot Frameworks & Libraries: ATtiny Core - https://github.com/SpenceKonde/ATTinyCore ESP32 Core - https://github.com/espressif/arduino-esp32 ESP8266 Core - https://github.com/esp8266/Arduino STM32 Core - https://github.com/stm32duino/Arduino_Core_STM32 - https://github.com/rogerclarkmelbourne/Arduino_STM32 GNU GPL license, all text above must be included in any redistribution, see link for details - https://www.gnu.org/licenses/licenses.html */ /***************************************************************************************************/ #ifndef MAX31855_h #define MAX31855_h #if defined(ARDUINO) && ((ARDUINO) >= 100) //arduino core v1.0 or later #include <Arduino.h> #else #include <WProgram.h> #endif #if defined(__AVR__) #include <avr/pgmspace.h> //use for PROGMEM Arduino AVR #elif defined(ESP8266) #include <pgmspace.h> //use for PROGMEM Arduino ESP8266 #elif defined(_VARIANT_ARDUINO_STM32_) #include <avr/pgmspace.h> //use for PROGMEM Arduino STM32 #endif #ifndef MAX31855_SOFT_SPI //enable upload hw driver spi.h #include <SPI.h> #endif #define MAX31855_CONVERSION_POWER_UP_TIME 200 //in milliseconds #define MAX31855_CONVERSION_TIME 100 //in milliseconds, 9..10Hz sampling rate #define MAX31855_THERMOCOUPLE_RESOLUTION 0.25 //in \u00b0C per dac step #define MAX31855_COLD_JUNCTION_RESOLUTION 0.0625 //in \u00b0C per dac step #define MAX31855_ID 31855 #define MAX31855_FORCE_READ_DATA 7 //force to read the data, 7 is unique because d2d1d0 can't be all high at the same time #define MAX31855_ERROR 2000 //returned value if any error happends #define MAX31855_THERMOCOUPLE_OK 0 #define MAX31855_THERMOCOUPLE_SHORT_TO_VCC 1 #define MAX31855_THERMOCOUPLE_SHORT_TO_GND 2 #define MAX31855_THERMOCOUPLE_NOT_CONNECTED 3 #define MAX31855_THERMOCOUPLE_UNKNOWN 4 class MAX31855 { public : MAX31855 ( uint8_t cs ); void begin ( void ); uint8_t detectThermocouple ( int32_t rawValue = MAX31855_FORCE_READ_DATA ); uint16_t getChipID ( int32_t rawValue = MAX31855_FORCE_READ_DATA ); float getTemperature ( int32_t rawValue = MAX31855_FORCE_READ_DATA ); float getColdJunctionTemperature ( int32_t rawValue = MAX31855_FORCE_READ_DATA ); virtual int32_t readRawData ( void ); private : protected : uint8_t _cs ; }; #endif MAX31855.cpp /***************************************************************************************************/ /* This is an Arduino library for 14-bit MAX31855 K-Thermocouple to Digital Converter with 12-bit Cold Junction Compensation conneted to hardware 5Mhz SPI with maximum sampling rate ~9..10Hz. - MAX31855 maximum power supply voltage is 3.6v - K-type thermocouples have an absolute accuracy of around \u00b12\u00b0C..\u00b16\u00b0C. - Measurement tempereture range -200\u00b0C..+700\u00b0C \u00b12\u00b0C or -270\u00b0C..+1372\u00b0C \u00b16\u00b0C with 0.25\u00b0C resolution/increment. - Cold junction compensation range -40\u00b0C..+125\u00b0 \u00b13\u00b0C with 0.062\u00b0C resolution/increment. Optimal performance of cold junction compensation happends when the thermocouple cold junction & the MAX31855 are at the same temperature. Avoid placing heat-generating devices or components near the converter because this may produce an errors. - It is strongly recommended to add a 10nF/0.01mF ceramic surface-mount capacitor, placed across the T+ and T- pins, to filter noise on the thermocouple lines. written by : enjoyneering79 sourse code: https://github.com/enjoyneering/MAX31855 This sensor uses SPI bus to communicate, specials pins are required to interface Board: MOSI MISO SCLK SS, don't use for CS Level Uno, Mini, Pro, ATmega168, ATmega328..... 11 12 13 10 5v Mega, Mega2560, ATmega1280, ATmega2560... 51 50 52 53 5v Due, SAM3X8E............................. ICSP4 ICSP1 ICSP3 x 3.3v Leonardo, ProMicro, ATmega32U4........... 16 14 15 x 5v Blue Pill, STM32F103xxxx boards.......... PA17 PA6 PA5 PA4 3v NodeMCU 1.0, WeMos D1 Mini............... GPIO13/D7 GPIO12/D6 GPIO14/D5 GPIO15/D8* 3v/5v ESP32.................................... GPIO23/D23 GPIO19/D19 GPIO18/D18 x 3v most boards has 10-12kOhm pullup-up resistor on GPIO2/D4 & GPIO0/D3 for flash & boot Frameworks & Libraries: ATtiny Core - https://github.com/SpenceKonde/ATTinyCore ESP32 Core - https://github.com/espressif/arduino-esp32 ESP8266 Core - https://github.com/esp8266/Arduino STM32 Core - https://github.com/stm32duino/Arduino_Core_STM32 - https://github.com/rogerclarkmelbourne/Arduino_STM32 GNU GPL license, all text above must be included in any redistribution, see link for details - https://www.gnu.org/licenses/licenses.html */ /***************************************************************************************************/ #include \"MAX31855.h\" /**************************************************************************/ /* MAX31855() Constructor for hardware read only SPI NOTE: - cs is chip select, set cs low to enable serial interface */ /**************************************************************************/ MAX31855 :: MAX31855 ( uint8_t cs ) { _cs = cs ; //cs chip select } /**************************************************************************/ /* begin() Initializes & configures hardware SPI */ /**************************************************************************/ void MAX31855 :: begin ( void ) { pinMode ( _cs , OUTPUT ); digitalWrite ( _cs , HIGH ); //disables SPI interface for MAX31855, but it will initiate measurement/conversion SPI . begin (); //setting hardware SCK, MOSI, SS to output, pull SCK, MOSI low & SS high delay ( MAX31855_CONVERSION_POWER_UP_TIME ); } /**************************************************************************/ /* detectThermocouple() Checks if thermocouple is open, shorted to GND, shorted to VCC Return: - 0 OK - 1 short to VCC - 2 short to GND - 3 not connected NOTE: - bit D16 is normally low & goes high if thermocouple is open, shorted to GND or VCC - bit D2 is normally low & goes high to indicate a hermocouple short to VCC - bit D1 is normally low & goes high to indicate a thermocouple short to GND - bit D0 is normally low & goes high to indicate a thermocouple open circuit */ /**************************************************************************/ uint8_t MAX31855 :: detectThermocouple ( int32_t rawValue ) { if ( rawValue == MAX31855_FORCE_READ_DATA ) rawValue = readRawData (); if ( bitRead ( rawValue , 16 ) == 1 ) { if ( bitRead ( rawValue , 2 ) == 1 ) return MAX31855_THERMOCOUPLE_SHORT_TO_VCC ; else if ( bitRead ( rawValue , 1 ) == 1 ) return MAX31855_THERMOCOUPLE_SHORT_TO_GND ; else if ( bitRead ( rawValue , 0 ) == 1 ) return MAX31855_THERMOCOUPLE_NOT_CONNECTED ; else return MAX31855_THERMOCOUPLE_UNKNOWN ; } return MAX31855_THERMOCOUPLE_OK ; } /**************************************************************************/ /* getChipID() Checks chip ID NOTE: - bit D17, D3 always return zero & can be used as device ID */ /**************************************************************************/ uint16_t MAX31855 :: getChipID ( int32_t rawValue ) { if ( rawValue == MAX31855_FORCE_READ_DATA ) rawValue = readRawData (); if ( bitRead ( rawValue , 17 ) == 0 && bitRead ( rawValue , 3 ) == 0 ) return MAX31855_ID ; return 0 ; } /**************************************************************************/ /* getTemperature() Reads Temperature, C NOTE: - range -200\u00b0C..+700\u00b0C \u00b12\u00b0C or -270\u00b0C..+1372\u00b0C \u00b16\u00b0C with 0.25\u00b0C resolution/increment - thermocouple temperature data is 14-bit long - bit D31 is the thermocouple temperature sign bit \"+\" is high & \"-\" is low, if T+ and T- are unconnected it goes low - bits D30..D18 contain the converted temperature in the order of MSB to LSB, if T+ and T- are unconnected they go high - it is strongly recommended to add a 10nF/0.01mF ceramic surface-mount capacitor, placed across the T+ and T- pins, to filter noise on the thermocouple lines */ /**************************************************************************/ float MAX31855 :: getTemperature ( int32_t rawValue ) { if ( rawValue == MAX31855_FORCE_READ_DATA ) rawValue = readRawData (); if ( detectThermocouple ( rawValue ) != MAX31855_THERMOCOUPLE_OK || getChipID ( rawValue ) != MAX31855_ID ) return MAX31855_ERROR ; rawValue = rawValue >> 18 ; //clear D17..D0 bits return ( float ) rawValue * MAX31855_THERMOCOUPLE_RESOLUTION ; } /**************************************************************************/ /* getColdJunctionTemperature() Reads Temperature, C NOTE: - range -40\u00b0C..+125\u00b0 \u00b13\u00b0C with 0.062\u00b0C resolution/increment - chip internal temperature data is 12-bit long - bit D15 is cold-junction temperature sign bit \"+\" is high & \"-\" is low - bits D14..D4 contain cold-junction temperature in the order of MSB to LSB */ /**************************************************************************/ float MAX31855 :: getColdJunctionTemperature ( int32_t rawValue ) { if ( rawValue == MAX31855_FORCE_READ_DATA ) rawValue = readRawData (); if ( getChipID ( rawValue ) != MAX31855_ID ) return MAX31855_ERROR ; rawValue = rawValue & 0x0000FFFF ; //clear D31..D16 bits rawValue = rawValue >> 4 ; //clear D3...D0 bits return ( float ) rawValue * MAX31855_COLD_JUNCTION_RESOLUTION ; } /**************************************************************************/ /* readRawData() Reads raw data from MAX31855 via hardware SPI NOTE: - read of the cold-junction compensated thermocouple temperature requires 14 clock cycles - read of the cold-junction compensated thermocouple temperature & reference junction temperatures requires 32 clock cycles - forcing CS low immediately stops any conversion process, force CS high to initiate a new measurement process - set CS low to enable the serial interface & force to output the first bit on the SO pin, apply 14/32 clock signals at SCK to read the results at SO on the falling edge of the SCK - bit D31 is the thermocouple temperature sign bit \"+\" is high & \"-\" is low, if T+ & T- pins are unconnected it goes low - bits D30..D18 contain the converted temperature in the order of MSB to LSB, if T+ & T- pins are unconnected they go high - bit D17 is low to provide a device ID for the MAX31855 - bit D16 is normally low & goes high if thermocouple is open, shorted to GND or VCC - bit D15 is cold-junction temperature sign bit \"+\" is high & \"-\" is low - bits D14..D4 contain cold-junction temperature in the order of MSB to LSB - bit D3 is is low to provide a device ID for the MAX31855 - bit D2 is normally low & goes high to indicate a hermocouple short to VCC - bit D1 is normally low & goes high to indicate a thermocouple short to GND - bit D0 is normally low & goes high to indicate a thermocouple open circuit - arduino 8-bit AVR maximum SPI master clock speed is mcu speed/2, for 5v-16MHz/ProMini speed is 16000000/2=8MHz - arduino ESP8266 maximum SPI master clock speed is 80000000=80MHz - arduino STM32 maximum SPI master clock speed is mcu speed/2, for STM32F103C8 speed is 72000000/2=36MHz - SPI_MODE0 -> data available shortly after the rising edge of SCK */ /**************************************************************************/ int32_t MAX31855 :: readRawData ( void ) { int32_t rawData = 0 ; //digitalWrite(_cs, LOW); //stop measurement/conversion //delayMicroseconds(1); //5MHz is 0.2\u03bcsec, do we need it??? //digitalWrite(_cs, HIGH); //start measurement/conversion delay ( MAX31855_CONVERSION_TIME ); SPI . beginTransaction ( SPISettings ( 5000000 , MSBFIRST , SPI_MODE0 )); //up to 5MHz, read MSB first, SPI mode 0, see note digitalWrite ( _cs , LOW ); //set software CS low to enable SPI interface for MAX31855 for ( uint8_t i = 0 ; i < 2 ; i ++ ) //read 32-bits via hardware SPI, in order MSB->LSB (D31..D0 bit) { rawData = ( rawData << 16 ) | SPI . transfer16 ( 0x0000 ); //chip has read only SPI & MOSI not connected, so it doesn't metter what to send } digitalWrite ( _cs , HIGH ); //disables SPI interface for MAX31855, but it will initiate measurement/conversion SPI . endTransaction (); //de-asserting hardware CS & free hw SPI for other slaves return rawData ; } \u5206\u6790 \u4f8b\u5982\uff0c\u8bfb\u51fa\u768432\u4e3a\u6570\u5b57\u4e3a 00000001100100000001100111100000 \u53ef\u4ee5\u8ba1\u7b97\u51fathermal Coupler\u7684\u6e29\u5ea6\u4e3a 1100100 --> 100 -- 100/4=25C https://help.aliyun.com/document_detail/146611.html?spm=a2c4g.11186623.6.881.51045800csO7yO#h2-url-1","title":"ESP32 \u6e29\u5ea6\u6d4b\u91cf\u4eea"},{"location":"ESP32/ESP32%20use%20MAX31855/#esp32","text":"MAX31855 \u4f7f\u7528 SPI \u63a5\u53e3\u3002","title":"ESP32 \u6e29\u5ea6\u6d4b\u91cf\u4eea"},{"location":"ESP32/ESP32%20use%20MAX31855/#esp32-spi","text":"SPI0 \u63a7\u5236\u5668\u4f5c\u4e3a cache \u8bbf\u95ee\u5916\u90e8\u5b58\u50a8\u5355\u5143\u63a5\u53e3\u4f7f\u7528\uff0c SPI1 \u4f5c\u4e3a\u4e3b\u673a\u4f7f\u7528\uff0c SPI2 \u548c SPI3 \u63a7\u5236\u5668\u65e2\u53ef\u4f5c\u4e3a\u4e3b\u673a\u4f7f\u7528\u53c8\u53ef\u4f5c\u4e3a\u4ece\u673a\u4f7f\u7528\u3002\u4f5c\u4e3b\u673a\u4f7f\u7528\u65f6\uff0c\u6bcf\u4e2a SPI \u63a7\u5236\u5668\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u7247\u9009\u4fe1\u53f7 (CS0~CS2) \u6765\u8fde\u63a5\u591a\u4e2a SPI \u4ece\u673a\u8bbe\u5907\u3002 SPI\u76f8\u5f53\u4e8eSPI0\u6216SPI1\uff0cHSPI\u76f8\u5f53\u4e8eSPI2\uff0cVSPI\u76f8\u5f53\u4e8eSPI3\u3002 ESP32 SPI \u63a7\u5236\u5668\u7684 IO \u63a5\u53e3\uff1a MOSI MISO CLK CS VSPI GPIO 23 GPIO 19 GPIO 18 GPIO 5 HSPI GPIO 13 GPIO 12 GPIO 14 GPIO 15 ESP32\u7684\u63a5\u53e3\u5982\u4e0b\u56fe\u3002","title":"ESP32 SPI"},{"location":"ESP32/ESP32%20use%20MAX31855/#max31885","text":"MAX31885 \u6a21\u5757\u6709\u4e24\u4e2a\u8f93\u5165\u53e3\uff0c\u8fde\u63a5\u70ed\u7535\u5076\uff0c6\u4e2a\u8f93\u51fa\u53e3\u3002\u5404Pin\u811a\u542b\u4e49\u5982\u4e0b\u8868\uff1a MAX31855 Function Vin 3~5V Power-Supply Voltage 3VO 3.3V out GND GND DO SO, MISO, Serial-Data Output CS Active-Low Chip Select. Set CS low to enable the serial interface. CLK Serial-Clock Input \u6a21\u5757\u7684\u4f7f\u7528\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003MAX31885\u6587\u6863\u7684\u4ecb\u7ecd\u3002 \u5bf9\u4e8e\u591a\u4e2a\u6a21\u5757\uff0cDO\uff0cCLK\u662f\u5171\u7528\u7684\uff0cCS\u9009\u5b9a\u67d0\u4e2a\u6a21\u5757\u3002","title":"MAX31885\u6a21\u5757"},{"location":"ESP32/ESP32%20use%20MAX31855/#_1","text":"MISO MOSI CLK CS ESP 32 3V3 GND GPIO 19/12 GPIO 23/13 GPIO 18/14 GPIO 5/15 MAX31855 Vin GND DO CLK CS","title":"\u63a5\u7ebf\u56fe"},{"location":"ESP32/ESP32%20use%20MAX31855/#_2","text":"#include <SPI.h> #include <WiFi.h> #include \"MAX31855.h\" int32_t rawData = 0 ; MAX31855 myMAX31855 ( 5 ); //chip select pin void setup () { Serial . begin ( 115200 ); /* start MAX31855 */ myMAX31855 . begin (); while ( myMAX31855 . getChipID () != MAX31855_ID ) { Serial . println ( F ( \"MAX31855 error\" )); //(F()) saves string to flash & keeps dynamic memory free delay ( 5000 ); } Serial . println ( F ( \"MAX31855 OK\" )); } void loop () { while ( myMAX31855 . detectThermocouple () != MAX31855_THERMOCOUPLE_OK ) { switch ( myMAX31855 . detectThermocouple ()) { case MAX31855_THERMOCOUPLE_SHORT_TO_VCC : Serial . println ( F ( \"Thermocouple short to VCC\" )); break ; case MAX31855_THERMOCOUPLE_SHORT_TO_GND : Serial . println ( F ( \"Thermocouple short to GND\" )); break ; case MAX31855_THERMOCOUPLE_NOT_CONNECTED : Serial . println ( F ( \"Thermocouple not connected\" )); break ; case MAX31855_THERMOCOUPLE_UNKNOWN : Serial . println ( F ( \"Thermocouple unknown error, check spi cable\" )); break ; } delay ( 5000 ); } rawData = myMAX31855 . readRawData (); Serial . print ( F ( \"Cold Junction: \" )); Serial . println ( myMAX31855 . getColdJunctionTemperature ( rawData )); Serial . print ( F ( \"Thermocouple: \" )); Serial . println ( myMAX31855 . getTemperature ( rawData )); delay ( 5000 ); } MAX31855.h /***************************************************************************************************/ /* This is an Arduino library for 14-bit MAX31855 K-Thermocouple to Digital Converter with 12-bit Cold Junction Compensation conneted to hardware 5Mhz SPI with maximum sampling rate ~9..10Hz. - MAX31855 maximum power supply voltage is 3.6v - K-type thermocouples have an absolute accuracy of around \u00b12\u00b0C..\u00b16\u00b0C. - Measurement tempereture range -200\u00b0C..+700\u00b0C \u00b12\u00b0C or -270\u00b0C..+1372\u00b0C \u00b16\u00b0C with 0.25\u00b0C resolution/increment. - Cold junction compensation range -40\u00b0C..+125\u00b0 \u00b13\u00b0C with 0.062\u00b0C resolution/increment. Optimal performance of cold junction compensation happends when the thermocouple cold junction & the MAX31855 are at the same temperature. Avoid placing heat-generating devices or components near the converter because this may produce an errors. - It is strongly recommended to add a 10nF/0.01mF ceramic surface-mount capacitor, placed across the T+ and T- pins, to filter noise on the thermocouple lines. written by : enjoyneering79 sourse code: https://github.com/enjoyneering/MAX31855 This sensor uses SPI bus to communicate, specials pins are required to interface Board: MOSI MISO SCLK SS, don't use for CS Level Uno, Mini, Pro, ATmega168, ATmega328..... 11 12 13 10 5v Mega, Mega2560, ATmega1280, ATmega2560... 51 50 52 53 5v Due, SAM3X8E............................. ICSP4 ICSP1 ICSP3 x 3.3v Leonardo, ProMicro, ATmega32U4........... 16 14 15 x 5v Blue Pill, STM32F103xxxx boards.......... PA17 PA6 PA5 PA4 3v NodeMCU 1.0, WeMos D1 Mini............... GPIO13/D7 GPIO12/D6 GPIO14/D5 GPIO15/D8* 3v/5v ESP32.................................... GPIO23/D23 GPIO19/D19 GPIO18/D18 x 3v *most boards has 10-12kOhm pullup-up resistor on GPIO2/D4 & GPIO0/D3 for flash & boot Frameworks & Libraries: ATtiny Core - https://github.com/SpenceKonde/ATTinyCore ESP32 Core - https://github.com/espressif/arduino-esp32 ESP8266 Core - https://github.com/esp8266/Arduino STM32 Core - https://github.com/stm32duino/Arduino_Core_STM32 - https://github.com/rogerclarkmelbourne/Arduino_STM32 GNU GPL license, all text above must be included in any redistribution, see link for details - https://www.gnu.org/licenses/licenses.html */ /***************************************************************************************************/ #ifndef MAX31855_h #define MAX31855_h #if defined(ARDUINO) && ((ARDUINO) >= 100) //arduino core v1.0 or later #include <Arduino.h> #else #include <WProgram.h> #endif #if defined(__AVR__) #include <avr/pgmspace.h> //use for PROGMEM Arduino AVR #elif defined(ESP8266) #include <pgmspace.h> //use for PROGMEM Arduino ESP8266 #elif defined(_VARIANT_ARDUINO_STM32_) #include <avr/pgmspace.h> //use for PROGMEM Arduino STM32 #endif #ifndef MAX31855_SOFT_SPI //enable upload hw driver spi.h #include <SPI.h> #endif #define MAX31855_CONVERSION_POWER_UP_TIME 200 //in milliseconds #define MAX31855_CONVERSION_TIME 100 //in milliseconds, 9..10Hz sampling rate #define MAX31855_THERMOCOUPLE_RESOLUTION 0.25 //in \u00b0C per dac step #define MAX31855_COLD_JUNCTION_RESOLUTION 0.0625 //in \u00b0C per dac step #define MAX31855_ID 31855 #define MAX31855_FORCE_READ_DATA 7 //force to read the data, 7 is unique because d2d1d0 can't be all high at the same time #define MAX31855_ERROR 2000 //returned value if any error happends #define MAX31855_THERMOCOUPLE_OK 0 #define MAX31855_THERMOCOUPLE_SHORT_TO_VCC 1 #define MAX31855_THERMOCOUPLE_SHORT_TO_GND 2 #define MAX31855_THERMOCOUPLE_NOT_CONNECTED 3 #define MAX31855_THERMOCOUPLE_UNKNOWN 4 class MAX31855 { public : MAX31855 ( uint8_t cs ); void begin ( void ); uint8_t detectThermocouple ( int32_t rawValue = MAX31855_FORCE_READ_DATA ); uint16_t getChipID ( int32_t rawValue = MAX31855_FORCE_READ_DATA ); float getTemperature ( int32_t rawValue = MAX31855_FORCE_READ_DATA ); float getColdJunctionTemperature ( int32_t rawValue = MAX31855_FORCE_READ_DATA ); virtual int32_t readRawData ( void ); private : protected : uint8_t _cs ; }; #endif MAX31855.cpp /***************************************************************************************************/ /* This is an Arduino library for 14-bit MAX31855 K-Thermocouple to Digital Converter with 12-bit Cold Junction Compensation conneted to hardware 5Mhz SPI with maximum sampling rate ~9..10Hz. - MAX31855 maximum power supply voltage is 3.6v - K-type thermocouples have an absolute accuracy of around \u00b12\u00b0C..\u00b16\u00b0C. - Measurement tempereture range -200\u00b0C..+700\u00b0C \u00b12\u00b0C or -270\u00b0C..+1372\u00b0C \u00b16\u00b0C with 0.25\u00b0C resolution/increment. - Cold junction compensation range -40\u00b0C..+125\u00b0 \u00b13\u00b0C with 0.062\u00b0C resolution/increment. Optimal performance of cold junction compensation happends when the thermocouple cold junction & the MAX31855 are at the same temperature. Avoid placing heat-generating devices or components near the converter because this may produce an errors. - It is strongly recommended to add a 10nF/0.01mF ceramic surface-mount capacitor, placed across the T+ and T- pins, to filter noise on the thermocouple lines. written by : enjoyneering79 sourse code: https://github.com/enjoyneering/MAX31855 This sensor uses SPI bus to communicate, specials pins are required to interface Board: MOSI MISO SCLK SS, don't use for CS Level Uno, Mini, Pro, ATmega168, ATmega328..... 11 12 13 10 5v Mega, Mega2560, ATmega1280, ATmega2560... 51 50 52 53 5v Due, SAM3X8E............................. ICSP4 ICSP1 ICSP3 x 3.3v Leonardo, ProMicro, ATmega32U4........... 16 14 15 x 5v Blue Pill, STM32F103xxxx boards.......... PA17 PA6 PA5 PA4 3v NodeMCU 1.0, WeMos D1 Mini............... GPIO13/D7 GPIO12/D6 GPIO14/D5 GPIO15/D8* 3v/5v ESP32.................................... GPIO23/D23 GPIO19/D19 GPIO18/D18 x 3v most boards has 10-12kOhm pullup-up resistor on GPIO2/D4 & GPIO0/D3 for flash & boot Frameworks & Libraries: ATtiny Core - https://github.com/SpenceKonde/ATTinyCore ESP32 Core - https://github.com/espressif/arduino-esp32 ESP8266 Core - https://github.com/esp8266/Arduino STM32 Core - https://github.com/stm32duino/Arduino_Core_STM32 - https://github.com/rogerclarkmelbourne/Arduino_STM32 GNU GPL license, all text above must be included in any redistribution, see link for details - https://www.gnu.org/licenses/licenses.html */ /***************************************************************************************************/ #include \"MAX31855.h\" /**************************************************************************/ /* MAX31855() Constructor for hardware read only SPI NOTE: - cs is chip select, set cs low to enable serial interface */ /**************************************************************************/ MAX31855 :: MAX31855 ( uint8_t cs ) { _cs = cs ; //cs chip select } /**************************************************************************/ /* begin() Initializes & configures hardware SPI */ /**************************************************************************/ void MAX31855 :: begin ( void ) { pinMode ( _cs , OUTPUT ); digitalWrite ( _cs , HIGH ); //disables SPI interface for MAX31855, but it will initiate measurement/conversion SPI . begin (); //setting hardware SCK, MOSI, SS to output, pull SCK, MOSI low & SS high delay ( MAX31855_CONVERSION_POWER_UP_TIME ); } /**************************************************************************/ /* detectThermocouple() Checks if thermocouple is open, shorted to GND, shorted to VCC Return: - 0 OK - 1 short to VCC - 2 short to GND - 3 not connected NOTE: - bit D16 is normally low & goes high if thermocouple is open, shorted to GND or VCC - bit D2 is normally low & goes high to indicate a hermocouple short to VCC - bit D1 is normally low & goes high to indicate a thermocouple short to GND - bit D0 is normally low & goes high to indicate a thermocouple open circuit */ /**************************************************************************/ uint8_t MAX31855 :: detectThermocouple ( int32_t rawValue ) { if ( rawValue == MAX31855_FORCE_READ_DATA ) rawValue = readRawData (); if ( bitRead ( rawValue , 16 ) == 1 ) { if ( bitRead ( rawValue , 2 ) == 1 ) return MAX31855_THERMOCOUPLE_SHORT_TO_VCC ; else if ( bitRead ( rawValue , 1 ) == 1 ) return MAX31855_THERMOCOUPLE_SHORT_TO_GND ; else if ( bitRead ( rawValue , 0 ) == 1 ) return MAX31855_THERMOCOUPLE_NOT_CONNECTED ; else return MAX31855_THERMOCOUPLE_UNKNOWN ; } return MAX31855_THERMOCOUPLE_OK ; } /**************************************************************************/ /* getChipID() Checks chip ID NOTE: - bit D17, D3 always return zero & can be used as device ID */ /**************************************************************************/ uint16_t MAX31855 :: getChipID ( int32_t rawValue ) { if ( rawValue == MAX31855_FORCE_READ_DATA ) rawValue = readRawData (); if ( bitRead ( rawValue , 17 ) == 0 && bitRead ( rawValue , 3 ) == 0 ) return MAX31855_ID ; return 0 ; } /**************************************************************************/ /* getTemperature() Reads Temperature, C NOTE: - range -200\u00b0C..+700\u00b0C \u00b12\u00b0C or -270\u00b0C..+1372\u00b0C \u00b16\u00b0C with 0.25\u00b0C resolution/increment - thermocouple temperature data is 14-bit long - bit D31 is the thermocouple temperature sign bit \"+\" is high & \"-\" is low, if T+ and T- are unconnected it goes low - bits D30..D18 contain the converted temperature in the order of MSB to LSB, if T+ and T- are unconnected they go high - it is strongly recommended to add a 10nF/0.01mF ceramic surface-mount capacitor, placed across the T+ and T- pins, to filter noise on the thermocouple lines */ /**************************************************************************/ float MAX31855 :: getTemperature ( int32_t rawValue ) { if ( rawValue == MAX31855_FORCE_READ_DATA ) rawValue = readRawData (); if ( detectThermocouple ( rawValue ) != MAX31855_THERMOCOUPLE_OK || getChipID ( rawValue ) != MAX31855_ID ) return MAX31855_ERROR ; rawValue = rawValue >> 18 ; //clear D17..D0 bits return ( float ) rawValue * MAX31855_THERMOCOUPLE_RESOLUTION ; } /**************************************************************************/ /* getColdJunctionTemperature() Reads Temperature, C NOTE: - range -40\u00b0C..+125\u00b0 \u00b13\u00b0C with 0.062\u00b0C resolution/increment - chip internal temperature data is 12-bit long - bit D15 is cold-junction temperature sign bit \"+\" is high & \"-\" is low - bits D14..D4 contain cold-junction temperature in the order of MSB to LSB */ /**************************************************************************/ float MAX31855 :: getColdJunctionTemperature ( int32_t rawValue ) { if ( rawValue == MAX31855_FORCE_READ_DATA ) rawValue = readRawData (); if ( getChipID ( rawValue ) != MAX31855_ID ) return MAX31855_ERROR ; rawValue = rawValue & 0x0000FFFF ; //clear D31..D16 bits rawValue = rawValue >> 4 ; //clear D3...D0 bits return ( float ) rawValue * MAX31855_COLD_JUNCTION_RESOLUTION ; } /**************************************************************************/ /* readRawData() Reads raw data from MAX31855 via hardware SPI NOTE: - read of the cold-junction compensated thermocouple temperature requires 14 clock cycles - read of the cold-junction compensated thermocouple temperature & reference junction temperatures requires 32 clock cycles - forcing CS low immediately stops any conversion process, force CS high to initiate a new measurement process - set CS low to enable the serial interface & force to output the first bit on the SO pin, apply 14/32 clock signals at SCK to read the results at SO on the falling edge of the SCK - bit D31 is the thermocouple temperature sign bit \"+\" is high & \"-\" is low, if T+ & T- pins are unconnected it goes low - bits D30..D18 contain the converted temperature in the order of MSB to LSB, if T+ & T- pins are unconnected they go high - bit D17 is low to provide a device ID for the MAX31855 - bit D16 is normally low & goes high if thermocouple is open, shorted to GND or VCC - bit D15 is cold-junction temperature sign bit \"+\" is high & \"-\" is low - bits D14..D4 contain cold-junction temperature in the order of MSB to LSB - bit D3 is is low to provide a device ID for the MAX31855 - bit D2 is normally low & goes high to indicate a hermocouple short to VCC - bit D1 is normally low & goes high to indicate a thermocouple short to GND - bit D0 is normally low & goes high to indicate a thermocouple open circuit - arduino 8-bit AVR maximum SPI master clock speed is mcu speed/2, for 5v-16MHz/ProMini speed is 16000000/2=8MHz - arduino ESP8266 maximum SPI master clock speed is 80000000=80MHz - arduino STM32 maximum SPI master clock speed is mcu speed/2, for STM32F103C8 speed is 72000000/2=36MHz - SPI_MODE0 -> data available shortly after the rising edge of SCK */ /**************************************************************************/ int32_t MAX31855 :: readRawData ( void ) { int32_t rawData = 0 ; //digitalWrite(_cs, LOW); //stop measurement/conversion //delayMicroseconds(1); //5MHz is 0.2\u03bcsec, do we need it??? //digitalWrite(_cs, HIGH); //start measurement/conversion delay ( MAX31855_CONVERSION_TIME ); SPI . beginTransaction ( SPISettings ( 5000000 , MSBFIRST , SPI_MODE0 )); //up to 5MHz, read MSB first, SPI mode 0, see note digitalWrite ( _cs , LOW ); //set software CS low to enable SPI interface for MAX31855 for ( uint8_t i = 0 ; i < 2 ; i ++ ) //read 32-bits via hardware SPI, in order MSB->LSB (D31..D0 bit) { rawData = ( rawData << 16 ) | SPI . transfer16 ( 0x0000 ); //chip has read only SPI & MOSI not connected, so it doesn't metter what to send } digitalWrite ( _cs , HIGH ); //disables SPI interface for MAX31855, but it will initiate measurement/conversion SPI . endTransaction (); //de-asserting hardware CS & free hw SPI for other slaves return rawData ; }","title":"\u4ee3\u7801"},{"location":"ESP32/ESP32%20use%20MAX31855/#_3","text":"\u4f8b\u5982\uff0c\u8bfb\u51fa\u768432\u4e3a\u6570\u5b57\u4e3a 00000001100100000001100111100000 \u53ef\u4ee5\u8ba1\u7b97\u51fathermal Coupler\u7684\u6e29\u5ea6\u4e3a 1100100 --> 100 -- 100/4=25C https://help.aliyun.com/document_detail/146611.html?spm=a2c4g.11186623.6.881.51045800csO7yO#h2-url-1","title":"\u5206\u6790"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/","text":"ESP32 \u529f\u80fd\u4ecb\u7ecd source: https://github.com/suda-morris/blog \u82af\u7247\u53c2\u6570 \u53cc\u6838 CPU \uff0c\u578b\u53f7\uff1aXtensa LX6\uff0c\u54c8\u4f5b\u67b6\u6784\uff08\u6570\u636e\u603b\u7ebf\u548c\u6307\u4ee4\u603b\u7ebf\u5206\u522b\u62e5\u6709 4GB \u7684\u5bfb\u5740\u7a7a\u95f4\uff09\uff0c\u4e3b\u9891\u6700\u9ad8 240MHz\uff08600 MIPS\uff09\uff0c\u652f\u6301 DSP \u6307\u4ee4\uff0832 \u4f4d\u4e58\u6cd5\uff0c32 \u4f4d\u9664\u6cd5\uff0c40 \u4f4d\u4e58\u52a0\u8fd0\u7b97\uff09\uff0c\u6570\u636e\u603b\u7ebf\u652f\u6301\u5b57\u8282\u3001\u534a\u5b57\u3001\u5b57\u5bf9\u9f50\uff08\u6216\u8005\u975e\u5bf9\u9f50\uff09\u7684\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e\uff08\u5c0f\u7aef\u5e8f\uff09\uff0c\u6307\u4ee4\u603b\u7ebf\u53ea\u80fd\u4ee5\u5b57\u5bf9\u9f50\u7684\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e\uff08\u5c0f\u7aef\u5e8f\uff09 \u4e24\u4e2a CPU \u5404\u6709\u4e00\u7ec4\u5927\u5c0f\u4e3a 32KB \u7684 cache\uff0c\u7528\u4e8e\u8bbf\u95ee\u5916\u90e8\u5b58\u50a8\u5668 \u6700\u5927\u652f\u6301 16MB SPI Nor Flash \u4e0e 8MB SPI RAM\uff08PSRAM\uff09 \u5185\u90e8\u96c6\u6210 8MHz \u9ad8\u901f\u632f\u8361\u5668\u548c\u4f4e\u901f RC \u8c10\u632f\u5668 \uff08\u901a\u5e38\u662f150KHz\uff0c\u53ef\u8c03\uff09 \u96c6\u6210 Wi-Fi\uff08802.11bgn\uff09\u548c\u53cc\u6a21\u84dd\u7259\uff08\u7ecf\u5178\u84dd\u7259 + BLE\uff09 \u7cfb\u7edf\u7ed3\u6784 \u5185\u5b58\u5730\u5740\u6620\u5c04 \u5730\u5740 0x4000_0000 \u4ee5\u4e0b\u7684\u90e8\u5206\u5c5e\u4e8e\u6570\u636e\u603b\u7ebf\u7684\u5730\u5740\u8303\u56f4,\u5730\u5740 0x4000_0000 ~ 0x4FFF_FFFF \u90e8\u5206\u4e3a\u6307\u4ee4\u603b\u7ebf\u7684\u5730\u5740\u8303\u56f4,\u5730\u5740 0x5000_0000 \u53ca\u4ee5\u4e0a\u7684\u90e8\u5206\u662f\u6570\u636e\u603b\u7ebf\u4e0e\u6307\u4ee4\u603b\u7ebf\u5171\u7528\u7684\u5730\u5740\u8303\u56f4\u3002 Tip CPU \u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u603b\u7ebf\u6309\u7167 \u5b57\u8282 \u3001 \u534a\u5b57 \u3001 \u5b57 \u8fdb\u884c\u5bf9\u9f50\u4e0e\u975e\u5bf9\u9f50\u7684\u6570\u636e\u8bbf\u95ee\u3002 CPU \u53ef\u4ee5\u901a\u8fc7\u6307\u4ee4\u603b\u7ebf\u6309\u7167 \u5b57\u5bf9\u9f50 \u7684\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u8bbf\u95ee\uff0c\u975e\u5bf9\u9f50\u8bbf\u95ee\u4f1a\u5bfc\u81f4 CPU \u5de5\u4f5c\u5f02\u5e38\u3002 \u7247\u4e0a\u5185\u5b58\u5730\u5740\u6620\u5c04 Tip Internal SRAM1 \u7684\u5bb9\u91cf\u4e3a 128KB\uff0c\u65e2\u53ef\u4ee5\u88ab\u4e24\u4e2a CPU \u901a\u8fc7\u6570\u636e\u603b\u7ebf 0x3FFE_0000~0x3FFF_FFFF \u8bfb\u5199\uff0c\u4e5f\u53ef\u4ee5\u88ab\u4e24\u4e2a CPU \u901a\u8fc7\u6307\u4ee4\u603b\u7ebf 0x400A_0000~0x400B_FFFF \u8bfb\u5199\u3002 \u6307\u4ee4\u603b\u7ebf\u5730\u5740\u548c\u6570\u636e\u603b\u7ebf\u5730\u5740\u8bbf\u95ee\u7684 word \u662f\u9006\u5e8f\u7684 \u3002 RTC FAST Memory \u53ea\u80fd\u88ab PRO_CPU \u901a\u8fc7\u6570\u636e\u603b\u7ebf 0x3FF8_0000~0x3FF8_1FFF \u8bfb\u5199\uff0c\u6216\u88ab PRO_CPU \u901a\u8fc7\u6307\u4ee4\u603b\u7ebf 0x400C_0000~0x400C_ 1FFF \u8bfb\u5199\u3002 \u6307\u4ee4\u603b\u7ebf\u5730\u5740\u548c\u6570\u636e\u603b\u7ebf\u5730\u5740\u8bbf\u95ee\u7684 word \u662f\u540c\u5e8f\u7684 \u3002 \u7247\u5916\u5185\u5b58\u5730\u5740\u6620\u5c04 Tip \u4e24\u4e2a CPU \u901a\u8fc7 Cache \u4e0e MMU \u5bf9\u7247\u5916\u5b58\u50a8\u5668\u8fdb\u884c\u8bbf\u95ee\u65f6\uff0cCache \u5c06\u6839\u636e MMU \u4e2d\u7684\u8bbe\u7f6e\u628a CPU \u7684\u5730\u5740\u53d8\u6362\u4e3a External Flash \u4e0e External SRAM \u7684\u7269\u7406\u5730\u5740\uff0c\u7ecf\u8fc7\u53d8\u6362\u4e4b\u540e\u7684\u7269\u7406\u5730\u5740\u6700\u5927\u652f\u6301 16MB \u7684 External Flash \u548c 8MB \u7684 External SRAM\u3002 Cache \u7cfb\u7edf \u5f53\u53ea\u6709 PRO CPU \u4f7f\u7528 Cache \u6216\u53ea\u6709 APP CPU \u4f7f\u7528 Cache \u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 Internal SRAM0 \u7684 POOL0 \u6216 POOL1 \u4f5c\u4e3a Cache Memory;\u5f53 PRO CPU \u548c APP CPU \u90fd\u4f7f\u7528 Cache \u65f6\uff0cInternal SRAM0 \u7684 POOL0 \u548c POOL1 \u53ef\u4ee5\u590d\u7528\u4f5c\u4e3a Cache Memory\u3002 Warning \u5f00\u542f Cache \u529f\u80fd\u540e\uff0cPOOL0 \u6216\u8005 POOL1 \u53ea\u80fd\u4f5c\u4e3a cache memory \u4f7f\u7528\uff0c\u4e0d\u80fd\u590d\u7528\u4f5c\u4e3a\u6307\u4ee4\u603b\u7ebf\u7684\u8bbf\u95ee\u533a\u57df\u3002 \u4e00\u5f20\u56fe\u770b\u6e05 ESP32 \u7684\u5185\u5b58\u6620\u5c04 \u5185\u5b58\u5e03\u5c40\u4e0e\u603b\u7ebf \u955c\u50cf\u7ed3\u6784 \u4e2d\u65ad\u77e9\u9635 \u8f93\u5165\u7aef\u53ef\u4ee5\u63a5\u6536\u591a\u8fbe 71 \u4e2a \u5916\u90e8\u4e2d\u65ad\u6e90\u4fe1\u53f7 \uff08\u5176\u4e2d\u6709 67 \u4e2a\u53ef\u4ee5\u5206\u914d\u7ed9\u4efb\u610f\u4e00\u4e2a CPU\uff0c GPIO_INTERRUPT_PRO \u548c GPIO_INTERRUPT_PRO_NMI \u53ea\u80fd\u5206\u914d\u7ed9 PRO_CPU\uff0c GPIO_INTERRUPT_APP \u548c GPIO_INTERRUPT_APP_NMI \u53ea\u80fd\u5206\u914d\u7ed9 APP_CPU\u3002 \u6bcf\u4e2a CPU \u5404\u6709 32 \u4e2a\u4e2d\u65ad\uff0c\u5176\u4e2d\u4ec5\u6709 26 \u4e2a\u53ef\u4ee5\u63a5\u6536\u5916\u90e8\u4e2d\u65ad\u6e90\u4fe1\u53f7\uff0c\u4e14\u8fd9 26 \u4e2a CPU \u4e2d\u65ad \u53ef\u4ee5\u88ab\u591a\u4e2a\u5916\u8bbe\u4e2d\u65ad\u6e90\u5171\u4eab \u3002 CPU \u4e2d\u65ad\u79cd\u7c7b\u5305\u62ec\uff1a\u7535\u5e73\u89e6\u53d1\uff0c\u8fb9\u6cbf\u89e6\u53d1\uff0cNMI\uff0c\u8f6f\u4ef6\u89e6\u53d1\uff0c\u5b9a\u65f6\u5668\u89e6\u53d1\u3002 \u901a\u8fc7\u914d\u7f6e\u4e2d\u65ad\u77e9\u9635\uff0c\u53ef\u4ee5\u5c4f\u853d\u6389 CPU \u7684 NMI \u4e2d\u65ad\u3002 \u7cfb\u7edf\u590d\u4f4d \u7cfb\u7edf\u63d0\u4f9b 3 \u79cd\u7ea7\u522b\u7684\u590d\u4f4d\u65b9\u5f0f\uff0c\u5206\u522b\u662f CPU \u590d\u4f4d\uff0c\u5185\u6838\u590d\u4f4d\uff0c\u7cfb\u7edf\u590d\u4f4d\u3002 \u6240\u6709\u7684\u590d\u4f4d\u90fd\u4e0d\u4f1a\u5f71\u54cd MEM \u4e2d\u7684\u6570\u636e \u3002 CPU \u590d\u4f4d\uff1a\u53ea\u590d\u4f4d CPU \u7684\u5185\u90e8\u5bc4\u5b58\u5668 \u5185\u6838\u590d\u4f4d\uff1a\u9664\u4e86 RTC \u5b50\u7cfb\u7edf\uff0c\u6240\u6709\u7684\u6570\u5b57\u5bc4\u5b58\u5668\u5168\u90e8\u590d\u4f4d\uff0c\u5305\u62ec CPU\u3001\u5916\u8bbe\u548c\u6570\u5b57 GPIO \u7cfb\u7edf\u590d\u4f4d\uff1a\u590d\u4f4d\u82af\u7247\u7684\u6240\u6709\u5bc4\u5b58\u5668\uff0c\u5305\u62ec RTC \u5b50\u7cfb\u7edf \u83b7\u53d6\u590d\u4f4d\u4fe1\u606f PRO_CPU \u548c APP_CPU \u53ef\u5206\u522b\u8bfb\u53d6\u5bc4\u5b58\u5668 RTC_CNTL_RESET_CAUSE_PROCPU \u548c RTC_CNTL_RESET_CAUSE_APPCPU \u6765\u83b7\u53d6\u590d\u4f4d\u6e90\u3002 PRO APP \u590d\u4f4d\u6e90 \u590d\u4f4d\u7ea7\u522b \u5907\u6ce8 0x01 0x01 \u4e0a\u7535\u590d\u4f4d \u7cfb\u7edf\u590d\u4f4d - 0x10 0x10 RWDT \u7cfb\u7edf\u590d\u4f4d \u7cfb\u7edf\u590d\u4f4d RTC \u770b\u95e8\u72d7\u590d\u4f4d 0x0F 0x0F \u6b20\u538b\u590d\u4f4d \u7cfb\u7edf\u590d\u4f4d - 0x03 0x03 \u8f6f\u4ef6\u7cfb\u7edf\u590d\u4f4d \u5185\u6838\u590d\u4f4d RTC_CNTL_SW_SYS_RST 0x05 0x05 \u6df1\u5ea6\u7761\u7720\u590d\u4f4d \u5185\u6838\u590d\u4f4d - 0x07 0x07 MWDT0 \u5168\u5c40\u590d\u4f4d \u5185\u6838\u590d\u4f4d - 0x08 0x08 MWDT1 \u5168\u5c40\u590d\u4f4d \u5185\u6838\u590d\u4f4d - 0x09 0x09 RWDT \u5185\u6838\u590d\u4f4d \u5185\u6838\u590d\u4f4d - 0x0B - MWDT0 CPU \u590d\u4f4d CPU \u590d\u4f4d - 0x0C - \u8f6f\u4ef6 CPU \u590d\u4f4d CPU \u590d\u4f4d RTC_CNTL_SW_PROCPU_RST - 0x0B MWDT1 CPU \u590d\u4f4d CPU \u590d\u4f4d - - 0x0C \u8f6f\u4ef6 CPU \u590d\u4f4d CPU \u590d\u4f4d RTC_CNTL_SW_APPCPU_RST 0x0D 0x0D RWDT CPU \u590d\u4f4d CPU \u590d\u4f4d - - 0x0E PRO CPU \u590d\u4f4d CPU \u590d\u4f4d DPORT_APPCPU_RESETTING \u7cfb\u7edf\u65f6\u949f \u65f6\u949f\u6e90 PLL_CLK\uff1a320MHz \u5185\u90e8 PLL \u65f6\u949f XTL_CLK\uff1a2\uff5e40MHz \u5916\u90e8\u6676\u632f\u65f6\u949f XTL32K_CLK\uff1a32KHz \u5916\u90e8\u6676\u632f\u65f6\u949f RTC8M_CLK\uff1a8MHz \u5185\u90e8\u65f6\u949f\uff0c\u9891\u7387\u53ef\u8c03 RTC8M_D256_CLK\uff1a\u7531 RTC8M_CLK \u7ecf\u8fc7 256 \u5206\u9891\u6240\u5f97 RTC_CLK\uff1a150KHz \u5185\u90e8\u4f4e\u529f\u8017\u65f6\u949f\uff0c\u9891\u7387\u53ef\u8c03 APLL_CLK\uff1a16\uff5e128MHz \u5185\u90e8 Audio PLL \u65f6\u949f \u5916\u8bbe\u65f6\u949f Tip REF_TICK \u53ef\u4ee5\u5728 APB_CLK \u65f6\u949f\u5207\u6362\u65f6\u7ef4\u6301\u9891\u7387\u4e0d\u53d8 SLOW_CLK \u5141\u8bb8\u9009\u62e9 RTC_CLK\uff0cXTL32K_CLK\uff0c\u6216 RTC8M_D256_CLK\uff0c\u7528\u4e8e\u9a71\u52a8 Power Management \u6a21\u5757 FAST_CLK \u5141\u8bb8\u9009\u62e9 XTL_CLK \u7684\u5206\u9891\u65f6\u949f\u6216\u8005 RTC8M_CLK \uff0c\u7528\u4e8e\u9a71\u52a8\u7247\u4e0a\u4f20\u611f\u5668\u6a21\u5757 APLL \u97f3\u9891\u5e94\u7528\u548c\u5176\u5b83\u5bf9\u6570\u636e\u4f20\u8f93\u65f6\u6548\u6027\u8981\u6c42\u5f88\u9ad8\u7684\u5e94\u7528\u90fd\u9700\u8981\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u914d\u503c\u3001\u4f4e\u6296\u52a8\u5e76\u4e14\u7cbe\u786e\u7684\u65f6\u949f\u6e90\u3002ESP32 \u96c6\u6210\u4e86\u4e13\u95e8\u7528\u4e8e I2S \u5916\u8bbe\u7684 APLL\u3002 \\[f_{out} = \\frac{f_{xtal}(sdm2 + \\frac{sdm1}{2^8} + \\frac{sdm0}{2^{16}} + 4)}{2(odiv + 2)}\\] \u5176\u4e2d\uff1a \\(f_{xtal}\\) \uff1a\u6676\u632f\u9891\u7387\uff0c\u901a\u5e38\u4e3a 40MHz \\(sdm0 \\in [0,255]\\) \\(sdm1 \\in [0,255]\\) \\(sdm2 \\in [0,63]\\) \\(odiv \\in [0,31]\\) \\(350MHz < f_{xtal}(sdm2 + \\frac{sdm1}{2^8} + \\frac{sdm0}{2^{16}} + 4) < 500MHz\\) GPIO IO_MUX \u548c GPIO Matrix Tip ESP32 \u7684\u6bcf\u4e2a\u7269\u7406 GPIO Pad \u90fd\u53ef\u7528\u4f5c\u4e00\u4e2a\u901a\u7528 IO\uff0c\u6216\u8005\u8fde\u63a5\u81f3\u5185\u90e8\u7684\u67d0\u4e2a\u5916\u8bbe\u4fe1\u53f7 RTC IO_MUX \u7528\u4e8e\u63a7\u5236 GPIO pad \u7684\u4f4e\u529f\u8017\u548c\u6a21\u62df\u529f\u80fd\uff0c\u53ea\u6709\u90e8\u5206 GPIO pad \u5177\u6709\u8fd9\u4e9b\u529f\u80fd\u3002\u5f53\u8fd9\u4e9b\u7ba1\u811a\u88ab\u914d\u7f6e\u4e3a RTC GPIO\u65f6\uff0c\u4f5c\u4e3a\u8f93\u51fa\u7ba1\u811a\u65f6\u4ecd\u7136\u80fd\u591f\u5728\u82af\u7247\u5904\u4e8e Deep-sleep \u7761\u7720\u6a21\u5f0f\u4e0b\u4fdd\u6301\u8f93\u51fa\u7535\u5e73\u503c\u6216\u8005\u4f5c\u4e3a\u8f93\u5165\u7ba1\u811a\u4f7f\u7528\u65f6\u53ef\u4ee5\u5c06\u82af\u7247\u4ece Deep-sleep \u4e2d\u5524\u9192 GPIO 34-39 \u4ec5\u7528\u4f5c\u8f93\u5165\u7ba1\u811a\uff0c\u5176\u4f59\u7684\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u8f93\u5165\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8f93\u51fa \u5feb\u901f\u4fe1\u53f7\u5982\u4ee5\u592a\u7f51\u3001SDIO\u3001SPI\u3001JTAG\u3001UART\u7b49\u4f1a\u65c1\u8def GPIO \u4ea4\u6362\u77e9\u9635\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u9ad8\u9891\u6570\u5b57\u7279\u6027 \u4fe1\u53f7\u4ece GPIO pad \u8f93\u5165\u7ed9\u5916\u8bbe \u5c06 RMT \u5916\u8bbe\u901a\u9053 0 \u7684\u8f93\u5165\u4fe1\u53f7 RMT_SIG_IN0_IDX (\u4fe1\u53f7\u7d22\u5f15\u503c\u4e3a 83) \u7ed1\u5b9a\u5230 GPIO15 \u5c06 GPIO_FUNC83_IN_SEL_CFG_REG \u5bc4\u5b58\u5668\u7684 GPIO_FUNC83_IN_SEL \u5b57\u6bb5\u8bbe\u7f6e\u4e3a 15 \u7f6e\u4f4d GPIO_FUNC15_OUT_SEL_CFG_REG \u5bc4\u5b58\u5668\u7684 GPIO_FUNC15_OEN_SEL \u4f4d \u6e05\u96f6 GPIO_ENABLE_REG \u5bc4\u5b58\u5668\u7684 Bit 15 \u914d\u7f6e IO_MUX_GPIO15_REG \u5bc4\u5b58\u5668\u7684 MCU_SEL \u5b57\u6bb5\u4e3a 2 (GPIO function)\uff0c\u540c\u65f6\u7f6e\u4f4d FUN_IE \u4fe1\u53f7\u4ece\u5916\u8bbe\u8f93\u51fa\u5230 GPIO pad IO_MUX Pad \u5217\u8868 Strapping \u7ba1\u811a DPort \u901a\u8fc7 DPort \u5bc4\u5b58\u5668\u63a7\u5236\u65f6\u949f\u95e8\u63a7\uff0c\u7ba1\u7406\u529f\u8017\uff0c\u914d\u7f6e\u5916\u8bbe\u53ef\u4ee5\u4f7f\u7cfb\u7edf\u5728\u4fdd\u6301\u6700\u4f73\u65b0\u80fd\u7684\u540c\u65f6\u5c06\u529f\u8017\u964d\u5230\u6700\u4f4e\u3002 DPort \u5bc4\u5b58\u5668\u5305\u542b\u4e86\u591a\u4e2a\u5916\u8bbe\u548c\u6a21\u5757\u7684\u5bc4\u5b58\u5668\uff1a \u7cfb\u7edf\u548c\u5b58\u50a8\u5668\uff1acache \u914d\u7f6e\u548c\u5b58\u50a8\u5668\u6620\u5c04 \u65f6\u949f\u548c\u590d\u4f4d \u4e2d\u65ad\u77e9\u9635 DMA PID/MPU/MMU APP CPU\uff1a\u6682\u505c\u4efb\u52a1\u7684\u6267\u884c\uff0c\u8bbe\u7f6e\u4ece ROM code \u542f\u52a8\u540e\u7684\u8df3\u8f6c\u5730\u5740 (DPORT_APPCPU_BOOT_ADDR) \u5916\u8bbe\u65f6\u949f\u95e8\u63a7\u548c\u590d\u4f4d DMA DMA \u63a7\u5236\u5668\u4e0e CPU \u7684\u6570\u636e\u603b\u7ebf\u4f7f\u7528\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u8bbf\u95ee\u5185\u90e8 RAM\u3002 \u8f6f\u4ef6\u53ef\u4ee5\u901a\u8fc7\u6302\u8f7d\u94fe\u8868\u7684\u65b9\u5f0f\u6765\u4f7f\u7528 DMA \u5f15\u64ce\uff0c\u5f15\u64ce\u4f1a\u6839\u636e out_link \u4e2d\u5185\u5bb9\u5c06\u76f8\u5e94 RAM \u4e2d\u7684\u6570\u636e\u53d1\u9001\u51fa\u53bb\uff0c\u4e5f\u53ef\u6839\u636e in_link \u4e2d\u7684\u5185\u5bb9\u5c06\u63a5\u6536\u7684\u6570\u636e\u5b58\u53d6\u6307\u5b9a RAM \u5730\u5740\u7a7a\u95f4\u3002 owner 0 \u8868\u793a\u5f53\u524d\u94fe\u8868\u5bf9\u5e94\u7684 buffer \u7531 CPU \u64cd\u4f5c 1 \u8868\u793a\u5f53\u524d\u94fe\u8868\u5bf9\u5e94\u7684 buffer \u7531 DMA \u64cd\u4f5c eof 0 \u8868\u793a\u5f53\u524d\u94fe\u8868\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u94fe\u8868 1 \u8868\u793a\u5f53\u524d\u94fe\u8868\u4e3a\u6570\u636e\u5305\u7684\u6700\u540e\u4e00\u4e2a\u94fe\u8868 length \u5f53\u524d\u94fe\u8868\u5bf9\u5e94\u7684 buffer \u4e2d\u7684\u6709\u6548\u5b57\u8282\u6570 size \u5f53\u524d\u94fe\u8868\u5bf9\u5e94\u7684 buffer \u7684\u5927\u5c0f\uff08\u5b57\u5bf9\u9f50\uff09 buffer address pointer buffer \u5730\u5740\u6307\u9488\uff08\u5b57\u5bf9\u9f50\uff09 next descriptor address \u6307\u5411\u4e0b\u4e00\u4e2a\u63cf\u8ff0\u7b26\u94fe\u8868\uff0c\u5f53 eof \u4e3a 1 \u65f6\uff0c\u8be5\u503c\u4e5f\u5e94\u4e3a0 PID \u5728 ESP32 \u4e2d\uff0cPID \u63a7\u5236\u5668\u5145\u5f53\u6307\u793a\u5668\uff0c\u5411 MMU/MPU \u901a\u77e5\u5f53\u524d\u8fd0\u884c\u4ee3\u7801\u7684\u7a0b\u5e8f\u7684 PID\u3002 OS \u6bcf\u6b21\u5c06\u4e0a\u4e0b\u6587\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u5e94\u7528\u65f6\uff0c\u4f1a\u66f4\u65b0 PID \u63a7\u5236\u5668\u4e2d\u7684 PID\u3002 OS \u548c\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u5206\u522b\u914d\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53f7\uff08\u5373 PID\uff09\uff0c\u7528\u4e8e\u533a\u5206\u5f7c\u6b64\u3002 PRO_CPU \u548c APP_CPU \u5404\u6709 8 \u4e2a\u8fdb\u7a0b\u53f7\u3002 ESP32 \u7684\u6bcf\u4e2a CPU \u5404\u6709\u4e00\u4e2a PID \u63a7\u5236\u5668\uff0c\u80fd\u591f\u5728\u9700\u8981\u65f6\u5141\u8bb8\u4e0d\u540c\u7684 CPU \u4e0a\u8fd0\u884c\u4e0d\u540c\u7684\u8fdb\u7a0b\u3002 MPU\uff0cMMU ESP32 \u4e2d\u7684\u6bcf\u4e2a\u5916\u8bbe\u548c\u5b58\u50a8\u5668\u901a\u8fc7 MMU \u6216\u8005 MPU \u88ab\u8bbf\u95ee\u3002 MPU/MMU \u57fa\u4e8e\u8fdb\u7a0b\u7684 PID \u5bf9\u7247\u4e0a\u5b58\u50a8\u5668\u3001\u7247\u5916\u5b58\u50a8\u5668\u3001\u5916\u8bbe\u8fdb\u884c\u7ba1\u7406\u3002 \u7247\u4e0a\u5b58\u50a8\u5668\u7531 MPU/MMU \u7ba1\u7406 \u7247\u5916\u5b58\u50a8\u5668\u7531 MMU \u7ba1\u7406 \u5916\u8bbe\u7531 MPU \u7ba1\u7406 SPI","title":"ESP32 \u529f\u80fd\u4ecb\u7ecd"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#esp32","text":"source: https://github.com/suda-morris/blog","title":"ESP32 \u529f\u80fd\u4ecb\u7ecd"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_1","text":"\u53cc\u6838 CPU \uff0c\u578b\u53f7\uff1aXtensa LX6\uff0c\u54c8\u4f5b\u67b6\u6784\uff08\u6570\u636e\u603b\u7ebf\u548c\u6307\u4ee4\u603b\u7ebf\u5206\u522b\u62e5\u6709 4GB \u7684\u5bfb\u5740\u7a7a\u95f4\uff09\uff0c\u4e3b\u9891\u6700\u9ad8 240MHz\uff08600 MIPS\uff09\uff0c\u652f\u6301 DSP \u6307\u4ee4\uff0832 \u4f4d\u4e58\u6cd5\uff0c32 \u4f4d\u9664\u6cd5\uff0c40 \u4f4d\u4e58\u52a0\u8fd0\u7b97\uff09\uff0c\u6570\u636e\u603b\u7ebf\u652f\u6301\u5b57\u8282\u3001\u534a\u5b57\u3001\u5b57\u5bf9\u9f50\uff08\u6216\u8005\u975e\u5bf9\u9f50\uff09\u7684\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e\uff08\u5c0f\u7aef\u5e8f\uff09\uff0c\u6307\u4ee4\u603b\u7ebf\u53ea\u80fd\u4ee5\u5b57\u5bf9\u9f50\u7684\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e\uff08\u5c0f\u7aef\u5e8f\uff09 \u4e24\u4e2a CPU \u5404\u6709\u4e00\u7ec4\u5927\u5c0f\u4e3a 32KB \u7684 cache\uff0c\u7528\u4e8e\u8bbf\u95ee\u5916\u90e8\u5b58\u50a8\u5668 \u6700\u5927\u652f\u6301 16MB SPI Nor Flash \u4e0e 8MB SPI RAM\uff08PSRAM\uff09 \u5185\u90e8\u96c6\u6210 8MHz \u9ad8\u901f\u632f\u8361\u5668\u548c\u4f4e\u901f RC \u8c10\u632f\u5668 \uff08\u901a\u5e38\u662f150KHz\uff0c\u53ef\u8c03\uff09 \u96c6\u6210 Wi-Fi\uff08802.11bgn\uff09\u548c\u53cc\u6a21\u84dd\u7259\uff08\u7ecf\u5178\u84dd\u7259 + BLE\uff09","title":"\u82af\u7247\u53c2\u6570"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_2","text":"","title":"\u7cfb\u7edf\u7ed3\u6784"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_3","text":"\u5730\u5740 0x4000_0000 \u4ee5\u4e0b\u7684\u90e8\u5206\u5c5e\u4e8e\u6570\u636e\u603b\u7ebf\u7684\u5730\u5740\u8303\u56f4,\u5730\u5740 0x4000_0000 ~ 0x4FFF_FFFF \u90e8\u5206\u4e3a\u6307\u4ee4\u603b\u7ebf\u7684\u5730\u5740\u8303\u56f4,\u5730\u5740 0x5000_0000 \u53ca\u4ee5\u4e0a\u7684\u90e8\u5206\u662f\u6570\u636e\u603b\u7ebf\u4e0e\u6307\u4ee4\u603b\u7ebf\u5171\u7528\u7684\u5730\u5740\u8303\u56f4\u3002 Tip CPU \u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u603b\u7ebf\u6309\u7167 \u5b57\u8282 \u3001 \u534a\u5b57 \u3001 \u5b57 \u8fdb\u884c\u5bf9\u9f50\u4e0e\u975e\u5bf9\u9f50\u7684\u6570\u636e\u8bbf\u95ee\u3002 CPU \u53ef\u4ee5\u901a\u8fc7\u6307\u4ee4\u603b\u7ebf\u6309\u7167 \u5b57\u5bf9\u9f50 \u7684\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u8bbf\u95ee\uff0c\u975e\u5bf9\u9f50\u8bbf\u95ee\u4f1a\u5bfc\u81f4 CPU \u5de5\u4f5c\u5f02\u5e38\u3002","title":"\u5185\u5b58\u5730\u5740\u6620\u5c04"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_4","text":"Tip Internal SRAM1 \u7684\u5bb9\u91cf\u4e3a 128KB\uff0c\u65e2\u53ef\u4ee5\u88ab\u4e24\u4e2a CPU \u901a\u8fc7\u6570\u636e\u603b\u7ebf 0x3FFE_0000~0x3FFF_FFFF \u8bfb\u5199\uff0c\u4e5f\u53ef\u4ee5\u88ab\u4e24\u4e2a CPU \u901a\u8fc7\u6307\u4ee4\u603b\u7ebf 0x400A_0000~0x400B_FFFF \u8bfb\u5199\u3002 \u6307\u4ee4\u603b\u7ebf\u5730\u5740\u548c\u6570\u636e\u603b\u7ebf\u5730\u5740\u8bbf\u95ee\u7684 word \u662f\u9006\u5e8f\u7684 \u3002 RTC FAST Memory \u53ea\u80fd\u88ab PRO_CPU \u901a\u8fc7\u6570\u636e\u603b\u7ebf 0x3FF8_0000~0x3FF8_1FFF \u8bfb\u5199\uff0c\u6216\u88ab PRO_CPU \u901a\u8fc7\u6307\u4ee4\u603b\u7ebf 0x400C_0000~0x400C_ 1FFF \u8bfb\u5199\u3002 \u6307\u4ee4\u603b\u7ebf\u5730\u5740\u548c\u6570\u636e\u603b\u7ebf\u5730\u5740\u8bbf\u95ee\u7684 word \u662f\u540c\u5e8f\u7684 \u3002","title":"\u7247\u4e0a\u5185\u5b58\u5730\u5740\u6620\u5c04"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_5","text":"Tip \u4e24\u4e2a CPU \u901a\u8fc7 Cache \u4e0e MMU \u5bf9\u7247\u5916\u5b58\u50a8\u5668\u8fdb\u884c\u8bbf\u95ee\u65f6\uff0cCache \u5c06\u6839\u636e MMU \u4e2d\u7684\u8bbe\u7f6e\u628a CPU \u7684\u5730\u5740\u53d8\u6362\u4e3a External Flash \u4e0e External SRAM \u7684\u7269\u7406\u5730\u5740\uff0c\u7ecf\u8fc7\u53d8\u6362\u4e4b\u540e\u7684\u7269\u7406\u5730\u5740\u6700\u5927\u652f\u6301 16MB \u7684 External Flash \u548c 8MB \u7684 External SRAM\u3002","title":"\u7247\u5916\u5185\u5b58\u5730\u5740\u6620\u5c04"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#cache","text":"\u5f53\u53ea\u6709 PRO CPU \u4f7f\u7528 Cache \u6216\u53ea\u6709 APP CPU \u4f7f\u7528 Cache \u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 Internal SRAM0 \u7684 POOL0 \u6216 POOL1 \u4f5c\u4e3a Cache Memory;\u5f53 PRO CPU \u548c APP CPU \u90fd\u4f7f\u7528 Cache \u65f6\uff0cInternal SRAM0 \u7684 POOL0 \u548c POOL1 \u53ef\u4ee5\u590d\u7528\u4f5c\u4e3a Cache Memory\u3002 Warning \u5f00\u542f Cache \u529f\u80fd\u540e\uff0cPOOL0 \u6216\u8005 POOL1 \u53ea\u80fd\u4f5c\u4e3a cache memory \u4f7f\u7528\uff0c\u4e0d\u80fd\u590d\u7528\u4f5c\u4e3a\u6307\u4ee4\u603b\u7ebf\u7684\u8bbf\u95ee\u533a\u57df\u3002","title":"Cache \u7cfb\u7edf"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#esp32_1","text":"","title":"\u4e00\u5f20\u56fe\u770b\u6e05 ESP32 \u7684\u5185\u5b58\u6620\u5c04"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_6","text":"","title":"\u5185\u5b58\u5e03\u5c40\u4e0e\u603b\u7ebf"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_7","text":"","title":"\u955c\u50cf\u7ed3\u6784"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_8","text":"\u8f93\u5165\u7aef\u53ef\u4ee5\u63a5\u6536\u591a\u8fbe 71 \u4e2a \u5916\u90e8\u4e2d\u65ad\u6e90\u4fe1\u53f7 \uff08\u5176\u4e2d\u6709 67 \u4e2a\u53ef\u4ee5\u5206\u914d\u7ed9\u4efb\u610f\u4e00\u4e2a CPU\uff0c GPIO_INTERRUPT_PRO \u548c GPIO_INTERRUPT_PRO_NMI \u53ea\u80fd\u5206\u914d\u7ed9 PRO_CPU\uff0c GPIO_INTERRUPT_APP \u548c GPIO_INTERRUPT_APP_NMI \u53ea\u80fd\u5206\u914d\u7ed9 APP_CPU\u3002 \u6bcf\u4e2a CPU \u5404\u6709 32 \u4e2a\u4e2d\u65ad\uff0c\u5176\u4e2d\u4ec5\u6709 26 \u4e2a\u53ef\u4ee5\u63a5\u6536\u5916\u90e8\u4e2d\u65ad\u6e90\u4fe1\u53f7\uff0c\u4e14\u8fd9 26 \u4e2a CPU \u4e2d\u65ad \u53ef\u4ee5\u88ab\u591a\u4e2a\u5916\u8bbe\u4e2d\u65ad\u6e90\u5171\u4eab \u3002 CPU \u4e2d\u65ad\u79cd\u7c7b\u5305\u62ec\uff1a\u7535\u5e73\u89e6\u53d1\uff0c\u8fb9\u6cbf\u89e6\u53d1\uff0cNMI\uff0c\u8f6f\u4ef6\u89e6\u53d1\uff0c\u5b9a\u65f6\u5668\u89e6\u53d1\u3002 \u901a\u8fc7\u914d\u7f6e\u4e2d\u65ad\u77e9\u9635\uff0c\u53ef\u4ee5\u5c4f\u853d\u6389 CPU \u7684 NMI \u4e2d\u65ad\u3002","title":"\u4e2d\u65ad\u77e9\u9635"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_9","text":"\u7cfb\u7edf\u63d0\u4f9b 3 \u79cd\u7ea7\u522b\u7684\u590d\u4f4d\u65b9\u5f0f\uff0c\u5206\u522b\u662f CPU \u590d\u4f4d\uff0c\u5185\u6838\u590d\u4f4d\uff0c\u7cfb\u7edf\u590d\u4f4d\u3002 \u6240\u6709\u7684\u590d\u4f4d\u90fd\u4e0d\u4f1a\u5f71\u54cd MEM \u4e2d\u7684\u6570\u636e \u3002 CPU \u590d\u4f4d\uff1a\u53ea\u590d\u4f4d CPU \u7684\u5185\u90e8\u5bc4\u5b58\u5668 \u5185\u6838\u590d\u4f4d\uff1a\u9664\u4e86 RTC \u5b50\u7cfb\u7edf\uff0c\u6240\u6709\u7684\u6570\u5b57\u5bc4\u5b58\u5668\u5168\u90e8\u590d\u4f4d\uff0c\u5305\u62ec CPU\u3001\u5916\u8bbe\u548c\u6570\u5b57 GPIO \u7cfb\u7edf\u590d\u4f4d\uff1a\u590d\u4f4d\u82af\u7247\u7684\u6240\u6709\u5bc4\u5b58\u5668\uff0c\u5305\u62ec RTC \u5b50\u7cfb\u7edf","title":"\u7cfb\u7edf\u590d\u4f4d"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_10","text":"PRO_CPU \u548c APP_CPU \u53ef\u5206\u522b\u8bfb\u53d6\u5bc4\u5b58\u5668 RTC_CNTL_RESET_CAUSE_PROCPU \u548c RTC_CNTL_RESET_CAUSE_APPCPU \u6765\u83b7\u53d6\u590d\u4f4d\u6e90\u3002 PRO APP \u590d\u4f4d\u6e90 \u590d\u4f4d\u7ea7\u522b \u5907\u6ce8 0x01 0x01 \u4e0a\u7535\u590d\u4f4d \u7cfb\u7edf\u590d\u4f4d - 0x10 0x10 RWDT \u7cfb\u7edf\u590d\u4f4d \u7cfb\u7edf\u590d\u4f4d RTC \u770b\u95e8\u72d7\u590d\u4f4d 0x0F 0x0F \u6b20\u538b\u590d\u4f4d \u7cfb\u7edf\u590d\u4f4d - 0x03 0x03 \u8f6f\u4ef6\u7cfb\u7edf\u590d\u4f4d \u5185\u6838\u590d\u4f4d RTC_CNTL_SW_SYS_RST 0x05 0x05 \u6df1\u5ea6\u7761\u7720\u590d\u4f4d \u5185\u6838\u590d\u4f4d - 0x07 0x07 MWDT0 \u5168\u5c40\u590d\u4f4d \u5185\u6838\u590d\u4f4d - 0x08 0x08 MWDT1 \u5168\u5c40\u590d\u4f4d \u5185\u6838\u590d\u4f4d - 0x09 0x09 RWDT \u5185\u6838\u590d\u4f4d \u5185\u6838\u590d\u4f4d - 0x0B - MWDT0 CPU \u590d\u4f4d CPU \u590d\u4f4d - 0x0C - \u8f6f\u4ef6 CPU \u590d\u4f4d CPU \u590d\u4f4d RTC_CNTL_SW_PROCPU_RST - 0x0B MWDT1 CPU \u590d\u4f4d CPU \u590d\u4f4d - - 0x0C \u8f6f\u4ef6 CPU \u590d\u4f4d CPU \u590d\u4f4d RTC_CNTL_SW_APPCPU_RST 0x0D 0x0D RWDT CPU \u590d\u4f4d CPU \u590d\u4f4d - - 0x0E PRO CPU \u590d\u4f4d CPU \u590d\u4f4d DPORT_APPCPU_RESETTING","title":"\u83b7\u53d6\u590d\u4f4d\u4fe1\u606f"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_11","text":"","title":"\u7cfb\u7edf\u65f6\u949f"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_12","text":"PLL_CLK\uff1a320MHz \u5185\u90e8 PLL \u65f6\u949f XTL_CLK\uff1a2\uff5e40MHz \u5916\u90e8\u6676\u632f\u65f6\u949f XTL32K_CLK\uff1a32KHz \u5916\u90e8\u6676\u632f\u65f6\u949f RTC8M_CLK\uff1a8MHz \u5185\u90e8\u65f6\u949f\uff0c\u9891\u7387\u53ef\u8c03 RTC8M_D256_CLK\uff1a\u7531 RTC8M_CLK \u7ecf\u8fc7 256 \u5206\u9891\u6240\u5f97 RTC_CLK\uff1a150KHz \u5185\u90e8\u4f4e\u529f\u8017\u65f6\u949f\uff0c\u9891\u7387\u53ef\u8c03 APLL_CLK\uff1a16\uff5e128MHz \u5185\u90e8 Audio PLL \u65f6\u949f","title":"\u65f6\u949f\u6e90"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#_13","text":"Tip REF_TICK \u53ef\u4ee5\u5728 APB_CLK \u65f6\u949f\u5207\u6362\u65f6\u7ef4\u6301\u9891\u7387\u4e0d\u53d8 SLOW_CLK \u5141\u8bb8\u9009\u62e9 RTC_CLK\uff0cXTL32K_CLK\uff0c\u6216 RTC8M_D256_CLK\uff0c\u7528\u4e8e\u9a71\u52a8 Power Management \u6a21\u5757 FAST_CLK \u5141\u8bb8\u9009\u62e9 XTL_CLK \u7684\u5206\u9891\u65f6\u949f\u6216\u8005 RTC8M_CLK \uff0c\u7528\u4e8e\u9a71\u52a8\u7247\u4e0a\u4f20\u611f\u5668\u6a21\u5757","title":"\u5916\u8bbe\u65f6\u949f"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#apll","text":"\u97f3\u9891\u5e94\u7528\u548c\u5176\u5b83\u5bf9\u6570\u636e\u4f20\u8f93\u65f6\u6548\u6027\u8981\u6c42\u5f88\u9ad8\u7684\u5e94\u7528\u90fd\u9700\u8981\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u914d\u503c\u3001\u4f4e\u6296\u52a8\u5e76\u4e14\u7cbe\u786e\u7684\u65f6\u949f\u6e90\u3002ESP32 \u96c6\u6210\u4e86\u4e13\u95e8\u7528\u4e8e I2S \u5916\u8bbe\u7684 APLL\u3002 \\[f_{out} = \\frac{f_{xtal}(sdm2 + \\frac{sdm1}{2^8} + \\frac{sdm0}{2^{16}} + 4)}{2(odiv + 2)}\\] \u5176\u4e2d\uff1a \\(f_{xtal}\\) \uff1a\u6676\u632f\u9891\u7387\uff0c\u901a\u5e38\u4e3a 40MHz \\(sdm0 \\in [0,255]\\) \\(sdm1 \\in [0,255]\\) \\(sdm2 \\in [0,63]\\) \\(odiv \\in [0,31]\\) \\(350MHz < f_{xtal}(sdm2 + \\frac{sdm1}{2^8} + \\frac{sdm0}{2^{16}} + 4) < 500MHz\\)","title":"APLL"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#gpio","text":"","title":"GPIO"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#io_mux-gpio-matrix","text":"Tip ESP32 \u7684\u6bcf\u4e2a\u7269\u7406 GPIO Pad \u90fd\u53ef\u7528\u4f5c\u4e00\u4e2a\u901a\u7528 IO\uff0c\u6216\u8005\u8fde\u63a5\u81f3\u5185\u90e8\u7684\u67d0\u4e2a\u5916\u8bbe\u4fe1\u53f7 RTC IO_MUX \u7528\u4e8e\u63a7\u5236 GPIO pad \u7684\u4f4e\u529f\u8017\u548c\u6a21\u62df\u529f\u80fd\uff0c\u53ea\u6709\u90e8\u5206 GPIO pad \u5177\u6709\u8fd9\u4e9b\u529f\u80fd\u3002\u5f53\u8fd9\u4e9b\u7ba1\u811a\u88ab\u914d\u7f6e\u4e3a RTC GPIO\u65f6\uff0c\u4f5c\u4e3a\u8f93\u51fa\u7ba1\u811a\u65f6\u4ecd\u7136\u80fd\u591f\u5728\u82af\u7247\u5904\u4e8e Deep-sleep \u7761\u7720\u6a21\u5f0f\u4e0b\u4fdd\u6301\u8f93\u51fa\u7535\u5e73\u503c\u6216\u8005\u4f5c\u4e3a\u8f93\u5165\u7ba1\u811a\u4f7f\u7528\u65f6\u53ef\u4ee5\u5c06\u82af\u7247\u4ece Deep-sleep \u4e2d\u5524\u9192 GPIO 34-39 \u4ec5\u7528\u4f5c\u8f93\u5165\u7ba1\u811a\uff0c\u5176\u4f59\u7684\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u8f93\u5165\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8f93\u51fa \u5feb\u901f\u4fe1\u53f7\u5982\u4ee5\u592a\u7f51\u3001SDIO\u3001SPI\u3001JTAG\u3001UART\u7b49\u4f1a\u65c1\u8def GPIO \u4ea4\u6362\u77e9\u9635\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u9ad8\u9891\u6570\u5b57\u7279\u6027","title":"IO_MUX \u548c GPIO Matrix"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#gpio-pad","text":"","title":"\u4fe1\u53f7\u4ece GPIO pad \u8f93\u5165\u7ed9\u5916\u8bbe"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#rmt-0-rmt_sig_in0_idx-83-gpio15","text":"\u5c06 GPIO_FUNC83_IN_SEL_CFG_REG \u5bc4\u5b58\u5668\u7684 GPIO_FUNC83_IN_SEL \u5b57\u6bb5\u8bbe\u7f6e\u4e3a 15 \u7f6e\u4f4d GPIO_FUNC15_OUT_SEL_CFG_REG \u5bc4\u5b58\u5668\u7684 GPIO_FUNC15_OEN_SEL \u4f4d \u6e05\u96f6 GPIO_ENABLE_REG \u5bc4\u5b58\u5668\u7684 Bit 15 \u914d\u7f6e IO_MUX_GPIO15_REG \u5bc4\u5b58\u5668\u7684 MCU_SEL \u5b57\u6bb5\u4e3a 2 (GPIO function)\uff0c\u540c\u65f6\u7f6e\u4f4d FUN_IE","title":"\u5c06 RMT \u5916\u8bbe\u901a\u9053 0 \u7684\u8f93\u5165\u4fe1\u53f7 RMT_SIG_IN0_IDX (\u4fe1\u53f7\u7d22\u5f15\u503c\u4e3a 83) \u7ed1\u5b9a\u5230 GPIO15"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#gpio-pad_1","text":"","title":"\u4fe1\u53f7\u4ece\u5916\u8bbe\u8f93\u51fa\u5230 GPIO pad"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#io_mux-pad","text":"","title":"IO_MUX Pad \u5217\u8868"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#strapping","text":"","title":"Strapping \u7ba1\u811a"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#dport","text":"\u901a\u8fc7 DPort \u5bc4\u5b58\u5668\u63a7\u5236\u65f6\u949f\u95e8\u63a7\uff0c\u7ba1\u7406\u529f\u8017\uff0c\u914d\u7f6e\u5916\u8bbe\u53ef\u4ee5\u4f7f\u7cfb\u7edf\u5728\u4fdd\u6301\u6700\u4f73\u65b0\u80fd\u7684\u540c\u65f6\u5c06\u529f\u8017\u964d\u5230\u6700\u4f4e\u3002 DPort \u5bc4\u5b58\u5668\u5305\u542b\u4e86\u591a\u4e2a\u5916\u8bbe\u548c\u6a21\u5757\u7684\u5bc4\u5b58\u5668\uff1a \u7cfb\u7edf\u548c\u5b58\u50a8\u5668\uff1acache \u914d\u7f6e\u548c\u5b58\u50a8\u5668\u6620\u5c04 \u65f6\u949f\u548c\u590d\u4f4d \u4e2d\u65ad\u77e9\u9635 DMA PID/MPU/MMU APP CPU\uff1a\u6682\u505c\u4efb\u52a1\u7684\u6267\u884c\uff0c\u8bbe\u7f6e\u4ece ROM code \u542f\u52a8\u540e\u7684\u8df3\u8f6c\u5730\u5740 (DPORT_APPCPU_BOOT_ADDR) \u5916\u8bbe\u65f6\u949f\u95e8\u63a7\u548c\u590d\u4f4d","title":"DPort"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#dma","text":"DMA \u63a7\u5236\u5668\u4e0e CPU \u7684\u6570\u636e\u603b\u7ebf\u4f7f\u7528\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u8bbf\u95ee\u5185\u90e8 RAM\u3002 \u8f6f\u4ef6\u53ef\u4ee5\u901a\u8fc7\u6302\u8f7d\u94fe\u8868\u7684\u65b9\u5f0f\u6765\u4f7f\u7528 DMA \u5f15\u64ce\uff0c\u5f15\u64ce\u4f1a\u6839\u636e out_link \u4e2d\u5185\u5bb9\u5c06\u76f8\u5e94 RAM \u4e2d\u7684\u6570\u636e\u53d1\u9001\u51fa\u53bb\uff0c\u4e5f\u53ef\u6839\u636e in_link \u4e2d\u7684\u5185\u5bb9\u5c06\u63a5\u6536\u7684\u6570\u636e\u5b58\u53d6\u6307\u5b9a RAM \u5730\u5740\u7a7a\u95f4\u3002 owner 0 \u8868\u793a\u5f53\u524d\u94fe\u8868\u5bf9\u5e94\u7684 buffer \u7531 CPU \u64cd\u4f5c 1 \u8868\u793a\u5f53\u524d\u94fe\u8868\u5bf9\u5e94\u7684 buffer \u7531 DMA \u64cd\u4f5c eof 0 \u8868\u793a\u5f53\u524d\u94fe\u8868\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u94fe\u8868 1 \u8868\u793a\u5f53\u524d\u94fe\u8868\u4e3a\u6570\u636e\u5305\u7684\u6700\u540e\u4e00\u4e2a\u94fe\u8868 length \u5f53\u524d\u94fe\u8868\u5bf9\u5e94\u7684 buffer \u4e2d\u7684\u6709\u6548\u5b57\u8282\u6570 size \u5f53\u524d\u94fe\u8868\u5bf9\u5e94\u7684 buffer \u7684\u5927\u5c0f\uff08\u5b57\u5bf9\u9f50\uff09 buffer address pointer buffer \u5730\u5740\u6307\u9488\uff08\u5b57\u5bf9\u9f50\uff09 next descriptor address \u6307\u5411\u4e0b\u4e00\u4e2a\u63cf\u8ff0\u7b26\u94fe\u8868\uff0c\u5f53 eof \u4e3a 1 \u65f6\uff0c\u8be5\u503c\u4e5f\u5e94\u4e3a0","title":"DMA"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#pid","text":"\u5728 ESP32 \u4e2d\uff0cPID \u63a7\u5236\u5668\u5145\u5f53\u6307\u793a\u5668\uff0c\u5411 MMU/MPU \u901a\u77e5\u5f53\u524d\u8fd0\u884c\u4ee3\u7801\u7684\u7a0b\u5e8f\u7684 PID\u3002 OS \u6bcf\u6b21\u5c06\u4e0a\u4e0b\u6587\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u5e94\u7528\u65f6\uff0c\u4f1a\u66f4\u65b0 PID \u63a7\u5236\u5668\u4e2d\u7684 PID\u3002 OS \u548c\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u5206\u522b\u914d\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53f7\uff08\u5373 PID\uff09\uff0c\u7528\u4e8e\u533a\u5206\u5f7c\u6b64\u3002 PRO_CPU \u548c APP_CPU \u5404\u6709 8 \u4e2a\u8fdb\u7a0b\u53f7\u3002 ESP32 \u7684\u6bcf\u4e2a CPU \u5404\u6709\u4e00\u4e2a PID \u63a7\u5236\u5668\uff0c\u80fd\u591f\u5728\u9700\u8981\u65f6\u5141\u8bb8\u4e0d\u540c\u7684 CPU \u4e0a\u8fd0\u884c\u4e0d\u540c\u7684\u8fdb\u7a0b\u3002","title":"PID"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#mpummu","text":"ESP32 \u4e2d\u7684\u6bcf\u4e2a\u5916\u8bbe\u548c\u5b58\u50a8\u5668\u901a\u8fc7 MMU \u6216\u8005 MPU \u88ab\u8bbf\u95ee\u3002 MPU/MMU \u57fa\u4e8e\u8fdb\u7a0b\u7684 PID \u5bf9\u7247\u4e0a\u5b58\u50a8\u5668\u3001\u7247\u5916\u5b58\u50a8\u5668\u3001\u5916\u8bbe\u8fdb\u884c\u7ba1\u7406\u3002 \u7247\u4e0a\u5b58\u50a8\u5668\u7531 MPU/MMU \u7ba1\u7406 \u7247\u5916\u5b58\u50a8\u5668\u7531 MMU \u7ba1\u7406 \u5916\u8bbe\u7531 MPU \u7ba1\u7406","title":"MPU\uff0cMMU"},{"location":"ESP32/ESP32%20%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/#spi","text":"","title":"SPI"},{"location":"ESP32/ESP32%20%E6%8E%A5%E5%8F%A3/","text":"ESP32 \u63a5\u53e3 \u5185\u90e8\u970d\u5c14\u4f20\u611f\u5668 \u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u4e0b\u9762\u4e00\u53e5\u4ee3\u7801\u5373\u53ef\u8bfb\u5230\u78c1\u573a\u5f3a\u5ea6 val = hallRead(); MPU6050 I2C I2C \u7aef\u53e3\u626b\u63cf","title":"ESP32 \u63a5\u53e3"},{"location":"ESP32/ESP32%20%E6%8E%A5%E5%8F%A3/#esp32","text":"","title":"ESP32 \u63a5\u53e3"},{"location":"ESP32/ESP32%20%E6%8E%A5%E5%8F%A3/#_1","text":"\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u4e0b\u9762\u4e00\u53e5\u4ee3\u7801\u5373\u53ef\u8bfb\u5230\u78c1\u573a\u5f3a\u5ea6 val = hallRead(); MPU6050","title":"\u5185\u90e8\u970d\u5c14\u4f20\u611f\u5668"},{"location":"ESP32/ESP32%20%E6%8E%A5%E5%8F%A3/#i2c","text":"","title":"I2C"},{"location":"ESP32/ESP32%20%E6%8E%A5%E5%8F%A3/#i2c_1","text":"","title":"I2C \u7aef\u53e3\u626b\u63cf"},{"location":"ESP32/ESP32%20%E6%B5%8B%E8%AF%95/","text":"\u6d4b\u8bd5\u6587\u6863\u51fa\u9519\u963f\u65af\u8482\u82ac","title":"ESP32 \u6d4b\u8bd5"},{"location":"ESP32/ESP32%20%E6%B5%8B%E8%AF%95/#_1","text":"","title":"\u6d4b\u8bd5\u6587\u6863\u51fa\u9519\u963f\u65af\u8482\u82ac"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/","text":"ESP32\u7761\u7720 \u7ed3\u5408ESP32\u7684\u4f11\u7720\u529f\u80fd\u53ef\u4ee5\u8fbe\u5230\u7701\u7535\u7684\u76ee\u7684\u3002\u4ee3\u7801\u8bbe\u8ba1\u4e3b\u8981\u6709\u4e24\u6b65\uff1a \u8fdb\u5165\u7761\u7720\u6a21\u5f0f \u5524\u9192 ESP32\u7761\u7720\u6a21\u5f0f ESP32 \u51e0\u79cd\u7761\u7720\u6a21\u5f0f\u5bf9\u6bd4\u3002 Modem-Sleep Light-Sleep Deep-Sleep Hibernation WiFi \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 Bluetooth \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 Radio \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u5916\u8bbe \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 ESP32 Core \u6d3b\u52a8 \u6682\u505c \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 ULP\u534f\u5904\u7406\u5668 \u6d3b\u52a8 \u6d3b\u52a8 \u6d3b\u52a8 \u4e0d\u6d3b\u52a8 RTC \u6d3b\u52a8 \u6d3b\u52a8 \u6d3b\u52a8 \u6d3b\u52a8 Modem-Sleep \u5728Modem-Sleep\u6a21\u5f0f\u4e0b\uff0cCPU \u4f9b\u7535\uff0cESP32 \u6839\u636e WiFi \u901a\u4fe1\u7684\u4f7f\u7528\u60c5\u51b5\u5728\u4e3b\u52a8\u6a21\u5f0f\u548c\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u3002\u5207\u6362\u662f\u81ea\u52a8\u5b8c\u6210\u7684\uff0cCPU \u9891\u7387\u4e5f\u4f1a\u81ea\u52a8\u66f4\u6539\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e CPU \u8d1f\u8f7d\u548c\u5916\u56f4\u8bbe\u5907\u7684\u4f7f\u7528\u3002 \u7531\u4e8eESP32\u4f1a \u81ea\u52a8 \u8fdb\u5165modem-sleep\u6a21\u5f0f\uff0c\u56e0\u6b64\u6ca1\u6709Arduino\u529f\u80fd\u53ef\u4ee5\u8fdb\u5165\u8be5\u6a21\u5f0f\u3002 \u8fd9\u5c31\u662f\u8bf4\u5728\u6ca1\u6709\u4f7f\u7528Wifi\uff0c\u84dd\u7259\u529f\u80fd\u65f6\uff0cESP32\u4f1a\u5c06\u5176\u81ea\u52a8\u5173\u95ed\uff0c\u4ee5\u8fbe\u5230\u7701\u7535\u7684\u76ee\u7684\u3002\u4e0d\u9700\u8981\u7528\u6237\u5e72\u9884\u3002 Light-Sleep light-sleep \u6a21\u5f0f\u4e0b ESP32 Core\u6682\u505c\u3002\u8fd9\u610f\u5473\u7740\u5927\u90e8\u5206 RAM \u548c CPU \u90fd\u9075\u5faa\u7761\u7720\u6a21\u5f0f\u3002\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u5185\u90e8\u89e6\u53d1\u5668\u4e0d\u4f1a\u5207\u6362\u72b6\u6001\uff0c\u56e0\u4e3a\u8fd9\u79cd\u5207\u6362\u4f1a\u6d88\u8017\u529f\u7387\u3002 \u5728\u8f7b\u5ea6\u7761\u7720\u6a21\u5f0f\u4e0b\uff0cWiFi \u57fa\u5e26\u88ab\u7981\u7528\uff0c\u4f46 WiFi \u8fde\u63a5\u672c\u8eab\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002 Deep-Sleep\u6a21\u5f0f \u5728\u6d45\u7761\u7720\u6a21\u5f0f\u4e0b\uff0cESP32 Core \u6682\u505c\u5e76\u9075\u5faa\u7761\u7720\u6a21\u5f0f\uff0c\u800c\u5728\u6df1\u5ea6\u7761\u7720\u7535\u6e90\u6a21\u5f0f\u4e0b\uff0cESP32 Core \u5b8c\u5168\u4e0d\u6d3b\u52a8\u3002\u53ea\u6709 ULP \u534f\u5904\u7406\u5668\u548c RTC \u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002 \u5728\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u4e0b\uff0cWiFi \u8fde\u63a5\u4e0d\u6d3b\u8dc3\uff0c\u4f46 WiFi \u914d\u7f6e\u6570\u636e\u5b58\u50a8\u5728\u5b9e\u65f6\u65f6\u949f\u7684\u5185\u5b58\u4e2d\u3002\u56e0\u6b64\uff0cESP32 \u4ece\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u5524\u9192\u540e\u91cd\u65b0\u5efa\u7acb WiFi \u8fde\u63a5\u975e\u5e38\u5feb\u3002 Hibernation\u6a21\u5f0f \u4f11\u7720\u7535\u6e90\u6a21\u5f0f\u662f\u7535\u6d41\u6d88\u8017\u6700\u4f4e\u7684\u7535\u6e90\u6a21\u5f0f\u3002\u7a7a\u767d\u7684 ESP32 \u5fae\u63a7\u5236\u5668\u4ec5\u6d88\u8017 5\u03bcA\u3002\u5185\u90e8 8 MHz \u632f\u8361\u5668\u548c ULP \u534f\u5904\u7406\u5668\u88ab\u7981\u7528\uff0cRTC \u6062\u590d\u5b58\u50a8\u5668\u65ad\u7535\u3002\u6162\u901f\u65f6\u949f\u4e0a\u53ea\u6709\u4e00\u4e2a RTC \u5b9a\u65f6\u5668\u548c\u67d0\u4e9b RTC GPIO \u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002RTC \u5b9a\u65f6\u5668\u6216 RTC GPIO \u53ef\u4ee5\u5c06\u82af\u7247\u4ece\u4f11\u7720\u6a21\u5f0f\u5524\u9192\u3002 \u8fdb\u5165\u4f11\u7720\u72b6\u6001 \u4f7fESP32\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff1a esp_light_sleep_start (); //\u8fdb\u5165Light-Sleep\u6a21\u5f0f esp_deep_sleep_start (); //\u8fdb\u5165Deep-Sleep\u6a21\u5f0f esp_sleep_pd_config ( ESP_PD_DOMAIN_RTC_PERIPH , ESP_PD_OPTION_OFF ); //\u505c\u7528\u6240\u6709 RTC \u5916\u8bbe\uff0c\u5373\u8fdb\u5165Hibernation\u6a21\u5f0f \u7761\u7720\u5524\u9192 ESP32\u7761\u7720\u540e\uff0c\u6709\u591a\u79cd\u5524\u9192\u65b9\u5f0f\u3002 esp_sleep_enable_ulp_wakeup (); esp_sleep_enable_timer_wakeup ( uint64_t time_in_us ); esp_sleep_enable_touchpad_wakeup (); esp_sleep_enable_ext0_wakeup ( gpio_num_t gpio_num , int level ); esp_sleep_enable_ext1_wakeup ( uint64_t mask , esp_sleep_ext1_wakeup_mode_t mode ); esp_sleep_enable_gpio_wakeup (); esp_sleep_enable_uart_wakeup (); ULP \u534f\u5904\u7406\u5668\u5524\u9192\u5524\u9192 \u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_ulp_wakeup (); ULP \u534f\u5904\u7406\u5668\u53ef\u4ee5\u5728\u82af\u7247\u5904\u4e8e\u7761\u7720\u6a21\u5f0f\u65f6\u8fd0\u884c\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u4e8e\u8f6e\u8be2\u4f20\u611f\u5668\uff0c\u76d1\u89c6 ADC \u6216\u89e6\u6478\u4f20\u611f\u5668\u503c\uff0c\u5e76\u5728\u68c0\u6d4b\u5230\u7279\u5b9a\u4e8b\u4ef6\u65f6\u5524\u9192\u82af\u7247\u3002 \u5b9a\u65f6\u5668\u5524\u9192 \u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_timer_wakeup ( uint64_t time_in_us ); \u5728\u9884\u5b9a\u4e49\u7684\u65f6\u95f4\u540e\u5524\u9192\u82af\u7247\u3002\u65f6\u95f4\u4ee5\u5fae\u79d2\u7cbe\u5ea6\u6307\u5b9a\u3002 \u56e0\u4e3aESP32 \u662f32\u4f4dMCU\uff0c\u6240\u4ee5\u5b83\u7684\u6700\u5927\u7761\u7720\u65f6\u95f4\u662f32\u4f4d\u7684\u6574\u6570\uff0c\u53730xFFFF FFFF \u6216 4294967295 \u6beb\u79d2\uff0c\u7ea671\u5206\u949f\u3002 Touch pad\u5524\u9192 \u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_touchpad_wakeup (); External \u5524\u9192(ext0)\u5524\u9192 \u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_ext0_wakeup ( gpio_num_t gpio_num , int level ); gpio_num: GPIO number used as wakeup source. Only GPIOs which are have RTC functionality can be used: 0,2,4,12-15,25-27,32-39. level: input level which will trigger wakeup (0=low, 1=high) \u5f53 GPIO \u7684\u7535\u5e73\u4e3a\u9884\u5b9a\u4e49\u7684\u903b\u8f91\u7535\u5e73\u65f6\u89e6\u53d1\u5524\u9192\u3002\u5fc5\u987b\u4f7f\u7528\u6709RTC\u529f\u80fd\u7684GPIO: 0,2,4,12-15,25-27,32-39. External \u5524\u9192(ext1)\u5524\u9192 \u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_ext1_wakeup ( uint64_t mask , esp_sleep_ext1_wakeup_mode_t mode ); \u4f7f\u7528\u591a\u4e2aGPIO \u89e6\u53d1\u5524\u9192\u3002 mask\u3002bit mask of GPIO numbers\u3002\u5fc5\u987b\u4f7f\u7528\u6709RTC\u529f\u80fd\u7684GPIO: 0,2,4,12-15,25-27,32-39. mode\u3002\u53ef\u9009\u9879\u9879\uff1a ESP_EXT1_WAKEUP_ALL_LOW: \u6240\u6709\u9009\u5b9a\u7684\u5f15\u811a\u90fd\u4e3a\u4f4e\u7535\u5e73\uff0c\u5219\u5524\u9192 ESP_EXT1_WAKEUP_ANY_HIGH: \u4efb\u4f55\u6240\u9009\u5f15\u811a\u4e3a\u9ad8\u7535\u5e73\uff0c\u5219\u5524\u9192 GPIO \u5524\u9192(\u4ec5 light sleep) \u9664\u4e86\u4e0a\u9762\u63cf\u8ff0\u7684 EXT0 \u548c EXT1 \u5524\u9192\u6e90\u4e4b\u5916\uff0c\u5728\u8f7b\u5ea6\u7761\u7720\u6a21\u5f0f\u4e0b\u8fd8\u6709\u4e00\u79cd\u4ece\u5916\u90e8\u8f93\u5165\u5524\u9192\u7684\u65b9\u6cd5\u3002\u901a\u8fc7\u8be5\u5524\u9192\u6e90\uff0c\u6bcf\u4e2a\u5f15\u811a\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528 gpio_wakeup_enable() \u51fd\u6570\u914d\u7f6e\u4e3a\u9ad8\u7535\u5e73\u6216\u4f4e\u7535\u5e73\u5524\u9192\u3002\u4e0e EXT0 \u548c EXT1 \u5524\u9192\u6e90\uff08\u53ea\u80fd\u4e0e RTC IO \u4e00\u8d77\u4f7f\u7528\uff09\u4e0d\u540c\uff0c\u6b64\u5524\u9192\u6e90\u53ef\u7528\u4e8e\u4efb\u4f55 IO\uff08RTC \u6216\u6570\u5b57\uff09\u3002 esp_sleep_enable_gpio_wakeup() \u51fd\u6570\u53ef\u7528\u4e8e\u542f\u7528\u6b64\u5524\u9192\u6e90\u3002 UART \u5524\u9192(\u4ec5 light sleep) \u5f53 ESP32 \u4ece\u5916\u90e8\u8bbe\u5907\u63a5\u6536 UART \u8f93\u5165\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5728\u8f93\u5165\u6570\u636e\u53ef\u7528\u65f6\u5524\u9192\u82af\u7247\u3002UART \u5916\u8bbe\u5305\u542b\u4e00\u9879\u529f\u80fd\uff0c\u5f53\u770b\u5230 RX \u5f15\u811a\u4e0a\u7684\u4e00\u5b9a\u6570\u91cf\u7684\u4e0a\u5347\u6cbf\u65f6\uff0c\u53ef\u4ee5\u5c06\u82af\u7247\u4ece\u8f7b\u5ea6\u7761\u7720\u72b6\u6001\u5524\u9192\u3002\u53ef\u4ee5\u4f7f\u7528 uart_set_wakeup_threshold() \u51fd\u6570\u8bbe\u7f6e\u6b64\u4e0a\u5347\u6cbf\u6570\u3002\u8bf7\u6ce8\u610f\uff0c\u5524\u9192\u540e UART \u4e0d\u4f1a\u63a5\u6536\u89e6\u53d1\u5524\u9192\u7684\u5b57\u7b26\uff08\u53ca\u5176\u524d\u9762\u7684\u4efb\u4f55\u5b57\u7b26\uff09\u3002 \u8fd9\u610f\u5473\u7740\u5916\u90e8\u8bbe\u5907\u901a\u5e38\u9700\u8981\u5728\u53d1\u9001\u6570\u636e\u4e4b\u524d\u5411 ESP32 \u53d1\u9001\u989d\u5916\u5b57\u7b26\u4ee5\u89e6\u53d1\u5524\u9192\u3002 esp_sleep_enable_uart_wakeup() \u51fd\u6570\u53ef\u7528\u4e8e\u542f\u7528\u6b64\u5524\u9192\u6e90\u3002 RTC\u5916\u8bbe\u548c\u5b58\u50a8\u5668\u6389\u7535 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cesp_deep_sleep_start() \u548c esp_light_sleep_start() \u51fd\u6570\u5c06\u5173\u95ed\u6240\u6709\u542f\u7528\u7684\u5524\u9192\u6e90\u4e0d\u518d\u9700\u8981\u7684 RTC \u7535\u6e90\u57df\u3002\u8981\u8986\u76d6\u6b64\u884c\u4e3a\uff0c\u8bf7\u63d0\u4f9b esp_sleep_pd_config() \u51fd\u6570\u3002 \u6ce8\u610f\uff1a\u5728 ESP32 \u7684\u7248\u672c 0 \u4e2d\uff0cRTC \u5feb\u901f\u5b58\u50a8\u5668\u5c06\u59cb\u7ec8\u5728\u6df1\u5ea6\u7761\u7720\u4e2d\u4fdd\u6301\u542f\u7528\u72b6\u6001\uff0c\u4ee5\u4fbf\u6df1\u5ea6\u7761\u7720\u5b58\u6839\u53ef\u4ee5\u5728\u590d\u4f4d\u540e\u8fd0\u884c\u3002 \u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u5728\u6df1\u5ea6\u7761\u7720\u540e\u4e0d\u9700\u8981\u5e72\u51c0\u7684\u91cd\u7f6e\u884c\u4e3a\uff0c\u5219\u53ef\u4ee5\u8986\u76d6\u6b64\u9879\u3002 \u5982\u679c\u7a0b\u5e8f\u4e2d\u7684\u67d0\u4e9b\u53d8\u91cf\u653e\u5165RTC\u6162\u901f\u5b58\u50a8\u5668\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 RTC_DATA_ATTR \u5c5e\u6027\uff09\uff0cRTC \u6162\u901f\u5b58\u50a8\u5668\u5c06\u9ed8\u8ba4\u4fdd\u6301\u901a\u7535\u72b6\u6001\u3002 \u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u4f7f\u7528 esp_sleep_pd_config() \u51fd\u6570\u8986\u76d6\u5b83\u3002 \u5b9e\u4f8b\uff1aESP32 \u6df1\u5ea6\u7761\u7720\u7a0b\u5e8f\u4ee3\u7801 #define uS_TO_S_FACTOR 1000000 /* Conversion factor for micro seconds to seconds */ #define TIME_TO_SLEEP 5 /* Time ESP32 will go to sleep (in seconds) */ void print_wakeup_reason (){ esp_sleep_wakeup_cause_t wakeup_reason ; wakeup_reason = esp_sleep_get_wakeup_cause (); switch ( wakeup_reason ) { case ESP_SLEEP_WAKEUP_EXT0 : Serial . println ( \"Wakeup caused by external signal using RTC_IO\" ); break ; case ESP_SLEEP_WAKEUP_EXT1 : Serial . println ( \"Wakeup caused by external signal using RTC_CNTL\" ); break ; case ESP_SLEEP_WAKEUP_TIMER : Serial . println ( \"Wakeup caused by timer\" ); break ; case ESP_SLEEP_WAKEUP_TOUCHPAD : Serial . println ( \"Wakeup caused by touchpad\" ); break ; case ESP_SLEEP_WAKEUP_ULP : Serial . println ( \"Wakeup caused by ULP program\" ); break ; default : Serial . printf ( \"Wakeup was not caused by deep sleep: %d \\n \" , wakeup_reason ); break ; } } void setup (){ Serial . begin ( 9600 ); while ( ! Serial ) { ; // wait for serial port to connect. Needed for native USB } print_wakeup_reason (); //Print the wakeup reason for ESP32 delay ( 5000 ); esp_sleep_enable_timer_wakeup ( TIME_TO_SLEEP * uS_TO_S_FACTOR ); // ESP32 wakes up every 5 seconds esp_sleep_pd_config ( ESP_PD_DOMAIN_RTC_PERIPH , ESP_PD_OPTION_ON ); // all RTC Peripherals are powered Serial . println ( \"Going to deep-sleep now\" ); Serial . flush (); esp_deep_sleep_start (); } void loop (){ } \u6df1\u5ea6\u7761\u7720\u7535\u6e90\u6a21\u5f0f\u4ece\u51fd\u6570 esp_deep_sleep_start \u5f00\u59cb\u3002 \u6bcf\u6b21\u5fae\u63a7\u5236\u5668\u4ece\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u5524\u9192\u65f6\uff0cESP32 \u90fd\u4f1a\u542f\u52a8 setup \u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u5728 setup \u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u6211\u4eec\u6240\u6709\u7684\u4ee3\u7801\uff0c\u4e0d\u4f7f\u7528\u5faa\u73af\u51fd\u6570\u3002 \u5bf9\u4e8e\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u6240\u6709 RTC \u5916\u8bbe\u662f\u6d3b\u52a8\u8fd8\u662f\u65ad\u7535\u3002\u5728\u7761\u7720\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49 RTC IO\u3001\u4f20\u611f\u5668\u548c ULP \u534f\u5904\u7406\u5668\u7b49 RTC \u6a21\u5757\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002 \u5982\u679c\u5c06\u7761\u7720\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\u4e3a\uff1a esp_sleep_pd_config ( ESP_PD_DOMAIN_RTC_PERIPH , ESP_PD_OPTION_OFF ); \u5c31\u5c06\u8fdb\u5165Hibernation\u6a21\u5f0f\u3002 \u589e\u52a0\u7761\u7720\u65f6\u95f4\u4ee5\u964d\u4f4e\u529f\u8017 \u6211\u4eec\u4ece\u4e0a\u4e00\u7ae0\u4e2d\u83b7\u5f97\u4e86\u4e24\u4e2a\u91cd\u8981\u7684\u89c1\u89e3\uff0c\u8fd9\u6709\u52a9\u4e8e\u6211\u4eec\u8fdb\u4e00\u6b65\u964d\u4f4e\u6574\u4e2a ESP32 \u9879\u76ee\u7684\u529f\u8017\u3002 \u5efa\u7acbWiFi\u8fde\u63a5\u5e76\u901a\u8fc7WiFi\u53d1\u9001\u6570\u636e\u5177\u6709\u975e\u5e38\u9ad8\u7684\u529f\u8017 \u5728\u6df1\u5ea6\u7761\u7720\u6216\u4f11\u7720\u6a21\u5f0f\u4e0b\uff0cESP32 \u7684\u529f\u8017\u663e\u8457\u964d\u4f4e\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u7cbe\u786e\u89c4\u5212\u5404\u4e2a\u9636\u6bb5\uff08\u5524\u9192\u3001\u901a\u8fc7 WiFi \u53d1\u9001\u6570\u636e\u3001\u7761\u7720\uff09\uff0c\u5219\u53ef\u4ee5\u964d\u4f4e\u529f\u8017\u3002 \u4e0b\u8868\u5217\u51fa\u4e24\u79cd\u5f00\u53d1\u677f\u5728\u5404\u79cd\u72b6\u6001\u4e0b\u7684\u7535\u6d41\uff0c\u4f9b\u53c2\u8003\u3002 Reference [mA] Light-Sleep [mA] Deep-Sleep [mA] Hibernation [mA] ESP32 \u2013 DevKitC 51 10 9 9 FireBeetle ESP32 39 1.94 0.011 0.008 \u4ee5\u6c14\u8c61\u7ad9\u4e3a\u4f8b\uff0c\u53ef\u4ee5\u6e05\u695a\u5730\u63cf\u8ff0\u5404\u4e2a\u9636\u6bb5\uff1a ESP32 \u8fde\u63a5\u5230 DHT22 \u6e29\u5ea6\u548c\u6e7f\u5ea6\u4f20\u611f\u5668\u3002\u5982\u679c\u6211\u4eec\u6bcf 10 \u79d2\u4f20\u8f93\u4e00\u6b21\u6e29\u5ea6\u548c\u6e7f\u5ea6\uff0c\u529f\u8017\u5c06\u4e0d\u5fc5\u8981\u5730\u9ad8\uff0c\u56e0\u4e3a\u4f20\u8f93\u7684\u6d4b\u91cf\u503c\u5927\u591a\u76f8\u540c\u3002 \u53ef\u4ee5\u901a\u8fc7\u6bcf 10 \u5206\u949f\u800c\u4e0d\u662f\u6bcf 10 \u79d2\u4f20\u8f93\u8bfb\u6570\u6765\u964d\u4f4e\u529f\u8017\u3002\u6709\u4e86\u8fd9\u4e2a\uff0c\u6211\u4eec\u5ef6\u957f\u4e86\u7ef5\u7f8a\u65f6\u95f4\u3002\u4e3a\u4e86\u51cf\u5c11 WiFi \u8fde\u63a5\u7684\u6570\u91cf\uff0c\u6bcf\u6b21\u4ece\u7761\u7720\u6a21\u5f0f\u5524\u9192\u65f6\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u4f20\u611f\u5668\u503c\u4e0e\u4e0a\u6b21\u53d1\u9001\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ea\u6709\u5728\u6e29\u5ea6\u6216\u6e7f\u5ea6\u53d1\u751f\u53d8\u5316\u65f6\u624d\u901a\u8fc7 WiFi \u53d1\u9001\u65b0\u6570\u636e\u3002 \u8981\u5728\u7761\u7720\u6a21\u5f0f\u4e0b\u5b58\u50a8\u53d8\u91cf\uff0c\u5b83\u4eec\u5fc5\u987b\u52a0\u8f7d\u5230 RTC \u5185\u5b58\u4e2d\uff0c\u5728 ESP32 \u4e0a\u53ea\u6709 8kB\u3002\u60a8\u53ea\u9700\u5728\u53d8\u91cf\u524d\u6dfb\u52a0 RTC_DATA_ATT \u5373\u53ef \u3002 RTC_DATA_ATT int temperature ; RTC_DATA_ATT int humidity ;","title":"ESP32\u7761\u7720"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#esp32","text":"\u7ed3\u5408ESP32\u7684\u4f11\u7720\u529f\u80fd\u53ef\u4ee5\u8fbe\u5230\u7701\u7535\u7684\u76ee\u7684\u3002\u4ee3\u7801\u8bbe\u8ba1\u4e3b\u8981\u6709\u4e24\u6b65\uff1a \u8fdb\u5165\u7761\u7720\u6a21\u5f0f \u5524\u9192","title":"ESP32\u7761\u7720"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#esp32_1","text":"ESP32 \u51e0\u79cd\u7761\u7720\u6a21\u5f0f\u5bf9\u6bd4\u3002 Modem-Sleep Light-Sleep Deep-Sleep Hibernation WiFi \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 Bluetooth \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 Radio \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u5916\u8bbe \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 ESP32 Core \u6d3b\u52a8 \u6682\u505c \u4e0d\u6d3b\u52a8 \u4e0d\u6d3b\u52a8 ULP\u534f\u5904\u7406\u5668 \u6d3b\u52a8 \u6d3b\u52a8 \u6d3b\u52a8 \u4e0d\u6d3b\u52a8 RTC \u6d3b\u52a8 \u6d3b\u52a8 \u6d3b\u52a8 \u6d3b\u52a8","title":"ESP32\u7761\u7720\u6a21\u5f0f"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#modem-sleep","text":"\u5728Modem-Sleep\u6a21\u5f0f\u4e0b\uff0cCPU \u4f9b\u7535\uff0cESP32 \u6839\u636e WiFi \u901a\u4fe1\u7684\u4f7f\u7528\u60c5\u51b5\u5728\u4e3b\u52a8\u6a21\u5f0f\u548c\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u3002\u5207\u6362\u662f\u81ea\u52a8\u5b8c\u6210\u7684\uff0cCPU \u9891\u7387\u4e5f\u4f1a\u81ea\u52a8\u66f4\u6539\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e CPU \u8d1f\u8f7d\u548c\u5916\u56f4\u8bbe\u5907\u7684\u4f7f\u7528\u3002 \u7531\u4e8eESP32\u4f1a \u81ea\u52a8 \u8fdb\u5165modem-sleep\u6a21\u5f0f\uff0c\u56e0\u6b64\u6ca1\u6709Arduino\u529f\u80fd\u53ef\u4ee5\u8fdb\u5165\u8be5\u6a21\u5f0f\u3002 \u8fd9\u5c31\u662f\u8bf4\u5728\u6ca1\u6709\u4f7f\u7528Wifi\uff0c\u84dd\u7259\u529f\u80fd\u65f6\uff0cESP32\u4f1a\u5c06\u5176\u81ea\u52a8\u5173\u95ed\uff0c\u4ee5\u8fbe\u5230\u7701\u7535\u7684\u76ee\u7684\u3002\u4e0d\u9700\u8981\u7528\u6237\u5e72\u9884\u3002","title":"Modem-Sleep"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#light-sleep","text":"light-sleep \u6a21\u5f0f\u4e0b ESP32 Core\u6682\u505c\u3002\u8fd9\u610f\u5473\u7740\u5927\u90e8\u5206 RAM \u548c CPU \u90fd\u9075\u5faa\u7761\u7720\u6a21\u5f0f\u3002\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u5185\u90e8\u89e6\u53d1\u5668\u4e0d\u4f1a\u5207\u6362\u72b6\u6001\uff0c\u56e0\u4e3a\u8fd9\u79cd\u5207\u6362\u4f1a\u6d88\u8017\u529f\u7387\u3002 \u5728\u8f7b\u5ea6\u7761\u7720\u6a21\u5f0f\u4e0b\uff0cWiFi \u57fa\u5e26\u88ab\u7981\u7528\uff0c\u4f46 WiFi \u8fde\u63a5\u672c\u8eab\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002","title":"Light-Sleep"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#deep-sleep","text":"\u5728\u6d45\u7761\u7720\u6a21\u5f0f\u4e0b\uff0cESP32 Core \u6682\u505c\u5e76\u9075\u5faa\u7761\u7720\u6a21\u5f0f\uff0c\u800c\u5728\u6df1\u5ea6\u7761\u7720\u7535\u6e90\u6a21\u5f0f\u4e0b\uff0cESP32 Core \u5b8c\u5168\u4e0d\u6d3b\u52a8\u3002\u53ea\u6709 ULP \u534f\u5904\u7406\u5668\u548c RTC \u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002 \u5728\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u4e0b\uff0cWiFi \u8fde\u63a5\u4e0d\u6d3b\u8dc3\uff0c\u4f46 WiFi \u914d\u7f6e\u6570\u636e\u5b58\u50a8\u5728\u5b9e\u65f6\u65f6\u949f\u7684\u5185\u5b58\u4e2d\u3002\u56e0\u6b64\uff0cESP32 \u4ece\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u5524\u9192\u540e\u91cd\u65b0\u5efa\u7acb WiFi \u8fde\u63a5\u975e\u5e38\u5feb\u3002","title":"Deep-Sleep\u6a21\u5f0f"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#hibernation","text":"\u4f11\u7720\u7535\u6e90\u6a21\u5f0f\u662f\u7535\u6d41\u6d88\u8017\u6700\u4f4e\u7684\u7535\u6e90\u6a21\u5f0f\u3002\u7a7a\u767d\u7684 ESP32 \u5fae\u63a7\u5236\u5668\u4ec5\u6d88\u8017 5\u03bcA\u3002\u5185\u90e8 8 MHz \u632f\u8361\u5668\u548c ULP \u534f\u5904\u7406\u5668\u88ab\u7981\u7528\uff0cRTC \u6062\u590d\u5b58\u50a8\u5668\u65ad\u7535\u3002\u6162\u901f\u65f6\u949f\u4e0a\u53ea\u6709\u4e00\u4e2a RTC \u5b9a\u65f6\u5668\u548c\u67d0\u4e9b RTC GPIO \u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002RTC \u5b9a\u65f6\u5668\u6216 RTC GPIO \u53ef\u4ee5\u5c06\u82af\u7247\u4ece\u4f11\u7720\u6a21\u5f0f\u5524\u9192\u3002","title":"Hibernation\u6a21\u5f0f"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#_1","text":"\u4f7fESP32\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff1a esp_light_sleep_start (); //\u8fdb\u5165Light-Sleep\u6a21\u5f0f esp_deep_sleep_start (); //\u8fdb\u5165Deep-Sleep\u6a21\u5f0f esp_sleep_pd_config ( ESP_PD_DOMAIN_RTC_PERIPH , ESP_PD_OPTION_OFF ); //\u505c\u7528\u6240\u6709 RTC \u5916\u8bbe\uff0c\u5373\u8fdb\u5165Hibernation\u6a21\u5f0f","title":"\u8fdb\u5165\u4f11\u7720\u72b6\u6001"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#_2","text":"ESP32\u7761\u7720\u540e\uff0c\u6709\u591a\u79cd\u5524\u9192\u65b9\u5f0f\u3002 esp_sleep_enable_ulp_wakeup (); esp_sleep_enable_timer_wakeup ( uint64_t time_in_us ); esp_sleep_enable_touchpad_wakeup (); esp_sleep_enable_ext0_wakeup ( gpio_num_t gpio_num , int level ); esp_sleep_enable_ext1_wakeup ( uint64_t mask , esp_sleep_ext1_wakeup_mode_t mode ); esp_sleep_enable_gpio_wakeup (); esp_sleep_enable_uart_wakeup ();","title":"\u7761\u7720\u5524\u9192"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#ulp","text":"\u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_ulp_wakeup (); ULP \u534f\u5904\u7406\u5668\u53ef\u4ee5\u5728\u82af\u7247\u5904\u4e8e\u7761\u7720\u6a21\u5f0f\u65f6\u8fd0\u884c\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u4e8e\u8f6e\u8be2\u4f20\u611f\u5668\uff0c\u76d1\u89c6 ADC \u6216\u89e6\u6478\u4f20\u611f\u5668\u503c\uff0c\u5e76\u5728\u68c0\u6d4b\u5230\u7279\u5b9a\u4e8b\u4ef6\u65f6\u5524\u9192\u82af\u7247\u3002","title":"ULP \u534f\u5904\u7406\u5668\u5524\u9192\u5524\u9192"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#_3","text":"\u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_timer_wakeup ( uint64_t time_in_us ); \u5728\u9884\u5b9a\u4e49\u7684\u65f6\u95f4\u540e\u5524\u9192\u82af\u7247\u3002\u65f6\u95f4\u4ee5\u5fae\u79d2\u7cbe\u5ea6\u6307\u5b9a\u3002 \u56e0\u4e3aESP32 \u662f32\u4f4dMCU\uff0c\u6240\u4ee5\u5b83\u7684\u6700\u5927\u7761\u7720\u65f6\u95f4\u662f32\u4f4d\u7684\u6574\u6570\uff0c\u53730xFFFF FFFF \u6216 4294967295 \u6beb\u79d2\uff0c\u7ea671\u5206\u949f\u3002","title":"\u5b9a\u65f6\u5668\u5524\u9192"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#touch-pad","text":"\u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_touchpad_wakeup ();","title":"Touch pad\u5524\u9192"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#external-ext0","text":"\u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_ext0_wakeup ( gpio_num_t gpio_num , int level ); gpio_num: GPIO number used as wakeup source. Only GPIOs which are have RTC functionality can be used: 0,2,4,12-15,25-27,32-39. level: input level which will trigger wakeup (0=low, 1=high) \u5f53 GPIO \u7684\u7535\u5e73\u4e3a\u9884\u5b9a\u4e49\u7684\u903b\u8f91\u7535\u5e73\u65f6\u89e6\u53d1\u5524\u9192\u3002\u5fc5\u987b\u4f7f\u7528\u6709RTC\u529f\u80fd\u7684GPIO: 0,2,4,12-15,25-27,32-39.","title":"External \u5524\u9192(ext0)\u5524\u9192"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#external-ext1","text":"\u5524\u9192\u4ee3\u7801\uff1a esp_sleep_enable_ext1_wakeup ( uint64_t mask , esp_sleep_ext1_wakeup_mode_t mode ); \u4f7f\u7528\u591a\u4e2aGPIO \u89e6\u53d1\u5524\u9192\u3002 mask\u3002bit mask of GPIO numbers\u3002\u5fc5\u987b\u4f7f\u7528\u6709RTC\u529f\u80fd\u7684GPIO: 0,2,4,12-15,25-27,32-39. mode\u3002\u53ef\u9009\u9879\u9879\uff1a ESP_EXT1_WAKEUP_ALL_LOW: \u6240\u6709\u9009\u5b9a\u7684\u5f15\u811a\u90fd\u4e3a\u4f4e\u7535\u5e73\uff0c\u5219\u5524\u9192 ESP_EXT1_WAKEUP_ANY_HIGH: \u4efb\u4f55\u6240\u9009\u5f15\u811a\u4e3a\u9ad8\u7535\u5e73\uff0c\u5219\u5524\u9192","title":"External \u5524\u9192(ext1)\u5524\u9192"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#gpio-light-sleep","text":"\u9664\u4e86\u4e0a\u9762\u63cf\u8ff0\u7684 EXT0 \u548c EXT1 \u5524\u9192\u6e90\u4e4b\u5916\uff0c\u5728\u8f7b\u5ea6\u7761\u7720\u6a21\u5f0f\u4e0b\u8fd8\u6709\u4e00\u79cd\u4ece\u5916\u90e8\u8f93\u5165\u5524\u9192\u7684\u65b9\u6cd5\u3002\u901a\u8fc7\u8be5\u5524\u9192\u6e90\uff0c\u6bcf\u4e2a\u5f15\u811a\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528 gpio_wakeup_enable() \u51fd\u6570\u914d\u7f6e\u4e3a\u9ad8\u7535\u5e73\u6216\u4f4e\u7535\u5e73\u5524\u9192\u3002\u4e0e EXT0 \u548c EXT1 \u5524\u9192\u6e90\uff08\u53ea\u80fd\u4e0e RTC IO \u4e00\u8d77\u4f7f\u7528\uff09\u4e0d\u540c\uff0c\u6b64\u5524\u9192\u6e90\u53ef\u7528\u4e8e\u4efb\u4f55 IO\uff08RTC \u6216\u6570\u5b57\uff09\u3002 esp_sleep_enable_gpio_wakeup() \u51fd\u6570\u53ef\u7528\u4e8e\u542f\u7528\u6b64\u5524\u9192\u6e90\u3002","title":"GPIO \u5524\u9192(\u4ec5 light sleep)"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#uart-light-sleep","text":"\u5f53 ESP32 \u4ece\u5916\u90e8\u8bbe\u5907\u63a5\u6536 UART \u8f93\u5165\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5728\u8f93\u5165\u6570\u636e\u53ef\u7528\u65f6\u5524\u9192\u82af\u7247\u3002UART \u5916\u8bbe\u5305\u542b\u4e00\u9879\u529f\u80fd\uff0c\u5f53\u770b\u5230 RX \u5f15\u811a\u4e0a\u7684\u4e00\u5b9a\u6570\u91cf\u7684\u4e0a\u5347\u6cbf\u65f6\uff0c\u53ef\u4ee5\u5c06\u82af\u7247\u4ece\u8f7b\u5ea6\u7761\u7720\u72b6\u6001\u5524\u9192\u3002\u53ef\u4ee5\u4f7f\u7528 uart_set_wakeup_threshold() \u51fd\u6570\u8bbe\u7f6e\u6b64\u4e0a\u5347\u6cbf\u6570\u3002\u8bf7\u6ce8\u610f\uff0c\u5524\u9192\u540e UART \u4e0d\u4f1a\u63a5\u6536\u89e6\u53d1\u5524\u9192\u7684\u5b57\u7b26\uff08\u53ca\u5176\u524d\u9762\u7684\u4efb\u4f55\u5b57\u7b26\uff09\u3002 \u8fd9\u610f\u5473\u7740\u5916\u90e8\u8bbe\u5907\u901a\u5e38\u9700\u8981\u5728\u53d1\u9001\u6570\u636e\u4e4b\u524d\u5411 ESP32 \u53d1\u9001\u989d\u5916\u5b57\u7b26\u4ee5\u89e6\u53d1\u5524\u9192\u3002 esp_sleep_enable_uart_wakeup() \u51fd\u6570\u53ef\u7528\u4e8e\u542f\u7528\u6b64\u5524\u9192\u6e90\u3002","title":"UART \u5524\u9192(\u4ec5 light sleep)"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#rtc","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cesp_deep_sleep_start() \u548c esp_light_sleep_start() \u51fd\u6570\u5c06\u5173\u95ed\u6240\u6709\u542f\u7528\u7684\u5524\u9192\u6e90\u4e0d\u518d\u9700\u8981\u7684 RTC \u7535\u6e90\u57df\u3002\u8981\u8986\u76d6\u6b64\u884c\u4e3a\uff0c\u8bf7\u63d0\u4f9b esp_sleep_pd_config() \u51fd\u6570\u3002 \u6ce8\u610f\uff1a\u5728 ESP32 \u7684\u7248\u672c 0 \u4e2d\uff0cRTC \u5feb\u901f\u5b58\u50a8\u5668\u5c06\u59cb\u7ec8\u5728\u6df1\u5ea6\u7761\u7720\u4e2d\u4fdd\u6301\u542f\u7528\u72b6\u6001\uff0c\u4ee5\u4fbf\u6df1\u5ea6\u7761\u7720\u5b58\u6839\u53ef\u4ee5\u5728\u590d\u4f4d\u540e\u8fd0\u884c\u3002 \u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u5728\u6df1\u5ea6\u7761\u7720\u540e\u4e0d\u9700\u8981\u5e72\u51c0\u7684\u91cd\u7f6e\u884c\u4e3a\uff0c\u5219\u53ef\u4ee5\u8986\u76d6\u6b64\u9879\u3002 \u5982\u679c\u7a0b\u5e8f\u4e2d\u7684\u67d0\u4e9b\u53d8\u91cf\u653e\u5165RTC\u6162\u901f\u5b58\u50a8\u5668\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 RTC_DATA_ATTR \u5c5e\u6027\uff09\uff0cRTC \u6162\u901f\u5b58\u50a8\u5668\u5c06\u9ed8\u8ba4\u4fdd\u6301\u901a\u7535\u72b6\u6001\u3002 \u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u4f7f\u7528 esp_sleep_pd_config() \u51fd\u6570\u8986\u76d6\u5b83\u3002","title":"RTC\u5916\u8bbe\u548c\u5b58\u50a8\u5668\u6389\u7535"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#esp32_2","text":"#define uS_TO_S_FACTOR 1000000 /* Conversion factor for micro seconds to seconds */ #define TIME_TO_SLEEP 5 /* Time ESP32 will go to sleep (in seconds) */ void print_wakeup_reason (){ esp_sleep_wakeup_cause_t wakeup_reason ; wakeup_reason = esp_sleep_get_wakeup_cause (); switch ( wakeup_reason ) { case ESP_SLEEP_WAKEUP_EXT0 : Serial . println ( \"Wakeup caused by external signal using RTC_IO\" ); break ; case ESP_SLEEP_WAKEUP_EXT1 : Serial . println ( \"Wakeup caused by external signal using RTC_CNTL\" ); break ; case ESP_SLEEP_WAKEUP_TIMER : Serial . println ( \"Wakeup caused by timer\" ); break ; case ESP_SLEEP_WAKEUP_TOUCHPAD : Serial . println ( \"Wakeup caused by touchpad\" ); break ; case ESP_SLEEP_WAKEUP_ULP : Serial . println ( \"Wakeup caused by ULP program\" ); break ; default : Serial . printf ( \"Wakeup was not caused by deep sleep: %d \\n \" , wakeup_reason ); break ; } } void setup (){ Serial . begin ( 9600 ); while ( ! Serial ) { ; // wait for serial port to connect. Needed for native USB } print_wakeup_reason (); //Print the wakeup reason for ESP32 delay ( 5000 ); esp_sleep_enable_timer_wakeup ( TIME_TO_SLEEP * uS_TO_S_FACTOR ); // ESP32 wakes up every 5 seconds esp_sleep_pd_config ( ESP_PD_DOMAIN_RTC_PERIPH , ESP_PD_OPTION_ON ); // all RTC Peripherals are powered Serial . println ( \"Going to deep-sleep now\" ); Serial . flush (); esp_deep_sleep_start (); } void loop (){ } \u6df1\u5ea6\u7761\u7720\u7535\u6e90\u6a21\u5f0f\u4ece\u51fd\u6570 esp_deep_sleep_start \u5f00\u59cb\u3002 \u6bcf\u6b21\u5fae\u63a7\u5236\u5668\u4ece\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u5524\u9192\u65f6\uff0cESP32 \u90fd\u4f1a\u542f\u52a8 setup \u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u5728 setup \u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u6211\u4eec\u6240\u6709\u7684\u4ee3\u7801\uff0c\u4e0d\u4f7f\u7528\u5faa\u73af\u51fd\u6570\u3002 \u5bf9\u4e8e\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u6240\u6709 RTC \u5916\u8bbe\u662f\u6d3b\u52a8\u8fd8\u662f\u65ad\u7535\u3002\u5728\u7761\u7720\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49 RTC IO\u3001\u4f20\u611f\u5668\u548c ULP \u534f\u5904\u7406\u5668\u7b49 RTC \u6a21\u5757\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002 \u5982\u679c\u5c06\u7761\u7720\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\u4e3a\uff1a esp_sleep_pd_config ( ESP_PD_DOMAIN_RTC_PERIPH , ESP_PD_OPTION_OFF ); \u5c31\u5c06\u8fdb\u5165Hibernation\u6a21\u5f0f\u3002","title":"\u5b9e\u4f8b\uff1aESP32 \u6df1\u5ea6\u7761\u7720\u7a0b\u5e8f\u4ee3\u7801"},{"location":"ESP32/ESP32%E4%BC%91%E7%9C%A0/#_4","text":"\u6211\u4eec\u4ece\u4e0a\u4e00\u7ae0\u4e2d\u83b7\u5f97\u4e86\u4e24\u4e2a\u91cd\u8981\u7684\u89c1\u89e3\uff0c\u8fd9\u6709\u52a9\u4e8e\u6211\u4eec\u8fdb\u4e00\u6b65\u964d\u4f4e\u6574\u4e2a ESP32 \u9879\u76ee\u7684\u529f\u8017\u3002 \u5efa\u7acbWiFi\u8fde\u63a5\u5e76\u901a\u8fc7WiFi\u53d1\u9001\u6570\u636e\u5177\u6709\u975e\u5e38\u9ad8\u7684\u529f\u8017 \u5728\u6df1\u5ea6\u7761\u7720\u6216\u4f11\u7720\u6a21\u5f0f\u4e0b\uff0cESP32 \u7684\u529f\u8017\u663e\u8457\u964d\u4f4e\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u7cbe\u786e\u89c4\u5212\u5404\u4e2a\u9636\u6bb5\uff08\u5524\u9192\u3001\u901a\u8fc7 WiFi \u53d1\u9001\u6570\u636e\u3001\u7761\u7720\uff09\uff0c\u5219\u53ef\u4ee5\u964d\u4f4e\u529f\u8017\u3002 \u4e0b\u8868\u5217\u51fa\u4e24\u79cd\u5f00\u53d1\u677f\u5728\u5404\u79cd\u72b6\u6001\u4e0b\u7684\u7535\u6d41\uff0c\u4f9b\u53c2\u8003\u3002 Reference [mA] Light-Sleep [mA] Deep-Sleep [mA] Hibernation [mA] ESP32 \u2013 DevKitC 51 10 9 9 FireBeetle ESP32 39 1.94 0.011 0.008 \u4ee5\u6c14\u8c61\u7ad9\u4e3a\u4f8b\uff0c\u53ef\u4ee5\u6e05\u695a\u5730\u63cf\u8ff0\u5404\u4e2a\u9636\u6bb5\uff1a ESP32 \u8fde\u63a5\u5230 DHT22 \u6e29\u5ea6\u548c\u6e7f\u5ea6\u4f20\u611f\u5668\u3002\u5982\u679c\u6211\u4eec\u6bcf 10 \u79d2\u4f20\u8f93\u4e00\u6b21\u6e29\u5ea6\u548c\u6e7f\u5ea6\uff0c\u529f\u8017\u5c06\u4e0d\u5fc5\u8981\u5730\u9ad8\uff0c\u56e0\u4e3a\u4f20\u8f93\u7684\u6d4b\u91cf\u503c\u5927\u591a\u76f8\u540c\u3002 \u53ef\u4ee5\u901a\u8fc7\u6bcf 10 \u5206\u949f\u800c\u4e0d\u662f\u6bcf 10 \u79d2\u4f20\u8f93\u8bfb\u6570\u6765\u964d\u4f4e\u529f\u8017\u3002\u6709\u4e86\u8fd9\u4e2a\uff0c\u6211\u4eec\u5ef6\u957f\u4e86\u7ef5\u7f8a\u65f6\u95f4\u3002\u4e3a\u4e86\u51cf\u5c11 WiFi \u8fde\u63a5\u7684\u6570\u91cf\uff0c\u6bcf\u6b21\u4ece\u7761\u7720\u6a21\u5f0f\u5524\u9192\u65f6\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u4f20\u611f\u5668\u503c\u4e0e\u4e0a\u6b21\u53d1\u9001\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ea\u6709\u5728\u6e29\u5ea6\u6216\u6e7f\u5ea6\u53d1\u751f\u53d8\u5316\u65f6\u624d\u901a\u8fc7 WiFi \u53d1\u9001\u65b0\u6570\u636e\u3002 \u8981\u5728\u7761\u7720\u6a21\u5f0f\u4e0b\u5b58\u50a8\u53d8\u91cf\uff0c\u5b83\u4eec\u5fc5\u987b\u52a0\u8f7d\u5230 RTC \u5185\u5b58\u4e2d\uff0c\u5728 ESP32 \u4e0a\u53ea\u6709 8kB\u3002\u60a8\u53ea\u9700\u5728\u53d8\u91cf\u524d\u6dfb\u52a0 RTC_DATA_ATT \u5373\u53ef \u3002 RTC_DATA_ATT int temperature ; RTC_DATA_ATT int humidity ;","title":"\u589e\u52a0\u7761\u7720\u65f6\u95f4\u4ee5\u964d\u4f4e\u529f\u8017"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/","text":"FreeRTOS\u662f\u4e00\u6b3e\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u3002\u5bf9\u4e8e\u5355\u6838\u8ba1\u7b97\u673a\u800c\u8a00\uff0c\u4e00\u6b21\u53ea\u80fd\u6267\u884c\u4e00\u4e2a\u8fdb\u7a0b\u3002\u8ba1\u7b97\u673a\u5b9e\u9645\u4e0a\u5b9e\u5728\u591a\u4e2a\u4efb\u52a1\u4e4b\u95f4\u8fdb\u884c\u9ad8\u901f\u5207\u6362\uff0c\u8ba9\u7528\u6237\u770b\u4e0a\u53bb\u4e00\u5207\u50cf\u662f\u5728\u540c\u65f6\u8fdb\u884c\u3002 \u4efb\u52a1 \u4efb\u52a1\u662f\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u7684\u57fa\u672c\u6a21\u5757\uff0c\u5b83\u4eec\u5728\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u8d1f\u8d23\u51b3\u5b9a\u5355\u6838CPU\u5728\u67d0\u4e2a\u65f6\u523b\u5e94\u8be5\u6267\u884c\u54ea\u4e2a\u4efb\u52a1\u3002\u6211\u4eec\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\u3002 \u521b\u5efa\u4e00\u4e2a\u4efb\u52a1 xTaskCreate ( TaskCode , TaskName , StackDepth , Parameter , priority , TaskHandle ); TaskCode:\u6307\u5411\u4efb\u52a1\u51fd\u6570\u7684\u6307\u9488 TaskName:\u4efb\u52a1\u7684\u540d\u79f0 StackDepth:\u4efb\u52a1\u5806\u6808\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u6570\u8868\u793a\u3002 Parameter:\u6307\u9488\uff0c\u6307\u5411\u4efb\u52a1\u51fd\u6570\u6240\u63a5\u6536\u7684\u53c2\u6570 Priority:\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u6570\u5b57\u8d8a\u5927\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u9ed8\u8ba4\u6700\u592732\u7ea7\uff08\u4e0d\u5b9a\uff0c\u53ef\u4ee5\u81ea\u884c\u53bb\u5e93\u6587\u4ef6\u4fee\u6539\uff09\uff0c\u4e0d\u540c\u4efb\u52a1\u53ef\u4ee5\u6709\u76f8\u540c\u4f18\u5148\u7ea7\uff0c\u591f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u4f18\u5148\u7ea7\u8d8a\u5c0f\u8d8a\u597d TaskHandle:\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u7528\u4e8e\u4ee5\u540e\u8fdb\u884c\u51fd\u6570\u8c03\u7528\uff08\u6bd4\u5982\u8981\u5220\u9664\u67d0\u4e2a\u4efb\u52a1\u6216\u8005\u4fee\u6539\u5176\u4f18\u5148\u7ea7\uff09\u65f6\u5bf9\u4efb\u52a1\u7684\u5f15\u7528 \u8be5\u51fd\u6570\u4f1a\u8fd4\u56de pdPass \uff08\u6210\u529f\u65f6\uff09\u6216\u9519\u8bef\u4ee3\u7801 \u4efb\u52a1\u51fd\u6570 \u4efb\u52a1\u51fd\u6570\u5c31\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\u51fd\u6570\uff0c\u793a\u4f8b\uff1a void taskOne( void * parameter ) Note \u4efb\u52a1\u51fd\u6570\u4e0d\u80fd\u6709\u4efb\u4f55\u8fd4\u56de\u503c\uff0c\u5373\u5e94\u8be5\u5b9a\u4e49\u6210void\u3002\u5b83\u4eec\u5fc5\u987b\u4e0d\u5305\u542breturn\u8bed\u53e5\u3002 \u5220\u9664\u4efb\u52a1 \u4f7f\u7528 TaskDelte\uff08\u53e5\u67c4\uff09 \u51fd\u6570\u53ef\u4ee5\u5220\u9664\u4efb\u52a1 \u5b9e\u4f8b\u6f14\u793a void setup () { Serial . begin ( 112500 ); delay ( 1000 ); xTaskCreate ( taskOne , /* Task function. */ \"TaskOne\" , /* String with name of task. */ 10000 , /* Stack size in bytes. */ NULL , /* Parameter passed as input of the task */ 1 , /* Priority of the task. */ NULL ); /* Task handle. */ xTaskCreate ( taskTwo , /* Task function. */ \"TaskTwo\" , /* String with name of task. */ 10000 , /* Stack size in bytes. */ NULL , /* Parameter passed as input of the task */ 1 , /* Priority of the task. */ NULL ); /* Task handle. */ } void loop () { delay ( 1000 ); } void taskOne ( void * parameter ) { for ( int i = 0 ; i < 10 ; i ++ ){ Serial . println ( \"Hello from task 1\" ); delay ( 1000 ); } Serial . println ( \"Ending task 1\" ); vTaskDelete ( NULL ); } void taskTwo ( void * parameter ) { for ( int i = 0 ; i < 10 ; i ++ ){ Serial . println ( \"Hello from task 2\" ); delay ( 1000 ); } Serial . println ( \"Ending task 2\" ); vTaskDelete ( NULL ); } \u6307\u5b9a\u4efb\u52a1\u6267\u884c\u7684Core \u9ed8\u8ba4\u60c5\u51b5\u4e0bArduino\u4f7f\u7528\u7684\u662fESP32\u7684Core1\uff0cCore0\u88ab\u7528\u6765\u5904\u7406wifi\u548cBle\u3002 \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 xPortGetCoreID() \u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684Core\u3002 #include <Arduino.h> void setup () { Serial . begin ( 115200 ); Serial . print ( \"Run on core: \" ); Serial . println ( xPortGetCoreID ()); // put your setup code here, to run once: } void loop () { // put your main code here, to run repeatedly: } \u4e0b\u9762\u5c06\u8ba8\u8bba\u5982\u4f55\u901a\u8fc7Free RTOS\u6307\u5b9aESP32\u4ee3\u7801\u8fd0\u884c\u7684Core\u3002\u76ee\u6807\u662f\u5728core0\u4e2d\u6bcf 0.5 \u79d2\u95ea\u70c1\u4e00\u4e2a LED\uff0c\u5728 core1 \u4e2d\u6bcf 1 \u79d2\u95ea\u70c1\u4e00\u4e2a LED\u3002 \u5b9a\u4e49\u4efb\u52a1\u624b\u67c4 TaskHandle_t Task1; TaskHandle_t Task2; \u5728 setup() \u51fd\u6570\u4e2d\u4f7f\u7528 xTaskCreatePinnedToCore() \u51fd\u6570\u4e3a core0 \u548c core1 \u521b\u5efa\u4efb\u52a1\u3002 xTaskCreatePinnedToCore ( Task1code , \"Task1\" , 10000 , NULL , 1 , & Task1 , 0 ); xTaskCreatePinnedToCore ( Task2code , \"Task2\" , 10000 , NULL , 1 , & Task2 , 1 ); \u6b64\u51fd\u6570\u6709\u4e03\u4e2a\u53c2\u6570\uff1a \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5c06\u6267\u884c\u4efb\u52a1\u7684\u51fd\u6570\u7684\u540d\u79f0\uff0c\u4f8b\u5982Task1code\u6216 Task2code\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u5c06\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u540d\u79f0\uff0c\u4f8b\u5982 Task1 \u6216 Task2\u3002 \u5206\u914d\u7ed9\u4efb\u52a1\u7684\u5806\u6808\u5927\u5c0f\uff0c\u4f8b\u5982 10000\u3002 \u4efb\u52a1\u8f93\u5165\u53c2\u6570\u3002 \u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c 0 \u8868\u793a\u6700\u4f4e\u4f18\u5148\u7ea7\u3002 \u524d\u9762\u5b9a\u4e49\u7684\u4efb\u52a1\u624b\u67c4\uff0c\u4f8b\u5982Task1 \u6216Task 2 \u6307\u5b9a\u8be5\u4efb\u52a1\u8fd0\u884c\u7684core ID\uff0c\u4f8b\u5982 0 \u6216 1\uff0c\u5176\u4e2d 0 \u662fcore 0\uff0c1 \u662fcore 1 \u5b9a\u4e49\u4efb\u52a1\u51fd\u6570 \u63a5\u4e0b\u6765\u5b9a\u4e49\u4e24\u4e2a\u4efb\u52a1\uff0c\u5206\u522b\u63a7\u5236\u4e24\u4e2aLED\u7684\u95ea\u70c1\u3002 void Task1code ( void * parameter ){ Serial . print ( \"Task1 running on core \" ); Serial . println ( xPortGetCoreID ()); for (;;){ digitalWrite ( led_1 , HIGH ); delay ( 500 ); digitalWrite ( led_1 , LOW ); delay ( 500 ); } } void Task3code ( void * parameter ){ Serial . print ( \"Task1 running on core \" ); Serial . println ( xPortGetCoreID ()); for (;;){ digitalWrite ( led_2 , HIGH ); delay ( 1000 ); digitalWrite ( led_2 , LOW ); delay ( 1000 ); } } \u5b9e\u8df5 \u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fde\u63a5\u4e24\u4e2aLED\u5230ESP32\u5f00\u53d1\u677f\u3002 \u5b8c\u6574\u4ee3\u7801 #include <Arduino.h> TaskHandle_t Task1 ; TaskHandle_t Task2 ; int led_1 = 32 ; int led_2 = 25 ; void setup () { Serial . begin ( 115200 ); pinMode ( led_1 , OUTPUT ); pinMode ( led_2 , OUTPUT ); xTaskCreatePinnedToCore ( Task1code , \"Task1\" , 10000 , NULL , 1 , & Task1 , 0 ); delay ( 10 ); xTaskCreatePinnedToCore ( Task2code , \"Task2\" , 10000 , NULL , 1 , & Task2 , 1 ); delay ( 10 ); Serial . print ( \"setup() is run on core: \" ); Serial . println ( xPortGetCoreID ()); // put your setup code here, to run once: } void Task1code ( void * parameter ) { Serial . print ( \"Task1 is run on core: \" ); Serial . println ( xPortGetCoreID ()); for (;;) { digitalWrite ( led_1 , HIGH ); delay ( 500 ); digitalWrite ( led_1 , LOW ); delay ( 500 ); } } void Task2code ( void * parameter ) { Serial . print ( \"Task2 is run on core: \" ); Serial . println ( xPortGetCoreID ()); for (;;) { digitalWrite ( led_2 , HIGH ); delay ( 1000 ); digitalWrite ( led_2 , LOW ); delay ( 1000 ); } } void loop () { // put your main code here, to run repeatedly: }","title":"ESP32\u4f7f\u7528\u53cc\u6838FreeRTOS\u548cArduino\u73af\u5883"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/#_1","text":"\u4efb\u52a1\u662f\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u7684\u57fa\u672c\u6a21\u5757\uff0c\u5b83\u4eec\u5728\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u8d1f\u8d23\u51b3\u5b9a\u5355\u6838CPU\u5728\u67d0\u4e2a\u65f6\u523b\u5e94\u8be5\u6267\u884c\u54ea\u4e2a\u4efb\u52a1\u3002\u6211\u4eec\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\u3002","title":"\u4efb\u52a1"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/#_2","text":"xTaskCreate ( TaskCode , TaskName , StackDepth , Parameter , priority , TaskHandle ); TaskCode:\u6307\u5411\u4efb\u52a1\u51fd\u6570\u7684\u6307\u9488 TaskName:\u4efb\u52a1\u7684\u540d\u79f0 StackDepth:\u4efb\u52a1\u5806\u6808\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u6570\u8868\u793a\u3002 Parameter:\u6307\u9488\uff0c\u6307\u5411\u4efb\u52a1\u51fd\u6570\u6240\u63a5\u6536\u7684\u53c2\u6570 Priority:\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u6570\u5b57\u8d8a\u5927\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u9ed8\u8ba4\u6700\u592732\u7ea7\uff08\u4e0d\u5b9a\uff0c\u53ef\u4ee5\u81ea\u884c\u53bb\u5e93\u6587\u4ef6\u4fee\u6539\uff09\uff0c\u4e0d\u540c\u4efb\u52a1\u53ef\u4ee5\u6709\u76f8\u540c\u4f18\u5148\u7ea7\uff0c\u591f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u4f18\u5148\u7ea7\u8d8a\u5c0f\u8d8a\u597d TaskHandle:\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u7528\u4e8e\u4ee5\u540e\u8fdb\u884c\u51fd\u6570\u8c03\u7528\uff08\u6bd4\u5982\u8981\u5220\u9664\u67d0\u4e2a\u4efb\u52a1\u6216\u8005\u4fee\u6539\u5176\u4f18\u5148\u7ea7\uff09\u65f6\u5bf9\u4efb\u52a1\u7684\u5f15\u7528 \u8be5\u51fd\u6570\u4f1a\u8fd4\u56de pdPass \uff08\u6210\u529f\u65f6\uff09\u6216\u9519\u8bef\u4ee3\u7801","title":"\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/#_3","text":"\u4efb\u52a1\u51fd\u6570\u5c31\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\u51fd\u6570\uff0c\u793a\u4f8b\uff1a void taskOne( void * parameter ) Note \u4efb\u52a1\u51fd\u6570\u4e0d\u80fd\u6709\u4efb\u4f55\u8fd4\u56de\u503c\uff0c\u5373\u5e94\u8be5\u5b9a\u4e49\u6210void\u3002\u5b83\u4eec\u5fc5\u987b\u4e0d\u5305\u542breturn\u8bed\u53e5\u3002","title":"\u4efb\u52a1\u51fd\u6570"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/#_4","text":"\u4f7f\u7528 TaskDelte\uff08\u53e5\u67c4\uff09 \u51fd\u6570\u53ef\u4ee5\u5220\u9664\u4efb\u52a1","title":"\u5220\u9664\u4efb\u52a1"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/#_5","text":"void setup () { Serial . begin ( 112500 ); delay ( 1000 ); xTaskCreate ( taskOne , /* Task function. */ \"TaskOne\" , /* String with name of task. */ 10000 , /* Stack size in bytes. */ NULL , /* Parameter passed as input of the task */ 1 , /* Priority of the task. */ NULL ); /* Task handle. */ xTaskCreate ( taskTwo , /* Task function. */ \"TaskTwo\" , /* String with name of task. */ 10000 , /* Stack size in bytes. */ NULL , /* Parameter passed as input of the task */ 1 , /* Priority of the task. */ NULL ); /* Task handle. */ } void loop () { delay ( 1000 ); } void taskOne ( void * parameter ) { for ( int i = 0 ; i < 10 ; i ++ ){ Serial . println ( \"Hello from task 1\" ); delay ( 1000 ); } Serial . println ( \"Ending task 1\" ); vTaskDelete ( NULL ); } void taskTwo ( void * parameter ) { for ( int i = 0 ; i < 10 ; i ++ ){ Serial . println ( \"Hello from task 2\" ); delay ( 1000 ); } Serial . println ( \"Ending task 2\" ); vTaskDelete ( NULL ); }","title":"\u5b9e\u4f8b\u6f14\u793a"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/#core","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0bArduino\u4f7f\u7528\u7684\u662fESP32\u7684Core1\uff0cCore0\u88ab\u7528\u6765\u5904\u7406wifi\u548cBle\u3002 \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 xPortGetCoreID() \u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684Core\u3002 #include <Arduino.h> void setup () { Serial . begin ( 115200 ); Serial . print ( \"Run on core: \" ); Serial . println ( xPortGetCoreID ()); // put your setup code here, to run once: } void loop () { // put your main code here, to run repeatedly: } \u4e0b\u9762\u5c06\u8ba8\u8bba\u5982\u4f55\u901a\u8fc7Free RTOS\u6307\u5b9aESP32\u4ee3\u7801\u8fd0\u884c\u7684Core\u3002\u76ee\u6807\u662f\u5728core0\u4e2d\u6bcf 0.5 \u79d2\u95ea\u70c1\u4e00\u4e2a LED\uff0c\u5728 core1 \u4e2d\u6bcf 1 \u79d2\u95ea\u70c1\u4e00\u4e2a LED\u3002","title":"\u6307\u5b9a\u4efb\u52a1\u6267\u884c\u7684Core"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/#_6","text":"TaskHandle_t Task1; TaskHandle_t Task2; \u5728 setup() \u51fd\u6570\u4e2d\u4f7f\u7528 xTaskCreatePinnedToCore() \u51fd\u6570\u4e3a core0 \u548c core1 \u521b\u5efa\u4efb\u52a1\u3002 xTaskCreatePinnedToCore ( Task1code , \"Task1\" , 10000 , NULL , 1 , & Task1 , 0 ); xTaskCreatePinnedToCore ( Task2code , \"Task2\" , 10000 , NULL , 1 , & Task2 , 1 ); \u6b64\u51fd\u6570\u6709\u4e03\u4e2a\u53c2\u6570\uff1a \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5c06\u6267\u884c\u4efb\u52a1\u7684\u51fd\u6570\u7684\u540d\u79f0\uff0c\u4f8b\u5982Task1code\u6216 Task2code\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u5c06\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u540d\u79f0\uff0c\u4f8b\u5982 Task1 \u6216 Task2\u3002 \u5206\u914d\u7ed9\u4efb\u52a1\u7684\u5806\u6808\u5927\u5c0f\uff0c\u4f8b\u5982 10000\u3002 \u4efb\u52a1\u8f93\u5165\u53c2\u6570\u3002 \u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c 0 \u8868\u793a\u6700\u4f4e\u4f18\u5148\u7ea7\u3002 \u524d\u9762\u5b9a\u4e49\u7684\u4efb\u52a1\u624b\u67c4\uff0c\u4f8b\u5982Task1 \u6216Task 2 \u6307\u5b9a\u8be5\u4efb\u52a1\u8fd0\u884c\u7684core ID\uff0c\u4f8b\u5982 0 \u6216 1\uff0c\u5176\u4e2d 0 \u662fcore 0\uff0c1 \u662fcore 1","title":"\u5b9a\u4e49\u4efb\u52a1\u624b\u67c4"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/#_7","text":"\u63a5\u4e0b\u6765\u5b9a\u4e49\u4e24\u4e2a\u4efb\u52a1\uff0c\u5206\u522b\u63a7\u5236\u4e24\u4e2aLED\u7684\u95ea\u70c1\u3002 void Task1code ( void * parameter ){ Serial . print ( \"Task1 running on core \" ); Serial . println ( xPortGetCoreID ()); for (;;){ digitalWrite ( led_1 , HIGH ); delay ( 500 ); digitalWrite ( led_1 , LOW ); delay ( 500 ); } } void Task3code ( void * parameter ){ Serial . print ( \"Task1 running on core \" ); Serial . println ( xPortGetCoreID ()); for (;;){ digitalWrite ( led_2 , HIGH ); delay ( 1000 ); digitalWrite ( led_2 , LOW ); delay ( 1000 ); } }","title":"\u5b9a\u4e49\u4efb\u52a1\u51fd\u6570"},{"location":"ESP32/ESP32%E4%BD%BF%E7%94%A8%E5%8F%8C%E6%A0%B8FreeRTOS%E5%92%8CArduino%E7%8E%AF%E5%A2%83/#_8","text":"\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fde\u63a5\u4e24\u4e2aLED\u5230ESP32\u5f00\u53d1\u677f\u3002 \u5b8c\u6574\u4ee3\u7801 #include <Arduino.h> TaskHandle_t Task1 ; TaskHandle_t Task2 ; int led_1 = 32 ; int led_2 = 25 ; void setup () { Serial . begin ( 115200 ); pinMode ( led_1 , OUTPUT ); pinMode ( led_2 , OUTPUT ); xTaskCreatePinnedToCore ( Task1code , \"Task1\" , 10000 , NULL , 1 , & Task1 , 0 ); delay ( 10 ); xTaskCreatePinnedToCore ( Task2code , \"Task2\" , 10000 , NULL , 1 , & Task2 , 1 ); delay ( 10 ); Serial . print ( \"setup() is run on core: \" ); Serial . println ( xPortGetCoreID ()); // put your setup code here, to run once: } void Task1code ( void * parameter ) { Serial . print ( \"Task1 is run on core: \" ); Serial . println ( xPortGetCoreID ()); for (;;) { digitalWrite ( led_1 , HIGH ); delay ( 500 ); digitalWrite ( led_1 , LOW ); delay ( 500 ); } } void Task2code ( void * parameter ) { Serial . print ( \"Task2 is run on core: \" ); Serial . println ( xPortGetCoreID ()); for (;;) { digitalWrite ( led_2 , HIGH ); delay ( 1000 ); digitalWrite ( led_2 , LOW ); delay ( 1000 ); } } void loop () { // put your main code here, to run repeatedly: }","title":"\u5b9e\u8df5"},{"location":"ESP32/ETS300753%E8%A7%A3%E8%AF%BB/","text":"ETS 300753: Acoustic noise emitted by telecommunications equipment. ETS \u6b27\u6d32\u7535\u4fe1\u6807\u51c6\u534f\u4f1a\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6807\u51c6\u662f\u6b27\u6807\u3002 \u6587\u6863\u5c01\u9762\u4e0a\u6ce8\u6709\uff1a Source: ETSI-TC-EE TC EE ( Environmental Engineering)\u73af\u5883\u5de5\u7a0b\u6280\u672f\u59d4\u5458\u4f1a\uff0c\u5b9a\u4e49\u90a3\u4e9b\uff08\u5305\u542b\u5b89\u88c5\u5728\u7528\u6237\u7aef\u7684\uff09\u7535\u4fe1\u8bbe\u5907\u7684\u5173\u4e8e\u73af\u5883\u548c\u57fa\u7840\u65b9\u9762\u7684\u6807\u51c6\u3002\u4e3b\u8981\u5305\u62ec\u73af\u5883\u6761\u4ef6\u548c\u73af\u5883\u6d4b\u8bd5\u3001\u4f9b\u7535\u95ee\u9898\u548c\u673a\u68b0\u7ed3\u6784\u4e09\u4e2a\u9886\u57df\u3002 \u5236\u5b9a\u5b9e\u7528\u7684\u89c4\u8303\uff0c\u5e76\u6709\u80fd\u529b\u8fdb\u884c\u516c\u5e73\u7684\u6bd4\u8f83 \u8bbe\u5907\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\u5355\u4e00\u7684\uff0c\u6280\u672f\u4e0a\u5efa\u7acb\u7684\u58f0\u5b66\u6d4b\u91cf\u65b9\u6cd5 \u6392\u653e\u3002\u56e0\u6b64\uff0cETS\u89c4\u5b9a\u4e86\u58f0\u529f\u7387\u6d4b\u91cf\u7684\u4f7f\u7528\uff0c\u66f4\u5177\u4f53\u5730\u8bf4\uff0c \u91c7\u7528ISO 7779 [1]\u4f5c\u4e3a\u4e3b\u8981\u6d4b\u91cf\u6587\u4ef6\u3002 \u58f0\u529f\u7387\u7ea7\u53ef\u7528\u4e8e\u529f\u80fd\u7c7b\u4f3c\u8bbe\u5907\u7684\u566a\u58f0\u53d1\u5c04\u7684\u76f4\u63a5\u6bd4\u8f83 \u7531\u4e0d\u540c\u4f9b\u5e94\u5546\u5236\u9020\uff0c\u548c/\u6216\u8ba1\u7b97\u7a7a\u95f4\u7684\u4f30\u8ba1\u58f0\u538b\u7ea7 \u8bbe\u5907\u7684\u5b89\u88c5\u4f4d\u7f6e\u3002\u4f7f\u7528\u58f0\u529f\u7387\u7ea7\uff0c\u800c\u4e0d\u662f\u53d1\u5c04\u58f0\u538b \u56e0\u4e3a\u4ea7\u54c1\u566a\u58f0\u6392\u653e\u7684\u89c4\u5b9a\u91cf\u5728\u56fd\u9645\u4e0a\u5df2\u7ecf\u6709\u4e86\u660e\u786e\u7684\u5148\u4f8b \u566a\u97f3\u63a7\u5236\u793e\u533a\u3002 \u4e00\u53f0\u8bbe\u5907\u7684\u58f0\u53d1\u5c04\u7684\u53ef\u63a5\u53d7\u6027\u53d6\u51b3\u4e8e\u8bb8\u591a\u7ec6\u8282 \u4ece\u5b89\u88c5\u5230\u5b89\u88c5\u5404\u4e0d\u76f8\u540c\uff0c\u53ef\u80fd\u7684\u5b89\u88c5\u6570\u91cf\u4e5f\u5f88\u591a\u3002\u56e0\u6b64\uff0c \u6b64ETS\u7684\u76ee\u6807\u662f\u6307\u5b9a\u9002\u7528\u4e8e\u4e3b\u8981\u5b89\u88c5\u7c7b\u522b\u7684\u9650\u5236\u3002 \u4fc3\u4f7fETS\u53d1\u5c55\u7684\u6839\u672c\u5173\u6ce8\u662f\u6f5c\u5728\u7684\u4e0d\u5229\u5f71\u54cd \u8fc7\u591a\u7684\u8bbe\u5907\u566a\u97f3\u53ef\u80fd\u4f1a\u5bf9\u4eba\u4ea7\u751f\u5f71\u54cd\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u566a\u97f3\u5bf9\u4eba\u7684\u5f71\u54cd \u6d3b\u52a8\u4e00\u76f4\u5728\u8ba4\u771f\u8003\u8651\uff0c\u800c\u4e14\u610f\u56fe\u662f\u786e\u4fdd\u53d1\u51fa\u7684\u58f0\u54cd \u5904\u4e8e\u6216\u4f4e\u4e8e\u666e\u904d\u63a5\u53d7\u7684\u6c34\u5e73\u3002\u8003\u8651\u7684\u611f\u77e5\u95ee\u9898\u5305\u62ec\u4efb\u52a1\u96c6\u4e2d\uff0c \u8bed\u97f3\u4ea4\u6d41\uff0c\u70e6\u607c\u548c\u5176\u4ed6\u7c7b\u4f3c\u7684\u53c2\u6570\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u76f8\u5173\u7684\u566a\u97f3\u66b4\u9732 \u6c34\u5e73\u8fdc\u4f4e\u4e8e\u786e\u4fdd\u5de5\u4eba\u5b89\u5168\u548c\u5065\u5eb7\u6240\u9700\u7684\u6c34\u5e73\u3002\u6709\u5173\u5de5\u4eba\u7684\u8981\u6c42 \u5728EEC\u6307\u4ee4\u4e2d\u53ef\u4ee5\u627e\u5230\u5b89\u5168\u548c\u5065\u5eb7\uff08\u5305\u62ec\u4e0e\u6b21\u58f0\u548c\u8d85\u58f0\u6709\u5173\u7684\uff09 86/188 / EEC [4]\u3002 ETS\u6307\u5b9a\u5236\u9020\u5546\u62a5\u544a\u8bbe\u5907\u7684\u6d4b\u91cf\u7684A\u52a0\u6743\u58f0\u529f\u7387\u503c\u3002 \u9274\u4e8e\u6d4b\u91cf\u6bcf\u4e2a\u5236\u9020\u5355\u4f4d\u662f\u4e0d\u5207\u5b9e\u9645\u548c\u4e0d\u5fc5\u8981\u7684\uff0c\u6240\u62a5\u544a\u7684\u58f0\u97f3 \u529f\u7387\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u7279\u5b9a\u6a21\u578b\u7684\u5168\u90e8\u6216\u51e0\u4e4e\u5168\u90e8\u5355\u4f4d\u4e0d\u4f1a\u8d85\u8fc7\u7684\u503c\u3002\u610f\u5373 \u62a5\u544a\u7684\u4ef7\u503c\u9700\u8981\u8003\u8651\u751f\u4ea7\u53d8\u5316\u548c\u7cbe\u786e\u5ea6 \u6d4b\u91cf\u65b9\u6cd5\u3002 ISO 9296 [2]\u89c4\u5b9a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u56e0\u6b64 \u5728\u672cETS\u4e2d\u89c4\u5b9a\u4e3a\u58f0\u660e\u58f0\u529f\u7387\u503c\u7684\u65b9\u6cd5\u3002 ISO 9296 [2]\u4e5f\u89c4\u5b9a\u4e86\u4e00\u4e2a \u9a8c\u8bc1\u58f0\u660e\u7684\u58f0\u529f\u7387\u503c\u7684\u65b9\u6cd5\u3002 To develop practical specifications and to have the capacity to make fair comparisons between equipment, it is essential to have a single, technically established method for the measurement of acoustic emission. Therefore, this ETS specifies the use of sound power measurement and, more specifically, adopts ISO 7779 [1] as the primary measurement document. Sound power levels can be used for direct comparison of noise emission for functionally similar equipment manufactured by different vendors, and/or in the calculation of estimated sound pressure levels for spaces where the equipment is to be installed. The use of sound power level, instead of emission sound pressure level, as the specified quantity for product noise emission has clear precedent within the international noise control community. The acceptability of the acoustic emission from a piece of equipment depends upon a number of details that vary from installation to installation, and the number of possible installations is extensive. Accordingly, the goal of this ETS is to specify limits that are applicable to the major installation categories. The fundamental concern prompting the development of this ETS is the potential adverse impact that excessive equipment noise can have on people. For that reason, the impact of noise upon human activities has been carefully considered, and the intent has been to ensure that the acoustic noise emitted is at, or below, generally accepted levels. The perceptual issues considered included task concentration, speech communication, annoyance and other similar parameters. Generally, the relevant noise exposure levels are well below those needed to ensure worker safety and health. Requirements related to worker safety and health (including those related to infrasound and ultrasound) can be found in EEC Directive 86/188/EEC [4]. This ETS specifies that manufacturers report measured A-weighted sound power values for equipment. Given that it is impractical and unnecessary to measure every manufactured unit, the reported sound power value should be one that all, or nearly all, units of a particular model will not exceed. This means that the reported value needs to take into account both production variation and the precision of the measurement method. ISO 9296 [2] specifies methods that address these issues and is therefore specified in this ETS as the method for declaring sound power values. ISO 9296 [2] also specifies a method for verification of declared sound power values. Industry standards which cover acoustic noise testing include: ISO 9296 ISO 7779 ISO 3744 GR-63-CORE ETSI EN 300 753 IEC 60601 MIL-STD-1474D (previously MIL-STD-740).","title":"ETS 300753 \u89e3\u8bfb"},{"location":"ESP32/FFT/","text":"\u6458\u8981 \u5728\u672c\u6587\u4e2d\u5c06\u4ee5 \\(x(t)=A\\cos(2\\pi ft+\\phi)\\) \u7684\u5085\u91cc\u53f6\u53d8\u6362\u4e3a\u4f8b\u4ecb\u7ecdMatlab\u4e2d\u5982\u4f55\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u4e3b\u8981\u4ecb\u7ecd\u4ee5\u4e0b\u5185\u5bb9\uff1a \u7528\u6570\u5b57\u65b9\u5f0f\uff08\u79bb\u6563\u65f6\u95f4\uff09\u63cf\u8ff0\u4fe1\u53f7 \\(x(t)\\) \u5229\u7528\u5085\u91cc\u53f6\u53d8\u6362\u5c06\u79bb\u6563\u4fe1\u53f7 \\(x[n]\\) \u53d8\u6362\u5230\u9891\u57df \\(X[k]\\) \u63d0\u53d6\u9891\u57df\u4fe1\u53f7 \\(X[k]\\) \u7684\u5e45\u503c\u548c\u76f8\u4f4d\u8c31\uff0c\u53ca\u529f\u7387\u8c31 \u7531\u9891\u57df\u4fe1\u53f7\u6062\u590d\u51fa\u65f6\u57df\u4fe1\u53f7 \u79bb\u6563\u65f6\u95f4\u57df\u8868\u793a \u8003\u8651\u4e00\u4e2a\u6b63\u5f26\u6ce2 \\(x(t)=A\\cos(2\\pi ft+\\phi)\\) \uff0c\u5176\u4e2d \\(A=4\\) , \\(f=2\\text{Hz}\\) \uff0c \\(\\phi=\\pi/4\\) (\u5373 \\(30^{\\circ}\\) )\u3002\u5373\uff1a \\[\\begin{equation}\\label{eq:xt} x(t)=4cos(2\\pi 2t+\\pi/4) \\end{equation}\\] \u4e3a\u5c06\u65f6\u57df\u8fde\u7eed\u4fe1\u53f7\uff08\u6a21\u62df\u4fe1\u53f7\uff09 \\(x(t)\\) \u5b58\u50a8\u5230\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u9700\u5bf9\u5176\u8fdb\u884c\u91c7\u6837\uff0c\u6839\u636eNyquist\u91c7\u6837\u5b9a\u5f8b\uff0c\u91c7\u6837\u9891\u7387\u4e00\u822c\u9700\u8981\u5927\u4e8e\u4fe1\u53f7\u9891\u7387\u7684\u4e24\u500d\u3002 \u4e0b\u9762\u770b\u770b\u8fd9\u91c7\u6837\u9891\u7387\u4e3a8\u548c32\u7684\u60c5\u5f62 A = 4 ; f = 2 ; phi = pi / 4 ; duration = 2 ; fs = 4 * f ; t = 0 : 1 / fs : duration-1 / fs ; x = A * cos ( 2 * pi * f * t + phi ); figure ( 'Position' , [ 500 300 400 300 ] ) subplot ( 2 , 1 , 1 ) plot ( t , x ) hold on stem ( t , x , ':.' , 'color' , [ 0.5 0.5 0.5 ] ) ylabel ( 'fs=8' ) hold off fs = 16 * f ; t = 0 : 1 / fs : duration-1 / fs ; x = A * cos ( 2 * pi * f * t + phi ); subplot ( 2 , 1 , 2 ) plot ( t , x ) hold on stem ( t , x , ':.' , 'color' , [ 0.5 0.5 0.5 ] ) xlabel ( 'time(s)' ) ylabel ( 'fs=32' ) \u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b\u56fe \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u5f53\u91c7\u6837\u9891\u7387 \\(fs=8\\) \u65f6\uff0c\u5df2\u7ecf\u770b\u4e0d\u51fa\u539f\u59cb\u4fe1\u53f7\u7684\u5f62\u72b6\u4e86\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u65b9\u6ce2\u4fe1\u53f7\u3002\u4e0d\u8fc7\u5373\u4fbf\u5982\u6b64\u9891\u7387\u4fe1\u606f\u8fd8\u662f\u4fdd\u7559\u4e86\u3002\u5f53\u91c7\u6837\u9891\u7387 \\(fs=32\\) \u65f6\uff0c\u80fd\u591f\u8f83\u597d\u5730\u63cf\u8ff0\u539f\u59cb\u4fe1\u53f7\u7684\u5f62\u72b6\u3002 \u5229\u7528\u5085\u7acb\u53f6\u53d8\u6362\u5230\u9891\u57df \u5085\u7acb\u53f6\u53d8\u6362\u5f97\u5230\u7684\u7ed3\u679c\u4e3a\u590d\u6570 \\(X=X_{re} + j X_{im}\\) \u3002Matlab\u63d0\u4f9b\u7684 X = fft(x,N) \u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u5feb\u901f\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\uff0c\u53d8\u6362\u957f\u5ea6N\u5fc5\u987b\u8db3\u591f\u5927\uff0c\u5426\u5219\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u4f1a\u4e22\u5931\u6709\u7528\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u6307\u5b9aN\uff0c\u5219\u9ed8\u8ba4\u4ee5x\u7684\u6570\u636e\u957f\u5ea6\u4f5c\u4e3aN\u7684\u503c\u3002 N = 32 ; % Transform length , FFT size X = fft ( x , N ); ff = fs *( 0 : N-1 )/ N ; subplot ( 3 , 1 , 2 ) stem ( ff , abs ( X )/ N , '.' ); \u4e0b\u9762\u770b\u770bN\u5206\u522b\u53d68, 32, 128\u60c5\u5f62\u4e0b\u7684\u7ed3\u679c\uff1a N=8\uff0c\u9891\u7387\u4fe1\u606f\u5931\u771f N=32\uff0c\u6821\u51c6\u786e\u5730\u83b7\u5f97\u9891\u7387\u4fe1\u606f N=128\uff0c\uff1f\uff1f \u6ce8\u610f\u5230\uff0c\u5373\u4f7f\u4e2d\u95f4\u90a3\u5e45\u56fe\u6b63\u786e\u7684\u5f97\u5230\u4e86\u9891\u7387\u5206\u91cf\uff0c\u4f46\u662f\u600e\u4e48\u4f1a\u6709\u4e00\u4e2a \\(f=30\\text{Hz}\\) \u7684\u5206\u91cf\uff0c\u8fd9\u53c8\u662f\u4ec0\u4e48\u9b3c\uff1f \u5176\u5b9e\u53ef\u4ee5\u53ea\u53d6\u524d\u9762\u4e00\u534a\u7684\u6570\u636eX(1: N/2)\uff0c\u5e76\u5c06\u5e45\u503c \\(\\times 2\\) \uff0c\u5373\u53ef\u5f97\u5230\u5355\u8fb9\u8c31\u3002\u5982\u679c\u60f3\u8981\u5f97\u5230\u548c\u7406\u8bba\u6559\u7a0b\u4e2d\u4e00\u6837\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u5c06\u9891\u7387\u642c\u79fb\uff0c\u5f97\u5230\u590d\u9891\u7387\u7684\u90a3\u4e00\u534a\u3002\u6b63\u8d1f\u9891\u7387\u7684\u7ed3\u679c\u662f\u5bf9\u79f0\u7684\u54e6\u3002Matlab\u5df2\u7ecf\u63d0\u4f9b\u4e86\u51fd\u6570 fftshift \u8fdb\u884c\u6b64\u64cd\u4f5c\u3002 \u53e6\u5916\u4e5f\u53ef\u4ee5\u6839\u636e\u5085\u7acb\u53f6\u53d8\u6362\u7ed3\u679c\u8ba1\u7b97\u4fe1\u53f7\u7684\u529f\u7387\u8c31 X = fftshift ( fft ( x , N )) / N ; stem ( ff , abs ( X ), '.' ); % magnitudes vs frequencies xlabel ( 'Frequency (Hz)' ); ylabel ( 'Amplitude |X[N]|' ); power = X . * conj ( X ); stem ( ff , power , '.' ) xlabel ( 'Frequency (Hz)' ); ylabel ( 'Power' ); \u76f8\u4f4d\u8c31 \u5982\u679c\u76f4\u63a5\u7528angle(X)\u8bfb\u53d6\u5e45\u503c\u4fe1\u606f\uff0c\u53d1\u73b0\u7ed3\u679c\u6bd4\u8f83\u6df7\u4e71\u3002 subplot ( 2 , 1 , 1 ) plot ( ff , angle ( X ) * 180 / pi ); %magnitudes vs frequencies X2 = X ; %store the FFT results in another array %detect noise ( very small numbers ( eps )) and ignore them threshold = max ( abs ( X )) / 10000 ; %tolerance threshold X2 ( abs ( X ) < threshold ) = 0 ; %maskout values that are below the threshold phase = unwrap ( angle ( X2 )) * 180 / pi ; %phase information subplot ( 2 , 1 , 2 ) stem ( ff , phase , '.' ); %phase vs frequencies","title":"FFT"},{"location":"ESP32/FFT/#_1","text":"\u5728\u672c\u6587\u4e2d\u5c06\u4ee5 \\(x(t)=A\\cos(2\\pi ft+\\phi)\\) \u7684\u5085\u91cc\u53f6\u53d8\u6362\u4e3a\u4f8b\u4ecb\u7ecdMatlab\u4e2d\u5982\u4f55\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u4e3b\u8981\u4ecb\u7ecd\u4ee5\u4e0b\u5185\u5bb9\uff1a \u7528\u6570\u5b57\u65b9\u5f0f\uff08\u79bb\u6563\u65f6\u95f4\uff09\u63cf\u8ff0\u4fe1\u53f7 \\(x(t)\\) \u5229\u7528\u5085\u91cc\u53f6\u53d8\u6362\u5c06\u79bb\u6563\u4fe1\u53f7 \\(x[n]\\) \u53d8\u6362\u5230\u9891\u57df \\(X[k]\\) \u63d0\u53d6\u9891\u57df\u4fe1\u53f7 \\(X[k]\\) \u7684\u5e45\u503c\u548c\u76f8\u4f4d\u8c31\uff0c\u53ca\u529f\u7387\u8c31 \u7531\u9891\u57df\u4fe1\u53f7\u6062\u590d\u51fa\u65f6\u57df\u4fe1\u53f7","title":"\u6458\u8981"},{"location":"ESP32/FFT/#_2","text":"\u8003\u8651\u4e00\u4e2a\u6b63\u5f26\u6ce2 \\(x(t)=A\\cos(2\\pi ft+\\phi)\\) \uff0c\u5176\u4e2d \\(A=4\\) , \\(f=2\\text{Hz}\\) \uff0c \\(\\phi=\\pi/4\\) (\u5373 \\(30^{\\circ}\\) )\u3002\u5373\uff1a \\[\\begin{equation}\\label{eq:xt} x(t)=4cos(2\\pi 2t+\\pi/4) \\end{equation}\\] \u4e3a\u5c06\u65f6\u57df\u8fde\u7eed\u4fe1\u53f7\uff08\u6a21\u62df\u4fe1\u53f7\uff09 \\(x(t)\\) \u5b58\u50a8\u5230\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u9700\u5bf9\u5176\u8fdb\u884c\u91c7\u6837\uff0c\u6839\u636eNyquist\u91c7\u6837\u5b9a\u5f8b\uff0c\u91c7\u6837\u9891\u7387\u4e00\u822c\u9700\u8981\u5927\u4e8e\u4fe1\u53f7\u9891\u7387\u7684\u4e24\u500d\u3002 \u4e0b\u9762\u770b\u770b\u8fd9\u91c7\u6837\u9891\u7387\u4e3a8\u548c32\u7684\u60c5\u5f62 A = 4 ; f = 2 ; phi = pi / 4 ; duration = 2 ; fs = 4 * f ; t = 0 : 1 / fs : duration-1 / fs ; x = A * cos ( 2 * pi * f * t + phi ); figure ( 'Position' , [ 500 300 400 300 ] ) subplot ( 2 , 1 , 1 ) plot ( t , x ) hold on stem ( t , x , ':.' , 'color' , [ 0.5 0.5 0.5 ] ) ylabel ( 'fs=8' ) hold off fs = 16 * f ; t = 0 : 1 / fs : duration-1 / fs ; x = A * cos ( 2 * pi * f * t + phi ); subplot ( 2 , 1 , 2 ) plot ( t , x ) hold on stem ( t , x , ':.' , 'color' , [ 0.5 0.5 0.5 ] ) xlabel ( 'time(s)' ) ylabel ( 'fs=32' ) \u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b\u56fe \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u5f53\u91c7\u6837\u9891\u7387 \\(fs=8\\) \u65f6\uff0c\u5df2\u7ecf\u770b\u4e0d\u51fa\u539f\u59cb\u4fe1\u53f7\u7684\u5f62\u72b6\u4e86\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u65b9\u6ce2\u4fe1\u53f7\u3002\u4e0d\u8fc7\u5373\u4fbf\u5982\u6b64\u9891\u7387\u4fe1\u606f\u8fd8\u662f\u4fdd\u7559\u4e86\u3002\u5f53\u91c7\u6837\u9891\u7387 \\(fs=32\\) \u65f6\uff0c\u80fd\u591f\u8f83\u597d\u5730\u63cf\u8ff0\u539f\u59cb\u4fe1\u53f7\u7684\u5f62\u72b6\u3002","title":"\u79bb\u6563\u65f6\u95f4\u57df\u8868\u793a"},{"location":"ESP32/FFT/#_3","text":"\u5085\u7acb\u53f6\u53d8\u6362\u5f97\u5230\u7684\u7ed3\u679c\u4e3a\u590d\u6570 \\(X=X_{re} + j X_{im}\\) \u3002Matlab\u63d0\u4f9b\u7684 X = fft(x,N) \u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u5feb\u901f\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\uff0c\u53d8\u6362\u957f\u5ea6N\u5fc5\u987b\u8db3\u591f\u5927\uff0c\u5426\u5219\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u4f1a\u4e22\u5931\u6709\u7528\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u6307\u5b9aN\uff0c\u5219\u9ed8\u8ba4\u4ee5x\u7684\u6570\u636e\u957f\u5ea6\u4f5c\u4e3aN\u7684\u503c\u3002 N = 32 ; % Transform length , FFT size X = fft ( x , N ); ff = fs *( 0 : N-1 )/ N ; subplot ( 3 , 1 , 2 ) stem ( ff , abs ( X )/ N , '.' ); \u4e0b\u9762\u770b\u770bN\u5206\u522b\u53d68, 32, 128\u60c5\u5f62\u4e0b\u7684\u7ed3\u679c\uff1a N=8\uff0c\u9891\u7387\u4fe1\u606f\u5931\u771f N=32\uff0c\u6821\u51c6\u786e\u5730\u83b7\u5f97\u9891\u7387\u4fe1\u606f N=128\uff0c\uff1f\uff1f \u6ce8\u610f\u5230\uff0c\u5373\u4f7f\u4e2d\u95f4\u90a3\u5e45\u56fe\u6b63\u786e\u7684\u5f97\u5230\u4e86\u9891\u7387\u5206\u91cf\uff0c\u4f46\u662f\u600e\u4e48\u4f1a\u6709\u4e00\u4e2a \\(f=30\\text{Hz}\\) \u7684\u5206\u91cf\uff0c\u8fd9\u53c8\u662f\u4ec0\u4e48\u9b3c\uff1f \u5176\u5b9e\u53ef\u4ee5\u53ea\u53d6\u524d\u9762\u4e00\u534a\u7684\u6570\u636eX(1: N/2)\uff0c\u5e76\u5c06\u5e45\u503c \\(\\times 2\\) \uff0c\u5373\u53ef\u5f97\u5230\u5355\u8fb9\u8c31\u3002\u5982\u679c\u60f3\u8981\u5f97\u5230\u548c\u7406\u8bba\u6559\u7a0b\u4e2d\u4e00\u6837\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u5c06\u9891\u7387\u642c\u79fb\uff0c\u5f97\u5230\u590d\u9891\u7387\u7684\u90a3\u4e00\u534a\u3002\u6b63\u8d1f\u9891\u7387\u7684\u7ed3\u679c\u662f\u5bf9\u79f0\u7684\u54e6\u3002Matlab\u5df2\u7ecf\u63d0\u4f9b\u4e86\u51fd\u6570 fftshift \u8fdb\u884c\u6b64\u64cd\u4f5c\u3002 \u53e6\u5916\u4e5f\u53ef\u4ee5\u6839\u636e\u5085\u7acb\u53f6\u53d8\u6362\u7ed3\u679c\u8ba1\u7b97\u4fe1\u53f7\u7684\u529f\u7387\u8c31 X = fftshift ( fft ( x , N )) / N ; stem ( ff , abs ( X ), '.' ); % magnitudes vs frequencies xlabel ( 'Frequency (Hz)' ); ylabel ( 'Amplitude |X[N]|' ); power = X . * conj ( X ); stem ( ff , power , '.' ) xlabel ( 'Frequency (Hz)' ); ylabel ( 'Power' ); \u76f8\u4f4d\u8c31 \u5982\u679c\u76f4\u63a5\u7528angle(X)\u8bfb\u53d6\u5e45\u503c\u4fe1\u606f\uff0c\u53d1\u73b0\u7ed3\u679c\u6bd4\u8f83\u6df7\u4e71\u3002 subplot ( 2 , 1 , 1 ) plot ( ff , angle ( X ) * 180 / pi ); %magnitudes vs frequencies X2 = X ; %store the FFT results in another array %detect noise ( very small numbers ( eps )) and ignore them threshold = max ( abs ( X )) / 10000 ; %tolerance threshold X2 ( abs ( X ) < threshold ) = 0 ; %maskout values that are below the threshold phase = unwrap ( angle ( X2 )) * 180 / pi ; %phase information subplot ( 2 , 1 , 2 ) stem ( ff , phase , '.' ); %phase vs frequencies","title":"\u5229\u7528\u5085\u7acb\u53f6\u53d8\u6362\u5230\u9891\u57df"},{"location":"ESP32/FOTA/","text":"ESP32 HTTP FOTA OTA \u7528\u5230\u5e93HTTPUpdate\uff0c\u4f8b\u5b50\u53ef\u4ee5\u53c2\u8003\u6b64\u5e93\u6587\u4ef6\u3002 OTAdrive OTAdrive \u81ea\u52a8\u914d\u7f51 Overview - AutoConnect for ESP8266/ESP32 Overview - AutoConnect for ESP8266/ESP32","title":"FOTA"},{"location":"ESP32/FOTA/#ota","text":"\u7528\u5230\u5e93HTTPUpdate\uff0c\u4f8b\u5b50\u53ef\u4ee5\u53c2\u8003\u6b64\u5e93\u6587\u4ef6\u3002 OTAdrive OTAdrive","title":"OTA"},{"location":"ESP32/FOTA/#_1","text":"Overview - AutoConnect for ESP8266/ESP32 Overview - AutoConnect for ESP8266/ESP32","title":"\u81ea\u52a8\u914d\u7f51"},{"location":"ESP32/Facenet%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/","text":"FaceNet\u5c06\u4eba\u8138\u56fe\u50cf\u6620\u5c04\u5230\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\uff0c\u7a7a\u95f4\u7684\u8ddd\u79bb\u4ee3\u8868\u4e86\u4eba\u8138\u56fe\u50cf\u7684\u76f8\u4f3c\u6027\u3002\u57fa\u4e8e\u8be5\u6620\u5c04\u7a7a\u95f4\u53ef\u4ee5\u5b9e\u73b0\u4eba\u8138\u8bc6\u522b\uff0c\u9a8c\u8bc1\u548c\u805a\u7c7b\u7b49\u4efb\u52a1\u3002 1. \u5b89\u88c5\u4f9d\u8d56\u7a0b\u5e8f a) \u5b89\u88c5 Tensorflow b) \u4e0b\u8f7d\u514b\u9686 FaceNet repo \u5230\u672c\u5730 c) \u5b89\u88c5 \u9700\u8981\u7684Python\u6a21\u5757 2. \u4e0b\u8f7d\u5df2\u8bad\u7ec3\u6a21\u578b facenet\u63d0\u4f9b\u4e86\u4e24\u4e2a\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u5206\u522b\u662f\u57fa\u4e8eCASIA-WebFace\u548cMS-Celeb-1M\u4eba\u8138\u5e93\u8bad\u7ec3\u7684\uff0c\u94fe\u63a5\u4e3a\uff1a Model name LFW accuracy Training dataset Architecture 20170511-185253 0.987 CASIA-WebFace Inception ResNet v1 20170512-110547 0.992 MS-Celeb-1M Inception ResNet v1 \u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u5939\u89e3\u538b\u5230src\\models\\\u76ee\u5f55\u4e0b\u9762\uff0c\u76ee\u5f55 20170512-110547 \u5c06\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a 20170512-110547.pb model-20170512-110547.ckpt-250000.data-00000-of-00001 model-20170512-110547.ckpt-250000.index model-20170512-110547.meta 3. \u5bf9\u9f50\u56fe\u7247 \u6587\u4ef6 src/align/align_dataset_mtcnn.py \u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5bf9\u9f50\u56fe\u7247\u4e2d\u9762\u90e8\u7684\u5b9e\u4f8b\u3002\u4e3b\u8981\u8fc7\u7a0b\u662f\uff1a \u8bfb\u53d6\u6307\u5b9a\u76ee\u5f55\u4e2d\u7684\u56fe\u7247 \u8fdb\u884c\u9762\u90e8\u68c0\u6d4b \u7136\u540e\u5bf9\u9f50\u88c1\u526a\u9762\u90e8 \u53e6\u5b58\u5230\u6307\u5b9a\u76ee\u5f55 \u8fd9\u6bb5\u4ee3\u7801\uff1a from __future__ import absolute_import from __future__ import division from __future__ import print_function from scipy import misc import sys import os import argparse import tensorflow as tf import numpy as np import facenet import align.detect_face import random from time import sleep output_dir = 'ad/' input_dir = 'presidents/' gpu_memory_fraction = 0.25 #\u6bcf\u4e2a\u4f1a\u8bdd\u5141\u8bb8\u4f7f\u7528\u6700\u592725\uff05\u7684GPU\u603b\u5185\u5b58 margin = 32 image_size = 160 random_order = False detect_multiple_faces = True if not os . path . exists ( output_dir ): os . makedirs ( output_dir ) # Store some git revision info in a text file in the log directory src_path , _ = os . path . split ( os . path . realpath ( __file__ )) facenet . store_revision_info ( src_path , output_dir , ' ' . join ( sys . argv )) dataset = facenet . get_dataset ( input_dir ) print ( 'Creating networks and loading parameters' ) with tf . Graph () . as_default (): gpu_options = tf . GPUOptions ( per_process_gpu_memory_fraction = gpu_memory_fraction ) sess = tf . Session ( config = tf . ConfigProto ( gpu_options = gpu_options , log_device_placement = False )) with sess . as_default (): pnet , rnet , onet = align . detect_face . create_mtcnn ( sess , None ) minsize = 80 # minimum size of face threshold = [ 0.6 , 0.8 , 0.95 ] # three steps's threshold factor = 0.709 # scale factor # Add a random key to the filename to allow alignment using multiple processes random_key = np . random . randint ( 0 , high = 99999 ) bounding_boxes_filename = os . path . join ( output_dir , 'bounding_boxes_ %05d .txt' % random_key ) with open ( bounding_boxes_filename , \"w\" ) as text_file : nrof_images_total = 0 nrof_successfully_aligned = 0 if random_order : random . shuffle ( dataset ) for cls in dataset : output_class_dir = os . path . join ( output_dir , cls . name ) if not os . path . exists ( output_class_dir ): os . makedirs ( output_class_dir ) if random_order : random . shuffle ( cls . image_paths ) for image_path in cls . image_paths : nrof_images_total += 1 filename = os . path . splitext ( os . path . split ( image_path )[ 1 ])[ 0 ] output_filename = os . path . join ( output_class_dir , filename + '.png' ) print ( image_path ) if not os . path . exists ( output_filename ): try : img = misc . imread ( image_path ) except ( IOError , ValueError , IndexError ) as e : errorMessage = ' {} : {} ' . format ( image_path , e ) print ( errorMessage ) else : if img . ndim < 2 : print ( 'Unable to align \" %s \"' % image_path ) text_file . write ( ' %s \\n ' % ( output_filename )) continue if img . ndim == 2 : img = facenet . to_rgb ( img ) img = img [:,:, 0 : 3 ] bounding_boxes , _ = align . detect_face . detect_face ( img , minsize , pnet , rnet , onet , threshold , factor ) nrof_faces = bounding_boxes . shape [ 0 ] if nrof_faces > 0 : det = bounding_boxes [:, 0 : 4 ] det_arr = [] img_size = np . asarray ( img . shape )[ 0 : 2 ] if nrof_faces > 1 : if detect_multiple_faces : for i in range ( nrof_faces ): det_arr . append ( np . squeeze ( det [ i ])) else : bounding_box_size = ( det [:, 2 ] - det [:, 0 ]) * ( det [:, 3 ] - det [:, 1 ]) img_center = img_size / 2 offsets = np . vstack ([ ( det [:, 0 ] + det [:, 2 ]) / 2 - img_center [ 1 ], ( det [:, 1 ] + det [:, 3 ]) / 2 - img_center [ 0 ] ]) offset_dist_squared = np . sum ( np . power ( offsets , 2.0 ), 0 ) index = np . argmax ( bounding_box_size - offset_dist_squared * 2.0 ) # some extra weight on the centering det_arr . append ( det [ index ,:]) else : det_arr . append ( np . squeeze ( det )) for i , det in enumerate ( det_arr ): det = np . squeeze ( det ) bb = np . zeros ( 4 , dtype = np . int32 ) bb [ 0 ] = np . maximum ( det [ 0 ] - margin / 2 , 0 ) bb [ 1 ] = np . maximum ( det [ 1 ] - margin / 2 , 0 ) bb [ 2 ] = np . minimum ( det [ 2 ] + margin / 2 , img_size [ 1 ]) bb [ 3 ] = np . minimum ( det [ 3 ] + margin / 2 , img_size [ 0 ]) cropped = img [ bb [ 1 ]: bb [ 3 ], bb [ 0 ]: bb [ 2 ],:] scaled = misc . imresize ( cropped , ( image_size , image_size ), interp = 'bilinear' ) nrof_successfully_aligned += 1 filename_base , file_extension = os . path . splitext ( output_filename ) if detect_multiple_faces : output_filename_n = \" {} _ {}{} \" . format ( filename_base , i , file_extension ) else : output_filename_n = \" {}{} \" . format ( filename_base , file_extension ) misc . imsave ( output_filename_n , scaled ) text_file . write ( ' %s %d %d %d %d \\n ' % ( output_filename_n , bb [ 0 ], bb [ 1 ], bb [ 2 ], bb [ 3 ])) else : print ( 'Unable to align \" %s \"' % image_path ) text_file . write ( ' %s \\n ' % ( output_filename )) print ( 'Total number of images: %d ' % nrof_images_total ) print ( 'Number of successfully aligned images: %d ' % nrof_successfully_aligned ) 4. \u4eba\u8138\u6bd4\u5bf9\u4f8b\u5b50 facenet\u53ef\u4ee5\u76f4\u63a5\u6bd4\u5bf9\u4e24\u4e2a\u4eba\u8138\u7ecf\u8fc7\u5b83\u7684\u7f51\u7edc\u6620\u5c04\u4e4b\u540e\u7684\u6b27\u6c0f\u8ddd\u79bb\uff0c\u8fd0\u884c\u7a0b\u5e8f\u4e3afacenet-master\\src\\compare.py\u3002 CMD\u4e0b\u8fd0\u884c\uff1a python compare.py models\\20170511-185253 1.jpg 2.jpg","title":"FaceNet \u4f7f\u7528\u5b9e\u4f8b\u4ecb\u7ecd"},{"location":"ESP32/Facenet%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/#1","text":"a) \u5b89\u88c5 Tensorflow b) \u4e0b\u8f7d\u514b\u9686 FaceNet repo \u5230\u672c\u5730 c) \u5b89\u88c5 \u9700\u8981\u7684Python\u6a21\u5757","title":"1. \u5b89\u88c5\u4f9d\u8d56\u7a0b\u5e8f"},{"location":"ESP32/Facenet%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/#2","text":"facenet\u63d0\u4f9b\u4e86\u4e24\u4e2a\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u5206\u522b\u662f\u57fa\u4e8eCASIA-WebFace\u548cMS-Celeb-1M\u4eba\u8138\u5e93\u8bad\u7ec3\u7684\uff0c\u94fe\u63a5\u4e3a\uff1a Model name LFW accuracy Training dataset Architecture 20170511-185253 0.987 CASIA-WebFace Inception ResNet v1 20170512-110547 0.992 MS-Celeb-1M Inception ResNet v1 \u5c06\u4e0b\u8f7d\u7684\u6587\u4ef6\u5939\u89e3\u538b\u5230src\\models\\\u76ee\u5f55\u4e0b\u9762\uff0c\u76ee\u5f55 20170512-110547 \u5c06\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a 20170512-110547.pb model-20170512-110547.ckpt-250000.data-00000-of-00001 model-20170512-110547.ckpt-250000.index model-20170512-110547.meta","title":"2. \u4e0b\u8f7d\u5df2\u8bad\u7ec3\u6a21\u578b"},{"location":"ESP32/Facenet%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/#3","text":"\u6587\u4ef6 src/align/align_dataset_mtcnn.py \u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5bf9\u9f50\u56fe\u7247\u4e2d\u9762\u90e8\u7684\u5b9e\u4f8b\u3002\u4e3b\u8981\u8fc7\u7a0b\u662f\uff1a \u8bfb\u53d6\u6307\u5b9a\u76ee\u5f55\u4e2d\u7684\u56fe\u7247 \u8fdb\u884c\u9762\u90e8\u68c0\u6d4b \u7136\u540e\u5bf9\u9f50\u88c1\u526a\u9762\u90e8 \u53e6\u5b58\u5230\u6307\u5b9a\u76ee\u5f55 \u8fd9\u6bb5\u4ee3\u7801\uff1a from __future__ import absolute_import from __future__ import division from __future__ import print_function from scipy import misc import sys import os import argparse import tensorflow as tf import numpy as np import facenet import align.detect_face import random from time import sleep output_dir = 'ad/' input_dir = 'presidents/' gpu_memory_fraction = 0.25 #\u6bcf\u4e2a\u4f1a\u8bdd\u5141\u8bb8\u4f7f\u7528\u6700\u592725\uff05\u7684GPU\u603b\u5185\u5b58 margin = 32 image_size = 160 random_order = False detect_multiple_faces = True if not os . path . exists ( output_dir ): os . makedirs ( output_dir ) # Store some git revision info in a text file in the log directory src_path , _ = os . path . split ( os . path . realpath ( __file__ )) facenet . store_revision_info ( src_path , output_dir , ' ' . join ( sys . argv )) dataset = facenet . get_dataset ( input_dir ) print ( 'Creating networks and loading parameters' ) with tf . Graph () . as_default (): gpu_options = tf . GPUOptions ( per_process_gpu_memory_fraction = gpu_memory_fraction ) sess = tf . Session ( config = tf . ConfigProto ( gpu_options = gpu_options , log_device_placement = False )) with sess . as_default (): pnet , rnet , onet = align . detect_face . create_mtcnn ( sess , None ) minsize = 80 # minimum size of face threshold = [ 0.6 , 0.8 , 0.95 ] # three steps's threshold factor = 0.709 # scale factor # Add a random key to the filename to allow alignment using multiple processes random_key = np . random . randint ( 0 , high = 99999 ) bounding_boxes_filename = os . path . join ( output_dir , 'bounding_boxes_ %05d .txt' % random_key ) with open ( bounding_boxes_filename , \"w\" ) as text_file : nrof_images_total = 0 nrof_successfully_aligned = 0 if random_order : random . shuffle ( dataset ) for cls in dataset : output_class_dir = os . path . join ( output_dir , cls . name ) if not os . path . exists ( output_class_dir ): os . makedirs ( output_class_dir ) if random_order : random . shuffle ( cls . image_paths ) for image_path in cls . image_paths : nrof_images_total += 1 filename = os . path . splitext ( os . path . split ( image_path )[ 1 ])[ 0 ] output_filename = os . path . join ( output_class_dir , filename + '.png' ) print ( image_path ) if not os . path . exists ( output_filename ): try : img = misc . imread ( image_path ) except ( IOError , ValueError , IndexError ) as e : errorMessage = ' {} : {} ' . format ( image_path , e ) print ( errorMessage ) else : if img . ndim < 2 : print ( 'Unable to align \" %s \"' % image_path ) text_file . write ( ' %s \\n ' % ( output_filename )) continue if img . ndim == 2 : img = facenet . to_rgb ( img ) img = img [:,:, 0 : 3 ] bounding_boxes , _ = align . detect_face . detect_face ( img , minsize , pnet , rnet , onet , threshold , factor ) nrof_faces = bounding_boxes . shape [ 0 ] if nrof_faces > 0 : det = bounding_boxes [:, 0 : 4 ] det_arr = [] img_size = np . asarray ( img . shape )[ 0 : 2 ] if nrof_faces > 1 : if detect_multiple_faces : for i in range ( nrof_faces ): det_arr . append ( np . squeeze ( det [ i ])) else : bounding_box_size = ( det [:, 2 ] - det [:, 0 ]) * ( det [:, 3 ] - det [:, 1 ]) img_center = img_size / 2 offsets = np . vstack ([ ( det [:, 0 ] + det [:, 2 ]) / 2 - img_center [ 1 ], ( det [:, 1 ] + det [:, 3 ]) / 2 - img_center [ 0 ] ]) offset_dist_squared = np . sum ( np . power ( offsets , 2.0 ), 0 ) index = np . argmax ( bounding_box_size - offset_dist_squared * 2.0 ) # some extra weight on the centering det_arr . append ( det [ index ,:]) else : det_arr . append ( np . squeeze ( det )) for i , det in enumerate ( det_arr ): det = np . squeeze ( det ) bb = np . zeros ( 4 , dtype = np . int32 ) bb [ 0 ] = np . maximum ( det [ 0 ] - margin / 2 , 0 ) bb [ 1 ] = np . maximum ( det [ 1 ] - margin / 2 , 0 ) bb [ 2 ] = np . minimum ( det [ 2 ] + margin / 2 , img_size [ 1 ]) bb [ 3 ] = np . minimum ( det [ 3 ] + margin / 2 , img_size [ 0 ]) cropped = img [ bb [ 1 ]: bb [ 3 ], bb [ 0 ]: bb [ 2 ],:] scaled = misc . imresize ( cropped , ( image_size , image_size ), interp = 'bilinear' ) nrof_successfully_aligned += 1 filename_base , file_extension = os . path . splitext ( output_filename ) if detect_multiple_faces : output_filename_n = \" {} _ {}{} \" . format ( filename_base , i , file_extension ) else : output_filename_n = \" {}{} \" . format ( filename_base , file_extension ) misc . imsave ( output_filename_n , scaled ) text_file . write ( ' %s %d %d %d %d \\n ' % ( output_filename_n , bb [ 0 ], bb [ 1 ], bb [ 2 ], bb [ 3 ])) else : print ( 'Unable to align \" %s \"' % image_path ) text_file . write ( ' %s \\n ' % ( output_filename )) print ( 'Total number of images: %d ' % nrof_images_total ) print ( 'Number of successfully aligned images: %d ' % nrof_successfully_aligned )","title":"3. \u5bf9\u9f50\u56fe\u7247"},{"location":"ESP32/Facenet%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/#4","text":"facenet\u53ef\u4ee5\u76f4\u63a5\u6bd4\u5bf9\u4e24\u4e2a\u4eba\u8138\u7ecf\u8fc7\u5b83\u7684\u7f51\u7edc\u6620\u5c04\u4e4b\u540e\u7684\u6b27\u6c0f\u8ddd\u79bb\uff0c\u8fd0\u884c\u7a0b\u5e8f\u4e3afacenet-master\\src\\compare.py\u3002 CMD\u4e0b\u8fd0\u884c\uff1a python compare.py models\\20170511-185253 1.jpg 2.jpg","title":"4. \u4eba\u8138\u6bd4\u5bf9\u4f8b\u5b50"},{"location":"ESP32/Gat%20Data%20from%20Picture%20Curve/","text":"Usually, fan supplier provided the PQ curve of fans, but they don't provide the data point values. It will be not convenient for us to setting the fan curve on simulation program, such as Icepak or Flotherm. Here introduce an online tool that can can help us get extract numerical data from images. The link is https://automeris.io/WebPlotDigitizer/ WebPlotDigitizer is a web based program to extract numerical data from plots and images. The usage is very simple File - load image to open the pictures. Define the Axes by click two points on X and Y, and then it will ask you to input the X and Y value of these four points you click just now. Then you can extract the values by manual module or automatic module. It's very simple to use, just try it. jQuery Calx https://github.com/xsanisty/jquery-calx http://www.highcharts.com/","title":"Get Data from Picture Curve"},{"location":"ESP32/How%20to%20Add%20High%20Quality%20Matlab%20Graphics%20in%20Latex/","text":"Many user may would like to include high quality Matlab graphics in their Latex articles or books. Here I will share some tips how to do it. From easy to difficult, I will introduce three methods: Export an .eps file from Maltab, and include it in Latex article. Export an .eps file from Maltab, edit this file with Adobe Illustrator, then use it in Latex. Produce a TikZ code from the Matlab figure, and then include the TikZ code in Latex. Now I will detail introduce each method, at last will talk about each method advantage and disadvantage. 1.Export .eps file This is the most easy way, just need save the figure in Matlab as an .eps file, and then include the .eps file in Latex. Or with Matlab command: saveas ( gcf , 'Plot1.eps' , 'psc2' ) Or it can use below command to print the figure to .eps file: set ( gcf , 'PaperPositionMode' , 'auto' ); print - depsc2 Plot1 . eps Then you can include the .eps file in Latex, for example: \\documentclass { article } \\usepackage { graphicx } \\begin { document } \\begin { figure } [h] \\centerline { \\includegraphics [width=8cm] { Plot1.eps }} \\caption { This is Plot1 } \\end { figure } \\end { document } Although this method is very easy, but the texts or vibration characters font on the figure may not same as Latex. And the text size will depend on the export file size, and the figure size setting in Latex. It may be very hard to control the characters size on figures comply with the article text size. 2. Edit .eps file in AI As said above, the text on Matlab figure maybe not the same style as the text in Latex, and it hard to choose a suitable size for the final figure. But we can edit the .eps file with Adobe Illustrator before use it. Here I will introduce some tips about it. First, open the .eps file, and set the document size same as your document size in Latex. For example, if I will product a A4 paper article, then I set the size as A4. Scale the figure in AI, the size is what you wanted it would be in A4 paper. Set the text size as it real size. For example, the article text size is 12pt, while I want the text on figure is a little smaller than it, set it 10.5pt. Also you can edit the line style, color, weight, etc in AI. It\u2019s very easy to edit any element in AI. By this way we can control the figure size and text size very well. 3. Export Matlab figure as TikZ code You will find edit .eps file in AI will be very powerful to edit the figure, but if there are lots of pictures, it will need a lot of time. And AI is a commercial program. There is another way to produce a high quality pictures, by using TikZ. If you are familiar with Latex, you should know TikZ . We can insert TikZ code in Latex document directly, and it will produce the pictures we need. But it need spend sometime to learn TikZ. More info and examples can be found here . Here is a solution, that can export Matlab figure as TikZ code with matlab2tikz , download it here . matlab2tikz supports the conversion of most MATLAB figures, including 2D and 3D plots. For plots constructed with third- party packages, your mileage may vary. The workflow is as follows: Place the matlab2tikz scripts (contents of src/ folder) in a directory where MATLAB can find it (the current directory, for example). Generate your plot in MATLAB. Invoke matlab2tikz by >> matlab2tikz (); or >> matlab2tikz ( 'myfile.tex' ); The script accepts numerous options; check them out by invoking the help, >> help matlab2tikz Sometimes, MATLAB makes it hard to create matching LaTeX plots by keeping invisible objects around or stretches the plots too far beyond the bounding box. Use >> cleanfigure ; >> matlab2tikz ( 'myfile.tex' ); to first clean the figure of unwanted entities, and then convert it to TeX. Add the contents of myfile.tex into your LaTeX source code; a convenient way of doing so is to use \\input{/path/to/myfile.tex} . Also make sure that at the header of your document the Pgfplots package is included: \\documentclass { article } \\usepackage { pgfplots } % and optionally (as of Pgfplots 1.3): \\pgfplotsset { compat=newest } \\pgfplotsset { plot coordinates/math parser=false } \\newlength\\figureheight \\newlength\\figurewidth \\begin { document } \\input { myfile.tex } \\end { document } Amazing, right? If you experience bugs, have nice examples of what matlab2tikz can do, or if you are just looking for more information, please visit the web page of matlab2tikz https://github.com/nschloe/matlab2tikz . In conclude, in this post I introduced 3 methods about how to insert Matlab figure into Latex. Save as .eps file, is most easy and quickly. But if you need very strict requirement for the figure text, size, line style, it will not satisfy you. Edit the .eps file in AI. It\u2019s powerful edit any element in AI. If you just write an article, it will be good enough. But if you have a lot of picture, you must spend a lot of time to edit each picture. Export Matlab figure to TikZ code. Sometimes it will be efficient, and it\u2019s free. But you need spend time to learn TikZ, and sometimes the convert will not work as you wanted.","title":"How to Add High Quality Matlab Graphics in Latex"},{"location":"ESP32/How%20to%20Add%20High%20Quality%20Matlab%20Graphics%20in%20Latex/#1export-eps-file","text":"This is the most easy way, just need save the figure in Matlab as an .eps file, and then include the .eps file in Latex. Or with Matlab command: saveas ( gcf , 'Plot1.eps' , 'psc2' ) Or it can use below command to print the figure to .eps file: set ( gcf , 'PaperPositionMode' , 'auto' ); print - depsc2 Plot1 . eps Then you can include the .eps file in Latex, for example: \\documentclass { article } \\usepackage { graphicx } \\begin { document } \\begin { figure } [h] \\centerline { \\includegraphics [width=8cm] { Plot1.eps }} \\caption { This is Plot1 } \\end { figure } \\end { document } Although this method is very easy, but the texts or vibration characters font on the figure may not same as Latex. And the text size will depend on the export file size, and the figure size setting in Latex. It may be very hard to control the characters size on figures comply with the article text size.","title":"1.Export .eps file"},{"location":"ESP32/How%20to%20Add%20High%20Quality%20Matlab%20Graphics%20in%20Latex/#2-edit-eps-file-in-ai","text":"As said above, the text on Matlab figure maybe not the same style as the text in Latex, and it hard to choose a suitable size for the final figure. But we can edit the .eps file with Adobe Illustrator before use it. Here I will introduce some tips about it. First, open the .eps file, and set the document size same as your document size in Latex. For example, if I will product a A4 paper article, then I set the size as A4. Scale the figure in AI, the size is what you wanted it would be in A4 paper. Set the text size as it real size. For example, the article text size is 12pt, while I want the text on figure is a little smaller than it, set it 10.5pt. Also you can edit the line style, color, weight, etc in AI. It\u2019s very easy to edit any element in AI. By this way we can control the figure size and text size very well.","title":"2. Edit .eps file in AI"},{"location":"ESP32/How%20to%20Add%20High%20Quality%20Matlab%20Graphics%20in%20Latex/#3-export-matlab-figure-as-tikz-code","text":"You will find edit .eps file in AI will be very powerful to edit the figure, but if there are lots of pictures, it will need a lot of time. And AI is a commercial program. There is another way to produce a high quality pictures, by using TikZ. If you are familiar with Latex, you should know TikZ . We can insert TikZ code in Latex document directly, and it will produce the pictures we need. But it need spend sometime to learn TikZ. More info and examples can be found here . Here is a solution, that can export Matlab figure as TikZ code with matlab2tikz , download it here . matlab2tikz supports the conversion of most MATLAB figures, including 2D and 3D plots. For plots constructed with third- party packages, your mileage may vary. The workflow is as follows: Place the matlab2tikz scripts (contents of src/ folder) in a directory where MATLAB can find it (the current directory, for example). Generate your plot in MATLAB. Invoke matlab2tikz by >> matlab2tikz (); or >> matlab2tikz ( 'myfile.tex' ); The script accepts numerous options; check them out by invoking the help, >> help matlab2tikz Sometimes, MATLAB makes it hard to create matching LaTeX plots by keeping invisible objects around or stretches the plots too far beyond the bounding box. Use >> cleanfigure ; >> matlab2tikz ( 'myfile.tex' ); to first clean the figure of unwanted entities, and then convert it to TeX. Add the contents of myfile.tex into your LaTeX source code; a convenient way of doing so is to use \\input{/path/to/myfile.tex} . Also make sure that at the header of your document the Pgfplots package is included: \\documentclass { article } \\usepackage { pgfplots } % and optionally (as of Pgfplots 1.3): \\pgfplotsset { compat=newest } \\pgfplotsset { plot coordinates/math parser=false } \\newlength\\figureheight \\newlength\\figurewidth \\begin { document } \\input { myfile.tex } \\end { document } Amazing, right? If you experience bugs, have nice examples of what matlab2tikz can do, or if you are just looking for more information, please visit the web page of matlab2tikz https://github.com/nschloe/matlab2tikz . In conclude, in this post I introduced 3 methods about how to insert Matlab figure into Latex. Save as .eps file, is most easy and quickly. But if you need very strict requirement for the figure text, size, line style, it will not satisfy you. Edit the .eps file in AI. It\u2019s powerful edit any element in AI. If you just write an article, it will be good enough. But if you have a lot of picture, you must spend a lot of time to edit each picture. Export Matlab figure to TikZ code. Sometimes it will be efficient, and it\u2019s free. But you need spend time to learn TikZ, and sometimes the convert will not work as you wanted.","title":"3. Export Matlab figure as TikZ code"},{"location":"ESP32/Hugo%20on%20VPS%20with%20Git/","text":"\u521b\u5efa\u4e00\u4e2a Git \u9879\u76ee\u3002 su git cd ~ mkdir hugo.git cd hugo.git git init --bare ssh -T git@mekesim.com:hugo.git web\u76ee\u5f55 /var/www/html/mekesim.com/ cd hugo wget https://github.com/gohugoio/hugo/releases/download/v0.30.1/hugo_0.30.1_Linux-64bit.tar.gz tar -zxvf hugo_0.30.1_Linux-64bit.tar.gz sudo mv hugo /usr/local/bin/hugo git clone /home/git/hugo.git chown -R git.git hugo cd hugo su git hugo --theme=hugo_theme_robust hugo new site hugo chown -R git.git hugo su git cd hugo git init git remote add /home/git/hugo.git \u521b\u5efa hook \u4efb\u52a1\u8ba9\u5b83\u628a\u63d0\u4ea4\u4e0a\u6765\u7684\u6587\u4ef6\u590d\u5236\u5230 Web \u76ee\u5f55\u4e0b\u3002 /home/git/hugo.git/hooks/post-receive \u5c06\u5982\u4e0b\u811a\u672c\u590d\u5236\u8fdb\u53bb\uff1a ! /bin/bash -l GIT_REPO=/home/git/hugo.git # Git \u9879\u76ee\u8def\u5f84 PUBLIC_WWW=/var/www/html/mekesim.com/hugo # Web \u76ee\u5f55 cd $PUBLIC_WWW git pull $GIT_REPO # \u5c06\u63d0\u4ea4\u4e0a\u6765\u7684\u6587\u4ef6 pull \u5230web\u8def\u5f84 git@git.mekesim.com:hugo.git mklink /d \"D:\\hugo\\content\\\" \"C:\\Users\\q19439\\Google Drive\\Mekesim\\hugo_content\\\" chown -R git.git hugo git fetch --all git reset --hard origin/master git pull","title":"Hugo on VPS with Git"},{"location":"ESP32/Hugo%20on%20VPS%20with%20Git/#binbash-l","text":"GIT_REPO=/home/git/hugo.git # Git \u9879\u76ee\u8def\u5f84 PUBLIC_WWW=/var/www/html/mekesim.com/hugo # Web \u76ee\u5f55 cd $PUBLIC_WWW git pull $GIT_REPO # \u5c06\u63d0\u4ea4\u4e0a\u6765\u7684\u6587\u4ef6 pull \u5230web\u8def\u5f84 git@git.mekesim.com:hugo.git mklink /d \"D:\\hugo\\content\\\" \"C:\\Users\\q19439\\Google Drive\\Mekesim\\hugo_content\\\" chown -R git.git hugo git fetch --all git reset --hard origin/master git pull","title":"! /bin/bash -l"},{"location":"ESP32/Inlation%20Mesh/","text":"\u5728\u5c40\u90e8\u7f51\u683c\u4e0a\u8bbe\u7f6e\u901a\u80c0\u6709\u4ec0\u4e48\u597d\u5904\uff1f \u8bbe\u7f6e\u672c\u5730\u5316\u7f51\u683c\u7684Inflation\u6709\u4ee5\u4e0b\u4e24\u4e2a\u597d\u5904\uff1a \u9650\u5236\u672c\u5730\u5316\u7f51\u683c\u5173\u952e\u70b9\u7684\u6ea2\u51fa \u5f97\u5230\u66f4\u7cbe\u786e\u7684\u6c42\u89e3\u7ed3\u679c \u9650\u5236\u672c\u5730\u5316\u7f51\u683c\u6ea2\u51fa \u5f53\u5bf9\u8c61/\u51e0\u4f55\u4f53\u4e0e\u672c\u5730\u5316\u7f51\u683c\u8fb9\u754c\u91cd\u5408\u65f6\uff0c\u4e0e\u5176\u5173\u8054\u7684\u5173\u952e\u70b9\u7f51\u683c\u4f1a\u8d85\u51fa\u672c\u5730\u5316\u7f51\u683c\u533a\u57df\u3002 \u5982\u679c\u8bbe\u7f6e\u81a8\u80c0\uff08Inflation\uff09\uff0c\u4f1a\u589e\u52a0\u6b64\u5c40\u90e8\u533a\u57df\u7684\u5927\u5c0f\uff08\u9632\u6b62\u51e0\u4f55\u4f53\u63a5\u89e6\u5c40\u90e8\u8fb9\u754c\uff09\uff0c\u4ece\u800c\u9632\u6b62\u5c40\u90e8\u7f51\u683c\u6ea2\u51fa\u3002 \u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u56fe1\u5f97\u5230\u6700\u597d\u7684\u8bf4\u660e\u3002 \u5de6\u56fe\u65e0\u672c\u5730\u5316\u7f51\u683c \u4e2d\u95f4\u8bbe\u7f6e\u672c\u5730\u5316\u7f51\u683c\uff0c\u53ef\u4ee5\u770b\u5230\u6563\u70ed\u7247\u7684\u5173\u952e\u70b9\u7f51\u683c\u4f1a\u8d85\u51fa\u5c40\u90e8\u533a\u57df \u53f3\u8fb9\u8bbe\u7f6e\u672c\u5730\u5316\u7f51\u683c\uff0c\u5e76\u5728\u4e09\u4e2a\u65b9\u5411\u4e0a\u8bbe\u7f6e\u4e86\u81a8\u80c0\u3002\u6b64\u65f6\uff0c\u7cbe\u7ec6\u7f51\u683c\u5728\u81a8\u80c0\u7f51\u683c\u7684\u8fb9\u7f18\u5904\u622a\u65ad\u3002 \u56fe1\uff1a\u8bbe\u7f6e\u672c\u5730\u5316\u7f51\u683c\u7684Inflation\u53ef\u9632\u6b62\u5173\u952e\u70b9\u7f51\u683c\u6ea2\u51fa \u63d0\u9ad8\u5c40\u90e8\u6c42\u89e3\u7cbe\u5ea6 \u6709\u65f6\u8bbe\u7f6einflation\u5177\u6709\u6355\u83b7\u95ee\u9898\u7269\u7406\u7684\u9644\u52a0\u4f18\u52bf\u3002\u4f8b\u5982\uff1a \u5728\u6563\u70ed\u7247\u7fc5\u7247\u7684\u5165\u53e3\u548c\u51fa\u53e3\u5904\u8bbe\u7f6e\u7cbe\u7ec6\u7f51\u683c\u6709\u52a9\u4e8e\u66f4\u51c6\u786e\u5730\u6355\u83b7\u538b\u529b\u635f\u5931\uff08\u53c2\u89c1\u4e0b\u9762\u7684\u56fe2\uff09 \u5f3a\u70c8\u5efa\u8bae\u5728PCB\u548c\u9ad8\u70ed\u8017\u5143\u4ef6\u4e0a\u4f7f\u7528Inflation\uff0c\u4ee5\u89e3\u51b3\u9760\u8fd1\u5176\u5916\u8868\u9762\u7684\u5bf9\u6d41\u4f20\u70ed\u3002 \u56fe2\uff1aInflation\u6709\u52a9\u4e8e\u6c42\u89e3\u6563\u70ed\u5668\u7684\u8fdb/\u51fa\u538b\u529b\u635f\u5931","title":"\u5728\u5c40\u90e8\u7f51\u683c\u4e0a\u8bbe\u7f6e\u901a\u80c0\u6709\u4ec0\u4e48\u597d\u5904\uff1f"},{"location":"ESP32/Inlation%20Mesh/#_1","text":"\u8bbe\u7f6e\u672c\u5730\u5316\u7f51\u683c\u7684Inflation\u6709\u4ee5\u4e0b\u4e24\u4e2a\u597d\u5904\uff1a \u9650\u5236\u672c\u5730\u5316\u7f51\u683c\u5173\u952e\u70b9\u7684\u6ea2\u51fa \u5f97\u5230\u66f4\u7cbe\u786e\u7684\u6c42\u89e3\u7ed3\u679c","title":"\u5728\u5c40\u90e8\u7f51\u683c\u4e0a\u8bbe\u7f6e\u901a\u80c0\u6709\u4ec0\u4e48\u597d\u5904\uff1f"},{"location":"ESP32/Inlation%20Mesh/#_2","text":"\u5f53\u5bf9\u8c61/\u51e0\u4f55\u4f53\u4e0e\u672c\u5730\u5316\u7f51\u683c\u8fb9\u754c\u91cd\u5408\u65f6\uff0c\u4e0e\u5176\u5173\u8054\u7684\u5173\u952e\u70b9\u7f51\u683c\u4f1a\u8d85\u51fa\u672c\u5730\u5316\u7f51\u683c\u533a\u57df\u3002 \u5982\u679c\u8bbe\u7f6e\u81a8\u80c0\uff08Inflation\uff09\uff0c\u4f1a\u589e\u52a0\u6b64\u5c40\u90e8\u533a\u57df\u7684\u5927\u5c0f\uff08\u9632\u6b62\u51e0\u4f55\u4f53\u63a5\u89e6\u5c40\u90e8\u8fb9\u754c\uff09\uff0c\u4ece\u800c\u9632\u6b62\u5c40\u90e8\u7f51\u683c\u6ea2\u51fa\u3002 \u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u56fe1\u5f97\u5230\u6700\u597d\u7684\u8bf4\u660e\u3002 \u5de6\u56fe\u65e0\u672c\u5730\u5316\u7f51\u683c \u4e2d\u95f4\u8bbe\u7f6e\u672c\u5730\u5316\u7f51\u683c\uff0c\u53ef\u4ee5\u770b\u5230\u6563\u70ed\u7247\u7684\u5173\u952e\u70b9\u7f51\u683c\u4f1a\u8d85\u51fa\u5c40\u90e8\u533a\u57df \u53f3\u8fb9\u8bbe\u7f6e\u672c\u5730\u5316\u7f51\u683c\uff0c\u5e76\u5728\u4e09\u4e2a\u65b9\u5411\u4e0a\u8bbe\u7f6e\u4e86\u81a8\u80c0\u3002\u6b64\u65f6\uff0c\u7cbe\u7ec6\u7f51\u683c\u5728\u81a8\u80c0\u7f51\u683c\u7684\u8fb9\u7f18\u5904\u622a\u65ad\u3002 \u56fe1\uff1a\u8bbe\u7f6e\u672c\u5730\u5316\u7f51\u683c\u7684Inflation\u53ef\u9632\u6b62\u5173\u952e\u70b9\u7f51\u683c\u6ea2\u51fa","title":"\u9650\u5236\u672c\u5730\u5316\u7f51\u683c\u6ea2\u51fa"},{"location":"ESP32/Inlation%20Mesh/#_3","text":"\u6709\u65f6\u8bbe\u7f6einflation\u5177\u6709\u6355\u83b7\u95ee\u9898\u7269\u7406\u7684\u9644\u52a0\u4f18\u52bf\u3002\u4f8b\u5982\uff1a \u5728\u6563\u70ed\u7247\u7fc5\u7247\u7684\u5165\u53e3\u548c\u51fa\u53e3\u5904\u8bbe\u7f6e\u7cbe\u7ec6\u7f51\u683c\u6709\u52a9\u4e8e\u66f4\u51c6\u786e\u5730\u6355\u83b7\u538b\u529b\u635f\u5931\uff08\u53c2\u89c1\u4e0b\u9762\u7684\u56fe2\uff09 \u5f3a\u70c8\u5efa\u8bae\u5728PCB\u548c\u9ad8\u70ed\u8017\u5143\u4ef6\u4e0a\u4f7f\u7528Inflation\uff0c\u4ee5\u89e3\u51b3\u9760\u8fd1\u5176\u5916\u8868\u9762\u7684\u5bf9\u6d41\u4f20\u70ed\u3002 \u56fe2\uff1aInflation\u6709\u52a9\u4e8e\u6c42\u89e3\u6563\u70ed\u5668\u7684\u8fdb/\u51fa\u538b\u529b\u635f\u5931","title":"\u63d0\u9ad8\u5c40\u90e8\u6c42\u89e3\u7cbe\u5ea6"},{"location":"ESP32/Insert%20Matlab%20Figure%20into%20Latex/","text":"Many user may would like to include high quality Matlab graphics in their Latex articles or books. Here I will share some tips how to do it. From easy to difficult, I will introduce three methods: 1. Export an .eps file from Maltab, and include it in Latex article. 2. Export an .eps file from Maltab, edit this file with Adobe Illustrator, then use it in Latex. 3. Produce a TikZ code from the Matlab figure, and then include the TikZ code in Latex. Now I will detail introduce each method, at last will talk about each method advantage and disadvantage. 1.Export .eps file This is the most easy way, just need save the figure in Matlab as an .eps file, and then include the .eps file in Latex. Or with Matlab command: saveas(gcf,'Plot1.eps', 'psc2') Or it can use below command to print the figure to .eps file: set(gcf, 'PaperPositionMode', 'auto'); print -depsc2 Plot1.eps Then you can include the .eps file in Latex, for example: \\documentclass { article } \\usepackage { graphicx } \\begin { document } \\begin { figure } [h] \\centerline { \\includegraphics [width=8cm] { Plot1.eps }} \\caption { This is Plot1 } \\end { figure } \\end { document } Although this method is very easy, but the texts or vibration characters font on the figure may not same as Latex. And the text size will depend on the export file size, and the figure size setting in Latex. It maybe very hard to control the characters size on figures comply with the article text size. 2. Edit .eps file in AI As said above, the text on Matlab figure maybe not the same style as the text in Latex, and it hard to choose a suitable size for the final figure. But we can edit the .eps file with Adobe Illustrator before use it. Here I will introduce some tips about it. First, open the .eps file, and set the document size same as your document size in Latex. For example, if I will product a A4 paper article, then I set the size as A4. Scale the figure in AI, the size is what you wanted it would be in A4 paper. Set the text size as it real size. For example, the article text size is 12pt, while I want the text on figure is a little smaller than it, set it 10.5pt. Also you can edit the line style, color, weight, ect in AI. It\u2019s very easy to edit any element in AI. After the picture is good, select all elements, then on the tool bar you will see the width and height of whole, please ref to below picture. Then save the .eps file. Now, you can use this value to set the figure size in latex. By this way we can control the figure size and text size very well. 3. Export Matlab figure as TikZ code You will find edit .eps file in AI will be very powerful to edit the figure, but if there are lots of pictures, it will need a lot of time. And AI is a commercial program. There is another way to produce a high quality pictures, by using TikZ. If you are familiar with Latex, you should know TikZ . We can insert TikZ code in Latex document directly, and it will produce the pictures we need. But it need spend sometime to learn TikZ. More info and examples can be found here . Here is a solution, that can export Matlab figure as TikZ code with matlab2tikz , download it here . matlab2tikz supports the conversion of most MATLAB figures, including 2D and 3D plots. For plots constructed with third- party packages, your mileage may vary. The workflow is as follows: Place the matlab2tikz scripts (contents of src/ folder) in a directory where MATLAB can find it (the current directory, for example). Generate your plot in MATLAB. Invoke matlab2tikz by >> matlab2tikz(); or >> matlab2tikz('Plot1.tex'); Add the contents of Plot1.tex into your LaTeX source code; a convenient way of doing so is to use \\input{/path/to/Plot1.tex} . Also make sure that at the header of your document the Pgfplots package is included: \\documentclass { article } \\usepackage { pgfplots } % and optionally (as of Pgfplots 1.3): \\pgfplotsset { compat=newest } \\pgfplotsset { plot coordinates/math parser=false } \\newlength\\figureheight \\newlength\\figurewidth \\begin { document } \\input { Plot1.tex } \\end{document} Amazing, right? If you experience bugs, have nice examples of what matlab2tikz can do, or if you are just looking for more information, please visit the web page of matlab2tikz https://github.com/nschloe/matlab2tikz . In conclude, in this post I introduced 3 methods about how to insert Matlab figure into Latex. Save as .eps file, is most easy and quickly. But if you need very strict requirement for the figure text, size, line style, it will not satisfy you. Edit the .eps file in AI. It\u2019s powerful edit any element in AI. If you just write an article, it will be good enough. But if you have a lot of picture, you must spend a lot of time to edit each picture. Export Matlab figure to TikZ code. Sometimes it will be efficient, and it\u2019s free. But you need spend time to learn TikZ, and sometimes the convert will not work as you wanted.","title":"Insert Matlab Figure into Latex"},{"location":"ESP32/Insert%20Matlab%20Figure%20into%20Latex/#1export-eps-file","text":"This is the most easy way, just need save the figure in Matlab as an .eps file, and then include the .eps file in Latex. Or with Matlab command: saveas(gcf,'Plot1.eps', 'psc2') Or it can use below command to print the figure to .eps file: set(gcf, 'PaperPositionMode', 'auto'); print -depsc2 Plot1.eps Then you can include the .eps file in Latex, for example: \\documentclass { article } \\usepackage { graphicx } \\begin { document } \\begin { figure } [h] \\centerline { \\includegraphics [width=8cm] { Plot1.eps }} \\caption { This is Plot1 } \\end { figure } \\end { document } Although this method is very easy, but the texts or vibration characters font on the figure may not same as Latex. And the text size will depend on the export file size, and the figure size setting in Latex. It maybe very hard to control the characters size on figures comply with the article text size.","title":"1.Export .eps file"},{"location":"ESP32/Insert%20Matlab%20Figure%20into%20Latex/#2-edit-eps-file-in-ai","text":"As said above, the text on Matlab figure maybe not the same style as the text in Latex, and it hard to choose a suitable size for the final figure. But we can edit the .eps file with Adobe Illustrator before use it. Here I will introduce some tips about it. First, open the .eps file, and set the document size same as your document size in Latex. For example, if I will product a A4 paper article, then I set the size as A4. Scale the figure in AI, the size is what you wanted it would be in A4 paper. Set the text size as it real size. For example, the article text size is 12pt, while I want the text on figure is a little smaller than it, set it 10.5pt. Also you can edit the line style, color, weight, ect in AI. It\u2019s very easy to edit any element in AI. After the picture is good, select all elements, then on the tool bar you will see the width and height of whole, please ref to below picture. Then save the .eps file. Now, you can use this value to set the figure size in latex. By this way we can control the figure size and text size very well.","title":"2. Edit .eps file in AI"},{"location":"ESP32/Insert%20Matlab%20Figure%20into%20Latex/#3-export-matlab-figure-as-tikz-code","text":"You will find edit .eps file in AI will be very powerful to edit the figure, but if there are lots of pictures, it will need a lot of time. And AI is a commercial program. There is another way to produce a high quality pictures, by using TikZ. If you are familiar with Latex, you should know TikZ . We can insert TikZ code in Latex document directly, and it will produce the pictures we need. But it need spend sometime to learn TikZ. More info and examples can be found here . Here is a solution, that can export Matlab figure as TikZ code with matlab2tikz , download it here . matlab2tikz supports the conversion of most MATLAB figures, including 2D and 3D plots. For plots constructed with third- party packages, your mileage may vary. The workflow is as follows: Place the matlab2tikz scripts (contents of src/ folder) in a directory where MATLAB can find it (the current directory, for example). Generate your plot in MATLAB. Invoke matlab2tikz by >> matlab2tikz(); or >> matlab2tikz('Plot1.tex'); Add the contents of Plot1.tex into your LaTeX source code; a convenient way of doing so is to use \\input{/path/to/Plot1.tex} . Also make sure that at the header of your document the Pgfplots package is included: \\documentclass { article } \\usepackage { pgfplots } % and optionally (as of Pgfplots 1.3): \\pgfplotsset { compat=newest } \\pgfplotsset { plot coordinates/math parser=false } \\newlength\\figureheight \\newlength\\figurewidth \\begin { document } \\input { Plot1.tex } \\end{document} Amazing, right? If you experience bugs, have nice examples of what matlab2tikz can do, or if you are just looking for more information, please visit the web page of matlab2tikz https://github.com/nschloe/matlab2tikz . In conclude, in this post I introduced 3 methods about how to insert Matlab figure into Latex. Save as .eps file, is most easy and quickly. But if you need very strict requirement for the figure text, size, line style, it will not satisfy you. Edit the .eps file in AI. It\u2019s powerful edit any element in AI. If you just write an article, it will be good enough. But if you have a lot of picture, you must spend a lot of time to edit each picture. Export Matlab figure to TikZ code. Sometimes it will be efficient, and it\u2019s free. But you need spend time to learn TikZ, and sometimes the convert will not work as you wanted.","title":"3. Export Matlab figure as TikZ code"},{"location":"ESP32/Interesting%20Things/","text":"Interesting DIY Things Heron's fountain Codeply v2 Magic Mirror","title":"Interesting DIY Things"},{"location":"ESP32/Interesting%20Things/#interesting-diy-things","text":"Heron's fountain Codeply v2 Magic Mirror","title":"Interesting DIY Things"},{"location":"ESP32/LED%E6%95%A3%E7%83%AD%E6%8A%80%E6%9C%AF%E6%96%B0%E5%8A%A8%E5%90%91/","text":"\u9ad8\u529f\u7387LED\u53d1\u5149\u6548\u7387\u8fdb\u5c55\u98de\u901f\uff0c\u76f8\u5bf9\u4e5f\u5e26\u6765\u66f4\u4e25\u82db\u7684\u6563\u70ed\u6311\u6218\uff0c\u7531\u4e8e\u4ece\u6676\u7247\u3001\u5c01\u88c5\u3001\u57fa\u677f\u81f3\u7cfb\u7edf\u5404\u5c42\u7ea7\u73af\u73af\u76f8\u6263\uff0c\u56e0\u6b64\u987b\u9010\u4e00\u514b\u670d\u96be\u5173\u624d\u80fd\u771f\u6b63\u7b26\u5408\u5e02\u573a\u7684\u6563\u70ed\u8981\u6c42\uff0c\u5176\u4e2dFR4\u57fa\u677f\u5c06\u70ba\u5927\u52bf\u6240\u8d8b\uff1b\u7cfb\u7edf\u53ef\u900f\u8fc7\u5173\u952e\u5143\u4ef6\u6539\u5584\u6563\u70ed\u96be\u9898\uff0c\u8fdb\u800c\u5b9e\u73b0\u9ad8\u53ef\u9760\u5ea6\u3001\u957f\u5bff\u547d\u7684LED\u706f\u5177\u3002 \u53d1\u5149\u4e8c\u6781\u4f53(LED)\u5177\u5907\u8f7b\u8584\u3001\u7701\u7535\u3001\u73af\u4fdd\u3001\u70b9\u4eae\u53cd\u5e94\u5feb\u3001\u957f\u5bff\u547d\u7b49\u7279\u70b9\uff0c\u52a0\u4e0a\u5728\u6210\u672c\u7eed\u964d\u4e4b\u4e0b\uff0c\u5149\u8f93\u51fa\u4e0e\u529f\u7387\u4ecd\u4e0d\u65ad\u63d0\u5347\uff0c\u4fc3\u4f7fLED\u7167\u660e\u7684\u5e02\u573a\u63a5\u53d7\u5ea6\u4e0e\u65e5\u4ff1\u589e\uff0c\u4ece\u4ea4\u901a\u53f7\u5fd7\u6307\u793a\u706f\u81f3\u5927\u5c3a\u5bf8\u80cc\u5149\u6e90\uff0c\u8fdb\u5c55\u5230\u5404\u79cd\u7167\u660e\u7528\u9014\u5982\u8f66\u5934\u706f\u3001\u5ba4\u5185\u5916\u7167\u660e\u706f\u5177\u7b49\u3002\u73b0\u9636\u6bb5LED\u53d1\u5149\u6548\u7387\u5df2\u7a81\u7834\u6bcf\u74e6100\u6d41\u660e\uff0c\u8db3\u4ee5\u53d6\u4ee3\u8017\u7535\u7684\u767d\u70bd\u706f\u3001\u5364\u7d20\u706f\uff0c\u751a\u81f3\u662f\u8424\u5149\u706f\u4e0e\u9ad8\u538b\u6c14\u4f53\u653e\u7535\u706f\u3002 \u4f34\u968f\u7740\u9ad8\u529f\u7387LED\u6280\u672f\u8fed\u6709\u8fdb\u5c55\uff0cLED\u5c3a\u5bf8\u9010\u6e10\u7f29\u5c0f\uff0c\u70ed\u91cf\u96c6\u4e2d\u5728\u5c0f\u5c3a\u5bf8\u6676\u7247\u5185\uff0c\u4e14\u70ed\u5bc6\u5ea6\u66f4\u9ad8\uff0c\u81f4\u4f7fLED\u9762\u4e34\u65e5\u76ca\u4e25\u82db\u7684\u70ed\u7ba1\u7406\u8003\u9a8c\u3002\u70ba\u964d\u4f4eLED\u70ed\u963b\uff0c\u5176\u6563\u70ed\u5fc5\u987b\u7531\u6676\u7247\u5c42\u7ea7(Chip Level)\u3001\u5c01\u88c5\u5c42\u7ea7(Package Level)\u3001\u6563\u70ed\u57fa\u677f\u5c42\u7ea7(Board Level)\u5230\u7cfb\u7edf\u5c42\u7ea7(System Level)\uff0c\u9488\u5bf9\u6bcf\u4e00\u4e2a\u73af\u8282\u8fdb\u884c\u6700\u4f73\u5316\u7684\u6563\u70ed\u8bbe\u8ba1\uff0c\u4ee5\u83b7\u5f97\u6700\u4f73\u7684\u6563\u70ed(\u56fe1)\u3002 \u56fe1 LED\u6563\u70ed\u7b56\u7565 \u56fe2 \u9ad8\u529f\u7387LED\u5256\u9762\u56fe \u4ece\u56fe2\u4e2d\uff0c\u53ef\u4ee5\u4e86\u89e3\u6574\u4e2a\u9ad8\u529f\u7387LED\u5143\u4ef6\u6e29\u5ea6\u5b9a\u4e49\uff0c\u5e76\u5229\u7528\u516c\u5f0f1\u8ba1\u7b97LED\u603b\u70ed\u963b\u503c\u3002\u5176\u4e2dRj-a\u70ba\u6676\u7247\u4e0e\u7a7a\u6c14\u4e4b\u95f4\u7684\u70ed\u963b\u503c(K/W)\uff0c\u6b64\u90e8\u5206\u7684\u70ed\u963b\u7531\u6676\u7247\u548c\u5c01\u88c5\u9020\u6210\uff0c\u5c5e\u4e8e\u78ca\u6676\u5382\u53ca\u5c01\u88c5\u5382\u5546\u8d1f\u8d23\u8303\u7574\u3002Rsp-h\u70ba\u6563\u70ed\u57fa\u677f\u4e0e\u6563\u70ed\u9c2d\u7247\u4e4b\u95f4\u7684\u70ed\u963b\u503c(K/W)\uff1bRh-a\u70ba\u6563\u70ed\u9c2d\u7247\u4e0e\u7a7a\u6c14\u7aef\u7684\u70ed\u963b\u503c(K/W)\uff0cRsp-h\u53caRh-a\u70ba\u706f\u5177\u7cfb\u7edf\u5546\u6240\u8d1f\u8d23\u7684\u533a\u57df\uff0c\u4ee5\u4e0b\u5c06\u9488\u5bf9\u5404\u5173\u952e\u5143\u4ef6\u8fdb\u884c\u6563\u70ed\u7b56\u7565\u63a2\u8ba8\u3002 \u85c9\u5c3a\u5bf8/\u6750\u6599\u6539\u5584\u6676\u7247\u6563\u70ed LED\u6676\u7247\u53d1\u5149\u540c\u65f6\u4ea6\u4f1a\u7522\u751f\u70ed\u80fd(\u5149\u7535\u8f6c\u6362\u6548\u7387\u7ea6\u70ba25\uff5e35%)\uff0c\u9020\u6210\u6676\u7247\u6e29\u5ea6(Tj)\u63d0\u9ad8\uff0c\u7136LED\u6240\u7522\u751f\u7684\u70ed\u80fd\u662f\u900f\u8fc7\u4e0b\u65b9\u7684\u4f20\u70ed\u5e95\u5ea7\u4f20\u5bfc(Tsp)\uff0c\u56e0\u6b64\u5f53LED\u70b9\u4eae\u65f6\uff0c\u82e5\u65e0\u6cd5\u5feb\u901f\u4e0e\u6709\u6548\u7684\u5c06\u70ed\u91cf\u5e26\u8d70\uff0c\u5c06\u4f1a\u9020\u6210\u4eae\u5ea6\u964d\u4f4e\u3001\u5bff\u547d\u53d8\u77ed\u53ca\u6ce2\u957f\u98d8\u79fb\uff0c\u751a\u81f3\u9020\u6210LED\u635f\u574f\uff0c\u56fe3\u70ba\u79d1\u745e(Cree)EZ1000\u7684\u6676\u7247\u793a\u610f\u56fe\u3002 \u8d44\u6599\u6765\u6e90\uff1aCree \u56fe3 Cree-EZ1000\u7684\u6676\u7247\u793a\u610f\u56fe \u6676\u7247\u7684\u6563\u70ed\u7b56\u7565\u53ef\u5927\u81f4\u5f52\u7eb3\u70ba\u589e\u52a0\u6676\u7247\u5c3a\u5bf8\u548c\u6539\u53d8\u6750\u6599\u7ed3\u6784\u4e24\u79cd\uff0c\u6676\u7247\u7684\u70ed\u963b\u8ba1\u7b97\u70baRchip=Lchip/(Kchip\u00d7Achip)\uff0c\u5176\u4e2dLchip\u70ba\u70ed\u4f20\u8def\u5f84\u7684\u957f\u5ea6(\u84dd\u5b9d\u77f3\u57fa\u677f\u539a\u5ea6\u70ba100\u5fae\u7c73)\uff1bKchip\u70ba\u603b\u70ed\u5bfc\u4fc2\u6570(\u84dd\u5b9d\u77f3\u7ea6\u70ba35\uff5e40W/mK)\uff1bAchip\u70ba\u70ed\u4f20\u8def\u5f84\u7684\u622a\u9762\u79ef(40mil=1mm2)\u3002\u6839\u636e\u4e0a\u5f0f\uff0c\u82e5\u5c06\u84dd\u5b9d\u77f3\u57fa\u677f\u539a\u5ea6\u7531100\u5fae\u7c73\u7f29\u77ed\u81f380\u5fae\u7c73\uff0c\u6676\u7247\u70ed\u963b\u53ef\u964d\u4f4e20%\uff0c\u4f46\u4e0d\u80fd\u65e0\u9650\u5236\u7684\u7f29\u77ed\u9020\u6210\u6676\u5706\u7247\u7834\u7247\u3002\u53e6\u5916\uff0c\u82e5\u5c06Kchip\u503c\u63d0\u9ad8\u81f3280W/mK(SiC)\uff0c\u6676\u7247\u70ed\u963b\u53ef\u964d\u4f4e87.5%\u3002\u56e0\u6b64\uff0c\u900f\u8fc7\u6539\u53d8\u6750\u6599\u7ed3\u6784\u662f\u76ee\u524d\u8f83\u6709\u6548\u964d\u4f4e\u6676\u7247\u70ed\u963b\u7684\u65b9\u5f0f\u3002 FR4\u6563\u70ed\u57fa\u677f\u6210\u4e3b\u6d41 \u4e00\u822c\u5bf9\u4e8e\u5e38\u89c1LED\u7684\u6563\u70ed\u57fa\u677f\uff0c\u5927\u81f4\u53ef\u533a\u5206\u70ba\u4f20\u7edf\u5370\u5237\u7535\u8def\u677f\u73af\u6c27\u73bb\u7483\u7ea4\u7ef4\u677f(FR4)\u3001\u91d1\u5c5e\u57fa\u5370\u5237\u7535\u8def\u677f(MCPCB)\u3001\u9676\u74f7\u57fa\u677f(AL2O3)\u53ca\u590d\u5408\u57fa\u677f\u56db\u79cd(\u88681)\u3002 \u7531\u4e8e\u4f20\u7edfFR4\u7684\u94dc\u7b94\u5c42\u6563\u70ed\u80fd\u529b\u6709\u9650\uff0c\u5fc5\u987b\u85c9\u7531\u8f83\u539a\u7684\u91d1\u5c5e\u5c42\u964d\u4f4e\u6269\u6563\u70ed\u963b(Spreading Resistance)\u3002\u53e6\u5916\u518d\u85c9\u7531\u4ecb\u7535\u5c42(Dielectrics)\u8bbe\u8ba1\u63d0\u9ad8\u8f74\u5411\u4e0a\u7684\u70ed\u4f20\u901f\u7387\uff0c\u5c06\u70ed\u80fd\u8fc5\u901f\u4f20\u5bfc\u81f3\u6563\u70ed\u9c2d\u7247\u3002\u4ece\u4ef7\u683c\u548c\u91cf\u7522\u89c2\u70b9\u6765\u770b\uff0c\u5370\u5237\u7535\u8def\u677f\u4f18\u4e8e\u5176\u4ed6\u57fa\u677f\uff0c\u4f46\u5176\u70ed\u4f20\u5bfc\u4fc2\u6570\u4f4e(\u70ed\u963b\u503c\u9ad8)\uff0c\u4e0d\u5229\u4e8eLED\u6563\u70ed\uff0c\u9488\u5bf9\u6b64\u7f3a\u70b9\u53ef\u900f\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u8fdb\u884c\u6539\u5584\uff1a \u5408\u4f75\u5bfc\u70ed\u5b54\u964d\u4f4e\u70ed\u963b\u503c \u5728LED\u7684\u4f20\u70ed\u5e95\u5ea7\u53ca\u5468\u8fb9\u8303\u56f4\uff0c\u52a0\u4e0a\u5bfc\u70ed\u5b54\uff0c\u5e76\u5728\u5176\u5468\u56f4\u9540\u4e0a\u4e00\u5c42\u94dc\u7b94\u5c42(35\u5fae\u7c73)\uff0c\u5229\u7528\u94dc\u7684\u9ad8\u5bfc\u70ed\u6027\uff0c\u5c06\u4f20\u70ed\u5e95\u5ea7\u7684\u70ed\u80fd\u5feb\u901f\u4f20\u9012\u81f3\u4e0b\u65b9\u7684\u6563\u70ed\u9c2d\u7247\uff0c\u4ee5\u964d\u4f4eFR4\u6563\u70ed\u57fa\u677f\u70ed\u963b\u503c\u8fbe7K/W(\u56fe4)\u3002 \u8d44\u6599\u6765\u6e90\uff1aPhilips Lumileds \u56fe4 FR4\u5408\u4f75\u5bfc\u70ed\u5b54 \u5408\u4f75\u5bfc\u70ed\u5b54/\u5bfc\u70ed\u6750\u6599\u6709\u52a9\u4e8e\u7f29\u51cf\u6210\u672c \u5229\u7528\u7c7b\u4f3c\u7b2c\u4e00\u79cd\u7684\u88fd\u4f5c\u7a0b\u5e8f\uff0c\u53ea\u662f\u5bfc\u70ed\u5b54\u5185\u52a0\u5165\u9ad8\u5bfc\u70ed\u4fc2\u6570\u7684\u6750\u6599\uff0c\u5e76\u5728\u5bfc\u70ed\u5b54\u7684\u4e0a\u3001\u4e0b\u9762\u4e0e\u5176\u5468\u56f4\u9540\u4e0a\u4e00\u5c42\u94dc\u7b94\u5c42(35\u5fae\u7c73)\uff0c\u85c9\u7531\u5b54\u5185\u7684\u5bfc\u70ed\u6750\u6599\u4e0e\u5b54\u5468\u56f4\u7684\u94dc\u7b94\u5c42\uff0c\u5c06\u4f20\u70ed\u5e95\u5ea7\u7684\u70ed\u80fd\u5feb\u901f\u4f20\u9012\u81f3\u4e0b\u65b9\u7684\u6563\u70ed\u9c2d\u7247\uff0c\u964d\u4f4eFR4\u6563\u70ed\u57fa\u677f\u70ed\u963b\u503c\u81f33K/W(\u56fe5)\u3002\u6563\u70ed\u57fa\u677f\u5b9e\u4f53\u56fe\u5982\u56fe6\u6240\u793a\u3002 \u8d44\u6599\u6765\u6e90\uff1aPhilips Lumileds \u56fe5 FR4\u5408\u4f75\u5bfc\u70ed\u5b54\u53ca\u5bfc\u70ed\u6750\u6599 \u56fe6 FR4\u6563\u70ed\u57fa\u677f\u5b9e\u4f53\u56fe MCPCB\u662f\u6700\u5e38\u89c1\u7684\u9ad8\u529f\u7387LED\u6563\u70ed\u57fa\u677f\uff0c\u4f46\u6b64\u79cd\u57fa\u677f\u6700\u5173\u952e\u6750\u6599\u5728\u4e8e\u4e2d\u95f4\u7684\u4ecb\u7535\u7edd\u7f18\u5c42(Epoxy)\uff0c\u82e5\u662f\u4f7f\u7528\u8f83\u9ad8\u5bfc\u70ed\u4fc2\u6570\u7684\u7edd\u7f18\u5c42\u6750\u6599\uff0c\u624d\u80fd\u4f7fLED\u7684\u70ed\u80fd\u5feb\u901f\u900f\u8fc7\u4e0b\u5c42\u7684\u91d1\u5c5e\u677f\u6269\u6563\u5e76\u4f20\u9012\u81f3\u6563\u70ed\u9c2d\u7247\uff1b\u53cd\u4e4b\uff0c\u4f7f\u7528\u4f4e\u5bfc\u70ed\u6750\u6599\uff0c\u5219\u70ed\u80fd\u65e0\u6cd5\u6709\u6548\u4f20\u9012\u81f3\u91d1\u5c5e\u57fa\u677f\uff0c\u5f62\u6210\u9ad8\u70ed\u963b\u6297\uff0c\u5176\u4f20\u70ed\u6027\u80fd\u5dee\u5f02\u5982\u56fe7\u6240\u793a\u3002 \u4ece\u56fe8\u70ed\u963b\u6bd4\u8f83\u56fe\u4e2d\u53ef\u77e5\uff0c\u82e5\u662f\u63a1\u7528FR4\u5408\u4f75\u5bfc\u70ed\u5b54\u548c\u5bfc\u70ed\u6750\u6599\u88fd\u7a0b\uff0c\u53ef\u5c06\u6563\u70ed\u57fa\u677f\u70ed\u963b\u503c\u51cf\u5c11\uff0c\u5e76\u964d\u4f4e\u6563\u70ed\u57fa\u677f\u6210\u672c\u3002 \u56fe7 \u4e0d\u540c\u5bfc\u70ed\u6750\u6599\u5f62\u6210\u7684\u70ed\u963b\u503c\u6bd4\u8f83 \u8d44\u6599\u6765\u6e90\uff1aPhilips Lumileds \u56fe8 \u4e0d\u540c\u6563\u70ed\u57fa\u677f\u70ed\u963b\u503c\u6bd4\u8f83\u56fe \u900f\u8fc7\u6563\u70ed\u5143\u4ef6\u63d0\u9ad8\u7cfb\u7edf\u6563\u70ed\u6548\u80fd \u5bf9\u4e8e\u7cfb\u7edf\u7aef\u7684\u6563\u70ed\u7b56\u7565\uff0c\u5e38\u89c1\u7684\u6563\u70ed\u5143\u4ef6\u70ba\u9c2d\u7247(Heat Sink)\u3001\u70ed\u7ba1(Heat Pipes)\u3001\u5747\u6e29\u677f(Vapor Chamber)\u3001\u8ff4\u8def\u5f0f\u70ed\u7ba1(Loop Heat Pipe, LHP)\u53ca\u538b\u7535\u98ce\u6247(Piezo Fans)\u3002\u4ee5\u4e0b\u70ba\u5404\u5143\u4ef6\u539f\u7406\u4ecb\u7ecd\u53ca\u4f18\u7f3a\u70b9\u3002 \u6563\u70ed\u9c2d\u7247\u5e94\u7528\u6700\u70ba\u666e\u53ca \u6563\u70ed\u9c2d\u7247\u4e3b\u8981\u662f\u9760\u4f20\u5bfc\u4e0e\u81ea\u7136\u5bf9\u6d41\u65b9\u5f0f\u8fdb\u884c\u6563\u70ed\uff0c\u70ba\u6700\u5e38\u89c1\u7684\u6563\u70ed\u65b9\u5f0f\uff0c\u5229\u7528\u589e\u52a0\u6563\u70ed\u9762\u79ef\u4e0e\u642d\u914d\u98ce\u9053\u3001\u5f00\u6c14\u5b54\u8bbe\u8ba1\uff0c\u63d0\u5347\u4f20\u5bfc\u548c\u81ea\u7136\u5bf9\u6d41\u80fd\u529b\uff0c\u7f3a\u70b9\u70ba\u91cd\u91cf\u548c\u843d\u5c18\u5806\u79ef\u9020\u4f1a\u6210\u6563\u70ed\u4e0d\u826f\u3002\u5e38\u89c1\u7684\u6563\u70ed\u9c2d\u7247\u79cd\u7c7b\u5982\u56fe9\u6240\u793a\u3002 \u56fe9 \u6563\u70ed\u9c2d\u7247\u5b9e\u4f53\u56fe \u70ed\u7ba1\u53ef\u8fbe\u6210\u8fc5\u901f\u6563\u70ed \u70ed\u7ba1\u5728\u7535\u8111\u7684\u5e94\u7528\u76f8\u5f53\u5e7f\u6cdb\uff0c\u8fd1\u5e74\u6765\u4ea6\u88ab\u5e94\u7528\u5728LED\u706f\u5177\uff0c\u4e0d\u5916\u4e4e\u662f\u770b\u91cd\u5176\u8d28\u91cf\u8f7b\u4e14\u7ed3\u6784\u7b80\u5355\u3001\u4f20\u70ed\u8fc5\u901f\u4e14\u65e0\u52a8\u4ef6\u53ca\u6bcb\u987b\u5916\u52a0\u7535\u6e90\u4f18\u70b9\u3002\u56e0\u6b64\uff0c\u9488\u5bf9LED\u70ed\u5bc6\u5ea6\u6781\u9ad8\u7684\u72b6\u51b5\u4e0b\uff0c\u70ed\u7ba1\u53ef\u5feb\u901f\u6563\u70ed\u3002\u7136\u5176\u7f3a\u70b9\u6709\u6e29\u5ea6\u8303\u56f4\u9650\u5236\u3001\u4f20\u70ed\u8def\u5f84\u8f83\u77ed\u53ca\u53d7\u91cd\u529b\u5f71\u54cd\u65f6\u5177\u65b9\u5411\u6027\uff0c\u56e0\u6b64\u5e94\u7528\u5728LED\u706f\u5177\u65e0\u6cd5\u5c06\u70ed\u6e90\u6709\u6548\u5e26\u81f3\u8fdc\u5904\uff0c\u5373\u4fbf\u70ed\u7ba1\u80fd\u5c06\u70ed\u6e90\u8fc5\u901f\u5e26\u79bb\u5f00\uff0c\u4f46\u4ecd\u987b\u642d\u914d\u5404\u79cd\u6563\u70ed\u9c2d\u7247\u589e\u52a0\u4e0e\u7a7a\u6c14\u7684\u63a5\u89e6\u9762\u79ef\uff0c\u8fdb\u800c\u589e\u52a0\u81ea\u7136\u5bf9\u6d41\u7684\u80fd\u529b(\u56fe10)\u3002 \u56fe10 \u70ed\u7ba1\u5b9e\u4f53\u56fe \u5747\u6e29\u677f\u5c40\u9650\u706f\u5177\u5916\u89c2\u8bbe\u8ba1 \u5747\u6e29\u677f\u3001\u70ed\u7ba1\u539f\u7406\u4e0e\u7406\u8bba\u67b6\u6784\u76f8\u540c\uff0c\u53ea\u6709\u70ed\u4f20\u5bfc\u7684\u65b9\u5411\u4e0d\u540c\uff0c\u70ed\u7ba1\u7684\u70ed\u4f20\u5bfc\u65b9\u5f0f\u662f\u4e00\u7ef4\u7684\uff0c\u662f\u7ebf\u7684\u70ed\u4f20\u5bfc\u65b9\u5f0f\uff1b\u800c\u5747\u6e29\u677f\u7684\u70ed\u4f20\u5bfc\u65b9\u5f0f\u4fc2\u4e8c\u7ef4\uff0c\u662f\u9762\u7684\u70ed\u4f20\u5bfc\u65b9\u5f0f\uff0c\u56e0\u6b64\u5747\u6e29\u677f\u53ef\u5c06\u70ed\u6e90\u5747\u5300\u6269\u6563\u5f00\u6765\uff0c\u4ee5\u964d\u4f4e\u6269\u6563\u70ed\u963b\u3002\u4f46\u5373\u4fbf\u5747\u6e29\u677f\u5728\u706f\u5177\u5e94\u7528\u4ec5\u80fd\u70ba\u5782\u76f4\u65b9\u5411\u4f20\u9012\uff0c\u4e0d\u5982\u70ed\u7ba1\u53ef\u628a\u70ed\u5f80\u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u4f20\u9012\uff0c\u6240\u4ee5\u5728\u706f\u5177\u5916\u578b\u8bbe\u8ba1\u53d7\u9650\u8f83\u5927(\u56fe11)\u3002 \u56fe11 \u5747\u6e29\u677f\u5b9e\u4f53\u56fe \u8ff4\u8def\u5f0f\u70ed\u7ba1\u5b9e\u73b0\u957f\u8ddd\u79bb\u70ed\u4f20\u5bfc \u8ff4\u8def\u5f0f\u70ed\u7ba1\u662f\u4f9d\u9760\u5c01\u95ed\u5f0f\u8ff4\u8def\u7ba1\u5185\u7684\u5de5\u8d28\uff0c\u5728\u52a0\u70ed\u7aef\u4e0e\u51b7\u5374\u7aef\u7684\u70ed\u4ea4\u6362\u8fdb\u800c\u8fbe\u6210\u70ed\u91cf\u4f20\u9012\u3002\u70ed\u91cf\u4ece\u52a0\u70ed\u7aef\u4f20\u9012\u7ed9\u5de5\u8d28\uff0c\u4f7f\u5de5\u8d28\u53d8\u6210\u84b8\u6c14\u3002\u800c\u5f53\u84b8\u6c14\u6d41\u7ecf\u51b7\u5374\u7aef\u65f6\uff0c\u5176\u88ab\u51b7\u51dd\u6210\u6db2\u4f53\uff0c\u800c\u52a0\u70ed\u7aef\u5185\u90e8\u7684\u6bdb\u7ec6\u7ed3\u6784\u53ef\u5229\u7528\u6bdb\u7ec6\u529b\u5c06\u51b7\u51dd\u6db2\u4f53\u5e26\u56de\u84b8\u53d1\u5668\uff0c\u5982\u6b64\u5373\u53ef\u5b8c\u6210\u6d41\u4f53\u5faa\u73af\uff0c\u8fbe\u6210\u70ed\u80fd\u7684\u4f20\u9012\u3002\u9664\u4e00\u822c\u4f20\u7edf\u70ed\u7ba1\u7684\u4f18\u70b9\u5916\uff0c\u8ff4\u8def\u5f0f\u70ed\u7ba1\u6700\u5438\u5f15\u4eba\u4e4b\u5904\u5728\u4e8e\u5b83\u53ef\u505a\u957f\u8ddd\u79bb\u70ed\u91cf\u4f20\u9012\u3001\u7ba1\u8def\u53ef\u5f2f\u66f2\uff0c\u56e0\u6b64\u6781\u5bcc\u7075\u6d3b\u6027\u4e14\u4e0d\u53d7\u91cd\u529b\u573a\u7684\u5f71\u54cd\uff0c\u4efb\u4f55\u65b9\u5411\u5747\u53ef\u64cd\u4f5c\u3002\u56e0\u6b64\u85c9\u7531\u8ff4\u8def\u5f0f\u70ed\u7ba1\u8fdc\u8ddd\u79bb\u70ed\u4f20\u7279\u6027\uff0c\u5c06LED\u70ed\u6e90\u6240\u91ca\u653e\u51fa\u6765\u7684\u70ed\u85c9\u7531\u94dc\u7ba1\u8ff4\u8def\u4f20\u9012\u81f3\u706f\u58f3\u4e0a(\u6563\u70ed\u677f)\uff0c\u5e76\u5229\u7528\u5927\u9762\u79ef\u706f\u58f3\u8868\u9762\u4e0e\u7a7a\u6c14\u63a5\u89e6\uff0c\u5728\u81ea\u7136\u5bf9\u6d41\u8fd0\\\\\u4f5c\u4e0b\uff0c\u6bcb\u987b\u501f\u52a9\u4efb\u4f55\u989d\u5916\u7535\u529b\uff0c\u53ef\u4e0d\u65ad\u5faa\u73af\u6563\u70ed\uff0c\u6709\u6548\u89e3\u51b3\u6563\u70ed\u7684\u95ee\u9898\uff0c\u8fdb\u800c\u63d0\u5347LED\u706f\u5177\u5bff\u547d(\u56fe12)\u3002 \u56fe12 \u5e94\u7528LHP\u7684LED\u706f\u5177\u5b9e\u4f53\u56fe \u538b\u7535\u98ce\u6247\u9002\u5408\u5ba4\u5185\u706f\u5177\u5e94\u7528 \u76f8\u8f83\u4e8e\u4e00\u822c\u7684\u4f20\u7edf\u98ce\u6247\u800c\u8a00\uff0c\u538b\u7535\u98ce\u6247\u5177\u5907\u4f53\u79ef\u5c0f\u3001\u6d88\u8017\u529f\u7387\u5c0f\u3001\u566a\u97f3\u5c0f\u3001\u957f\u5bff\u547d\u7b49\u4f18\u70b9\uff0c\u8fd9\u4e9b\u4f18\u70b9\u76f8\u5f53\u9002\u7528\u4e8e\u73b0\u5728\u5ba4\u5185LED\u706f\u5177\u6563\u70ed\u6240\u9700\u7684\u4f4e\u529f\u7387\u3001\u4f4e\u566a\u97f3\u548c\u4e0d\u5360\u7a7a\u95f4\u7684\u8981\u6c42\u3002\u800c\u538b\u7535\u98ce\u6247\u5219\u662f\u5229\u7528\u538b\u7535\u6750\u6599\u5177\u6709\u538b\u7535\u6548\u5e94\u7684\u7279\u6027\u6765\u9020\u6210\u53f6\u7247\u7684\u6446\u52a8\uff0c\u9020\u6210\u7a7a\u6c14\u6d41\u52a8\u6765\u5e26\u8d70LED\u7522\u751f\u7684\u6e29\u5ea6\u3002\u4e00\u822c\u9009\u7528\u538b\u7535\u98ce\u6247\u6027\u80fd\u53c2\u6570\u5728\u4e8e\u5176\u538b\u7535\u53c2\u6570\u3001\u6247\u53f6\u539a\u5ea6\u548c\u9ecf\u5408\u80f6(Bonding Glue)\u4e4b\u4e0d\u540c\u3002\u56fe13\u663e\u793a\u4e00\u4e2a\u5b9e\u9645\u5e94\u7528\u8303\u4f8b\uff0c\u6b64\u70ba\u4e00\u4e2a\u5ba4\u5185\u706f\u5177\u6a21\u7ec4\uff0c\u642d\u914d\u538b\u7535\u98ce\u6247\u53ca\u5c0f\u9762\u79ef\u6563\u70ed\u9c2d\u7247\uff0c\u5f62\u6210\u6c14\u6d41\uff0c\u63d0\u9ad8\u5bf9\u6d41\u70ed\u4f20\u4fc2\u6570\u3002 \u8d44\u6599\u6765\u6e90\uff1a\u98de\u5229\u6d66 \u56fe13 \u4e3b\u52a8\u5f0f\u538b\u7535\u98ce\u6247\u6563\u70ed LED\u4ee5\u5176\u8282\u80fd\u53ca\u73af\u4fdd\u7279\u70b9\u6709\u7740\u5e7f\u9614\u7684\u5e94\u7528\u7a7a\u95f4\uff0c\u5728\u7167\u660e\u9886\u57df\u4e2d\uff0cLED\u53d1\u5149\u7522\u54c1\u7684\u5e94\u7528\u6b63\u5438\u5f15\u4e16\u4eba\u76ee\u5149\uff0c\u4e00\u822c\u6765\u8bf4\uff0cLED\u706f\u5177\u80fd\u5426\u7a33\u5b9a\u5de5\u4f5c\uff1f\u80fd\u5426\u5982\u5916\u754c\u9884\u671f\u7684\u5341\u4e07\u5c0f\u65f6\u5bff\u547d\uff1f\u6b64\u4e0e\u6676\u7247\u81f3\u706f\u5177\u7684\u6563\u70ed\u606f\u606f\u76f8\u5173\u3002\u7efc\u89c2\u4e0a\u8ff0\u5404\u79cd\u6563\u70ed\u6280\u672f\uff0c\u4e0d\u96be\u53d1\u73b0LED\u7684\u6563\u70ed\u6280\u672f\u65e5\u76ca\u591a\u5143\u5316\u3002\u5e94\u7528\u5728\u9ad8\u529f\u7387LED\u706f\u5177\u7684\u6563\u70ed\u6280\u672f\uff0c\u4e5f\u4e0d\u518d\u662f\u5355\u4e00\u9009\u62e9\u6216\u5355\u4e00\u5e94\u7528\u3002\u5982\u4f55\u5de7\u5999\u642d\u914d\u5404\u79cd\u6563\u70ed\u6280\u672f\uff0c\u4f7f\u5176\u8fbe\u6210\u4f4e\u70ed\u963b\u3001\u9ad8\u529f\u7387\u4e4bLED\u706f\u5177\uff0c\u70ba\u76ee\u524dLED\u6700\u91cd\u8981\u7684\u8bfe\u9898\u4e4b\u4e00\u3002 \uff08\u672c\u6587\u4f5c\u8005\u4e3a\u9633\u6770\u79d1\u6280\u5904\u957f\uff09","title":"LED\u6563\u70ed\u6280\u672f\u65b0\u52a8\u5411"},{"location":"ESP32/LED%E6%95%A3%E7%83%AD%E6%8A%80%E6%9C%AF%E6%96%B0%E5%8A%A8%E5%90%91/#_1","text":"LED\u6676\u7247\u53d1\u5149\u540c\u65f6\u4ea6\u4f1a\u7522\u751f\u70ed\u80fd(\u5149\u7535\u8f6c\u6362\u6548\u7387\u7ea6\u70ba25\uff5e35%)\uff0c\u9020\u6210\u6676\u7247\u6e29\u5ea6(Tj)\u63d0\u9ad8\uff0c\u7136LED\u6240\u7522\u751f\u7684\u70ed\u80fd\u662f\u900f\u8fc7\u4e0b\u65b9\u7684\u4f20\u70ed\u5e95\u5ea7\u4f20\u5bfc(Tsp)\uff0c\u56e0\u6b64\u5f53LED\u70b9\u4eae\u65f6\uff0c\u82e5\u65e0\u6cd5\u5feb\u901f\u4e0e\u6709\u6548\u7684\u5c06\u70ed\u91cf\u5e26\u8d70\uff0c\u5c06\u4f1a\u9020\u6210\u4eae\u5ea6\u964d\u4f4e\u3001\u5bff\u547d\u53d8\u77ed\u53ca\u6ce2\u957f\u98d8\u79fb\uff0c\u751a\u81f3\u9020\u6210LED\u635f\u574f\uff0c\u56fe3\u70ba\u79d1\u745e(Cree)EZ1000\u7684\u6676\u7247\u793a\u610f\u56fe\u3002 \u8d44\u6599\u6765\u6e90\uff1aCree \u56fe3 Cree-EZ1000\u7684\u6676\u7247\u793a\u610f\u56fe \u6676\u7247\u7684\u6563\u70ed\u7b56\u7565\u53ef\u5927\u81f4\u5f52\u7eb3\u70ba\u589e\u52a0\u6676\u7247\u5c3a\u5bf8\u548c\u6539\u53d8\u6750\u6599\u7ed3\u6784\u4e24\u79cd\uff0c\u6676\u7247\u7684\u70ed\u963b\u8ba1\u7b97\u70baRchip=Lchip/(Kchip\u00d7Achip)\uff0c\u5176\u4e2dLchip\u70ba\u70ed\u4f20\u8def\u5f84\u7684\u957f\u5ea6(\u84dd\u5b9d\u77f3\u57fa\u677f\u539a\u5ea6\u70ba100\u5fae\u7c73)\uff1bKchip\u70ba\u603b\u70ed\u5bfc\u4fc2\u6570(\u84dd\u5b9d\u77f3\u7ea6\u70ba35\uff5e40W/mK)\uff1bAchip\u70ba\u70ed\u4f20\u8def\u5f84\u7684\u622a\u9762\u79ef(40mil=1mm2)\u3002\u6839\u636e\u4e0a\u5f0f\uff0c\u82e5\u5c06\u84dd\u5b9d\u77f3\u57fa\u677f\u539a\u5ea6\u7531100\u5fae\u7c73\u7f29\u77ed\u81f380\u5fae\u7c73\uff0c\u6676\u7247\u70ed\u963b\u53ef\u964d\u4f4e20%\uff0c\u4f46\u4e0d\u80fd\u65e0\u9650\u5236\u7684\u7f29\u77ed\u9020\u6210\u6676\u5706\u7247\u7834\u7247\u3002\u53e6\u5916\uff0c\u82e5\u5c06Kchip\u503c\u63d0\u9ad8\u81f3280W/mK(SiC)\uff0c\u6676\u7247\u70ed\u963b\u53ef\u964d\u4f4e87.5%\u3002\u56e0\u6b64\uff0c\u900f\u8fc7\u6539\u53d8\u6750\u6599\u7ed3\u6784\u662f\u76ee\u524d\u8f83\u6709\u6548\u964d\u4f4e\u6676\u7247\u70ed\u963b\u7684\u65b9\u5f0f\u3002","title":"\u85c9\u5c3a\u5bf8/\u6750\u6599\u6539\u5584\u6676\u7247\u6563\u70ed"},{"location":"ESP32/LED%E6%95%A3%E7%83%AD%E6%8A%80%E6%9C%AF%E6%96%B0%E5%8A%A8%E5%90%91/#fr4","text":"\u4e00\u822c\u5bf9\u4e8e\u5e38\u89c1LED\u7684\u6563\u70ed\u57fa\u677f\uff0c\u5927\u81f4\u53ef\u533a\u5206\u70ba\u4f20\u7edf\u5370\u5237\u7535\u8def\u677f\u73af\u6c27\u73bb\u7483\u7ea4\u7ef4\u677f(FR4)\u3001\u91d1\u5c5e\u57fa\u5370\u5237\u7535\u8def\u677f(MCPCB)\u3001\u9676\u74f7\u57fa\u677f(AL2O3)\u53ca\u590d\u5408\u57fa\u677f\u56db\u79cd(\u88681)\u3002 \u7531\u4e8e\u4f20\u7edfFR4\u7684\u94dc\u7b94\u5c42\u6563\u70ed\u80fd\u529b\u6709\u9650\uff0c\u5fc5\u987b\u85c9\u7531\u8f83\u539a\u7684\u91d1\u5c5e\u5c42\u964d\u4f4e\u6269\u6563\u70ed\u963b(Spreading Resistance)\u3002\u53e6\u5916\u518d\u85c9\u7531\u4ecb\u7535\u5c42(Dielectrics)\u8bbe\u8ba1\u63d0\u9ad8\u8f74\u5411\u4e0a\u7684\u70ed\u4f20\u901f\u7387\uff0c\u5c06\u70ed\u80fd\u8fc5\u901f\u4f20\u5bfc\u81f3\u6563\u70ed\u9c2d\u7247\u3002\u4ece\u4ef7\u683c\u548c\u91cf\u7522\u89c2\u70b9\u6765\u770b\uff0c\u5370\u5237\u7535\u8def\u677f\u4f18\u4e8e\u5176\u4ed6\u57fa\u677f\uff0c\u4f46\u5176\u70ed\u4f20\u5bfc\u4fc2\u6570\u4f4e(\u70ed\u963b\u503c\u9ad8)\uff0c\u4e0d\u5229\u4e8eLED\u6563\u70ed\uff0c\u9488\u5bf9\u6b64\u7f3a\u70b9\u53ef\u900f\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u8fdb\u884c\u6539\u5584\uff1a","title":"FR4\u6563\u70ed\u57fa\u677f\u6210\u4e3b\u6d41"},{"location":"ESP32/LED%E6%95%A3%E7%83%AD%E6%8A%80%E6%9C%AF%E6%96%B0%E5%8A%A8%E5%90%91/#_2","text":"\u5728LED\u7684\u4f20\u70ed\u5e95\u5ea7\u53ca\u5468\u8fb9\u8303\u56f4\uff0c\u52a0\u4e0a\u5bfc\u70ed\u5b54\uff0c\u5e76\u5728\u5176\u5468\u56f4\u9540\u4e0a\u4e00\u5c42\u94dc\u7b94\u5c42(35\u5fae\u7c73)\uff0c\u5229\u7528\u94dc\u7684\u9ad8\u5bfc\u70ed\u6027\uff0c\u5c06\u4f20\u70ed\u5e95\u5ea7\u7684\u70ed\u80fd\u5feb\u901f\u4f20\u9012\u81f3\u4e0b\u65b9\u7684\u6563\u70ed\u9c2d\u7247\uff0c\u4ee5\u964d\u4f4eFR4\u6563\u70ed\u57fa\u677f\u70ed\u963b\u503c\u8fbe7K/W(\u56fe4)\u3002 \u8d44\u6599\u6765\u6e90\uff1aPhilips Lumileds \u56fe4 FR4\u5408\u4f75\u5bfc\u70ed\u5b54","title":"\u5408\u4f75\u5bfc\u70ed\u5b54\u964d\u4f4e\u70ed\u963b\u503c"},{"location":"ESP32/LED%E6%95%A3%E7%83%AD%E6%8A%80%E6%9C%AF%E6%96%B0%E5%8A%A8%E5%90%91/#_3","text":"\u5229\u7528\u7c7b\u4f3c\u7b2c\u4e00\u79cd\u7684\u88fd\u4f5c\u7a0b\u5e8f\uff0c\u53ea\u662f\u5bfc\u70ed\u5b54\u5185\u52a0\u5165\u9ad8\u5bfc\u70ed\u4fc2\u6570\u7684\u6750\u6599\uff0c\u5e76\u5728\u5bfc\u70ed\u5b54\u7684\u4e0a\u3001\u4e0b\u9762\u4e0e\u5176\u5468\u56f4\u9540\u4e0a\u4e00\u5c42\u94dc\u7b94\u5c42(35\u5fae\u7c73)\uff0c\u85c9\u7531\u5b54\u5185\u7684\u5bfc\u70ed\u6750\u6599\u4e0e\u5b54\u5468\u56f4\u7684\u94dc\u7b94\u5c42\uff0c\u5c06\u4f20\u70ed\u5e95\u5ea7\u7684\u70ed\u80fd\u5feb\u901f\u4f20\u9012\u81f3\u4e0b\u65b9\u7684\u6563\u70ed\u9c2d\u7247\uff0c\u964d\u4f4eFR4\u6563\u70ed\u57fa\u677f\u70ed\u963b\u503c\u81f33K/W(\u56fe5)\u3002\u6563\u70ed\u57fa\u677f\u5b9e\u4f53\u56fe\u5982\u56fe6\u6240\u793a\u3002 \u8d44\u6599\u6765\u6e90\uff1aPhilips Lumileds \u56fe5 FR4\u5408\u4f75\u5bfc\u70ed\u5b54\u53ca\u5bfc\u70ed\u6750\u6599 \u56fe6 FR4\u6563\u70ed\u57fa\u677f\u5b9e\u4f53\u56fe MCPCB\u662f\u6700\u5e38\u89c1\u7684\u9ad8\u529f\u7387LED\u6563\u70ed\u57fa\u677f\uff0c\u4f46\u6b64\u79cd\u57fa\u677f\u6700\u5173\u952e\u6750\u6599\u5728\u4e8e\u4e2d\u95f4\u7684\u4ecb\u7535\u7edd\u7f18\u5c42(Epoxy)\uff0c\u82e5\u662f\u4f7f\u7528\u8f83\u9ad8\u5bfc\u70ed\u4fc2\u6570\u7684\u7edd\u7f18\u5c42\u6750\u6599\uff0c\u624d\u80fd\u4f7fLED\u7684\u70ed\u80fd\u5feb\u901f\u900f\u8fc7\u4e0b\u5c42\u7684\u91d1\u5c5e\u677f\u6269\u6563\u5e76\u4f20\u9012\u81f3\u6563\u70ed\u9c2d\u7247\uff1b\u53cd\u4e4b\uff0c\u4f7f\u7528\u4f4e\u5bfc\u70ed\u6750\u6599\uff0c\u5219\u70ed\u80fd\u65e0\u6cd5\u6709\u6548\u4f20\u9012\u81f3\u91d1\u5c5e\u57fa\u677f\uff0c\u5f62\u6210\u9ad8\u70ed\u963b\u6297\uff0c\u5176\u4f20\u70ed\u6027\u80fd\u5dee\u5f02\u5982\u56fe7\u6240\u793a\u3002 \u4ece\u56fe8\u70ed\u963b\u6bd4\u8f83\u56fe\u4e2d\u53ef\u77e5\uff0c\u82e5\u662f\u63a1\u7528FR4\u5408\u4f75\u5bfc\u70ed\u5b54\u548c\u5bfc\u70ed\u6750\u6599\u88fd\u7a0b\uff0c\u53ef\u5c06\u6563\u70ed\u57fa\u677f\u70ed\u963b\u503c\u51cf\u5c11\uff0c\u5e76\u964d\u4f4e\u6563\u70ed\u57fa\u677f\u6210\u672c\u3002 \u56fe7 \u4e0d\u540c\u5bfc\u70ed\u6750\u6599\u5f62\u6210\u7684\u70ed\u963b\u503c\u6bd4\u8f83 \u8d44\u6599\u6765\u6e90\uff1aPhilips Lumileds \u56fe8 \u4e0d\u540c\u6563\u70ed\u57fa\u677f\u70ed\u963b\u503c\u6bd4\u8f83\u56fe","title":"\u5408\u4f75\u5bfc\u70ed\u5b54/\u5bfc\u70ed\u6750\u6599\u6709\u52a9\u4e8e\u7f29\u51cf\u6210\u672c"},{"location":"ESP32/LED%E6%95%A3%E7%83%AD%E6%8A%80%E6%9C%AF%E6%96%B0%E5%8A%A8%E5%90%91/#_4","text":"\u5bf9\u4e8e\u7cfb\u7edf\u7aef\u7684\u6563\u70ed\u7b56\u7565\uff0c\u5e38\u89c1\u7684\u6563\u70ed\u5143\u4ef6\u70ba\u9c2d\u7247(Heat Sink)\u3001\u70ed\u7ba1(Heat Pipes)\u3001\u5747\u6e29\u677f(Vapor Chamber)\u3001\u8ff4\u8def\u5f0f\u70ed\u7ba1(Loop Heat Pipe, LHP)\u53ca\u538b\u7535\u98ce\u6247(Piezo Fans)\u3002\u4ee5\u4e0b\u70ba\u5404\u5143\u4ef6\u539f\u7406\u4ecb\u7ecd\u53ca\u4f18\u7f3a\u70b9\u3002","title":"\u900f\u8fc7\u6563\u70ed\u5143\u4ef6\u63d0\u9ad8\u7cfb\u7edf\u6563\u70ed\u6548\u80fd"},{"location":"ESP32/LED%E6%95%A3%E7%83%AD%E6%8A%80%E6%9C%AF%E6%96%B0%E5%8A%A8%E5%90%91/#_5","text":"\u6563\u70ed\u9c2d\u7247\u4e3b\u8981\u662f\u9760\u4f20\u5bfc\u4e0e\u81ea\u7136\u5bf9\u6d41\u65b9\u5f0f\u8fdb\u884c\u6563\u70ed\uff0c\u70ba\u6700\u5e38\u89c1\u7684\u6563\u70ed\u65b9\u5f0f\uff0c\u5229\u7528\u589e\u52a0\u6563\u70ed\u9762\u79ef\u4e0e\u642d\u914d\u98ce\u9053\u3001\u5f00\u6c14\u5b54\u8bbe\u8ba1\uff0c\u63d0\u5347\u4f20\u5bfc\u548c\u81ea\u7136\u5bf9\u6d41\u80fd\u529b\uff0c\u7f3a\u70b9\u70ba\u91cd\u91cf\u548c\u843d\u5c18\u5806\u79ef\u9020\u4f1a\u6210\u6563\u70ed\u4e0d\u826f\u3002\u5e38\u89c1\u7684\u6563\u70ed\u9c2d\u7247\u79cd\u7c7b\u5982\u56fe9\u6240\u793a\u3002 \u56fe9 \u6563\u70ed\u9c2d\u7247\u5b9e\u4f53\u56fe","title":"\u6563\u70ed\u9c2d\u7247\u5e94\u7528\u6700\u70ba\u666e\u53ca"},{"location":"ESP32/LED%E6%95%A3%E7%83%AD%E6%8A%80%E6%9C%AF%E6%96%B0%E5%8A%A8%E5%90%91/#_6","text":"\u70ed\u7ba1\u5728\u7535\u8111\u7684\u5e94\u7528\u76f8\u5f53\u5e7f\u6cdb\uff0c\u8fd1\u5e74\u6765\u4ea6\u88ab\u5e94\u7528\u5728LED\u706f\u5177\uff0c\u4e0d\u5916\u4e4e\u662f\u770b\u91cd\u5176\u8d28\u91cf\u8f7b\u4e14\u7ed3\u6784\u7b80\u5355\u3001\u4f20\u70ed\u8fc5\u901f\u4e14\u65e0\u52a8\u4ef6\u53ca\u6bcb\u987b\u5916\u52a0\u7535\u6e90\u4f18\u70b9\u3002\u56e0\u6b64\uff0c\u9488\u5bf9LED\u70ed\u5bc6\u5ea6\u6781\u9ad8\u7684\u72b6\u51b5\u4e0b\uff0c\u70ed\u7ba1\u53ef\u5feb\u901f\u6563\u70ed\u3002\u7136\u5176\u7f3a\u70b9\u6709\u6e29\u5ea6\u8303\u56f4\u9650\u5236\u3001\u4f20\u70ed\u8def\u5f84\u8f83\u77ed\u53ca\u53d7\u91cd\u529b\u5f71\u54cd\u65f6\u5177\u65b9\u5411\u6027\uff0c\u56e0\u6b64\u5e94\u7528\u5728LED\u706f\u5177\u65e0\u6cd5\u5c06\u70ed\u6e90\u6709\u6548\u5e26\u81f3\u8fdc\u5904\uff0c\u5373\u4fbf\u70ed\u7ba1\u80fd\u5c06\u70ed\u6e90\u8fc5\u901f\u5e26\u79bb\u5f00\uff0c\u4f46\u4ecd\u987b\u642d\u914d\u5404\u79cd\u6563\u70ed\u9c2d\u7247\u589e\u52a0\u4e0e\u7a7a\u6c14\u7684\u63a5\u89e6\u9762\u79ef\uff0c\u8fdb\u800c\u589e\u52a0\u81ea\u7136\u5bf9\u6d41\u7684\u80fd\u529b(\u56fe10)\u3002 \u56fe10 \u70ed\u7ba1\u5b9e\u4f53\u56fe \u5747\u6e29\u677f\u5c40\u9650\u706f\u5177\u5916\u89c2\u8bbe\u8ba1 \u5747\u6e29\u677f\u3001\u70ed\u7ba1\u539f\u7406\u4e0e\u7406\u8bba\u67b6\u6784\u76f8\u540c\uff0c\u53ea\u6709\u70ed\u4f20\u5bfc\u7684\u65b9\u5411\u4e0d\u540c\uff0c\u70ed\u7ba1\u7684\u70ed\u4f20\u5bfc\u65b9\u5f0f\u662f\u4e00\u7ef4\u7684\uff0c\u662f\u7ebf\u7684\u70ed\u4f20\u5bfc\u65b9\u5f0f\uff1b\u800c\u5747\u6e29\u677f\u7684\u70ed\u4f20\u5bfc\u65b9\u5f0f\u4fc2\u4e8c\u7ef4\uff0c\u662f\u9762\u7684\u70ed\u4f20\u5bfc\u65b9\u5f0f\uff0c\u56e0\u6b64\u5747\u6e29\u677f\u53ef\u5c06\u70ed\u6e90\u5747\u5300\u6269\u6563\u5f00\u6765\uff0c\u4ee5\u964d\u4f4e\u6269\u6563\u70ed\u963b\u3002\u4f46\u5373\u4fbf\u5747\u6e29\u677f\u5728\u706f\u5177\u5e94\u7528\u4ec5\u80fd\u70ba\u5782\u76f4\u65b9\u5411\u4f20\u9012\uff0c\u4e0d\u5982\u70ed\u7ba1\u53ef\u628a\u70ed\u5f80\u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u4f20\u9012\uff0c\u6240\u4ee5\u5728\u706f\u5177\u5916\u578b\u8bbe\u8ba1\u53d7\u9650\u8f83\u5927(\u56fe11)\u3002 \u56fe11 \u5747\u6e29\u677f\u5b9e\u4f53\u56fe \u8ff4\u8def\u5f0f\u70ed\u7ba1\u5b9e\u73b0\u957f\u8ddd\u79bb\u70ed\u4f20\u5bfc \u8ff4\u8def\u5f0f\u70ed\u7ba1\u662f\u4f9d\u9760\u5c01\u95ed\u5f0f\u8ff4\u8def\u7ba1\u5185\u7684\u5de5\u8d28\uff0c\u5728\u52a0\u70ed\u7aef\u4e0e\u51b7\u5374\u7aef\u7684\u70ed\u4ea4\u6362\u8fdb\u800c\u8fbe\u6210\u70ed\u91cf\u4f20\u9012\u3002\u70ed\u91cf\u4ece\u52a0\u70ed\u7aef\u4f20\u9012\u7ed9\u5de5\u8d28\uff0c\u4f7f\u5de5\u8d28\u53d8\u6210\u84b8\u6c14\u3002\u800c\u5f53\u84b8\u6c14\u6d41\u7ecf\u51b7\u5374\u7aef\u65f6\uff0c\u5176\u88ab\u51b7\u51dd\u6210\u6db2\u4f53\uff0c\u800c\u52a0\u70ed\u7aef\u5185\u90e8\u7684\u6bdb\u7ec6\u7ed3\u6784\u53ef\u5229\u7528\u6bdb\u7ec6\u529b\u5c06\u51b7\u51dd\u6db2\u4f53\u5e26\u56de\u84b8\u53d1\u5668\uff0c\u5982\u6b64\u5373\u53ef\u5b8c\u6210\u6d41\u4f53\u5faa\u73af\uff0c\u8fbe\u6210\u70ed\u80fd\u7684\u4f20\u9012\u3002\u9664\u4e00\u822c\u4f20\u7edf\u70ed\u7ba1\u7684\u4f18\u70b9\u5916\uff0c\u8ff4\u8def\u5f0f\u70ed\u7ba1\u6700\u5438\u5f15\u4eba\u4e4b\u5904\u5728\u4e8e\u5b83\u53ef\u505a\u957f\u8ddd\u79bb\u70ed\u91cf\u4f20\u9012\u3001\u7ba1\u8def\u53ef\u5f2f\u66f2\uff0c\u56e0\u6b64\u6781\u5bcc\u7075\u6d3b\u6027\u4e14\u4e0d\u53d7\u91cd\u529b\u573a\u7684\u5f71\u54cd\uff0c\u4efb\u4f55\u65b9\u5411\u5747\u53ef\u64cd\u4f5c\u3002\u56e0\u6b64\u85c9\u7531\u8ff4\u8def\u5f0f\u70ed\u7ba1\u8fdc\u8ddd\u79bb\u70ed\u4f20\u7279\u6027\uff0c\u5c06LED\u70ed\u6e90\u6240\u91ca\u653e\u51fa\u6765\u7684\u70ed\u85c9\u7531\u94dc\u7ba1\u8ff4\u8def\u4f20\u9012\u81f3\u706f\u58f3\u4e0a(\u6563\u70ed\u677f)\uff0c\u5e76\u5229\u7528\u5927\u9762\u79ef\u706f\u58f3\u8868\u9762\u4e0e\u7a7a\u6c14\u63a5\u89e6\uff0c\u5728\u81ea\u7136\u5bf9\u6d41\u8fd0\\\\\u4f5c\u4e0b\uff0c\u6bcb\u987b\u501f\u52a9\u4efb\u4f55\u989d\u5916\u7535\u529b\uff0c\u53ef\u4e0d\u65ad\u5faa\u73af\u6563\u70ed\uff0c\u6709\u6548\u89e3\u51b3\u6563\u70ed\u7684\u95ee\u9898\uff0c\u8fdb\u800c\u63d0\u5347LED\u706f\u5177\u5bff\u547d(\u56fe12)\u3002 \u56fe12 \u5e94\u7528LHP\u7684LED\u706f\u5177\u5b9e\u4f53\u56fe \u538b\u7535\u98ce\u6247\u9002\u5408\u5ba4\u5185\u706f\u5177\u5e94\u7528 \u76f8\u8f83\u4e8e\u4e00\u822c\u7684\u4f20\u7edf\u98ce\u6247\u800c\u8a00\uff0c\u538b\u7535\u98ce\u6247\u5177\u5907\u4f53\u79ef\u5c0f\u3001\u6d88\u8017\u529f\u7387\u5c0f\u3001\u566a\u97f3\u5c0f\u3001\u957f\u5bff\u547d\u7b49\u4f18\u70b9\uff0c\u8fd9\u4e9b\u4f18\u70b9\u76f8\u5f53\u9002\u7528\u4e8e\u73b0\u5728\u5ba4\u5185LED\u706f\u5177\u6563\u70ed\u6240\u9700\u7684\u4f4e\u529f\u7387\u3001\u4f4e\u566a\u97f3\u548c\u4e0d\u5360\u7a7a\u95f4\u7684\u8981\u6c42\u3002\u800c\u538b\u7535\u98ce\u6247\u5219\u662f\u5229\u7528\u538b\u7535\u6750\u6599\u5177\u6709\u538b\u7535\u6548\u5e94\u7684\u7279\u6027\u6765\u9020\u6210\u53f6\u7247\u7684\u6446\u52a8\uff0c\u9020\u6210\u7a7a\u6c14\u6d41\u52a8\u6765\u5e26\u8d70LED\u7522\u751f\u7684\u6e29\u5ea6\u3002\u4e00\u822c\u9009\u7528\u538b\u7535\u98ce\u6247\u6027\u80fd\u53c2\u6570\u5728\u4e8e\u5176\u538b\u7535\u53c2\u6570\u3001\u6247\u53f6\u539a\u5ea6\u548c\u9ecf\u5408\u80f6(Bonding Glue)\u4e4b\u4e0d\u540c\u3002\u56fe13\u663e\u793a\u4e00\u4e2a\u5b9e\u9645\u5e94\u7528\u8303\u4f8b\uff0c\u6b64\u70ba\u4e00\u4e2a\u5ba4\u5185\u706f\u5177\u6a21\u7ec4\uff0c\u642d\u914d\u538b\u7535\u98ce\u6247\u53ca\u5c0f\u9762\u79ef\u6563\u70ed\u9c2d\u7247\uff0c\u5f62\u6210\u6c14\u6d41\uff0c\u63d0\u9ad8\u5bf9\u6d41\u70ed\u4f20\u4fc2\u6570\u3002 \u8d44\u6599\u6765\u6e90\uff1a\u98de\u5229\u6d66 \u56fe13 \u4e3b\u52a8\u5f0f\u538b\u7535\u98ce\u6247\u6563\u70ed LED\u4ee5\u5176\u8282\u80fd\u53ca\u73af\u4fdd\u7279\u70b9\u6709\u7740\u5e7f\u9614\u7684\u5e94\u7528\u7a7a\u95f4\uff0c\u5728\u7167\u660e\u9886\u57df\u4e2d\uff0cLED\u53d1\u5149\u7522\u54c1\u7684\u5e94\u7528\u6b63\u5438\u5f15\u4e16\u4eba\u76ee\u5149\uff0c\u4e00\u822c\u6765\u8bf4\uff0cLED\u706f\u5177\u80fd\u5426\u7a33\u5b9a\u5de5\u4f5c\uff1f\u80fd\u5426\u5982\u5916\u754c\u9884\u671f\u7684\u5341\u4e07\u5c0f\u65f6\u5bff\u547d\uff1f\u6b64\u4e0e\u6676\u7247\u81f3\u706f\u5177\u7684\u6563\u70ed\u606f\u606f\u76f8\u5173\u3002\u7efc\u89c2\u4e0a\u8ff0\u5404\u79cd\u6563\u70ed\u6280\u672f\uff0c\u4e0d\u96be\u53d1\u73b0LED\u7684\u6563\u70ed\u6280\u672f\u65e5\u76ca\u591a\u5143\u5316\u3002\u5e94\u7528\u5728\u9ad8\u529f\u7387LED\u706f\u5177\u7684\u6563\u70ed\u6280\u672f\uff0c\u4e5f\u4e0d\u518d\u662f\u5355\u4e00\u9009\u62e9\u6216\u5355\u4e00\u5e94\u7528\u3002\u5982\u4f55\u5de7\u5999\u642d\u914d\u5404\u79cd\u6563\u70ed\u6280\u672f\uff0c\u4f7f\u5176\u8fbe\u6210\u4f4e\u70ed\u963b\u3001\u9ad8\u529f\u7387\u4e4bLED\u706f\u5177\uff0c\u70ba\u76ee\u524dLED\u6700\u91cd\u8981\u7684\u8bfe\u9898\u4e4b\u4e00\u3002 \uff08\u672c\u6587\u4f5c\u8005\u4e3a\u9633\u6770\u79d1\u6280\u5904\u957f\uff09","title":"\u70ed\u7ba1\u53ef\u8fbe\u6210\u8fc5\u901f\u6563\u70ed"},{"location":"ESP32/MAX31855/","text":"MAX31855\u5f00\u53d1\u677f\u4f7f\u7528 MAX31855 The MAX31855 is a sophisticated thermocouple-to-digital converter with a built-in 14-bit analog-to-digital converter \\(ADC\\) . The device also contains cold-junction compensation sensing and correction, a digital controller, an SPIcompatible interface, and associated control logic. Drive CS low to output the first bit on the SO pin. A complete serial-interface read of the cold-junction compensated thermocouple temperature requires 14 clock cycles. Thirty-two clock cycles are required to read both the thermocouple and reference junction temperatures \\(Table 2 and Table 3.\\) The first bit, D31, is the thermocouple temperature sign bit, and is presented to the SO pin within tDV of the falling edge of CS. Bits D[30:18] contain the converted temperature in the order of MSB to LSB, and are presented to the SO pin within tD0 of the falling edge of SCK. Bit D16 is normally low and goes high when the thermocouple input is open or shorted to GND or VCC. The reference junction temperature data begins with D15. CS can be taken high at any point while clocking out conversion data. If T+ and T- are unconnected, the thermocouple temperature sign bit \\(D31\\) is 0, and the remainder of the thermocouple temperature value \\(D\\[30:18\\]\\) is 1. From above graphic, it can be seen MAX31855 SPI mode 0. D13~D18 is thermal coupler hot point temperature. MAX31855 Arduino Function Vin 5V 5V GND GND GND DO 12 MISO CS 10 or other SS CLK 13 SCK \u4ee3\u7801 \u4ee3\u7801\u4fee\u6539\u81ea \u6b64\u94fe\u63a5 \u3002 \u6253\u5f00\u4e0b\u9762\u7684\u5b9e\u4f8b\u6587\u4ef6\uff0c\u4e0a\u4f20\u5230\u5f00\u53d1\u677f\u3002 #include <SPI.h> //Additionally, connect the MAX6675 as follows: //MISO Arduino pin 12 //master in slave out //SCK Arduino pin 13 //serial clock const int CS = 10; void setup() { Serial.begin(9600); pinMode(CS, OUTPUT); digitalWrite(CS, HIGH); SPI.begin(); //initialize SPI delay(500); } void loop() { unsigned int tcData; float temp, avgTemp; uint32_t d = 0; digitalWrite(CS, LOW); SPI.beginTransaction(SPISettings(4300000, MSBFIRST, SPI_MODE1)); tcData = SPI.transfer(0x00) << 8; tcData |= SPI.transfer(0x00); digitalWrite(CS, HIGH); if (tcData & 0x0004) { //open thermocouple circuit Serial.println(\"Thermal Coupler Open.\"); } else { temp = (tcData >> 3) / 4.0; Serial.print(\"C = \"); Serial.println(temp); } delay(1000); } MQTT \u670d\u52a1\u5668 Mosquitto MQTT messaging for Raspberry Pi \\(or Python\\) \uff0c Paho Python Client Arduino Client\uff0c PubSubClient","title":"MAX31855\u5f00\u53d1\u677f\u4f7f\u7528"},{"location":"ESP32/MAX31855/#max31855","text":"","title":"MAX31855\u5f00\u53d1\u677f\u4f7f\u7528"},{"location":"ESP32/MAX31855/#max31855_1","text":"The MAX31855 is a sophisticated thermocouple-to-digital converter with a built-in 14-bit analog-to-digital converter \\(ADC\\) . The device also contains cold-junction compensation sensing and correction, a digital controller, an SPIcompatible interface, and associated control logic. Drive CS low to output the first bit on the SO pin. A complete serial-interface read of the cold-junction compensated thermocouple temperature requires 14 clock cycles. Thirty-two clock cycles are required to read both the thermocouple and reference junction temperatures \\(Table 2 and Table 3.\\) The first bit, D31, is the thermocouple temperature sign bit, and is presented to the SO pin within tDV of the falling edge of CS. Bits D[30:18] contain the converted temperature in the order of MSB to LSB, and are presented to the SO pin within tD0 of the falling edge of SCK. Bit D16 is normally low and goes high when the thermocouple input is open or shorted to GND or VCC. The reference junction temperature data begins with D15. CS can be taken high at any point while clocking out conversion data. If T+ and T- are unconnected, the thermocouple temperature sign bit \\(D31\\) is 0, and the remainder of the thermocouple temperature value \\(D\\[30:18\\]\\) is 1. From above graphic, it can be seen MAX31855 SPI mode 0. D13~D18 is thermal coupler hot point temperature. MAX31855 Arduino Function Vin 5V 5V GND GND GND DO 12 MISO CS 10 or other SS CLK 13 SCK","title":"MAX31855"},{"location":"ESP32/MAX31855/#_1","text":"\u4ee3\u7801\u4fee\u6539\u81ea \u6b64\u94fe\u63a5 \u3002 \u6253\u5f00\u4e0b\u9762\u7684\u5b9e\u4f8b\u6587\u4ef6\uff0c\u4e0a\u4f20\u5230\u5f00\u53d1\u677f\u3002 #include <SPI.h> //Additionally, connect the MAX6675 as follows: //MISO Arduino pin 12 //master in slave out //SCK Arduino pin 13 //serial clock const int CS = 10; void setup() { Serial.begin(9600); pinMode(CS, OUTPUT); digitalWrite(CS, HIGH); SPI.begin(); //initialize SPI delay(500); } void loop() { unsigned int tcData; float temp, avgTemp; uint32_t d = 0; digitalWrite(CS, LOW); SPI.beginTransaction(SPISettings(4300000, MSBFIRST, SPI_MODE1)); tcData = SPI.transfer(0x00) << 8; tcData |= SPI.transfer(0x00); digitalWrite(CS, HIGH); if (tcData & 0x0004) { //open thermocouple circuit Serial.println(\"Thermal Coupler Open.\"); } else { temp = (tcData >> 3) / 4.0; Serial.print(\"C = \"); Serial.println(temp); } delay(1000); }","title":"\u4ee3\u7801"},{"location":"ESP32/MAX31855/#mqtt","text":"\u670d\u52a1\u5668 Mosquitto MQTT messaging for Raspberry Pi \\(or Python\\) \uff0c Paho Python Client Arduino Client\uff0c PubSubClient","title":"MQTT"},{"location":"ESP32/MPU6050%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%20%E9%99%80%E8%9E%BA%E4%BB%AA%E4%BC%A0%E6%84%9F%E5%99%A8/","text":"MPU6050\u4ecb\u7d39 MPU6050\u662f\u4e00\u79cd\u5fae\u7535\u5b50\u673a\u68b0\u7cfb\u7edf\uff08MEMS\uff09\uff0c\u5728\u5355\u82af\u7247\u4e0a\u96c6\u6210\u4e86\u4e00\u4e2a3\u8f74\u52a0\u901f\u5ea6\u8ba1\u548c\u4e00\u4e2a3\u8f74\u9640\u87ba\u4eea\uff0c\u8fd8\u6709\u6e29\u5ea6\u4f20\u611f\u5668\uff0c\u4f7f\u7528I2C \u901a\u4fe1\u63a5\u53e3\u3002 \u5b83\u53ef\u4ee5\u6d4b\u91cf\uff1a \u52a0\u901f\u5ea6 \u901f\u5ea6 \u65b9\u5411 \u79fb\u4f4d \u6e29\u5ea6 MPU6050 IMU\u4e5f\u79f0\u4e3a\u516d\u8f74\u8fd0\u52a8\u8ddf\u8e2a\u8bbe\u5907\u62166 DoF\uff08\u516d\u81ea\u7531\u5ea6\uff09\u8bbe\u5907\uff0c\u56e0\u4e3a\u5b83\u67096\u4e2a\u8f93\u51fa\uff0c\u53733\u4e2a\u52a0\u901f\u5ea6\u8ba1\u8f93\u51fa\u548c3\u4e2a\u9640\u87ba\u4eea\u8f93\u51fa\u3002 MPU6050\u52a0\u901f\u5ea6\u8ba1\u6d4b\u91cf\u52a0\u901f\u5ea6\u7684\u65b9\u5f0f\u4e0eADXL345\u52a0\u901f\u5ea6\u4f20\u611f\u5668\u76f8\u540c\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u53ef\u4ee5\u6d4b\u91cf\u6cbf3\u4e2a\u8f74\u7684\u52a0\u901f\u5ea6\uff0c\u7ed3\u5408\u4e00\u4e9b\u4e09\u89d2\u5b66\u6570\u5b66\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u4f20\u611f\u5668\u5b9a\u4f4d\u7684\u89d2\u5ea6\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u878d\u5408\u6216\u7ec4\u5408\u52a0\u901f\u5ea6\u8ba1\u548c\u9640\u87ba\u4eea\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u6709\u5173\u4f20\u611f\u5668\u65b9\u5411\u7684\u975e\u5e38\u51c6\u786e\u7684\u4fe1\u606f\u3002 \u4e09\u8f74\u9640\u87ba\u4eea MPU6050 \u7531\u91c7\u7528\u5fae\u673a\u7535\u7cfb\u7edf (MEMS) \u6280\u672f\u7684 3 \u8f74\u9640\u87ba\u4eea\u7ec4\u6210\u3002\u7528\u4e8e\u68c0\u6d4b\u6cbf X\u3001Y\u3001Z \u8f74\u7684\u65cb\u8f6c\u901f\u5ea6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5f53\u9640\u87ba\u4eea\u56f4\u7ed5\u4efb\u4f55\u4f20\u611f\u8f74\u65cb\u8f6c\u65f6\uff0c\u79d1\u91cc\u5965\u5229\u6548\u5e94\u4f1a\u5f15\u8d77\u632f\u52a8\uff0cMPU6050 \u5185\u90e8\u7684 MEM \u4f1a\u68c0\u6d4b\u5230\u8be5\u632f\u52a8\u3002 \u4ea7\u751f\u7684\u4fe1\u53f7\u88ab\u653e\u5927\u3001\u89e3\u8c03\u548c\u8fc7\u6ee4\u4ee5\u4ea7\u751f\u4e0e\u89d2\u901f\u7387\u6210\u6b63\u6bd4\u7684\u7535\u538b\u3002 \u8be5\u7535\u538b\u4f7f\u7528 16 \u4f4d ADC \u8fdb\u884c\u6570\u5b57\u5316\u4ee5\u5bf9\u6bcf\u4e2a\u8f74\u8fdb\u884c\u91c7\u6837\u3002 \u8f93\u51fa\u7684\u6ee1\u91cf\u7a0b\u8303\u56f4\u4e3a +/- 250\u3001+/- 500\u3001+/- 1000\u3001+/- 2000\u3002 \u9640\u87ba\u4eea\u8f93\u51fa\u5404\u8f74\u89d2\u901f\u5ea6\uff0c\u5355\u4f4d\u4e3a\u5ea6/\u6bcf\u79d2\u3002 \u56e0\u6b64\u4e3a\u4e86\u83b7\u5f97\u89d2\u5ea6\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u79ef\u5206\u3002 \u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1 MPU6050 \u7531\u91c7\u7528\u5fae\u673a\u7535 (MEMS) \u6280\u672f\u7684 3 \u8f74\u52a0\u901f\u5ea6\u8ba1\u7ec4\u6210\u3002\u5b83\u7528\u4e8e\u68c0\u6d4b\u6cbf X\u3001Y \u548c Z \u8f74\u7684\u503e\u659c\u6216\u503e\u659c\u89d2\u5ea6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6cbf\u8f74\u7684\u52a0\u901f\u5ea6\u4f7f\u53ef\u79fb\u52a8\u8d28\u91cf\u504f\u8f6c\u3002 \u79fb\u52a8\u677f\uff08\u8d28\u91cf\uff09\u7684\u8fd9\u79cd\u4f4d\u79fb\u4f7f\u5dee\u5206\u7535\u5bb9\u5668\u4e0d\u5e73\u8861\uff0c\u4ece\u800c\u5bfc\u81f4\u4f20\u611f\u5668\u8f93\u51fa\u3002\u8f93\u51fa\u5e45\u5ea6\u4e0e\u52a0\u901f\u5ea6\u6210\u6b63\u6bd4\u3002 16 \u4f4d ADC \u7528\u4e8e\u83b7\u5f97\u6570\u5b57\u5316\u8f93\u51fa\u3002 \u52a0\u901f\u5ea6\u7684\u6ee1\u91cf\u7a0b\u8303\u56f4\u4e3a +/- 2g\u3001+/- 4g\u3001+/- 8g\u3001+/- 16g\u3002 \u5b83\u4ee5 g\uff08\u91cd\u529b\uff09\u4e3a\u5355\u4f4d\u6d4b\u91cf\u3002 \u5f53\u8bbe\u5907\u653e\u7f6e\u5728\u5e73\u9762\u4e0a\u65f6\uff0c\u5b83\u5c06\u5728 X \u548c Y \u8f74\u4e0a\u6d4b\u91cf 0g\uff0c\u5728 Z \u8f74\u4e0a\u6d4b\u91cf +1g\u3002 DMP\uff08\u6570\u5b57\u8fd0\u52a8\u5904\u7406\u5668\uff09 \u5d4c\u5165\u5f0f\u6570\u5b57\u8fd0\u52a8\u5904\u7406\u5668 (DMP) \u7528\u4e8e\u8ba1\u7b97\u8fd0\u52a8\u5904\u7406\u7b97\u6cd5\u3002\u5b83\u4ece\u9640\u87ba\u4eea\u3001\u52a0\u901f\u5ea6\u8ba1\u548c\u989d\u5916\u7684 3rd \u65b9\u4f20\u611f\u5668\uff08\u5982\u78c1\u529b\u8ba1\uff09\u83b7\u53d6\u6570\u636e\u5e76\u5904\u7406\u6570\u636e\u3002\u5b83\u63d0\u4f9b\u4e86\u6eda\u52a8\u3001\u4fef\u4ef0\u3001\u504f\u822a\u89d2\u3001\u6a2a\u5411\u548c\u7eb5\u5411\u611f\u7b49\u8fd0\u52a8\u6570\u636e\u3002\u5b83\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u4e3b\u673a\u8ba1\u7b97\u8fd0\u52a8\u6570\u636e\u7684\u8fc7\u7a0b\u3002\u7ed3\u679c\u6570\u636e\u53ef\u4ee5\u4ece DMP \u5bc4\u5b58\u5668\u4e2d\u8bfb\u53d6\u3002 \u7247\u4e0a\u6e29\u5ea6\u4f20\u611f\u5668 \u7247\u4e0a\u6e29\u5ea6\u4f20\u611f\u5668\u8f93\u51fa\u4f7f\u7528 ADC \u6570\u5b57\u5316\u3002\u6e29\u5ea6\u4f20\u611f\u5668\u7684\u8bfb\u6570\u53ef\u4ee5\u4ece\u4f20\u611f\u5668\u6570\u636e\u5bc4\u5b58\u5668\u4e2d\u8bfb\u53d6\u3002 MPU6050\u6a21\u5757 MPU-6050 \u6a21\u5757\u6709 8 \u4e2a\u5f15\u811a\uff0c INT\uff1a\u4e2d\u65ad\u8f93\u51fa\u5f15\u811a\u3002\u4f20\u611f\u5668\u6570\u636e\u53ef\u8bfb\u65f6\u4e3a\u9ad8\u3002 AD0\uff1a I2C \u4ece\u5730\u5740 LSB \u5f15\u811a\u3002\u8fd9\u662f\u8bbe\u5907\u7684 7 \u4f4d\u4ece\u5730\u5740\u4e2d\u7684\u7b2c 0 \u4f4d\u3002\u5982\u679c\u8fde\u63a5\u5230 VCC\uff0c\u90a3\u4e48\u5b83\u88ab\u8bfb\u53d6\u4e3a\u903b\u8f91 1\uff0c\u9ed8\u8ba4\u4e3a0\u3002\u56e0\u6b64\u6a21\u5757\u7684\u9ed8\u8ba4I2C\u5730\u5740\u4e3a 0x68\u3002\u5982\u679c\u5c06AD0\u63a5VCC\uff0c\u5219I2C\u5730\u5740\u4e3a 0x69\uff0c\u8fd9\u6837\u4e00\u4e2aMCU\u53ef\u4ee5\u8fde\u63a5\u4e24\u4e2aMPU6050\u3002 XCL\uff1a\u8f85\u52a9\u4e32\u884c\u65f6\u949f\u5f15\u811a\u3002\u6b64\u5f15\u811a\u7528\u4e8e\u5c06\u5176\u4ed6\u542f\u7528 I2C \u63a5\u53e3\u7684\u4f20\u611f\u5668 SCL \u5f15\u811a\u8fde\u63a5\u5230 MPU-6050\u3002 XDA\uff1a\u8f85\u52a9\u4e32\u884c\u6570\u636e\u5f15\u811a\u3002\u6b64\u5f15\u811a\u7528\u4e8e\u5c06\u5176\u4ed6\u542f\u7528 I2C \u63a5\u53e3\u7684\u4f20\u611f\u5668 SDA \u5f15\u811a\u8fde\u63a5\u5230 MPU-6050\u3002 SCL\uff1a\u4e32\u884c\u65f6\u949f\u5f15\u811a\u3002\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230\u5fae\u63a7\u5236\u5668 SCL \u5f15\u811a\u3002 SDA\uff1a\u4e32\u884c\u6570\u636e\u5f15\u811a\u3002\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230\u5fae\u63a7\u5236\u5668 SDA \u5f15\u811a\u3002 GND\uff1a\u63a5\u5730\u5f15\u811a\u3002\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230\u63a5\u5730\u8fde\u63a5\u3002 VCC\uff1a\u7535\u6e90\u5f15\u811a\u3002\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230 +3 ~ 5V \u76f4\u6d41\u7535\u6e90\u3002 \u8be5\u6a21\u5757\u4e24\u4e2a\u8f85\u52a9\u5f15\u811aXDA, XCL\uff0c\u53ef\u7528\u4e8e\u8fde\u63a5\u5916\u90e8IIC\u6a21\u5757\uff0c\u59823 \u8f74\u78c1\u529b\u8ba1\u3001\u538b\u529b\u4f20\u611f\u5668\u7b49\u8fdb\u884c\u901a\u4fe1\u3002\u5982\u679c\u5c06 3 \u8f74\u78c1\u529b\u8ba1\u8fde\u63a5\u5230\u8f85\u52a9 I2C \u603b\u7ebf\uff0c\u5219 MPU6050 \u53ef\u4ee5\u63d0\u4f9b\u5b8c\u6574\u7684 9 \u8f74 Motion Fusion \u8f93\u51fa\u3002 MPU-6050 \u6a21\u5757\u6709 Slave \u5730\u5740\uff08\u5f53 AD0 = 0 \u65f6\uff0c\u5373\u5b83\u4e0d\u8fde\u63a5\u5230 Vcc\uff09\u4e3a\uff0c \u4ece\u673a\u5199\u5730\u5740(SLA+W) : 0xD0 \u4ece\u673a\u8bfb\u5730\u5740(SLA+R) : 0xD1 MPU-6050 \u6709\u5404\u79cd\u5bc4\u5b58\u5668\u6765\u63a7\u5236\u548c\u914d\u7f6e\u5176\u64cd\u4f5c\u6a21\u5f0f\u3002\u56e0\u6b64\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb MPU-6050 \u89c4\u683c\u4e66 \u548c MPU-6050 \u5bc4\u5b58\u5668\u6620\u5c04 \u3002 Arduino\u548cMPU6050\u7684\u8fde\u63a5\u65b9\u6cd5 \u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528Arduino\u8fde\u63a5\u548c\u8bfb\u53d6MPU6050\u4f20\u611f\u5668\u7684\u6570\u636e\u3002\u6211\u4eec\u4f7f\u7528I2C\u534f\u8bae\u4e0eArduino\u8fdb\u884c\u901a\u4fe1\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4e24\u6761\u7ebf\u8fdb\u884c\u8fde\u63a5\uff0c\u53e6\u5916\u8fd8\u6709\u4e24\u6761\u7ebf\u7528\u4e8e\u4f9b\u7535\u3002 Arduino\u548cMPU6050\u8fde\u63a5\u7535\u8def\u56fe MPU6050\u7684Arduino\u4ee3\u7801 \u4ee5\u4e0b\u662f\u7528\u4e8e\u4eceMPU6050\u4f20\u611f\u5668\u8bfb\u53d6\u6570\u636e\u7684Arduino\u4ee3\u7801\u3002\u5728\u4ee3\u7801\u4e0b\u65b9\uff0c\u60a8\u53ef\u4ee5\u627e\u5230\u5b83\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 /* Arduino and MPU6050 Accelerometer and Gyroscope Sensor Tutorial */ #include <Wire.h> const int MPU = 0x68 ; // MPU6050 I2C address float AccX , AccY , AccZ ; float GyroX , GyroY , GyroZ ; float accAngleX , accAngleY , gyroAngleX , gyroAngleY , gyroAngleZ ; float roll , pitch , yaw ; float AccErrorX , AccErrorY , GyroErrorX , GyroErrorY , GyroErrorZ ; float elapsedTime , currentTime , previousTime ; int c = 0 ; void setup () { Serial . begin ( 19200 ); Wire . begin (); // Initialize comunication Wire . beginTransmission ( MPU ); // Start communication with MPU6050 // MPU=0x68 Wire . write ( 0x6B ); // Talk to the register 6B Wire . write ( 0x00 ); // Make reset - place a 0 into the 6B register Wire . endTransmission ( true ); //end the transmission /* // Configure Accelerometer Sensitivity - Full Scale Range (default +/- 2g) Wire.beginTransmission(MPU); Wire.write(0x1C); //Talk to the ACCEL_CONFIG register (1C hex) Wire.write(0x10); //Set the register bits as 00010000 (+/- 8g full scale range) Wire.endTransmission(true); // Configure Gyro Sensitivity - Full Scale Range (default +/- 250deg/s) Wire.beginTransmission(MPU); Wire.write(0x1B); // Talk to the GYRO_CONFIG register (1B hex) Wire.write(0x10); // Set the register bits as 00010000 (1000deg/s full scale) Wire.endTransmission(true); delay(20); */ // Call this function if you need to get the IMU error values for your module calculate_IMU_error (); delay ( 20 ); } void loop () { // === Read acceleromter data === // Wire . beginTransmission ( MPU ); Wire . write ( 0x3B ); // Start with register 0x3B (ACCEL_XOUT_H) Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); // Read 6 registers total, each axis value is stored in 2 registers //For a range of +-2g, we need to divide the raw values by 16384, according to the datasheet AccX = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // X-axis value AccY = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Y-axis value AccZ = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Z-axis value // Calculating Roll and Pitch from the accelerometer data accAngleX = ( atan ( AccY / sqrt ( pow ( AccX , 2 ) + pow ( AccZ , 2 ))) * 180 / PI ) - 0.58 ; // AccErrorX ~(0.58) See the calculate_IMU_error()custom function for more details accAngleY = ( atan ( -1 * AccX / sqrt ( pow ( AccY , 2 ) + pow ( AccZ , 2 ))) * 180 / PI ) + 1.58 ; // AccErrorY ~(-1.58) // === Read gyroscope data === // previousTime = currentTime ; // Previous time is stored before the actual time read currentTime = millis (); // Current time actual time read elapsedTime = ( currentTime - previousTime ) / 1000 ; // Divide by 1000 to get seconds Wire . beginTransmission ( MPU ); Wire . write ( 0x43 ); // Gyro data first register address 0x43 Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); // Read 4 registers total, each axis value is stored in 2 registers GyroX = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; // For a 250deg/s range we have to divide first the raw value by 131.0, according to the datasheet GyroY = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; GyroZ = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; // Correct the outputs with the calculated error values GyroX = GyroX + 0.56 ; // GyroErrorX ~(-0.56) GyroY = GyroY - 2 ; // GyroErrorY ~(2) GyroZ = GyroZ + 0.79 ; // GyroErrorZ ~ (-0.8) // Currently the raw values are in degrees per seconds, deg/s, so we need to multiply by sendonds (s) to get the angle in degrees gyroAngleX = gyroAngleX + GyroX * elapsedTime ; // deg/s * s = deg gyroAngleY = gyroAngleY + GyroY * elapsedTime ; yaw = yaw + GyroZ * elapsedTime ; // Complementary filter - combine acceleromter and gyro angle values roll = 0.96 * gyroAngleX + 0.04 * accAngleX ; pitch = 0.96 * gyroAngleY + 0.04 * accAngleY ; // Print the values on the serial monitor Serial . print ( roll ); Serial . print ( \"/\" ); Serial . print ( pitch ); Serial . print ( \"/\" ); Serial . println ( yaw ); } void calculate_IMU_error () { // We can call this funtion in the setup section to calculate the accelerometer and gyro data error. From here we will get the error values used in the above equations printed on the Serial Monitor. // Note that we should place the IMU flat in order to get the proper values, so that we then can the correct values // Read accelerometer values 200 times while ( c < 200 ) { Wire . beginTransmission ( MPU ); Wire . write ( 0x3B ); Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); AccX = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; AccY = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; AccZ = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Sum all readings AccErrorX = AccErrorX + (( atan (( AccY ) / sqrt ( pow (( AccX ), 2 ) + pow (( AccZ ), 2 ))) * 180 / PI )); AccErrorY = AccErrorY + (( atan ( -1 * ( AccX ) / sqrt ( pow (( AccY ), 2 ) + pow (( AccZ ), 2 ))) * 180 / PI )); c ++ ; } //Divide the sum by 200 to get the error value AccErrorX = AccErrorX / 200 ; AccErrorY = AccErrorY / 200 ; c = 0 ; // Read gyro values 200 times while ( c < 200 ) { Wire . beginTransmission ( MPU ); Wire . write ( 0x43 ); Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); GyroX = Wire . read () << 8 | Wire . read (); GyroY = Wire . read () << 8 | Wire . read (); GyroZ = Wire . read () << 8 | Wire . read (); // Sum all readings GyroErrorX = GyroErrorX + ( GyroX / 131.0 ); GyroErrorY = GyroErrorY + ( GyroY / 131.0 ); GyroErrorZ = GyroErrorZ + ( GyroZ / 131.0 ); c ++ ; } //Divide the sum by 200 to get the error value GyroErrorX = GyroErrorX / 200 ; GyroErrorY = GyroErrorY / 200 ; GyroErrorZ = GyroErrorZ / 200 ; // Print the error values on the Serial Monitor Serial . print ( \"AccErrorX: \" ); Serial . println ( AccErrorX ); Serial . print ( \"AccErrorY: \" ); Serial . println ( AccErrorY ); Serial . print ( \"GyroErrorX: \" ); Serial . println ( GyroErrorX ); Serial . print ( \"GyroErrorY: \" ); Serial . println ( GyroErrorY ); Serial . print ( \"GyroErrorZ: \" ); Serial . println ( GyroErrorZ ); } \u4ee3\u7801\u63cf\u8ff0\uff1a\u9996\u5148\u6211\u4eec\u9700\u8981\u5305\u542b\u7528\u4e8eI2C\u901a\u4fe1\u7684Wire.h\u5e93\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e9b\u5b58\u50a8\u6570\u636e\u6240\u9700\u7684\u53d8\u91cf\u3002 \u5728setup()\u51fd\u6570\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316wire\u5e93\u5e76\u901a\u8fc7\u7535\u6e90\u7ba1\u7406\u5bc4\u5b58\u5668\u590d\u4f4d\u4f20\u611f\u5668\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u67e5\u770b\u4f20\u611f\u5668\u7684 \u6570\u636e\u624b\u518c \uff0c\u4ece\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5bc4\u5b58\u5668\u5730\u5740\u3002 MPU6050\u7535\u6e90\u7ba1\u7406\u5bc4\u5b58\u56680x6B \u6b64\u5916\uff0c\u5982\u679c\u9700\u8981\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u914d\u7f6e\u5bc4\u5b58\u5668\u4e3a\u52a0\u901f\u5ea6\u8ba1\u548c\u9640\u87ba\u4eea\u9009\u62e9\u6ee1\u91cf\u7a0b\u8303\u56f4\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u52a0\u901f\u5ea6\u8ba1\u7684\u9ed8\u8ba4\u00b12g\u8303\u56f4\u548c\u9640\u87ba\u4eea\u7684250\u5ea6/\u79d2\u8303\u56f4\u3002 // Configure Accelerometer Sensitivity - Full Scale Range (default +/- 2g) Wire . beginTransmission ( MPU ); Wire . write ( 0x1C ); //Talk to the ACCEL_CONFIG register (1C hex) Wire . write ( 0x10 ); //Set the register bits as 00010000 (+/- 8g full scale range) Wire . endTransmission ( true ); // Configure Gyro Sensitivity - Full Scale Range (default +/- 250deg/s) Wire . beginTransmission ( MPU ); Wire . write ( 0x1B ); // Talk to the GYRO_CONFIG register (1B hex) Wire . write ( 0x10 ); // Set the register bits as 00010000 (1000deg/s full scale) Wire . endTransmission ( true ); */ \u5728loop()\u51fd\u6570\u90e8\u5206\uff0c\u6211\u4eec\u9996\u5148\u8bfb\u53d6\u52a0\u901f\u5ea6\u8ba1\u7684\u6570\u636e\u3002 \u6bcf\u4e2a\u8f74\u7684\u6570\u636e\u5b58\u50a8\u5728\u4e24\u4e2a\u5b57\u8282\u6216\u5bc4\u5b58\u5668\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4f20\u611f\u5668\u7684\u6570\u636e\u624b\u518c\u4e2d\u770b\u5230\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u5730\u5740\u3002 MPU6050 imu\u52a0\u901f\u5ea6\u8ba1\u6570\u636e\u5bc4\u5b58\u5668 \u4e3a\u4e86\u5168\u90e8\u8bfb\u53d6\u5b83\u4eec\uff0c\u6211\u4eec\u4ece\u7b2c\u4e00\u4e2a\u5bc4\u5b58\u5668\u5f00\u59cb\uff0c\u7136\u540e\u4f7f\u7528requiestFrom()\u51fd\u6570\uff0c\u6211\u4eec\u8bf7\u6c42\u8bfb\u53d6X\u3001Y\u548cZ\u8f74\u7684\u6240\u67096\u4e2a\u5bc4\u5b58\u5668\u3002 \u7136\u540e\u6211\u4eec\u4ece\u6bcf\u4e2a\u5bc4\u5b58\u5668\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u4e14\u7531\u4e8e\u8f93\u51fa\u662f\u4e8c\u8fdb\u5236\u8865\u7801\uff0c\u6211\u4eec\u5c06\u5b83\u4eec\u76f8\u5e94\u5730\u7ec4\u5408\u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u503c\u3002 // === Read acceleromter data === // Wire . beginTransmission ( MPU ); Wire . write ( 0x3B ); // Start with register 0x3B (ACCEL_XOUT_H) Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); // Read 6 registers total, each axis value is stored in 2 registers //For a range of +-2g, we need to divide the raw values by 16384, according to the datasheet AccX = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // X-axis value AccY = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Y-axis value AccZ = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Z-axis value \u4e3a\u4e86\u83b7\u5f97-1g\u5230+ 1g\u7684\u8f93\u51fa\u503c\uff0c\u9002\u5408\u8ba1\u7b97\u89d2\u5ea6\uff0c\u6211\u4eec\u5c06\u8f93\u51fa\u9664\u4ee5\u5148\u524d\u9009\u62e9\u7684\u7075\u654f\u5ea6\u3002 mpu6050\u52a0\u901f\u5ea6\u8ba1\u7075\u654f\u5ea6\u6ee1\u91cf\u7a0b\u8303\u56f4 \u6700\u540e\uff0c\u4f7f\u7528\u8fd9 \u4e24\u4e2a\u516c\u5f0f \uff0c\u6211\u4eec\u4ece\u52a0\u901f\u5ea6\u8ba1\u6570\u636e\u8ba1\u7b97\u6eda\u8f6c\u89d2\u548c\u4fef\u4ef0\u89d2\u3002 accAngleX = ( atan ( AccY / sqrt ( pow ( AccX , 2 ) + pow ( AccZ , 2 ))) * 180 / PI ) - 0.58 ; // AccErrorX ~(0.58) See the calculate_IMU_error()custom function for more details accAngleY = ( atan ( -1 * AccX / sqrt ( pow ( AccY , 2 ) + pow ( AccZ , 2 ))) * 180 / PI ) + 1.58 ; // AccErrorY ~(-1.58) \u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u6211\u4eec\u5f97\u5230\u9640\u87ba\u4eea\u6570\u636e\u3002 \u6211\u4eec\u8bfb\u53d6\u4e86\u516d\u4e2a\u9640\u87ba\u4eea\u5bc4\u5b58\u5668\uff0c\u9002\u5f53\u5730\u7ec4\u5408\u5b83\u4eec\u7684\u6570\u636e\u5e76\u5c06\u5176\u9664\u4ee5\u5148\u524d\u9009\u62e9\u7684\u7075\u654f\u5ea6\uff0c\u4ee5\u4fbf\u4ee5\u6bcf\u79d2\u7684\u5ea6\u6570\u83b7\u5f97\u8f93\u51fa\u3002 // === Read gyroscope data === // previousTime = currentTime ; // Previous time is stored before the actual time read currentTime = millis (); // Current time actual time read elapsedTime = ( currentTime - previousTime ) / 1000 ; // Divide by 1000 to get seconds Wire . beginTransmission ( MPU ); Wire . write ( 0x43 ); // Gyro data first register address 0x43 Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); // Read 4 registers total, each axis value is stored in 2 registers GyroX = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; // For a 250deg/s range we have to divide first the raw value by 131.0, according to the datasheet GyroY = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; GyroZ = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; \u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u6ce8\u610f\u5230\u6211\u7528\u4e00\u4e9b\u5c0f\u7684\u8ba1\u7b97\u8bef\u5dee\u503c\u6765\u6821\u6b63\u8f93\u51fa\u503c\uff0c\u6211\u5c06\u5728\u63a5\u4e0b\u6765\u89e3\u91ca\u5b83\u4eec\u662f\u5982\u4f55\u5f97\u5230\u5b83\u4eec\u7684\u3002 \u56e0\u6b64\uff0c\u5f53\u8f93\u51fa\u4ee5\u5ea6/\u79d2\u4e3a\u5355\u4f4d\u65f6\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u4e0e\u65f6\u95f4\u76f8\u4e58\u4ee5\u5f97\u5230\u5ea6\u6570\u3002 \u4f7f\u7528millis()\u51fd\u6570\u5728\u6bcf\u6b21\u8bfb\u53d6\u8fed\u4ee3\u4e4b\u524d\u6355\u83b7\u65f6\u95f4\u503c\u3002 // Correct the outputs with the calculated error values GyroX = GyroX + 0.56 ; // GyroErrorX ~(-0.56) GyroY = GyroY - 2 ; // GyroErrorY ~(2) GyroZ = GyroZ + 0.79 ; // GyroErrorZ ~ (-0.8) // Currently the raw values are in degrees per seconds, deg/s, so we need to multiply by sendonds (s) to get the angle in degrees gyroAngleX = gyroAngleX + GyroX * elapsedTime ; // deg/s * s = deg gyroAngleY = gyroAngleY + GyroY * elapsedTime ; yaw = yaw + GyroZ * elapsedTime ; \u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u4e92\u8865\u6ee4\u6ce2\u5668\u878d\u5408\u52a0\u901f\u5ea6\u8ba1\u548c\u9640\u87ba\u4eea\u6570\u636e\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u91c7\u752896\uff05\u7684\u9640\u87ba\u4eea\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u51c6\u786e\uff0c\u4e0d\u4f1a\u53d7\u5230\u5916\u529b\u7684\u5f71\u54cd\u3002\u9640\u87ba\u4eea\u7684\u7f3a\u70b9\u662f\u5b58\u5728\u6f02\u79fb\uff0c\u6216\u8005\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5728\u8f93\u51fa\u4e2d\u5f15\u5165\u8bef\u5dee\u3002\u56e0\u6b64\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6211\u4eec\u4f7f\u7528\u6765\u81ea\u52a0\u901f\u5ea6\u8ba1\u7684\u6570\u636e\uff0c\u672c\u4f8b\u4e3a4\uff05\uff0c\u8db3\u4ee5\u6d88\u9664\u9640\u87ba\u4eea\u7684\u6f02\u79fb\u8bef\u5dee\u3002 // Complementary filter - combine acceleromter and gyro angle values roll = 0.96 * gyroAngleX + 0.04 * accAngleX ; pitch = 0.96 * gyroAngleY + 0.04 * accAngleY ; \u4f46\u662f\uff0c\u7531\u4e8e\u6211\u4eec\u65e0\u6cd5\u4ece\u52a0\u901f\u5ea6\u8ba1\u6570\u636e\u8ba1\u7b97\u504f\u822a\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u5176\u4e0a\u5b9e\u73b0\u4e92\u8865\u6ee4\u6ce2\u5668\u3002 \u5728\u6211\u4eec\u770b\u4e00\u4e0b\u7ed3\u679c\u4e4b\u524d\uff0c\u8ba9\u6211\u5feb\u901f\u89e3\u91ca\u4e00\u4e0b\u5982\u4f55\u83b7\u5f97\u7ea0\u9519\u503c\u3002\u4e3a\u4e86\u8ba1\u7b97\u8fd9\u4e9b\u9519\u8bef\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4f20\u611f\u5668\u5904\u4e8e\u5e73\u5766\u9759\u6b62\u4f4d\u7f6e\u65f6\u8c03\u7528calculate_IMU_error()\u81ea\u5b9a\u4e49\u51fd\u6570\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4e3a\u6240\u6709\u8f93\u51fa\u505a\u4e86200\u4e2a\u8bfb\u6570\uff0c\u6211\u4eec\u5c06\u5b83\u4eec\u76f8\u52a0\u5e76\u5c06\u5b83\u4eec\u9664\u4ee5200\u3002\u7531\u4e8e\u6211\u4eec\u5c06\u4f20\u611f\u5668\u4fdd\u6301\u5728\u5e73\u5766\u9759\u6b62\u4f4d\u7f6e\uff0c\u56e0\u6b64\u9884\u671f\u8f93\u51fa\u503c\u5e94\u4e3a0\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u6b64\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4f20\u611f\u5668\u7684\u5e73\u5747\u8bef\u5dee\u3002 void calculate_IMU_error () { // We can call this funtion in the setup section to calculate the accelerometer and gyro data error. From here we will get the error values used in the above equations printed on the Serial Monitor. // Note that we should place the IMU flat in order to get the proper values, so that we then can the correct values // Read accelerometer values 200 times while ( c < 200 ) { Wire . beginTransmission ( MPU ); Wire . write ( 0x3B ); Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); AccX = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; AccY = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; AccZ = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Sum all readings AccErrorX = AccErrorX + (( atan (( AccY ) / sqrt ( pow (( AccX ), 2 ) + pow (( AccZ ), 2 ))) * 180 / PI )); AccErrorY = AccErrorY + (( atan ( -1 * ( AccX ) / sqrt ( pow (( AccY ), 2 ) + pow (( AccZ ), 2 ))) * 180 / PI )); c ++ ; } //Divide the sum by 200 to get the error value AccErrorX = AccErrorX / 200 ; AccErrorY = AccErrorY / 200 ; c = 0 ; // Read gyro values 200 times while ( c < 200 ) { Wire . beginTransmission ( MPU ); Wire . write ( 0x43 ); Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); GyroX = Wire . read () << 8 | Wire . read (); GyroY = Wire . read () << 8 | Wire . read (); GyroZ = Wire . read () << 8 | Wire . read (); // Sum all readings GyroErrorX = GyroErrorX + ( GyroX / 131.0 ); GyroErrorY = GyroErrorY + ( GyroY / 131.0 ); GyroErrorZ = GyroErrorZ + ( GyroZ / 131.0 ); c ++ ; } //Divide the sum by 200 to get the error value GyroErrorX = GyroErrorX / 200 ; GyroErrorY = GyroErrorY / 200 ; GyroErrorZ = GyroErrorZ / 200 ; // Print the error values on the Serial Monitor Serial . print ( \"AccErrorX: \" ); Serial . println ( AccErrorX ); Serial . print ( \"AccErrorY: \" ); Serial . println ( AccErrorY ); Serial . print ( \"GyroErrorX: \" ); Serial . println ( GyroErrorX ); Serial . print ( \"GyroErrorY: \" ); Serial . println ( GyroErrorY ); Serial . print ( \"GyroErrorZ: \" ); Serial . println ( GyroErrorZ ); } \u6211\u4eec\u53ea\u9700\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u6253\u5370\u8fd9\u4e9b\u503c\uff0c\u4e00\u65e6\u6211\u4eec\u77e5\u9053\u5b83\u4eec\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u524d\u9762\u6240\u793a\u7684\u4ee3\u7801\u4e2d\u5b9e\u73b0\u5b83\u4eec\uff0c\u7528\u4e8e\u6eda\u52a8\u548c\u4fef\u4ef0\u8ba1\u7b97\uff0c\u4ee5\u53ca3\u4e2a\u9640\u87ba\u4eea\u8f93\u51fa\u3002 MPU6050\u4fef\u4ef0\u6eda\u8f6c\u548c\u504f\u822a\u8f93\u51fa \u6700\u540e\uff0c\u4f7f\u7528Serial.print\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u6253\u5370Roll\u3001Pitch\u548cYaw\u503c\uff0c\u770b\u770b\u4f20\u611f\u5668\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u3002 \u6e2c\u8a66I2C\u662f\u5426\u9023\u63a5\u59a5\u7576 \u4f7f\u7528i2c_scanner sketch\u6e2c\u8a66I2C\u662f\u5426\u88dd\u7f6e\u59a5\u7576 http://playground.arduino.cc//Main/I2cScanner \u57f7\u884ci2c_scanner sketch\uff0c\u7d42\u7aef\u6a5f\u6703\u51fa\u73fe\u6240\u5075\u6e2c\u5230\u7684i2c\u88dd\u7f6e\u4f4d\u5740\u3002","title":"MPU6050\u52a0\u901f\u5ea6\u8ba1 \u9640\u87ba\u4eea\u4f20\u611f\u5668"},{"location":"ESP32/MPU6050%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%20%E9%99%80%E8%9E%BA%E4%BB%AA%E4%BC%A0%E6%84%9F%E5%99%A8/#mpu6050","text":"MPU6050\u662f\u4e00\u79cd\u5fae\u7535\u5b50\u673a\u68b0\u7cfb\u7edf\uff08MEMS\uff09\uff0c\u5728\u5355\u82af\u7247\u4e0a\u96c6\u6210\u4e86\u4e00\u4e2a3\u8f74\u52a0\u901f\u5ea6\u8ba1\u548c\u4e00\u4e2a3\u8f74\u9640\u87ba\u4eea\uff0c\u8fd8\u6709\u6e29\u5ea6\u4f20\u611f\u5668\uff0c\u4f7f\u7528I2C \u901a\u4fe1\u63a5\u53e3\u3002 \u5b83\u53ef\u4ee5\u6d4b\u91cf\uff1a \u52a0\u901f\u5ea6 \u901f\u5ea6 \u65b9\u5411 \u79fb\u4f4d \u6e29\u5ea6 MPU6050 IMU\u4e5f\u79f0\u4e3a\u516d\u8f74\u8fd0\u52a8\u8ddf\u8e2a\u8bbe\u5907\u62166 DoF\uff08\u516d\u81ea\u7531\u5ea6\uff09\u8bbe\u5907\uff0c\u56e0\u4e3a\u5b83\u67096\u4e2a\u8f93\u51fa\uff0c\u53733\u4e2a\u52a0\u901f\u5ea6\u8ba1\u8f93\u51fa\u548c3\u4e2a\u9640\u87ba\u4eea\u8f93\u51fa\u3002 MPU6050\u52a0\u901f\u5ea6\u8ba1\u6d4b\u91cf\u52a0\u901f\u5ea6\u7684\u65b9\u5f0f\u4e0eADXL345\u52a0\u901f\u5ea6\u4f20\u611f\u5668\u76f8\u540c\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u53ef\u4ee5\u6d4b\u91cf\u6cbf3\u4e2a\u8f74\u7684\u52a0\u901f\u5ea6\uff0c\u7ed3\u5408\u4e00\u4e9b\u4e09\u89d2\u5b66\u6570\u5b66\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u4f20\u611f\u5668\u5b9a\u4f4d\u7684\u89d2\u5ea6\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u878d\u5408\u6216\u7ec4\u5408\u52a0\u901f\u5ea6\u8ba1\u548c\u9640\u87ba\u4eea\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u6709\u5173\u4f20\u611f\u5668\u65b9\u5411\u7684\u975e\u5e38\u51c6\u786e\u7684\u4fe1\u606f\u3002","title":"MPU6050\u4ecb\u7d39"},{"location":"ESP32/MPU6050%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%20%E9%99%80%E8%9E%BA%E4%BB%AA%E4%BC%A0%E6%84%9F%E5%99%A8/#_1","text":"MPU6050 \u7531\u91c7\u7528\u5fae\u673a\u7535\u7cfb\u7edf (MEMS) \u6280\u672f\u7684 3 \u8f74\u9640\u87ba\u4eea\u7ec4\u6210\u3002\u7528\u4e8e\u68c0\u6d4b\u6cbf X\u3001Y\u3001Z \u8f74\u7684\u65cb\u8f6c\u901f\u5ea6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5f53\u9640\u87ba\u4eea\u56f4\u7ed5\u4efb\u4f55\u4f20\u611f\u8f74\u65cb\u8f6c\u65f6\uff0c\u79d1\u91cc\u5965\u5229\u6548\u5e94\u4f1a\u5f15\u8d77\u632f\u52a8\uff0cMPU6050 \u5185\u90e8\u7684 MEM \u4f1a\u68c0\u6d4b\u5230\u8be5\u632f\u52a8\u3002 \u4ea7\u751f\u7684\u4fe1\u53f7\u88ab\u653e\u5927\u3001\u89e3\u8c03\u548c\u8fc7\u6ee4\u4ee5\u4ea7\u751f\u4e0e\u89d2\u901f\u7387\u6210\u6b63\u6bd4\u7684\u7535\u538b\u3002 \u8be5\u7535\u538b\u4f7f\u7528 16 \u4f4d ADC \u8fdb\u884c\u6570\u5b57\u5316\u4ee5\u5bf9\u6bcf\u4e2a\u8f74\u8fdb\u884c\u91c7\u6837\u3002 \u8f93\u51fa\u7684\u6ee1\u91cf\u7a0b\u8303\u56f4\u4e3a +/- 250\u3001+/- 500\u3001+/- 1000\u3001+/- 2000\u3002 \u9640\u87ba\u4eea\u8f93\u51fa\u5404\u8f74\u89d2\u901f\u5ea6\uff0c\u5355\u4f4d\u4e3a\u5ea6/\u6bcf\u79d2\u3002 \u56e0\u6b64\u4e3a\u4e86\u83b7\u5f97\u89d2\u5ea6\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u79ef\u5206\u3002","title":"\u4e09\u8f74\u9640\u87ba\u4eea"},{"location":"ESP32/MPU6050%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%20%E9%99%80%E8%9E%BA%E4%BB%AA%E4%BC%A0%E6%84%9F%E5%99%A8/#_2","text":"MPU6050 \u7531\u91c7\u7528\u5fae\u673a\u7535 (MEMS) \u6280\u672f\u7684 3 \u8f74\u52a0\u901f\u5ea6\u8ba1\u7ec4\u6210\u3002\u5b83\u7528\u4e8e\u68c0\u6d4b\u6cbf X\u3001Y \u548c Z \u8f74\u7684\u503e\u659c\u6216\u503e\u659c\u89d2\u5ea6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6cbf\u8f74\u7684\u52a0\u901f\u5ea6\u4f7f\u53ef\u79fb\u52a8\u8d28\u91cf\u504f\u8f6c\u3002 \u79fb\u52a8\u677f\uff08\u8d28\u91cf\uff09\u7684\u8fd9\u79cd\u4f4d\u79fb\u4f7f\u5dee\u5206\u7535\u5bb9\u5668\u4e0d\u5e73\u8861\uff0c\u4ece\u800c\u5bfc\u81f4\u4f20\u611f\u5668\u8f93\u51fa\u3002\u8f93\u51fa\u5e45\u5ea6\u4e0e\u52a0\u901f\u5ea6\u6210\u6b63\u6bd4\u3002 16 \u4f4d ADC \u7528\u4e8e\u83b7\u5f97\u6570\u5b57\u5316\u8f93\u51fa\u3002 \u52a0\u901f\u5ea6\u7684\u6ee1\u91cf\u7a0b\u8303\u56f4\u4e3a +/- 2g\u3001+/- 4g\u3001+/- 8g\u3001+/- 16g\u3002 \u5b83\u4ee5 g\uff08\u91cd\u529b\uff09\u4e3a\u5355\u4f4d\u6d4b\u91cf\u3002 \u5f53\u8bbe\u5907\u653e\u7f6e\u5728\u5e73\u9762\u4e0a\u65f6\uff0c\u5b83\u5c06\u5728 X \u548c Y \u8f74\u4e0a\u6d4b\u91cf 0g\uff0c\u5728 Z \u8f74\u4e0a\u6d4b\u91cf +1g\u3002","title":"\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1"},{"location":"ESP32/MPU6050%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%20%E9%99%80%E8%9E%BA%E4%BB%AA%E4%BC%A0%E6%84%9F%E5%99%A8/#dmp","text":"\u5d4c\u5165\u5f0f\u6570\u5b57\u8fd0\u52a8\u5904\u7406\u5668 (DMP) \u7528\u4e8e\u8ba1\u7b97\u8fd0\u52a8\u5904\u7406\u7b97\u6cd5\u3002\u5b83\u4ece\u9640\u87ba\u4eea\u3001\u52a0\u901f\u5ea6\u8ba1\u548c\u989d\u5916\u7684 3rd \u65b9\u4f20\u611f\u5668\uff08\u5982\u78c1\u529b\u8ba1\uff09\u83b7\u53d6\u6570\u636e\u5e76\u5904\u7406\u6570\u636e\u3002\u5b83\u63d0\u4f9b\u4e86\u6eda\u52a8\u3001\u4fef\u4ef0\u3001\u504f\u822a\u89d2\u3001\u6a2a\u5411\u548c\u7eb5\u5411\u611f\u7b49\u8fd0\u52a8\u6570\u636e\u3002\u5b83\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u4e3b\u673a\u8ba1\u7b97\u8fd0\u52a8\u6570\u636e\u7684\u8fc7\u7a0b\u3002\u7ed3\u679c\u6570\u636e\u53ef\u4ee5\u4ece DMP \u5bc4\u5b58\u5668\u4e2d\u8bfb\u53d6\u3002","title":"DMP\uff08\u6570\u5b57\u8fd0\u52a8\u5904\u7406\u5668\uff09"},{"location":"ESP32/MPU6050%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%20%E9%99%80%E8%9E%BA%E4%BB%AA%E4%BC%A0%E6%84%9F%E5%99%A8/#_3","text":"\u7247\u4e0a\u6e29\u5ea6\u4f20\u611f\u5668\u8f93\u51fa\u4f7f\u7528 ADC \u6570\u5b57\u5316\u3002\u6e29\u5ea6\u4f20\u611f\u5668\u7684\u8bfb\u6570\u53ef\u4ee5\u4ece\u4f20\u611f\u5668\u6570\u636e\u5bc4\u5b58\u5668\u4e2d\u8bfb\u53d6\u3002","title":"\u7247\u4e0a\u6e29\u5ea6\u4f20\u611f\u5668"},{"location":"ESP32/MPU6050%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%20%E9%99%80%E8%9E%BA%E4%BB%AA%E4%BC%A0%E6%84%9F%E5%99%A8/#mpu6050_1","text":"MPU-6050 \u6a21\u5757\u6709 8 \u4e2a\u5f15\u811a\uff0c INT\uff1a\u4e2d\u65ad\u8f93\u51fa\u5f15\u811a\u3002\u4f20\u611f\u5668\u6570\u636e\u53ef\u8bfb\u65f6\u4e3a\u9ad8\u3002 AD0\uff1a I2C \u4ece\u5730\u5740 LSB \u5f15\u811a\u3002\u8fd9\u662f\u8bbe\u5907\u7684 7 \u4f4d\u4ece\u5730\u5740\u4e2d\u7684\u7b2c 0 \u4f4d\u3002\u5982\u679c\u8fde\u63a5\u5230 VCC\uff0c\u90a3\u4e48\u5b83\u88ab\u8bfb\u53d6\u4e3a\u903b\u8f91 1\uff0c\u9ed8\u8ba4\u4e3a0\u3002\u56e0\u6b64\u6a21\u5757\u7684\u9ed8\u8ba4I2C\u5730\u5740\u4e3a 0x68\u3002\u5982\u679c\u5c06AD0\u63a5VCC\uff0c\u5219I2C\u5730\u5740\u4e3a 0x69\uff0c\u8fd9\u6837\u4e00\u4e2aMCU\u53ef\u4ee5\u8fde\u63a5\u4e24\u4e2aMPU6050\u3002 XCL\uff1a\u8f85\u52a9\u4e32\u884c\u65f6\u949f\u5f15\u811a\u3002\u6b64\u5f15\u811a\u7528\u4e8e\u5c06\u5176\u4ed6\u542f\u7528 I2C \u63a5\u53e3\u7684\u4f20\u611f\u5668 SCL \u5f15\u811a\u8fde\u63a5\u5230 MPU-6050\u3002 XDA\uff1a\u8f85\u52a9\u4e32\u884c\u6570\u636e\u5f15\u811a\u3002\u6b64\u5f15\u811a\u7528\u4e8e\u5c06\u5176\u4ed6\u542f\u7528 I2C \u63a5\u53e3\u7684\u4f20\u611f\u5668 SDA \u5f15\u811a\u8fde\u63a5\u5230 MPU-6050\u3002 SCL\uff1a\u4e32\u884c\u65f6\u949f\u5f15\u811a\u3002\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230\u5fae\u63a7\u5236\u5668 SCL \u5f15\u811a\u3002 SDA\uff1a\u4e32\u884c\u6570\u636e\u5f15\u811a\u3002\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230\u5fae\u63a7\u5236\u5668 SDA \u5f15\u811a\u3002 GND\uff1a\u63a5\u5730\u5f15\u811a\u3002\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230\u63a5\u5730\u8fde\u63a5\u3002 VCC\uff1a\u7535\u6e90\u5f15\u811a\u3002\u5c06\u6b64\u5f15\u811a\u8fde\u63a5\u5230 +3 ~ 5V \u76f4\u6d41\u7535\u6e90\u3002 \u8be5\u6a21\u5757\u4e24\u4e2a\u8f85\u52a9\u5f15\u811aXDA, XCL\uff0c\u53ef\u7528\u4e8e\u8fde\u63a5\u5916\u90e8IIC\u6a21\u5757\uff0c\u59823 \u8f74\u78c1\u529b\u8ba1\u3001\u538b\u529b\u4f20\u611f\u5668\u7b49\u8fdb\u884c\u901a\u4fe1\u3002\u5982\u679c\u5c06 3 \u8f74\u78c1\u529b\u8ba1\u8fde\u63a5\u5230\u8f85\u52a9 I2C \u603b\u7ebf\uff0c\u5219 MPU6050 \u53ef\u4ee5\u63d0\u4f9b\u5b8c\u6574\u7684 9 \u8f74 Motion Fusion \u8f93\u51fa\u3002 MPU-6050 \u6a21\u5757\u6709 Slave \u5730\u5740\uff08\u5f53 AD0 = 0 \u65f6\uff0c\u5373\u5b83\u4e0d\u8fde\u63a5\u5230 Vcc\uff09\u4e3a\uff0c \u4ece\u673a\u5199\u5730\u5740(SLA+W) : 0xD0 \u4ece\u673a\u8bfb\u5730\u5740(SLA+R) : 0xD1 MPU-6050 \u6709\u5404\u79cd\u5bc4\u5b58\u5668\u6765\u63a7\u5236\u548c\u914d\u7f6e\u5176\u64cd\u4f5c\u6a21\u5f0f\u3002\u56e0\u6b64\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb MPU-6050 \u89c4\u683c\u4e66 \u548c MPU-6050 \u5bc4\u5b58\u5668\u6620\u5c04 \u3002","title":"MPU6050\u6a21\u5757"},{"location":"ESP32/MPU6050%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%20%E9%99%80%E8%9E%BA%E4%BB%AA%E4%BC%A0%E6%84%9F%E5%99%A8/#arduinompu6050","text":"\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528Arduino\u8fde\u63a5\u548c\u8bfb\u53d6MPU6050\u4f20\u611f\u5668\u7684\u6570\u636e\u3002\u6211\u4eec\u4f7f\u7528I2C\u534f\u8bae\u4e0eArduino\u8fdb\u884c\u901a\u4fe1\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4e24\u6761\u7ebf\u8fdb\u884c\u8fde\u63a5\uff0c\u53e6\u5916\u8fd8\u6709\u4e24\u6761\u7ebf\u7528\u4e8e\u4f9b\u7535\u3002 Arduino\u548cMPU6050\u8fde\u63a5\u7535\u8def\u56fe","title":"Arduino\u548cMPU6050\u7684\u8fde\u63a5\u65b9\u6cd5"},{"location":"ESP32/MPU6050%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%20%E9%99%80%E8%9E%BA%E4%BB%AA%E4%BC%A0%E6%84%9F%E5%99%A8/#mpu6050arduino","text":"\u4ee5\u4e0b\u662f\u7528\u4e8e\u4eceMPU6050\u4f20\u611f\u5668\u8bfb\u53d6\u6570\u636e\u7684Arduino\u4ee3\u7801\u3002\u5728\u4ee3\u7801\u4e0b\u65b9\uff0c\u60a8\u53ef\u4ee5\u627e\u5230\u5b83\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 /* Arduino and MPU6050 Accelerometer and Gyroscope Sensor Tutorial */ #include <Wire.h> const int MPU = 0x68 ; // MPU6050 I2C address float AccX , AccY , AccZ ; float GyroX , GyroY , GyroZ ; float accAngleX , accAngleY , gyroAngleX , gyroAngleY , gyroAngleZ ; float roll , pitch , yaw ; float AccErrorX , AccErrorY , GyroErrorX , GyroErrorY , GyroErrorZ ; float elapsedTime , currentTime , previousTime ; int c = 0 ; void setup () { Serial . begin ( 19200 ); Wire . begin (); // Initialize comunication Wire . beginTransmission ( MPU ); // Start communication with MPU6050 // MPU=0x68 Wire . write ( 0x6B ); // Talk to the register 6B Wire . write ( 0x00 ); // Make reset - place a 0 into the 6B register Wire . endTransmission ( true ); //end the transmission /* // Configure Accelerometer Sensitivity - Full Scale Range (default +/- 2g) Wire.beginTransmission(MPU); Wire.write(0x1C); //Talk to the ACCEL_CONFIG register (1C hex) Wire.write(0x10); //Set the register bits as 00010000 (+/- 8g full scale range) Wire.endTransmission(true); // Configure Gyro Sensitivity - Full Scale Range (default +/- 250deg/s) Wire.beginTransmission(MPU); Wire.write(0x1B); // Talk to the GYRO_CONFIG register (1B hex) Wire.write(0x10); // Set the register bits as 00010000 (1000deg/s full scale) Wire.endTransmission(true); delay(20); */ // Call this function if you need to get the IMU error values for your module calculate_IMU_error (); delay ( 20 ); } void loop () { // === Read acceleromter data === // Wire . beginTransmission ( MPU ); Wire . write ( 0x3B ); // Start with register 0x3B (ACCEL_XOUT_H) Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); // Read 6 registers total, each axis value is stored in 2 registers //For a range of +-2g, we need to divide the raw values by 16384, according to the datasheet AccX = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // X-axis value AccY = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Y-axis value AccZ = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Z-axis value // Calculating Roll and Pitch from the accelerometer data accAngleX = ( atan ( AccY / sqrt ( pow ( AccX , 2 ) + pow ( AccZ , 2 ))) * 180 / PI ) - 0.58 ; // AccErrorX ~(0.58) See the calculate_IMU_error()custom function for more details accAngleY = ( atan ( -1 * AccX / sqrt ( pow ( AccY , 2 ) + pow ( AccZ , 2 ))) * 180 / PI ) + 1.58 ; // AccErrorY ~(-1.58) // === Read gyroscope data === // previousTime = currentTime ; // Previous time is stored before the actual time read currentTime = millis (); // Current time actual time read elapsedTime = ( currentTime - previousTime ) / 1000 ; // Divide by 1000 to get seconds Wire . beginTransmission ( MPU ); Wire . write ( 0x43 ); // Gyro data first register address 0x43 Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); // Read 4 registers total, each axis value is stored in 2 registers GyroX = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; // For a 250deg/s range we have to divide first the raw value by 131.0, according to the datasheet GyroY = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; GyroZ = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; // Correct the outputs with the calculated error values GyroX = GyroX + 0.56 ; // GyroErrorX ~(-0.56) GyroY = GyroY - 2 ; // GyroErrorY ~(2) GyroZ = GyroZ + 0.79 ; // GyroErrorZ ~ (-0.8) // Currently the raw values are in degrees per seconds, deg/s, so we need to multiply by sendonds (s) to get the angle in degrees gyroAngleX = gyroAngleX + GyroX * elapsedTime ; // deg/s * s = deg gyroAngleY = gyroAngleY + GyroY * elapsedTime ; yaw = yaw + GyroZ * elapsedTime ; // Complementary filter - combine acceleromter and gyro angle values roll = 0.96 * gyroAngleX + 0.04 * accAngleX ; pitch = 0.96 * gyroAngleY + 0.04 * accAngleY ; // Print the values on the serial monitor Serial . print ( roll ); Serial . print ( \"/\" ); Serial . print ( pitch ); Serial . print ( \"/\" ); Serial . println ( yaw ); } void calculate_IMU_error () { // We can call this funtion in the setup section to calculate the accelerometer and gyro data error. From here we will get the error values used in the above equations printed on the Serial Monitor. // Note that we should place the IMU flat in order to get the proper values, so that we then can the correct values // Read accelerometer values 200 times while ( c < 200 ) { Wire . beginTransmission ( MPU ); Wire . write ( 0x3B ); Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); AccX = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; AccY = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; AccZ = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Sum all readings AccErrorX = AccErrorX + (( atan (( AccY ) / sqrt ( pow (( AccX ), 2 ) + pow (( AccZ ), 2 ))) * 180 / PI )); AccErrorY = AccErrorY + (( atan ( -1 * ( AccX ) / sqrt ( pow (( AccY ), 2 ) + pow (( AccZ ), 2 ))) * 180 / PI )); c ++ ; } //Divide the sum by 200 to get the error value AccErrorX = AccErrorX / 200 ; AccErrorY = AccErrorY / 200 ; c = 0 ; // Read gyro values 200 times while ( c < 200 ) { Wire . beginTransmission ( MPU ); Wire . write ( 0x43 ); Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); GyroX = Wire . read () << 8 | Wire . read (); GyroY = Wire . read () << 8 | Wire . read (); GyroZ = Wire . read () << 8 | Wire . read (); // Sum all readings GyroErrorX = GyroErrorX + ( GyroX / 131.0 ); GyroErrorY = GyroErrorY + ( GyroY / 131.0 ); GyroErrorZ = GyroErrorZ + ( GyroZ / 131.0 ); c ++ ; } //Divide the sum by 200 to get the error value GyroErrorX = GyroErrorX / 200 ; GyroErrorY = GyroErrorY / 200 ; GyroErrorZ = GyroErrorZ / 200 ; // Print the error values on the Serial Monitor Serial . print ( \"AccErrorX: \" ); Serial . println ( AccErrorX ); Serial . print ( \"AccErrorY: \" ); Serial . println ( AccErrorY ); Serial . print ( \"GyroErrorX: \" ); Serial . println ( GyroErrorX ); Serial . print ( \"GyroErrorY: \" ); Serial . println ( GyroErrorY ); Serial . print ( \"GyroErrorZ: \" ); Serial . println ( GyroErrorZ ); } \u4ee3\u7801\u63cf\u8ff0\uff1a\u9996\u5148\u6211\u4eec\u9700\u8981\u5305\u542b\u7528\u4e8eI2C\u901a\u4fe1\u7684Wire.h\u5e93\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e9b\u5b58\u50a8\u6570\u636e\u6240\u9700\u7684\u53d8\u91cf\u3002 \u5728setup()\u51fd\u6570\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316wire\u5e93\u5e76\u901a\u8fc7\u7535\u6e90\u7ba1\u7406\u5bc4\u5b58\u5668\u590d\u4f4d\u4f20\u611f\u5668\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u67e5\u770b\u4f20\u611f\u5668\u7684 \u6570\u636e\u624b\u518c \uff0c\u4ece\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5bc4\u5b58\u5668\u5730\u5740\u3002 MPU6050\u7535\u6e90\u7ba1\u7406\u5bc4\u5b58\u56680x6B \u6b64\u5916\uff0c\u5982\u679c\u9700\u8981\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u914d\u7f6e\u5bc4\u5b58\u5668\u4e3a\u52a0\u901f\u5ea6\u8ba1\u548c\u9640\u87ba\u4eea\u9009\u62e9\u6ee1\u91cf\u7a0b\u8303\u56f4\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u52a0\u901f\u5ea6\u8ba1\u7684\u9ed8\u8ba4\u00b12g\u8303\u56f4\u548c\u9640\u87ba\u4eea\u7684250\u5ea6/\u79d2\u8303\u56f4\u3002 // Configure Accelerometer Sensitivity - Full Scale Range (default +/- 2g) Wire . beginTransmission ( MPU ); Wire . write ( 0x1C ); //Talk to the ACCEL_CONFIG register (1C hex) Wire . write ( 0x10 ); //Set the register bits as 00010000 (+/- 8g full scale range) Wire . endTransmission ( true ); // Configure Gyro Sensitivity - Full Scale Range (default +/- 250deg/s) Wire . beginTransmission ( MPU ); Wire . write ( 0x1B ); // Talk to the GYRO_CONFIG register (1B hex) Wire . write ( 0x10 ); // Set the register bits as 00010000 (1000deg/s full scale) Wire . endTransmission ( true ); */ \u5728loop()\u51fd\u6570\u90e8\u5206\uff0c\u6211\u4eec\u9996\u5148\u8bfb\u53d6\u52a0\u901f\u5ea6\u8ba1\u7684\u6570\u636e\u3002 \u6bcf\u4e2a\u8f74\u7684\u6570\u636e\u5b58\u50a8\u5728\u4e24\u4e2a\u5b57\u8282\u6216\u5bc4\u5b58\u5668\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4f20\u611f\u5668\u7684\u6570\u636e\u624b\u518c\u4e2d\u770b\u5230\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u5730\u5740\u3002 MPU6050 imu\u52a0\u901f\u5ea6\u8ba1\u6570\u636e\u5bc4\u5b58\u5668 \u4e3a\u4e86\u5168\u90e8\u8bfb\u53d6\u5b83\u4eec\uff0c\u6211\u4eec\u4ece\u7b2c\u4e00\u4e2a\u5bc4\u5b58\u5668\u5f00\u59cb\uff0c\u7136\u540e\u4f7f\u7528requiestFrom()\u51fd\u6570\uff0c\u6211\u4eec\u8bf7\u6c42\u8bfb\u53d6X\u3001Y\u548cZ\u8f74\u7684\u6240\u67096\u4e2a\u5bc4\u5b58\u5668\u3002 \u7136\u540e\u6211\u4eec\u4ece\u6bcf\u4e2a\u5bc4\u5b58\u5668\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u4e14\u7531\u4e8e\u8f93\u51fa\u662f\u4e8c\u8fdb\u5236\u8865\u7801\uff0c\u6211\u4eec\u5c06\u5b83\u4eec\u76f8\u5e94\u5730\u7ec4\u5408\u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u503c\u3002 // === Read acceleromter data === // Wire . beginTransmission ( MPU ); Wire . write ( 0x3B ); // Start with register 0x3B (ACCEL_XOUT_H) Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); // Read 6 registers total, each axis value is stored in 2 registers //For a range of +-2g, we need to divide the raw values by 16384, according to the datasheet AccX = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // X-axis value AccY = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Y-axis value AccZ = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Z-axis value \u4e3a\u4e86\u83b7\u5f97-1g\u5230+ 1g\u7684\u8f93\u51fa\u503c\uff0c\u9002\u5408\u8ba1\u7b97\u89d2\u5ea6\uff0c\u6211\u4eec\u5c06\u8f93\u51fa\u9664\u4ee5\u5148\u524d\u9009\u62e9\u7684\u7075\u654f\u5ea6\u3002 mpu6050\u52a0\u901f\u5ea6\u8ba1\u7075\u654f\u5ea6\u6ee1\u91cf\u7a0b\u8303\u56f4 \u6700\u540e\uff0c\u4f7f\u7528\u8fd9 \u4e24\u4e2a\u516c\u5f0f \uff0c\u6211\u4eec\u4ece\u52a0\u901f\u5ea6\u8ba1\u6570\u636e\u8ba1\u7b97\u6eda\u8f6c\u89d2\u548c\u4fef\u4ef0\u89d2\u3002 accAngleX = ( atan ( AccY / sqrt ( pow ( AccX , 2 ) + pow ( AccZ , 2 ))) * 180 / PI ) - 0.58 ; // AccErrorX ~(0.58) See the calculate_IMU_error()custom function for more details accAngleY = ( atan ( -1 * AccX / sqrt ( pow ( AccY , 2 ) + pow ( AccZ , 2 ))) * 180 / PI ) + 1.58 ; // AccErrorY ~(-1.58) \u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u6211\u4eec\u5f97\u5230\u9640\u87ba\u4eea\u6570\u636e\u3002 \u6211\u4eec\u8bfb\u53d6\u4e86\u516d\u4e2a\u9640\u87ba\u4eea\u5bc4\u5b58\u5668\uff0c\u9002\u5f53\u5730\u7ec4\u5408\u5b83\u4eec\u7684\u6570\u636e\u5e76\u5c06\u5176\u9664\u4ee5\u5148\u524d\u9009\u62e9\u7684\u7075\u654f\u5ea6\uff0c\u4ee5\u4fbf\u4ee5\u6bcf\u79d2\u7684\u5ea6\u6570\u83b7\u5f97\u8f93\u51fa\u3002 // === Read gyroscope data === // previousTime = currentTime ; // Previous time is stored before the actual time read currentTime = millis (); // Current time actual time read elapsedTime = ( currentTime - previousTime ) / 1000 ; // Divide by 1000 to get seconds Wire . beginTransmission ( MPU ); Wire . write ( 0x43 ); // Gyro data first register address 0x43 Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); // Read 4 registers total, each axis value is stored in 2 registers GyroX = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; // For a 250deg/s range we have to divide first the raw value by 131.0, according to the datasheet GyroY = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; GyroZ = ( Wire . read () << 8 | Wire . read ()) / 131.0 ; \u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u6ce8\u610f\u5230\u6211\u7528\u4e00\u4e9b\u5c0f\u7684\u8ba1\u7b97\u8bef\u5dee\u503c\u6765\u6821\u6b63\u8f93\u51fa\u503c\uff0c\u6211\u5c06\u5728\u63a5\u4e0b\u6765\u89e3\u91ca\u5b83\u4eec\u662f\u5982\u4f55\u5f97\u5230\u5b83\u4eec\u7684\u3002 \u56e0\u6b64\uff0c\u5f53\u8f93\u51fa\u4ee5\u5ea6/\u79d2\u4e3a\u5355\u4f4d\u65f6\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u4e0e\u65f6\u95f4\u76f8\u4e58\u4ee5\u5f97\u5230\u5ea6\u6570\u3002 \u4f7f\u7528millis()\u51fd\u6570\u5728\u6bcf\u6b21\u8bfb\u53d6\u8fed\u4ee3\u4e4b\u524d\u6355\u83b7\u65f6\u95f4\u503c\u3002 // Correct the outputs with the calculated error values GyroX = GyroX + 0.56 ; // GyroErrorX ~(-0.56) GyroY = GyroY - 2 ; // GyroErrorY ~(2) GyroZ = GyroZ + 0.79 ; // GyroErrorZ ~ (-0.8) // Currently the raw values are in degrees per seconds, deg/s, so we need to multiply by sendonds (s) to get the angle in degrees gyroAngleX = gyroAngleX + GyroX * elapsedTime ; // deg/s * s = deg gyroAngleY = gyroAngleY + GyroY * elapsedTime ; yaw = yaw + GyroZ * elapsedTime ; \u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u4e92\u8865\u6ee4\u6ce2\u5668\u878d\u5408\u52a0\u901f\u5ea6\u8ba1\u548c\u9640\u87ba\u4eea\u6570\u636e\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u91c7\u752896\uff05\u7684\u9640\u87ba\u4eea\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u51c6\u786e\uff0c\u4e0d\u4f1a\u53d7\u5230\u5916\u529b\u7684\u5f71\u54cd\u3002\u9640\u87ba\u4eea\u7684\u7f3a\u70b9\u662f\u5b58\u5728\u6f02\u79fb\uff0c\u6216\u8005\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5728\u8f93\u51fa\u4e2d\u5f15\u5165\u8bef\u5dee\u3002\u56e0\u6b64\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6211\u4eec\u4f7f\u7528\u6765\u81ea\u52a0\u901f\u5ea6\u8ba1\u7684\u6570\u636e\uff0c\u672c\u4f8b\u4e3a4\uff05\uff0c\u8db3\u4ee5\u6d88\u9664\u9640\u87ba\u4eea\u7684\u6f02\u79fb\u8bef\u5dee\u3002 // Complementary filter - combine acceleromter and gyro angle values roll = 0.96 * gyroAngleX + 0.04 * accAngleX ; pitch = 0.96 * gyroAngleY + 0.04 * accAngleY ; \u4f46\u662f\uff0c\u7531\u4e8e\u6211\u4eec\u65e0\u6cd5\u4ece\u52a0\u901f\u5ea6\u8ba1\u6570\u636e\u8ba1\u7b97\u504f\u822a\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u5176\u4e0a\u5b9e\u73b0\u4e92\u8865\u6ee4\u6ce2\u5668\u3002 \u5728\u6211\u4eec\u770b\u4e00\u4e0b\u7ed3\u679c\u4e4b\u524d\uff0c\u8ba9\u6211\u5feb\u901f\u89e3\u91ca\u4e00\u4e0b\u5982\u4f55\u83b7\u5f97\u7ea0\u9519\u503c\u3002\u4e3a\u4e86\u8ba1\u7b97\u8fd9\u4e9b\u9519\u8bef\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4f20\u611f\u5668\u5904\u4e8e\u5e73\u5766\u9759\u6b62\u4f4d\u7f6e\u65f6\u8c03\u7528calculate_IMU_error()\u81ea\u5b9a\u4e49\u51fd\u6570\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4e3a\u6240\u6709\u8f93\u51fa\u505a\u4e86200\u4e2a\u8bfb\u6570\uff0c\u6211\u4eec\u5c06\u5b83\u4eec\u76f8\u52a0\u5e76\u5c06\u5b83\u4eec\u9664\u4ee5200\u3002\u7531\u4e8e\u6211\u4eec\u5c06\u4f20\u611f\u5668\u4fdd\u6301\u5728\u5e73\u5766\u9759\u6b62\u4f4d\u7f6e\uff0c\u56e0\u6b64\u9884\u671f\u8f93\u51fa\u503c\u5e94\u4e3a0\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u6b64\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4f20\u611f\u5668\u7684\u5e73\u5747\u8bef\u5dee\u3002 void calculate_IMU_error () { // We can call this funtion in the setup section to calculate the accelerometer and gyro data error. From here we will get the error values used in the above equations printed on the Serial Monitor. // Note that we should place the IMU flat in order to get the proper values, so that we then can the correct values // Read accelerometer values 200 times while ( c < 200 ) { Wire . beginTransmission ( MPU ); Wire . write ( 0x3B ); Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); AccX = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; AccY = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; AccZ = ( Wire . read () << 8 | Wire . read ()) / 16384.0 ; // Sum all readings AccErrorX = AccErrorX + (( atan (( AccY ) / sqrt ( pow (( AccX ), 2 ) + pow (( AccZ ), 2 ))) * 180 / PI )); AccErrorY = AccErrorY + (( atan ( -1 * ( AccX ) / sqrt ( pow (( AccY ), 2 ) + pow (( AccZ ), 2 ))) * 180 / PI )); c ++ ; } //Divide the sum by 200 to get the error value AccErrorX = AccErrorX / 200 ; AccErrorY = AccErrorY / 200 ; c = 0 ; // Read gyro values 200 times while ( c < 200 ) { Wire . beginTransmission ( MPU ); Wire . write ( 0x43 ); Wire . endTransmission ( false ); Wire . requestFrom ( MPU , 6 , true ); GyroX = Wire . read () << 8 | Wire . read (); GyroY = Wire . read () << 8 | Wire . read (); GyroZ = Wire . read () << 8 | Wire . read (); // Sum all readings GyroErrorX = GyroErrorX + ( GyroX / 131.0 ); GyroErrorY = GyroErrorY + ( GyroY / 131.0 ); GyroErrorZ = GyroErrorZ + ( GyroZ / 131.0 ); c ++ ; } //Divide the sum by 200 to get the error value GyroErrorX = GyroErrorX / 200 ; GyroErrorY = GyroErrorY / 200 ; GyroErrorZ = GyroErrorZ / 200 ; // Print the error values on the Serial Monitor Serial . print ( \"AccErrorX: \" ); Serial . println ( AccErrorX ); Serial . print ( \"AccErrorY: \" ); Serial . println ( AccErrorY ); Serial . print ( \"GyroErrorX: \" ); Serial . println ( GyroErrorX ); Serial . print ( \"GyroErrorY: \" ); Serial . println ( GyroErrorY ); Serial . print ( \"GyroErrorZ: \" ); Serial . println ( GyroErrorZ ); } \u6211\u4eec\u53ea\u9700\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u6253\u5370\u8fd9\u4e9b\u503c\uff0c\u4e00\u65e6\u6211\u4eec\u77e5\u9053\u5b83\u4eec\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u524d\u9762\u6240\u793a\u7684\u4ee3\u7801\u4e2d\u5b9e\u73b0\u5b83\u4eec\uff0c\u7528\u4e8e\u6eda\u52a8\u548c\u4fef\u4ef0\u8ba1\u7b97\uff0c\u4ee5\u53ca3\u4e2a\u9640\u87ba\u4eea\u8f93\u51fa\u3002 MPU6050\u4fef\u4ef0\u6eda\u8f6c\u548c\u504f\u822a\u8f93\u51fa \u6700\u540e\uff0c\u4f7f\u7528Serial.print\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u6253\u5370Roll\u3001Pitch\u548cYaw\u503c\uff0c\u770b\u770b\u4f20\u611f\u5668\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u3002 \u6e2c\u8a66I2C\u662f\u5426\u9023\u63a5\u59a5\u7576 \u4f7f\u7528i2c_scanner sketch\u6e2c\u8a66I2C\u662f\u5426\u88dd\u7f6e\u59a5\u7576 http://playground.arduino.cc//Main/I2cScanner \u57f7\u884ci2c_scanner sketch\uff0c\u7d42\u7aef\u6a5f\u6703\u51fa\u73fe\u6240\u5075\u6e2c\u5230\u7684i2c\u88dd\u7f6e\u4f4d\u5740\u3002","title":"MPU6050\u7684Arduino\u4ee3\u7801"},{"location":"ESP32/OFDM/","text":"\u6458\u8981 \u591a\u4e2a\u5b50\u8f7d\u6ce2\u5e73\u884c\u4f20\u8f93\u3002\u4f20\u8f93\u76f8\u540c\u6570\u636e\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u589e\u52a0\u6bcf\u4e2a\u7b26\u5143\u6301\u7eed\u65f6\u95f4(Sumbol Duration)\uff0c\u964d\u4f4e\u7531\u591a\u8def\u5f84\u5ef6\u8fdf\u6269\u6563(Multi-path Delay Spread)\u5f15\u8d77\u7684\u65f6\u57df\u7b26\u9645\u5e72\u6270\u3002 \u5b50\u8f7d\u6ce2\u76f8\u4e92\u6b63\u4ea4\u3002\u5b50\u8f7d\u6ce2\u7684\u9891\u8c31\u53ef\u4ee5\u76f8\u4e92\u91cd\u53e0\uff0c\u8f83\u597d\u7684\u9891\u5bbd\u6548\u76ca(Bandwidth Efficiency)\u3002 \u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3aOFDM\u4ece\u4e24\u4e2a\u65b9\u9762\u63d0\u9ad8\u4f20\u8f93\u6548\u7387\uff1a 1\u3001\u9891\u7387\u5206\u89e3\uff0c\u591a\u5b50\u8f7d\u9891\u5e76\u884c\uff0c\u901a\u8fc7\u201cFD\u201d\u5b9e\u73b0\uff1b2\u3001\u538b\u7f29\u5b50\u8f7d\u9891\u95f4\u8ddd\uff0c\u901a\u8fc7\u201cO\u201d\u5b9e\u73b0\u3002 \u8fd9\u5c31\u597d\u6bd4\u4e3a\u4e86\u63d0\u9ad8\u9053\u8def\u901a\u884c\u6548\u7387\uff0c\u4e00\u65b9\u9762\uff0c\u5c06\u539f\u6765\u7684\u5355\u884c\u9053\uff0c\u53d8\u62104\u8f66\u9053\uff0c\u8fd9\u6837\u901a\u884c\u6548\u7387\u53ef\u4ee5\u63d0\u9ad8\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u539f\u6765\u6c7d\u8f66\u7684\u5de6\u53f3\u5b89\u5168\u95f4\u8ddd\u662f4\u7c73\uff0c\u901a\u8fc7\u63aa\u65bd\u5c06\u6c7d\u8f66\u5b89\u5168\u95f4\u8ddd\u51cf\u5c0f\u52302\u7c73\uff0c\u8fd9\u6837\u53c8\u80fd\u8ba9\u66f4\u591a\u7684\u6c7d\u8f66\u540c\u65f6\u7ecf\u8fc7\u3002 \u5f53\u7136\u5982\u679c\u9053\u8def\u603b\u5bbd\u5ea6\u4e0d\u53d8\uff0c\u6a2a\u5411\u548c\u7eb5\u5411\u538b\u7f29\u7684\u80fd\u529b\u603b\u662f\u6709\u9650\u7684\u3002\u6a2a\u5411\u538b\u7f29\u592a\u591a\u4f1a\u9020\u6210\u5b50\u8f7d\u6ce2\u95f4\u7684\u5e72\u6270\uff0c\u524d\u540e\u8f66\u8ddd\u538b\u7f29\u592a\u591a\u4f1a\u9020\u6210\u65f6\u57df\u7b26\u9645\u5e72\u6270\u3002","title":"OFDM"},{"location":"ESP32/OFDM/#_1","text":"\u591a\u4e2a\u5b50\u8f7d\u6ce2\u5e73\u884c\u4f20\u8f93\u3002\u4f20\u8f93\u76f8\u540c\u6570\u636e\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u589e\u52a0\u6bcf\u4e2a\u7b26\u5143\u6301\u7eed\u65f6\u95f4(Sumbol Duration)\uff0c\u964d\u4f4e\u7531\u591a\u8def\u5f84\u5ef6\u8fdf\u6269\u6563(Multi-path Delay Spread)\u5f15\u8d77\u7684\u65f6\u57df\u7b26\u9645\u5e72\u6270\u3002 \u5b50\u8f7d\u6ce2\u76f8\u4e92\u6b63\u4ea4\u3002\u5b50\u8f7d\u6ce2\u7684\u9891\u8c31\u53ef\u4ee5\u76f8\u4e92\u91cd\u53e0\uff0c\u8f83\u597d\u7684\u9891\u5bbd\u6548\u76ca(Bandwidth Efficiency)\u3002 \u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3aOFDM\u4ece\u4e24\u4e2a\u65b9\u9762\u63d0\u9ad8\u4f20\u8f93\u6548\u7387\uff1a 1\u3001\u9891\u7387\u5206\u89e3\uff0c\u591a\u5b50\u8f7d\u9891\u5e76\u884c\uff0c\u901a\u8fc7\u201cFD\u201d\u5b9e\u73b0\uff1b2\u3001\u538b\u7f29\u5b50\u8f7d\u9891\u95f4\u8ddd\uff0c\u901a\u8fc7\u201cO\u201d\u5b9e\u73b0\u3002 \u8fd9\u5c31\u597d\u6bd4\u4e3a\u4e86\u63d0\u9ad8\u9053\u8def\u901a\u884c\u6548\u7387\uff0c\u4e00\u65b9\u9762\uff0c\u5c06\u539f\u6765\u7684\u5355\u884c\u9053\uff0c\u53d8\u62104\u8f66\u9053\uff0c\u8fd9\u6837\u901a\u884c\u6548\u7387\u53ef\u4ee5\u63d0\u9ad8\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u539f\u6765\u6c7d\u8f66\u7684\u5de6\u53f3\u5b89\u5168\u95f4\u8ddd\u662f4\u7c73\uff0c\u901a\u8fc7\u63aa\u65bd\u5c06\u6c7d\u8f66\u5b89\u5168\u95f4\u8ddd\u51cf\u5c0f\u52302\u7c73\uff0c\u8fd9\u6837\u53c8\u80fd\u8ba9\u66f4\u591a\u7684\u6c7d\u8f66\u540c\u65f6\u7ecf\u8fc7\u3002 \u5f53\u7136\u5982\u679c\u9053\u8def\u603b\u5bbd\u5ea6\u4e0d\u53d8\uff0c\u6a2a\u5411\u548c\u7eb5\u5411\u538b\u7f29\u7684\u80fd\u529b\u603b\u662f\u6709\u9650\u7684\u3002\u6a2a\u5411\u538b\u7f29\u592a\u591a\u4f1a\u9020\u6210\u5b50\u8f7d\u6ce2\u95f4\u7684\u5e72\u6270\uff0c\u524d\u540e\u8f66\u8ddd\u538b\u7f29\u592a\u591a\u4f1a\u9020\u6210\u65f6\u57df\u7b26\u9645\u5e72\u6270\u3002","title":"\u6458\u8981"},{"location":"ESP32/PA%20%E6%A8%A1%E5%9E%8B/","text":"\u4fe1\u53f7\u5e26\u5bbd\u53d8\u5927\uff0cPA\u4f1a\u5b58\u5728\u8bb0\u5fc6\u6548\u5e94\u3002Volterra\u7ea7\u6570\u6a21\u578b\u662f\u5e26\u8bb0\u5fc6\u6548\u5e94\u7684\u975e\u7ebf\u6027\u6a21\u578b\uff0c\u4f46\u6709\u5927\u91cf\u7cfb\u6570\uff0c\u4e0d\u9002\u5408\u5b9e\u9645\u5e94\u7528\u3002\u8bb0\u5fc6\u591a\u9879\u5f0f\u6a21\u578b\uff0c\u7b80\u5316\u4e86Volterra\u7ea7\u6570\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff1a $$ z(n)=\\sum_{k=1}^K \\sum_{q=0}^Q a_{kq} y(n-q)|y(n-q)|^{k-1} $$ \\(K\\) \u662f\u975e\u7ebf\u6027\u7ea7\u6570\uff0c \\(Q\\) \u662f\u8bb0\u5fc6\u7ea7\u6570\u3002 \u57fa\u4e8e\u53cd\u6b63\u5207\u51fd\u6570 \u57fa\u4e8e\u53cd\u6b63\u5207\u51fd\u6570\u7684\u975e\u7ebf\u6027\u6a21\u578b $$ V_{out}=\\frac{2}{\\pi} V_s \\arctan [\\alpha (V_{in}+V_0)]+V_d $$ \\(V_0\\) \u4f7f\u66f2\u7ebf\u5de6\u53f3\u5e73\u79fb\uff0c \\(V_d\\) \u4f7f\u66f2\u7ebf\u4e0a\u4e0b\u5e73\u79fb\uff0c \\(V_s\\) \u51b3\u5b9a\u4e86\u8f93\u51fa\u7535\u538b\u7684\u52a8\u6001\u8303\u56f4\uff0c\u800c \\(\\alpha\\) \u5219\u51b3\u5b9a\u4e86\u66f2\u7ebf\u7684\u53d8\u5316\u901f\u7387\u3002 \u5982\uff1a \u53c2\u6570 \u503c \\(\\alpha\\) 0.5444 \\(V_s\\) 27.77 \\(V_0\\) 0 \\(V_d\\) 0 \u57fa\u4e8e\u53cd\u6b63\u5207\u51fd\u6570\u7684\u6b63\u4ea4\u5e26\u901a\u6a21\u578b","title":"PA\u6a21\u578b"},{"location":"ESP32/PA%20%E6%A8%A1%E5%9E%8B/#_1","text":"\u57fa\u4e8e\u53cd\u6b63\u5207\u51fd\u6570\u7684\u975e\u7ebf\u6027\u6a21\u578b $$ V_{out}=\\frac{2}{\\pi} V_s \\arctan [\\alpha (V_{in}+V_0)]+V_d $$ \\(V_0\\) \u4f7f\u66f2\u7ebf\u5de6\u53f3\u5e73\u79fb\uff0c \\(V_d\\) \u4f7f\u66f2\u7ebf\u4e0a\u4e0b\u5e73\u79fb\uff0c \\(V_s\\) \u51b3\u5b9a\u4e86\u8f93\u51fa\u7535\u538b\u7684\u52a8\u6001\u8303\u56f4\uff0c\u800c \\(\\alpha\\) \u5219\u51b3\u5b9a\u4e86\u66f2\u7ebf\u7684\u53d8\u5316\u901f\u7387\u3002 \u5982\uff1a \u53c2\u6570 \u503c \\(\\alpha\\) 0.5444 \\(V_s\\) 27.77 \\(V_0\\) 0 \\(V_d\\) 0","title":"\u57fa\u4e8e\u53cd\u6b63\u5207\u51fd\u6570"},{"location":"ESP32/PA%20%E6%A8%A1%E5%9E%8B/#_2","text":"","title":"\u57fa\u4e8e\u53cd\u6b63\u5207\u51fd\u6570\u7684\u6b63\u4ea4\u5e26\u901a\u6a21\u578b"},{"location":"ESP32/Polar%E7%BC%96%E7%A0%81/","text":"\u5148\u6316\u4e2a\u5751\uff0c\u6709\u65f6\u95f4\u518d\u5199\u3002 2016\u5e7411\u670818\u65e5\uff0c\u5728\u7f8e\u56fd\u5185\u534e\u8fbe\u5dde\u91cc\u8bfa\u53ec\u5f00\u76843GPP RAN1 #87\u6b21\u4f1a\u8bae\uff0c\u786e\u5b9aPolar Code\u4f5c\u4e3a5G eMBB\uff08\u589e\u5f3a\u79fb\u52a8\u5bbd\u5e26\uff09\u573a\u666f\u4e0b\u63a7\u5236\u4fe1\u9053\u7f16\u7801\u65b9\u6848\u3002 Erdal Arikan\uff0c2008\u5e74\u5728\u201cIEEE Transaction on Information Theory\u201d\u671f\u520a\u4e0a\u53d1\u8868\u4e86\u4e00\u7bc7\u957f\u8fbe23\u9875\u7684\u8bba\u6587\u201cChannel polarization: A method for constructing capacity-achieving codes for symmetric binary-input memoryless channels\u201d\uff0c\u8be6\u7ec6\u5730\u9610\u8ff0\u4e86\u4fe1\u9053\u6781\u5316\uff0c\u5e76\u57fa\u4e8e\u4fe1\u9053\u6781\u5316\u7ed9\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u540d\u79f0\u4e3a\u6781\u5316\u7801\uff08Polar Code\uff09\u3002\u6781\u5316\u7801\u5177\u6709\u786e\u5b9a\u6027\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5e76\u4e14\u662f\u5df2\u77e5\u7684\u552f\u4e00\u4e00\u79cd\u80fd\u591f\u88ab\u4e25\u683c\u8bc1\u660e\u201c\u8fbe\u5230\u201d\u4fe1\u9053\u5bb9\u91cf\u7684\u4fe1\u9053\u7f16\u7801\u65b9\u6cd5\u3002 http://www.polarcodes.com/","title":"Polar\u7f16\u7801"},{"location":"ESP32/PowerPAD%20Packages/","text":"\u6458\u8981 The PowerPAD\u2122 package with exposed pad down is designed to be soldered to the PCB.","title":"PowerPAD Packages"},{"location":"ESP32/PowerPAD%20Packages/#_1","text":"The PowerPAD\u2122 package with exposed pad down is designed to be soldered to the PCB.","title":"\u6458\u8981"},{"location":"ESP32/Proe%20Layer/","text":"A layer in Pro/E represents a model entities grouping (ex: features, datum planes or axes.) The layers are used to administer the entities in a model, assembly or drawing in Pro/E. Several entities can be associated to a layer, so as to manipulate them together. They can be suppressed if they are solids, and hide or be displayed in an organized fashion if they are non-solids. The layers help to simplify a model and increase work speed. The visibility of non-geometric entities can be controlled in a model or in assembly components with the help of layers. Also, unnecessary elements of a drawing (surfaces or datum features) can be hidden. What kind of items can layers manage? Layers can manage all types of items. After they were created, several items can be associated to layers, such as: features, curves, surfaces, datum planes, text, dimensions, geometric tolerances, etc. An entity can be placed in a layer in the following ways: Manually, by selecting the entities individually By copying layer information By creating layers and associating specific attributes automatically","title":"Tips about using Layer in Creo"},{"location":"ESP32/Proe%20Layer/#what-kind-of-items-can-layers-manage","text":"Layers can manage all types of items. After they were created, several items can be associated to layers, such as: features, curves, surfaces, datum planes, text, dimensions, geometric tolerances, etc. An entity can be placed in a layer in the following ways: Manually, by selecting the entities individually By copying layer information By creating layers and associating specific attributes automatically","title":"What kind of items can layers manage?"},{"location":"ESP32/QFN/","text":"QFN\u5c01\u88c5\u6563\u70ed \u6d4b\u8bd5\u677f\u9075\u5faa\u6807\u51c6 JESD 51-3 \uff0c1S0P \u53ea\u6709\u4e00\u4e2a\u4fe1\u53f7\u5c42\uff0c\u65e0\u5185\u90e8\u91d1\u5c5e\u5c42 JESD 51-5 \uff0c1S2P\u6709\u4e24\u4e2a\u5185\u90e8\u91d1\u5c5e\u5c42\u548c\u5c06\u4e0a\u5c42\u8fde\u63a5\u5230\u5bfc\u70ed\u57ab\u7684\u6563\u70ed\u8fc7\u5b54\u3002 \u8fc7\u5b54\u76f4\u5f84\u4e3a0.30mm\uff0c\u4e2d\u5fc3\u8ddd\u4e2d\u5fc3\u4e3a1.2mm\u3002 \u5141\u8bb8\u8fc7\u5b54\u4ec5\u586b\u5145\u7531\u6563\u70ed\u57ab\u5468\u8fb9\u754c\u5b9a\u7684\u533a\u57df\uff0c\u5e76\u4e14\u4e0d\u80fd\u8d85\u51fa\u5468\u754c\u3002 \u8fd9\u88ab\u79f0\u4e3a\u76f4\u63a5\u9644\u52a0\u65b9\u6cd5\u3002 JESD 51-7\uff0c1S2P\uff0c\u548cJESD 51-5 \u6709\u4e24\u5c42\u91d1\u5c5e\u5185\u5c42\uff0c\u4f46\u6ca1\u6709\u8fc7\u5b54\u3002 \u8fd9\u4e9b\u6807\u51c6\u5141\u8bb8\u80cc\u9762\u6709\u4fe1\u53f7\u7ebf\u5c42 (2S2P or 2S0P)\uff0c\u4f46\u5f71\u54cd\u6bd4\u8f83\u5c0f(<2%) \u3002 20-Pin QFN \u65e0\u98ce\u73af\u5883\u4e0b\u70ed\u963b\u6a21\u62df\u503c\uff1a \u6d4b\u8bd5\u6807\u51c6 \u03b8JA (\u00b0C/W) \u03b8JC (\u00b0C/W) \u03b8JP (\u00b0C/W) \u03b8JB (\u00b0C/W) JESD 51-5 (1S2P Direct-Attach Method) 29.9 15.2 0.52 5.2 JESD 51-7 (1S2P) 46.8 15.2 - 8.7 JESD 51-3 (1S0P) 77.5 15.2 - - NOTES: \u03b8JB is neither applicable nor defined for JESD 51-3 test cards. \u03b8JP is junction-to-pad thermal impedance.","title":"QFN Package"},{"location":"ESP32/Quality%20Basic%20Terms/","text":"Measures of Location Two commonly used measures of location are the mean and the median. Mean The mean describes an entire set of observations with a single value representing the center of the data. The mean of the entire population is represented by \\(\\mu\\) . The mean of the sample is represented by \\(\\bar{X}\\) . The sample mean \\[\\begin{equation} \\bar{X}=\\frac{sum}{count}=\\sum_{i=1}^{n}\\frac{x_i}{n} \\end{equation}\\] Median The median is the middle of the range of data. Half the data points are greater than, or equal to, the median, and half are smaller than, or equal to, the median. When there is an even number of observations, as in this example showing four data points, to find the median we average the middle two numbers. Measures of spread There are three measures of spread: range, variance, and standard deviation. Range Range represented by \\(R\\) , is the difference between the largest and smallest values. \\[\\begin{equation} R=\\max\\{data\\}-\\min\\{data\\} \\end{equation}\\] Variance Variance is a measure of dispersion, which is the extent to which a data set or distribution is scattered around its mean. The formula goes like this: \\[\\begin{equation} S^2=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{X})^2}{n-1} \\end{equation}\\] Standard Deviation Standard Deviation is the most common measure of dispersion, or how spread out the data are from the mean. The standard deviation for a population is represented by \\(\\sigma\\) . The standard deviation for a sample is indicated by \\(S\\) . The standard deviation is the square root of the variance: \\[\\begin{equation} S=\\sqrt{S^2} \\end{equation}\\] Note: The standard deviation uses the same units as the data. Caculate above Data from Minitab Stat -- Basic Statistics -- Display Descriptive Statistics... A great tool to get a quick, birds-eye view of your measurement data is Minitab\u2019s Graphical Summary ( Stat > Basic Statistics > Graphical Summary ). Visual representations help us quickly understand the distribution of data. Also, help us quickly compare different sets of data. But visual representations are interpretations of data, we still must analyze the data to make sure any perceived differences are statistically significant. Graphical Analysis Tool Two basic tools for graphical analysis are the histogram and the boxplot. Histogram We can also plot the histogram of data by: Graph > Histogram... A histogram is a graph used to assess the shape and spread of continuous sample data. To draw a histogram Minitab divides sample values into many intervals called bins . By default, bars represent the number of observations falling within each bin (or its frequency). Minitab automatically determines an optimal number of bins (in this example, 12), but you can edit the number of bins as well as the intervals covered by each. This histogram also includes a fit curve to convey the shape of the data\u2019s distribution. We can get more information for each bar in the graph by rolling our cursor over the bar. Boxplot Graph > Boxplot... A boxplot is graphical summary of the distribution of a sample that shows its shape, central tendency, and variability. Boxplots use what is called a \u201cbox and whiskers\u201d format, with the box in the center and two whiskers extending out from the box. This boxplot is displayed horizontally to align with the histogram above it, but boxplots also can be displayed vertically. For larger data sets, use boxplots to informally compare the spread of data in different groups ( Graph > Boxplot > Multiple Ys ). Normal distribution Normal distribution is the most common continuous distribution. Normal distribution describes many phenomena that occur in nature and industry. For example, the weight of apples from a recent harvest, or the amount of voltage in a new battery. Many statistical analyses require that the data come from normally distributed populations. A normal distribution is completely described by mean and standard deviation of the data. Many statistical methods are developed under the normality assumption, that is, the assumption that the data from the population fall into a normal distribution. But the assumption of normality is just that\u2014an assumption. Therefore, testing the normality of the data is very important. Normality Testing Doing the normality test in Minitab: Stat > Basic Statistics > Normality Test... If the P-Value is bigger than 0.05, we can see the data meet normal distribution.","title":"Quality Basic Terms"},{"location":"ESP32/Quality%20Basic%20Terms/#measures-of-location","text":"Two commonly used measures of location are the mean and the median.","title":"Measures of Location"},{"location":"ESP32/Quality%20Basic%20Terms/#mean","text":"The mean describes an entire set of observations with a single value representing the center of the data. The mean of the entire population is represented by \\(\\mu\\) . The mean of the sample is represented by \\(\\bar{X}\\) . The sample mean \\[\\begin{equation} \\bar{X}=\\frac{sum}{count}=\\sum_{i=1}^{n}\\frac{x_i}{n} \\end{equation}\\]","title":"Mean"},{"location":"ESP32/Quality%20Basic%20Terms/#median","text":"The median is the middle of the range of data. Half the data points are greater than, or equal to, the median, and half are smaller than, or equal to, the median. When there is an even number of observations, as in this example showing four data points, to find the median we average the middle two numbers.","title":"Median"},{"location":"ESP32/Quality%20Basic%20Terms/#measures-of-spread","text":"There are three measures of spread: range, variance, and standard deviation.","title":"Measures of spread"},{"location":"ESP32/Quality%20Basic%20Terms/#range","text":"Range represented by \\(R\\) , is the difference between the largest and smallest values. \\[\\begin{equation} R=\\max\\{data\\}-\\min\\{data\\} \\end{equation}\\]","title":"Range"},{"location":"ESP32/Quality%20Basic%20Terms/#variance","text":"Variance is a measure of dispersion, which is the extent to which a data set or distribution is scattered around its mean. The formula goes like this: \\[\\begin{equation} S^2=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{X})^2}{n-1} \\end{equation}\\]","title":"Variance"},{"location":"ESP32/Quality%20Basic%20Terms/#standard-deviation","text":"Standard Deviation is the most common measure of dispersion, or how spread out the data are from the mean. The standard deviation for a population is represented by \\(\\sigma\\) . The standard deviation for a sample is indicated by \\(S\\) . The standard deviation is the square root of the variance: \\[\\begin{equation} S=\\sqrt{S^2} \\end{equation}\\] Note: The standard deviation uses the same units as the data.","title":"Standard Deviation"},{"location":"ESP32/Quality%20Basic%20Terms/#caculate-above-data-from-minitab","text":"Stat -- Basic Statistics -- Display Descriptive Statistics... A great tool to get a quick, birds-eye view of your measurement data is Minitab\u2019s Graphical Summary ( Stat > Basic Statistics > Graphical Summary ). Visual representations help us quickly understand the distribution of data. Also, help us quickly compare different sets of data. But visual representations are interpretations of data, we still must analyze the data to make sure any perceived differences are statistically significant.","title":"Caculate above Data from Minitab"},{"location":"ESP32/Quality%20Basic%20Terms/#graphical-analysis-tool","text":"Two basic tools for graphical analysis are the histogram and the boxplot.","title":"Graphical Analysis Tool"},{"location":"ESP32/Quality%20Basic%20Terms/#histogram","text":"We can also plot the histogram of data by: Graph > Histogram... A histogram is a graph used to assess the shape and spread of continuous sample data. To draw a histogram Minitab divides sample values into many intervals called bins . By default, bars represent the number of observations falling within each bin (or its frequency). Minitab automatically determines an optimal number of bins (in this example, 12), but you can edit the number of bins as well as the intervals covered by each. This histogram also includes a fit curve to convey the shape of the data\u2019s distribution. We can get more information for each bar in the graph by rolling our cursor over the bar.","title":"Histogram"},{"location":"ESP32/Quality%20Basic%20Terms/#boxplot","text":"Graph > Boxplot... A boxplot is graphical summary of the distribution of a sample that shows its shape, central tendency, and variability. Boxplots use what is called a \u201cbox and whiskers\u201d format, with the box in the center and two whiskers extending out from the box. This boxplot is displayed horizontally to align with the histogram above it, but boxplots also can be displayed vertically. For larger data sets, use boxplots to informally compare the spread of data in different groups ( Graph > Boxplot > Multiple Ys ).","title":"Boxplot"},{"location":"ESP32/Quality%20Basic%20Terms/#normal-distribution","text":"Normal distribution is the most common continuous distribution. Normal distribution describes many phenomena that occur in nature and industry. For example, the weight of apples from a recent harvest, or the amount of voltage in a new battery. Many statistical analyses require that the data come from normally distributed populations. A normal distribution is completely described by mean and standard deviation of the data. Many statistical methods are developed under the normality assumption, that is, the assumption that the data from the population fall into a normal distribution. But the assumption of normality is just that\u2014an assumption. Therefore, testing the normality of the data is very important.","title":"Normal distribution"},{"location":"ESP32/Quality%20Basic%20Terms/#normality-testing","text":"Doing the normality test in Minitab: Stat > Basic Statistics > Normality Test... If the P-Value is bigger than 0.05, we can see the data meet normal distribution.","title":"Normality Testing"},{"location":"ESP32/Sverchok%E4%B8%AD%E7%9A%84Bloom%20Spheres/","text":"Sverchok\u4e2d\u7684Bloom Spheres 2015\u5e749\u67089\u65e5\u661f\u671f\u4e09 \u200b \u7ea6\u7ff0\u00b7\u57c3\u5fb7\u9a6c\u514b\uff08John Edmark\uff09 \u5173\u4e8e\u4ed6\u6240\u8c13\u7684\u7efd\u653e\u7403\u4f53\u7684\u8fd9\u4e9b \u89c6\u9891 \u6fc0\u53d1\u4e86\u6211\u5728Sverchok\u5c1d\u8bd5\u7c7b\u4f3c\u7684\u4e1c\u897f\u3002Edmark\u8bbe\u8ba1\u76843D\u6253\u5370\u5f62\u5f0f\u5728\u9891\u95ea\u706f\u4e0b\u65cb\u8f6c\u65f6\u4f1a\u51fa\u73b0\u79fb\u52a8\u548c\u626d\u66f2\u3002 \u5b83\u53ef\u4ee5\u751f\u6210\u4ee5\u76f8\u540c\u65b9\u5f0f\u5de5\u4f5c\u7684\u8ba1\u7b97\u673a\u52a8\u753b\u3002 Mangakid \u5df2\u7ecf\u53d6\u5f97\u4e86\u4e00\u5b9a\u7684Blender\u52a8\u753b\u57fa\u4e8eEdmark\u7684\u5de5\u4f5c\u3002\u53ef\u4ee5\u5728\u6b64 stackoverflow\u95ee\u9898\u548c\u7b54\u6848\u4e2d \u627e\u5230\u7528\u4e8emangakid\u52a8\u753b\u7684Python\u4ee3\u7801\u7247\u6bb5\u3002 \u5728Sverchok\u4e2d\u5904\u7406bloom\u7403\u7684\u7b2c\u4e00\u4e2a\u9636\u6bb5\u662f\u7f16\u5199\u4e00\u4e2a\u811a\u672c\u8282\u70b9\u6765\u751f\u6210\u57fa\u672c\u7f51\u683c\u7ed3\u6784\uff0c\u8fd9\u662f\u57fa\u4e8e\u7efd\u653e\u7684\u57fa\u7840\u3002Edmark\u5c06\u6b64\u63cf\u8ff0\u4e3a\uff1a \u9996\u5148\uff0c\u5c06\u4e00\u7ec4\u70b9\u4e00\u6b21\u4e00\u4e2a\u5730\u653e\u7f6e\u5728\u5706\u67f1\u5f62\u5e03\u7f6e\u4e2d\u3002\u6bcf\u4e2a\u70b9\u4ece\u524d\u4e00\u70b9\u5f00\u59cb\u56f4\u7ed5\u5706\u67f1\u8f74\u653e\u7f6e137.5\u00ba\uff0c\u5e76\u4e14\u7a0d\u5fae\u62ac\u8d77\u4e00\u70b9...... \u4e0b\u4e00\u6b65\u662f\u901a\u8fc7\u5c06\u70b9\u6295\u5c04\u5230\u7403\u4f53\u7684\u4e2d\u5fc3\u70b9\uff0c\u5c06\u6bcf\u4e2a\u70b9\u6295\u5f71\u5230\u7403\u4f53\u7684\u8868\u9762\u4e0a...... \u8fd9\u4e9b\u70b9\u4e0e\u7ebf\u8fde\u63a5\u4ee5\u5f62\u6210\u56db\u8fb9\u5f62\u7f51\u683c\u3002 \u8fd9\u6700\u597d\u7528\u7403\u5750\u6807\u8ba1\u7b97\u51fa\u6765\u3002 \u9ec4\u91d1\u89d2\u5ea6 \\(g\\) $$ \\begin{align } g=\\pi (3-\\sqrt{5}) &= 2.399963... \\textrm{ radians}\\ &= 137.507...^{\\circ} \\end{align } $$ \u7403\u4f53\u7684\u534a\u5f84\u662f \\(r_0\\) \u548c \\(z_h\\) \u662f\u201c\u70b9\u5347\u4e00\u70b9\u201d\u7684\u589e\u91cf\u3002\u7136\u540e \\(i=0\\) \u7efd\u653e\u7403\u4f53\u4e0a\u7684\u70b9\u7531\u4e0b\u5f0f\u7ed9\u51fa\uff1a $$ \\begin{align } \\theta (i) &= \\frac{i}{g}\\ \\phi (i) &= \\tan^{-1} \\frac{r_0}{iz_h}\\ r(i) &= r_0 \\end{align } $$ \u6211\u5df2\u5c06\u5176\u7f16\u7801\u4e3a\u811a\u672c\u8282\u70b9\u3002\u8981\u5728Blender\u4e2d\u4f7f\u7528bloom sphere\u8282\u70b9\uff0c\u8bf7\u5148\u5b89\u88c5 Sverchok \u63d2\u4ef6\u3002\u4ece github \u4e0b\u8f7dbloom sphere\u4ee3\u7801\u3002\u7136\u540e\u5c06python\u6587\u4ef6\u4f5c\u4e3a\u6587\u672c\u5757\u52a0\u8f7d\u5230\u6df7\u5408\u6587\u4ef6\u4e2d\u3002\u6dfb\u52a0Scripted Node\u5230Sverchok\u8282\u70b9\u6811\u3002\u5728\u8282\u70b9\u4e0a\uff0cbloom_sphere.py\u4ece\u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9\u4ee3\u7801\u3002\u7136\u540e\u5355\u51fb\u6b64\u5b57\u6bb5\u53f3\u4fa7\u7684\u63d2\u4ef6\u56fe\u6807\u3002\u8282\u70b9\u5e94\u8be5\u901a\u8fc7\u4e00\u4e9b\u8f93\u5165\u548c\u8f93\u51fa\u53d8\u4e3a\u84dd\u8272\u3002\u5c06\u8f93\u51faVerts\u548cFaces\u8f93\u51fa\u8fde\u63a5\u5230Viewer Draw\u8282\u70b9\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u4e00\u4e9b\u51e0\u4f55\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528XYZ function surface\u5b83\u662fExtra ObjectsBlender \u7684\u63d2\u4ef6\u7684\u4e00\u90e8\u5206\u6765\u751f\u6210\u7f51\u683c\u9876\u70b9\u3002\u6211\u53d1\u73b0\u8ba9\u63d2\u4ef6\u52a0\u5165\u7136\u540e\u5f62\u6210\u6b63\u786e\u7684\u56db\u8fb9\u5f62\u7f51\u683c\u8981\u56f0\u96be\u5f97\u591a\u3002\u5728\u6211\u7684Sverchok\u811a\u672c\u8282\u70b9\u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\u8981\u5bb9\u6613\u5f97\u591a\u3002 \u8be5Frame Info\u8282\u70b9\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u4e8e\u6bcf\u5e27\u65cb\u8f6c137.5\u00b0\u7684\u5e03\u9686\u7403\u3002\u5c06\u7ed3\u675f\u5e27\u8bbe\u7f6e\u4e3a145\u4ee5\u8fdb\u884c\u8fde\u7eed\u5faa\u73af\u52a8\u753b\u3002 \u200b \u200b \u76f8\u540c\u7684\u8282\u70b9\u56fe\u4e5f\u53ef\u7528\u4e8e\u4e3aJohn Edmark\u7684stl\u6587\u4ef6\u5236\u4f5c\u52a8\u753b\uff0c\u8fd9\u4e9b\u6587\u4ef6\u662f\u6839\u636eCreative Commons BY NC SA\u8bb8\u53ef\u8bc1 \u5728\u6b64\u5904 \u63d0\u4f9b\u7684\u3002\u53ea\u9700\u5c06stl\u5bfc\u5165Blender\u5e76\u66ff\u6362Scripted Node\u4e3aObject Scene\u8282\u70b9\u5373\u53ef\u3002 \u6216\u8005\uff0c\u5728Sverchok\u5916\u90e8\u65cb\u8f6c\u7f51\u683c\uff0c\u8fdb\u884c\u5173\u952e\u5e27\u52a8\u753b\uff0c\u5176\u4e2d\u7b2c\u4e00\u5e27\u6ca1\u6709\u65cb\u8f6c\uff0c\u7ed3\u675f\u5e27\u56f4\u7ed5z\u8f74\u65cb\u8f6c137.5\u00b0*\uff08\u5e27\u6570-1\uff09\u3002 \u4f8b\u5982\uff1a \u9009\u62e9\u8981\u65cb\u8f6c\u7684\u5bf9\u8c61 \u5c06\u7ed3\u675f\u5e27\u8bbe\u7f6e\u4e3a145 \u5c06\u6d3b\u52a8\u952e\u63a7\u8bbe\u7f6e\u66f4\u6539\u4e3a\u201c\u65cb\u8f6c\u201d \u5728\u7b2c\u4e00\u5e27\u4e0a\u63d2\u5165\u5173\u952e\u5e27 \u79fb\u52a8\u5230\u6700\u540e\u4e00\u5e27 \u5c06\u5bf9\u8c61\u56f4\u7ed5z\u8f74\u65cb\u8f6c\u8bbe\u7f6e\u4e3a19800\u5ea6\uff08144 * 137.5\u00b0= 19800\uff09 \u5728\u6b64\u6846\u67b6\u4e0a\u63d2\u5165\u5173\u952e\u5e27 \u5c06\u5f53\u524d\u5e27\u8bbe\u7f6e\u56de1 \u6253\u5f00\u201c\u66f2\u7ebf\u56fe\u7f16\u8f91\u5668\u201d\u89c6\u56fe \u5c06\u52a8\u753b\u66f2\u7ebf\u7684\u63d2\u503c\u6a21\u5f0f\u66f4\u6539\u4e3a\u7ebf\u6027\u3002\u4f7f\u7528\u83dc\u5355\uff1aKey> Interpolation Mode> Linear\u6216\u4f7f\u7528\u952e\u76d8T L\u3002 \u68c0\u67e5\u6cbf\u4e00\u5e27\u7684\u8e29\u8e0f\u5c06\u65cb\u8f6cZ\u89d2\u6539\u53d8137.5\u00b0 \u8fd9\u5c06\u7ed9\u51fa\u65e0\u7f1d\u76846\u79d2\uff08145\u5e27/ 24\u5e27/\u79d2\u301c= 6\u79d2\uff09\u52a8\u753b\u3002\u5b83\u662f\u65e0\u7f1d\u7684\uff0c\u56e0\u4e3a19800\u662f360\u7684\u6574\u6570\u500d\uff08360\u00b0* 55 = 19800\u00b0\uff09\u3002 \u6ce8\u610f\uff1a\u4efb\u4f55\u65cb\u8f6c\u89d2\u5ea6\u5728\u54ea\u91cc G n \uff0cm = n g- \u7c732 \u03c0 G\u00f1\uff0c\u7c73=\u00f1G- \u7c732\u03c0 \u5176\u4e2d\u00d1 = 1 \uff0c 2 \uff0c \u3002 \u3002 \u00f1=1\uff0c2\uff0c\u3002\u3002anf m \u7c73\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u7528\u4e8e\u5c06\u89d2\u5ea6\u6620\u5c04\u56de\u95f4\u9694- \u03c0 - \u03c0\u5230\u03c0 \u03c0\u4e5f\u4f1a\u5de5\u4f5c\u3002\u4f8b\u5982\uff0c\u6bcf\u5e27\u65cb\u8f6c137.5\u00b0\uff0c-85\u00b0\uff0c52.5\u00b0\uff0c170\u00b0\uff0c-32.5\u00b0\uff0c105\u00b0\uff0c-117.5\u00b0\u621620\u00b0\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u4e2a\u89d2\u5ea6\uff0c\u52a8\u753b\u770b\u8d77\u6765\u4f1a\u6709\u4e0d\u540c\u7684\u901f\u5ea6\u3002 \u73b0\u5728\u6765\u5230\u6709\u8da3\u7684\u90e8\u5206\uff0c\u7f16\u8f91\u7f51\u683c\u4ee5\u751f\u6210\u6709\u8da3\u7684\u52a8\u753b\u3002John Edmark\u63cf\u8ff0\uff1a \u6bcf\u4e2a\u56db\u8fb9\u5f62\u90fd\u6709\u4e00\u4e2a\u9644\u5c5e\u7269...... \u6211\u4eec\u53ef\u4ee5\u6309\u7167\u6211\u7684 Centers Polygon \u793a\u4f8b \u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u4f46\u6211\u5c06\u4f7f\u7528\u8be5Adaptive Polygons\u8282\u70b9\u663e\u793a\u53e6\u4e00\u79cd\u65b9\u5f0f\u4ee5\u83b7\u5f97\u4e0d\u540c\u7684\u5916\u89c2\u3002 \u200b \u6211\u5220\u9664\u4e86\u7528\u4e8e\u5b9e\u73b0\u65cb\u8f6c\u7684\u8282\u70b9\uff0c\u4ee5\u7b80\u5316\u4e0a\u8ff0\u8282\u70b9\u56fe\u3002 \u200b John Edmark\u63a5\u7740\u63cf\u8ff0\uff1a \u4e3a\u4e86\u4f7f\u9644\u80a2\u770b\u8d77\u6765\u5728\u52a8\u753b\u65f6\u6765\u56de\u79fb\u52a8\uff0c\u5b83\u4eec\u7684\u5c16\u7aef\u5728\u653e\u7f6e\u65f6\u4f1a\u987a\u5e8f\u5730\u5de6\u53f3\u626d\u66f2\uff08\u4ee5\u6b63\u5f26\u8fd0\u52a8\uff09\u3002 \u6267\u884c\u7c7b\u4f3c\u64cd\u4f5c\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u5728Adaptive Polygons\u8282\u70b9\u4e4b\u524d\u5c06\u6bcf\u4e2a\u9876\u70b9\u79fb\u52a8\u5230\u4e00\u4fa7\u3002\u5728\u7403\u5750\u6807\u4e2d\u6700\u5bb9\u6613\u60f3\u5230\u6dfb\u52a0\u201c\u4ece\u4e00\u4fa7\u5230\u53e6\u4e00\u4fa7\u201d\u7684\u8fd0\u52a8\u3002\u5982\u679c\u6211\u4eec\u6539\u53d8\u4e00\u4e2a\u70b9\u7684\u201cphi\u201d\u6781\u5750\u6807\uff0c\u5b83\u5c06\u5de6\u53f3\u79fb\u52a8\u3002 Sverchok\u73b0\u5728\u6709\u8282\u70b9\u5c06\u9876\u70b9\u7684x\uff0cy\uff0cz\u5750\u6807\u66f4\u6539\u4e3a\u6781\u5750\u6807\u5e76\u518d\u6b21\u5c06\u5176\u66f4\u6539\u56de\u6765\u3002\u8fd9\u91cc\u6211\u4eec\u5bf9\u6bcf\u4e2a\u9876\u70b9\u5e94\u7528\u6b63\u5f26\u504f\u79fb\u3002\u901a\u8fc7\u6539\u53d8\u8282\u70b9\u7684stop\u503c\u6765\u6539\u53d8\u6b63\u5f26\u6ce2\u7684\u9891\u7387Float Series\u3002\u03c0\u7684 \u500d\u6570\uff08\u6216\u5206\u6570\uff09 \u03c0\u662f\u660e\u667a\u7684\u3002\u7532Float\u5165\u53e3\u8282\u70b9\u88ab\u7528\u6765\u6539\u53d8\u6b63\u5f26\u6ce2\u7684\u5e45\u5ea6\u3002 \u200b \u200b \u968f\u7740\u66f4\u591a\u7684\u60f3\u6cd5\uff08\u548c\u66f4\u591a\u7684\u8282\u70b9\uff01\uff09\u6211\u4eec\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6446\u52a8\u6211\u4eec\u7684\u9644\u80a2 \u81ea\u9002\u5e94\u591a\u8fb9\u5f62\u7684\u672b\u7aef\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u7528List Mask (out)\u8282\u70b9\u5206\u79bb\u51fa\u672b\u7aef\u9876\u70b9\u3002\u5bf9\u4e8e\u63a9\u6a21\uff0c\u6211\u4eec\u4f7f\u7528\u6bcf\u4e2a\u9876\u70b9\u7684\u957f\u5ea6\uff08\u5e26\u6709\u4e00\u4e2aVector Math\u8282\u70b9\uff09\u6765\u9009\u62e9\u90a3\u4e9b\u4e0d\u5728bloom\u7403\u4f53\u8868\u9762\u4e0a\u7684\u9876\u70b9\u3002\u4f7f\u7528List Length\u8282\u70b9\u9700\u8981\u4e00\u4e9b\u9ebb\u70e6\u6765\u83b7\u5f97\u7528\u4f5c\u6b63\u5f26\u66f2\u7ebf\u7684\u89d2\u5ea6\u8f93\u5165\u7684\u6570\u5b57\u8303\u56f4\u3002\u8fd9\u4e2a\u591a\u7ea7\u5217\u8868\u9700\u8981\u5728\u5355\u4e2a\u5c16\u5cf0\u7ed3\u675f\u65f6\u4e3a\u6240\u6709\u70b9\u63d0\u4f9b\u76f8\u540c\u7684\u89d2\u5ea6\u503c\uff0c\u7136\u540e\u4e3a\u4e0b\u4e00\u4e2a\u5c16\u5cf0\u589e\u52a0\u3002 \u4e24\u7ec4\u9876\u70b9\uff08\u5177\u6709\u6b63\u5f26\u6446\u52a8\u7684\u672b\u7aef\u9876\u70b9\u548c\u7403\u4f53\u4e0a\u7684\u539f\u59cb\u9876\u70b9\uff09\u4e0eList Mask Join (in)\u4f7f\u7528\u6211\u4eec\u7528\u4e8e\u5206\u79bb\u5b83\u4eec\u7684\u76f8\u540c\u63a9\u6a21\u7684\u8282\u70b9\u4e00\u8d77\u653e\u56de\u3002 \u5f97\u5230\u8fd9\u6837\u7684\u52a8\u753b\uff1a \u200b","title":"Sverchok\u4e2d\u7684Bloom Spheres"},{"location":"ESP32/Sverchok%E4%B8%AD%E7%9A%84Bloom%20Spheres/#sverchokbloom-spheres","text":"2015\u5e749\u67089\u65e5\u661f\u671f\u4e09 \u200b \u7ea6\u7ff0\u00b7\u57c3\u5fb7\u9a6c\u514b\uff08John Edmark\uff09 \u5173\u4e8e\u4ed6\u6240\u8c13\u7684\u7efd\u653e\u7403\u4f53\u7684\u8fd9\u4e9b \u89c6\u9891 \u6fc0\u53d1\u4e86\u6211\u5728Sverchok\u5c1d\u8bd5\u7c7b\u4f3c\u7684\u4e1c\u897f\u3002Edmark\u8bbe\u8ba1\u76843D\u6253\u5370\u5f62\u5f0f\u5728\u9891\u95ea\u706f\u4e0b\u65cb\u8f6c\u65f6\u4f1a\u51fa\u73b0\u79fb\u52a8\u548c\u626d\u66f2\u3002 \u5b83\u53ef\u4ee5\u751f\u6210\u4ee5\u76f8\u540c\u65b9\u5f0f\u5de5\u4f5c\u7684\u8ba1\u7b97\u673a\u52a8\u753b\u3002 Mangakid \u5df2\u7ecf\u53d6\u5f97\u4e86\u4e00\u5b9a\u7684Blender\u52a8\u753b\u57fa\u4e8eEdmark\u7684\u5de5\u4f5c\u3002\u53ef\u4ee5\u5728\u6b64 stackoverflow\u95ee\u9898\u548c\u7b54\u6848\u4e2d \u627e\u5230\u7528\u4e8emangakid\u52a8\u753b\u7684Python\u4ee3\u7801\u7247\u6bb5\u3002 \u5728Sverchok\u4e2d\u5904\u7406bloom\u7403\u7684\u7b2c\u4e00\u4e2a\u9636\u6bb5\u662f\u7f16\u5199\u4e00\u4e2a\u811a\u672c\u8282\u70b9\u6765\u751f\u6210\u57fa\u672c\u7f51\u683c\u7ed3\u6784\uff0c\u8fd9\u662f\u57fa\u4e8e\u7efd\u653e\u7684\u57fa\u7840\u3002Edmark\u5c06\u6b64\u63cf\u8ff0\u4e3a\uff1a \u9996\u5148\uff0c\u5c06\u4e00\u7ec4\u70b9\u4e00\u6b21\u4e00\u4e2a\u5730\u653e\u7f6e\u5728\u5706\u67f1\u5f62\u5e03\u7f6e\u4e2d\u3002\u6bcf\u4e2a\u70b9\u4ece\u524d\u4e00\u70b9\u5f00\u59cb\u56f4\u7ed5\u5706\u67f1\u8f74\u653e\u7f6e137.5\u00ba\uff0c\u5e76\u4e14\u7a0d\u5fae\u62ac\u8d77\u4e00\u70b9...... \u4e0b\u4e00\u6b65\u662f\u901a\u8fc7\u5c06\u70b9\u6295\u5c04\u5230\u7403\u4f53\u7684\u4e2d\u5fc3\u70b9\uff0c\u5c06\u6bcf\u4e2a\u70b9\u6295\u5f71\u5230\u7403\u4f53\u7684\u8868\u9762\u4e0a...... \u8fd9\u4e9b\u70b9\u4e0e\u7ebf\u8fde\u63a5\u4ee5\u5f62\u6210\u56db\u8fb9\u5f62\u7f51\u683c\u3002 \u8fd9\u6700\u597d\u7528\u7403\u5750\u6807\u8ba1\u7b97\u51fa\u6765\u3002 \u9ec4\u91d1\u89d2\u5ea6 \\(g\\) $$ \\begin{align } g=\\pi (3-\\sqrt{5}) &= 2.399963... \\textrm{ radians}\\ &= 137.507...^{\\circ} \\end{align } $$ \u7403\u4f53\u7684\u534a\u5f84\u662f \\(r_0\\) \u548c \\(z_h\\) \u662f\u201c\u70b9\u5347\u4e00\u70b9\u201d\u7684\u589e\u91cf\u3002\u7136\u540e \\(i=0\\) \u7efd\u653e\u7403\u4f53\u4e0a\u7684\u70b9\u7531\u4e0b\u5f0f\u7ed9\u51fa\uff1a $$ \\begin{align } \\theta (i) &= \\frac{i}{g}\\ \\phi (i) &= \\tan^{-1} \\frac{r_0}{iz_h}\\ r(i) &= r_0 \\end{align } $$ \u6211\u5df2\u5c06\u5176\u7f16\u7801\u4e3a\u811a\u672c\u8282\u70b9\u3002\u8981\u5728Blender\u4e2d\u4f7f\u7528bloom sphere\u8282\u70b9\uff0c\u8bf7\u5148\u5b89\u88c5 Sverchok \u63d2\u4ef6\u3002\u4ece github \u4e0b\u8f7dbloom sphere\u4ee3\u7801\u3002\u7136\u540e\u5c06python\u6587\u4ef6\u4f5c\u4e3a\u6587\u672c\u5757\u52a0\u8f7d\u5230\u6df7\u5408\u6587\u4ef6\u4e2d\u3002\u6dfb\u52a0Scripted Node\u5230Sverchok\u8282\u70b9\u6811\u3002\u5728\u8282\u70b9\u4e0a\uff0cbloom_sphere.py\u4ece\u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9\u4ee3\u7801\u3002\u7136\u540e\u5355\u51fb\u6b64\u5b57\u6bb5\u53f3\u4fa7\u7684\u63d2\u4ef6\u56fe\u6807\u3002\u8282\u70b9\u5e94\u8be5\u901a\u8fc7\u4e00\u4e9b\u8f93\u5165\u548c\u8f93\u51fa\u53d8\u4e3a\u84dd\u8272\u3002\u5c06\u8f93\u51faVerts\u548cFaces\u8f93\u51fa\u8fde\u63a5\u5230Viewer Draw\u8282\u70b9\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u4e00\u4e9b\u51e0\u4f55\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528XYZ function surface\u5b83\u662fExtra ObjectsBlender \u7684\u63d2\u4ef6\u7684\u4e00\u90e8\u5206\u6765\u751f\u6210\u7f51\u683c\u9876\u70b9\u3002\u6211\u53d1\u73b0\u8ba9\u63d2\u4ef6\u52a0\u5165\u7136\u540e\u5f62\u6210\u6b63\u786e\u7684\u56db\u8fb9\u5f62\u7f51\u683c\u8981\u56f0\u96be\u5f97\u591a\u3002\u5728\u6211\u7684Sverchok\u811a\u672c\u8282\u70b9\u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\u8981\u5bb9\u6613\u5f97\u591a\u3002 \u8be5Frame Info\u8282\u70b9\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u4e8e\u6bcf\u5e27\u65cb\u8f6c137.5\u00b0\u7684\u5e03\u9686\u7403\u3002\u5c06\u7ed3\u675f\u5e27\u8bbe\u7f6e\u4e3a145\u4ee5\u8fdb\u884c\u8fde\u7eed\u5faa\u73af\u52a8\u753b\u3002 \u200b \u200b \u76f8\u540c\u7684\u8282\u70b9\u56fe\u4e5f\u53ef\u7528\u4e8e\u4e3aJohn Edmark\u7684stl\u6587\u4ef6\u5236\u4f5c\u52a8\u753b\uff0c\u8fd9\u4e9b\u6587\u4ef6\u662f\u6839\u636eCreative Commons BY NC SA\u8bb8\u53ef\u8bc1 \u5728\u6b64\u5904 \u63d0\u4f9b\u7684\u3002\u53ea\u9700\u5c06stl\u5bfc\u5165Blender\u5e76\u66ff\u6362Scripted Node\u4e3aObject Scene\u8282\u70b9\u5373\u53ef\u3002 \u6216\u8005\uff0c\u5728Sverchok\u5916\u90e8\u65cb\u8f6c\u7f51\u683c\uff0c\u8fdb\u884c\u5173\u952e\u5e27\u52a8\u753b\uff0c\u5176\u4e2d\u7b2c\u4e00\u5e27\u6ca1\u6709\u65cb\u8f6c\uff0c\u7ed3\u675f\u5e27\u56f4\u7ed5z\u8f74\u65cb\u8f6c137.5\u00b0*\uff08\u5e27\u6570-1\uff09\u3002 \u4f8b\u5982\uff1a \u9009\u62e9\u8981\u65cb\u8f6c\u7684\u5bf9\u8c61 \u5c06\u7ed3\u675f\u5e27\u8bbe\u7f6e\u4e3a145 \u5c06\u6d3b\u52a8\u952e\u63a7\u8bbe\u7f6e\u66f4\u6539\u4e3a\u201c\u65cb\u8f6c\u201d \u5728\u7b2c\u4e00\u5e27\u4e0a\u63d2\u5165\u5173\u952e\u5e27 \u79fb\u52a8\u5230\u6700\u540e\u4e00\u5e27 \u5c06\u5bf9\u8c61\u56f4\u7ed5z\u8f74\u65cb\u8f6c\u8bbe\u7f6e\u4e3a19800\u5ea6\uff08144 * 137.5\u00b0= 19800\uff09 \u5728\u6b64\u6846\u67b6\u4e0a\u63d2\u5165\u5173\u952e\u5e27 \u5c06\u5f53\u524d\u5e27\u8bbe\u7f6e\u56de1 \u6253\u5f00\u201c\u66f2\u7ebf\u56fe\u7f16\u8f91\u5668\u201d\u89c6\u56fe \u5c06\u52a8\u753b\u66f2\u7ebf\u7684\u63d2\u503c\u6a21\u5f0f\u66f4\u6539\u4e3a\u7ebf\u6027\u3002\u4f7f\u7528\u83dc\u5355\uff1aKey> Interpolation Mode> Linear\u6216\u4f7f\u7528\u952e\u76d8T L\u3002 \u68c0\u67e5\u6cbf\u4e00\u5e27\u7684\u8e29\u8e0f\u5c06\u65cb\u8f6cZ\u89d2\u6539\u53d8137.5\u00b0 \u8fd9\u5c06\u7ed9\u51fa\u65e0\u7f1d\u76846\u79d2\uff08145\u5e27/ 24\u5e27/\u79d2\u301c= 6\u79d2\uff09\u52a8\u753b\u3002\u5b83\u662f\u65e0\u7f1d\u7684\uff0c\u56e0\u4e3a19800\u662f360\u7684\u6574\u6570\u500d\uff08360\u00b0* 55 = 19800\u00b0\uff09\u3002 \u6ce8\u610f\uff1a\u4efb\u4f55\u65cb\u8f6c\u89d2\u5ea6\u5728\u54ea\u91cc G n \uff0cm = n g- \u7c732 \u03c0 G\u00f1\uff0c\u7c73=\u00f1G- \u7c732\u03c0 \u5176\u4e2d\u00d1 = 1 \uff0c 2 \uff0c \u3002 \u3002 \u00f1=1\uff0c2\uff0c\u3002\u3002anf m \u7c73\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u7528\u4e8e\u5c06\u89d2\u5ea6\u6620\u5c04\u56de\u95f4\u9694- \u03c0 - \u03c0\u5230\u03c0 \u03c0\u4e5f\u4f1a\u5de5\u4f5c\u3002\u4f8b\u5982\uff0c\u6bcf\u5e27\u65cb\u8f6c137.5\u00b0\uff0c-85\u00b0\uff0c52.5\u00b0\uff0c170\u00b0\uff0c-32.5\u00b0\uff0c105\u00b0\uff0c-117.5\u00b0\u621620\u00b0\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u4e2a\u89d2\u5ea6\uff0c\u52a8\u753b\u770b\u8d77\u6765\u4f1a\u6709\u4e0d\u540c\u7684\u901f\u5ea6\u3002 \u73b0\u5728\u6765\u5230\u6709\u8da3\u7684\u90e8\u5206\uff0c\u7f16\u8f91\u7f51\u683c\u4ee5\u751f\u6210\u6709\u8da3\u7684\u52a8\u753b\u3002John Edmark\u63cf\u8ff0\uff1a \u6bcf\u4e2a\u56db\u8fb9\u5f62\u90fd\u6709\u4e00\u4e2a\u9644\u5c5e\u7269...... \u6211\u4eec\u53ef\u4ee5\u6309\u7167\u6211\u7684 Centers Polygon \u793a\u4f8b \u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u4f46\u6211\u5c06\u4f7f\u7528\u8be5Adaptive Polygons\u8282\u70b9\u663e\u793a\u53e6\u4e00\u79cd\u65b9\u5f0f\u4ee5\u83b7\u5f97\u4e0d\u540c\u7684\u5916\u89c2\u3002 \u200b \u6211\u5220\u9664\u4e86\u7528\u4e8e\u5b9e\u73b0\u65cb\u8f6c\u7684\u8282\u70b9\uff0c\u4ee5\u7b80\u5316\u4e0a\u8ff0\u8282\u70b9\u56fe\u3002 \u200b John Edmark\u63a5\u7740\u63cf\u8ff0\uff1a \u4e3a\u4e86\u4f7f\u9644\u80a2\u770b\u8d77\u6765\u5728\u52a8\u753b\u65f6\u6765\u56de\u79fb\u52a8\uff0c\u5b83\u4eec\u7684\u5c16\u7aef\u5728\u653e\u7f6e\u65f6\u4f1a\u987a\u5e8f\u5730\u5de6\u53f3\u626d\u66f2\uff08\u4ee5\u6b63\u5f26\u8fd0\u52a8\uff09\u3002 \u6267\u884c\u7c7b\u4f3c\u64cd\u4f5c\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u5728Adaptive Polygons\u8282\u70b9\u4e4b\u524d\u5c06\u6bcf\u4e2a\u9876\u70b9\u79fb\u52a8\u5230\u4e00\u4fa7\u3002\u5728\u7403\u5750\u6807\u4e2d\u6700\u5bb9\u6613\u60f3\u5230\u6dfb\u52a0\u201c\u4ece\u4e00\u4fa7\u5230\u53e6\u4e00\u4fa7\u201d\u7684\u8fd0\u52a8\u3002\u5982\u679c\u6211\u4eec\u6539\u53d8\u4e00\u4e2a\u70b9\u7684\u201cphi\u201d\u6781\u5750\u6807\uff0c\u5b83\u5c06\u5de6\u53f3\u79fb\u52a8\u3002 Sverchok\u73b0\u5728\u6709\u8282\u70b9\u5c06\u9876\u70b9\u7684x\uff0cy\uff0cz\u5750\u6807\u66f4\u6539\u4e3a\u6781\u5750\u6807\u5e76\u518d\u6b21\u5c06\u5176\u66f4\u6539\u56de\u6765\u3002\u8fd9\u91cc\u6211\u4eec\u5bf9\u6bcf\u4e2a\u9876\u70b9\u5e94\u7528\u6b63\u5f26\u504f\u79fb\u3002\u901a\u8fc7\u6539\u53d8\u8282\u70b9\u7684stop\u503c\u6765\u6539\u53d8\u6b63\u5f26\u6ce2\u7684\u9891\u7387Float Series\u3002\u03c0\u7684 \u500d\u6570\uff08\u6216\u5206\u6570\uff09 \u03c0\u662f\u660e\u667a\u7684\u3002\u7532Float\u5165\u53e3\u8282\u70b9\u88ab\u7528\u6765\u6539\u53d8\u6b63\u5f26\u6ce2\u7684\u5e45\u5ea6\u3002 \u200b \u200b \u968f\u7740\u66f4\u591a\u7684\u60f3\u6cd5\uff08\u548c\u66f4\u591a\u7684\u8282\u70b9\uff01\uff09\u6211\u4eec\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6446\u52a8\u6211\u4eec\u7684\u9644\u80a2 \u81ea\u9002\u5e94\u591a\u8fb9\u5f62\u7684\u672b\u7aef\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u7528List Mask (out)\u8282\u70b9\u5206\u79bb\u51fa\u672b\u7aef\u9876\u70b9\u3002\u5bf9\u4e8e\u63a9\u6a21\uff0c\u6211\u4eec\u4f7f\u7528\u6bcf\u4e2a\u9876\u70b9\u7684\u957f\u5ea6\uff08\u5e26\u6709\u4e00\u4e2aVector Math\u8282\u70b9\uff09\u6765\u9009\u62e9\u90a3\u4e9b\u4e0d\u5728bloom\u7403\u4f53\u8868\u9762\u4e0a\u7684\u9876\u70b9\u3002\u4f7f\u7528List Length\u8282\u70b9\u9700\u8981\u4e00\u4e9b\u9ebb\u70e6\u6765\u83b7\u5f97\u7528\u4f5c\u6b63\u5f26\u66f2\u7ebf\u7684\u89d2\u5ea6\u8f93\u5165\u7684\u6570\u5b57\u8303\u56f4\u3002\u8fd9\u4e2a\u591a\u7ea7\u5217\u8868\u9700\u8981\u5728\u5355\u4e2a\u5c16\u5cf0\u7ed3\u675f\u65f6\u4e3a\u6240\u6709\u70b9\u63d0\u4f9b\u76f8\u540c\u7684\u89d2\u5ea6\u503c\uff0c\u7136\u540e\u4e3a\u4e0b\u4e00\u4e2a\u5c16\u5cf0\u589e\u52a0\u3002 \u4e24\u7ec4\u9876\u70b9\uff08\u5177\u6709\u6b63\u5f26\u6446\u52a8\u7684\u672b\u7aef\u9876\u70b9\u548c\u7403\u4f53\u4e0a\u7684\u539f\u59cb\u9876\u70b9\uff09\u4e0eList Mask Join (in)\u4f7f\u7528\u6211\u4eec\u7528\u4e8e\u5206\u79bb\u5b83\u4eec\u7684\u76f8\u540c\u63a9\u6a21\u7684\u8282\u70b9\u4e00\u8d77\u653e\u56de\u3002 \u5f97\u5230\u8fd9\u6837\u7684\u52a8\u753b\uff1a \u200b","title":"Sverchok\u4e2d\u7684Bloom Spheres"},{"location":"ESP32/TIM/","text":"\u6d4b\u8bd5\u6807\u51c6ASTM-D5470 \u52a0\u70ed\u677f\u7535\u6d41 \\(I_H\\) \uff0c\u5f85\u5e73\u8861\u72b6\u6001 \u51cf\u5c0f\u52a0\u70ed\u677f\u7535\u6d41\u5230 \\(I_S\\) \u8ba1\u7b97\u4e24\u79cd\u72b6\u6001\u4e0b\u52a0\u70ed\u4e8c\u6781\u7ba1\u7684\u6e29\u5ea6\u5dee \\(\\Delta T_j\\) \uff0c\u548c\u52a0\u70ed\u529f\u7387\u5dee \\(\\Delta P\\) \u3002\u5f97\u5230\u6574\u4e2a\u94fe\u8def\u7684\u70ed\u963b $$ \\theta_{total}=\\frac{\\Delta T_j}{\\Delta P} $$ \u5176\u4e2d \\(\\theta_{total}\\) \u5305\u542b\u6d4b\u8bd5\u6837\u54c1\u7684\u70ed\u963b\uff0c\u6d4b\u8bd5\u8bbe\u5907\u70ed\u963b\uff0c\u63a5\u89e6\u754c\u9762\u70ed\u963b\u3002 \u6539\u53d8TIM\u539a\u5ea6\uff0c\u91cd\u590d\u540c\u6837\u6d4b\u8bd5\u8ba1\u7b97\u70ed\u963b\u5dee \\(\\Delta \\theta_{total}\\) \uff0c\u5373\u53ef\u5f97\u51fa $$ \\Delta \\theta_{total}=\\Delta \\theta_{TIM} $$ \u6d4b\u91cf\u7684\u539a\u5ea6\u5dee\u4e3a \\(\\Delta t\\) \u3002 \u8ba1\u7b97TIM\u7684\u5bfc\u70ed\u7387 \\(k\\) \uff0cthermal conductivity $$ k=\\frac{\\Delta \\theta_{total}}{\\Delta t A} $$ \u6d4b\u8bd5\u8fc7\u7a0b\u5b8c\u6210\u3002 \u9700\u6ce8\u610f\u52a0\u70ed\u4e8c\u6781\u7ba1\u603b\u4f1a\u6709\u4e00\u90e8\u5206\u70ed\u91cf\u4f1a\u4ece\u5176\u4ed6\u9014\u5f84\u6563\u53d1\u5230\u5468\u56f4\u73af\u5883\u4e2d\uff0c\u56e0\u6b64\u4e0a\u9762\u7684\u8ba1\u7b97\u4e2d\u7528\u5230\u7684 \\(\\Delta P\\) \u4f1a\u5b58\u5728\u8bef\u5dee\uff0c\u8fd9\u90e8\u5206\u70ed\u91cf\u79f0\u4e3a\u5bc4\u751f\u635f\u5931\u70ed\u91cfparasitic heat loss\u3002 \u901a\u8fc7\u70ed\u901a\u91cf\u4f20\u611f\u5668\u6d4b\u91cf\u5bc4\u751f\u70ed\u91cf\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u603b\u70ed\u963b\u4e0e\u5bc4\u751f\u70ed\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u53ef\u4ee5\u770b\u5230\u5f53\u6d4b\u91cf\u7cfb\u7edf\u603b\u70ed\u963b\u4e3a15K/W\u65f6\uff0c\u5927\u7ea6\u670928%\u7684\u70ed\u91cf\u4ece\u5176\u5b83\u901a\u9053\u6563\u8d70\u3002 \u6b64\u5173\u7cfb\u8ddf\u5177\u4f53\u6d4b\u8bd5\u8bbe\u5907\u76f8\u5173\uff0c\u53ea\u505a\u53c2\u8003\u3002 \u6587\u7ae0\u6765\u6e90\uff1amentor.com","title":"\u56fa\u6001\u754c\u9762\u6750\u6599\u70ed\u7279\u6027\u6d4b\u91cf"},{"location":"ESP32/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/","text":"\u6807\u7b7e \u662f\u6211\u4eec\u8981\u9884\u6d4b\u7684\u4e8b\u7269\uff0c\u5373 \\(y\\) \u53d8\u91cf\u3002 \u7279\u5f81 \u662f\u8f93\u5165\u53d8\u91cf\uff0c\u5373 \\(x\\) \u53d8\u91cf\u3002 \u6837\u672c \u662f\u6307\u6570\u636e\u7684\u7279\u5b9a\u5b9e\u4f8b\u3002 \u6837\u672c\u5206\u4e3a\u4ee5\u4e0b\u4e24\u7c7b\uff1a \u6709\u6807\u7b7e\u6837\u672c \u65e0\u6807\u7b7e\u6837\u672c \u6709\u6807\u7b7e\u6837\u672c\u540c\u65f6\u5305\u542b\u7279\u5f81\u548c\u6807\u7b7e\u3002 \u6211\u4eec\u4f7f\u7528\u6709\u6807\u7b7e\u6837\u672c\u6765\u8bad\u7ec3\u6a21\u578b\u3002\u5728\u4f7f\u7528\u6709\u6807\u7b7e\u6837\u672c\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u6a21\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u8be5\u6a21\u578b\u6765\u9884\u6d4b\u65e0\u6807\u7b7e\u6837\u672c\u7684\u6807\u7b7e\u3002 \u6a21\u578b \u5b9a\u4e49\u4e86\u7279\u5f81\u4e0e\u6807\u7b7e\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u56de\u5f52 \u6a21\u578b\u53ef\u9884\u6d4b\u8fde\u7eed\u503c\u3002 \u5206\u7c7b \u6a21\u578b\u53ef\u9884\u6d4b\u79bb\u6563\u503c\u3002 \u7ebf\u6027\u56de\u5f52 \u662f\u4e00\u79cd\u627e\u5230\u6700\u9002\u5408\u4e00\u7ec4\u70b9\u7684\u76f4\u7ebf\u6216\u8d85\u5e73\u9762\u7684\u65b9\u6cd5\u3002 \u5e73\u65b9\u8bef\u5dee \uff08\u53c8\u79f0\u4e3a L2 \u8bef\u5dee \uff09 = (observation - prediction(x))2 = (y - y')2 \u5747\u65b9\u8bef\u5dee ( MSE ) \u6307\u7684\u662f\u6bcf\u4e2a\u6837\u672c\u7684\u5e73\u5747\u5e73\u65b9\u635f\u5931\u3002\u8981\u8ba1\u7b97 MSE\uff0c\u8bf7\u6c42\u51fa\u5404\u4e2a\u6837\u672c\u7684\u6240\u6709\u5e73\u65b9\u8bef\u5dee\u4e4b\u548c\uff0c\u7136\u540e\u9664\u4ee5\u6837\u672c\u6570\u91cf\uff1a $$ MSE = \\frac{1}{N} \\sum_{(x,y)\\in D} (y - prediction(x))^2 $$ \u5176\u4e2d\uff1a \\(prediction(x)\\) \u6307\u7684\u662f\u6743\u91cd\u548c\u504f\u5dee\u4e0e\u7279\u5f81\u96c6 \\(x\\) \u7ed3\u5408\u7684\u51fd\u6570\u3002 \\(D\\) \u6307\u7684\u662f\u5305\u542b\u591a\u4e2a\u6709\u6807\u7b7e\u6837\u672c\uff08\u5373 \\((x,y)\\) \uff09\u7684\u6570\u636e\u96c6\u3002 \u964d\u4f4e\u635f\u5931 (Reducing Loss)\uff1a\u68af\u5ea6\u4e0b\u964d\u6cd5 \u68af\u5ea6 \u662f\u504f\u5bfc\u6570\u7684\u77e2\u91cf\u3002\u68af\u5ea6\u662f\u4e00\u4e2a\u77e2\u91cf\uff0c\u56e0\u6b64\u5177\u6709\u4ee5\u4e0b\u4e24\u4e2a\u7279\u5f81\uff1a \u65b9\u5411 \u5927\u5c0f \u68af\u5ea6\u4e0b\u964d\u6cd5\u7b97\u6cd5\u4f1a\u6cbf\u7740\u8d1f\u68af\u5ea6\u7684\u65b9\u5411\u8d70\u4e00\u6b65\uff0c\u4ee5\u4fbf\u5c3d\u5feb\u964d\u4f4e\u635f\u5931\u3002 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7b97\u6cd5\u7528\u68af\u5ea6\u4e58\u4ee5\u4e00\u4e2a\u79f0\u4e3a \u5b66\u4e60\u901f\u7387 \uff08\u6709\u65f6\u4e5f\u79f0\u4e3a \u6b65\u957f \uff09\u7684\u6807\u91cf\uff0c\u4ee5\u786e\u5b9a\u4e0b\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u68af\u5ea6\u5927\u5c0f\u4e3a 2.5\uff0c\u5b66\u4e60\u901f\u7387\u4e3a 0.01\uff0c\u5219\u68af\u5ea6\u4e0b\u964d\u6cd5\u7b97\u6cd5\u4f1a\u9009\u62e9\u8ddd\u79bb\u524d\u4e00\u4e2a\u70b9 0.025 \u7684\u4f4d\u7f6e\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u70b9\u3002 \u901a\u8fc7\u4ece\u6211\u4eec\u7684\u6570\u636e\u96c6\u4e2d\u968f\u673a\u9009\u62e9\u6837\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c0f\u5f97\u591a\u7684\u6570\u636e\u96c6\u4f30\u7b97\uff08\u5c3d\u7ba1\u8fc7\u7a0b\u975e\u5e38\u6742\u4e71\uff09\u51fa\u8f83\u5927\u7684\u5e73\u5747\u503c\u3002 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5 ( SGD ) \u5c06\u8fd9\u79cd\u60f3\u6cd5\u8fd0\u7528\u5230\u6781\u81f4\uff0c\u5b83\u6bcf\u6b21\u8fed\u4ee3\u53ea\u4f7f\u7528\u4e00\u4e2a\u6837\u672c\uff08\u6279\u91cf\u5927\u5c0f\u4e3a 1\uff09\u3002\u5982\u679c\u8fdb\u884c\u8db3\u591f\u7684\u8fed\u4ee3\uff0cSGD \u4e5f\u53ef\u4ee5\u53d1\u6325\u4f5c\u7528\uff0c\u4f46\u8fc7\u7a0b\u4f1a\u975e\u5e38\u6742\u4e71\u3002\u201c\u968f\u673a\u201d\u8fd9\u4e00\u672f\u8bed\u8868\u793a\u6784\u6210\u5404\u4e2a\u6279\u91cf\u7684\u4e00\u4e2a\u6837\u672c\u90fd\u662f\u968f\u673a\u9009\u62e9\u7684\u3002 \u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5 \uff08 \u5c0f\u6279\u91cf SGD \uff09\u662f\u4ecb\u4e8e\u5168\u6279\u91cf\u8fed\u4ee3\u4e0e SGD \u4e4b\u95f4\u7684\u6298\u8877\u65b9\u6848\u3002\u5c0f\u6279\u91cf\u901a\u5e38\u5305\u542b 10-1000 \u4e2a\u968f\u673a\u9009\u62e9\u7684\u6837\u672c\u3002\u5c0f\u6279\u91cf SGD \u53ef\u4ee5\u51cf\u5c11 SGD \u4e2d\u7684\u6742\u4e71\u6837\u672c\u6570\u91cf\uff0c\u4f46\u4ecd\u7136\u6bd4\u5168\u6279\u91cf\u66f4\u9ad8\u6548\u3002 \u4f7f\u7528 TensorFlow \u7684\u8d77\u59cb\u6b65\u9aa4","title":"Tensorflow\u5b66\u4e60\u7b14\u8bb01"},{"location":"ESP32/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/#reducing-loss","text":"\u68af\u5ea6 \u662f\u504f\u5bfc\u6570\u7684\u77e2\u91cf\u3002\u68af\u5ea6\u662f\u4e00\u4e2a\u77e2\u91cf\uff0c\u56e0\u6b64\u5177\u6709\u4ee5\u4e0b\u4e24\u4e2a\u7279\u5f81\uff1a \u65b9\u5411 \u5927\u5c0f \u68af\u5ea6\u4e0b\u964d\u6cd5\u7b97\u6cd5\u4f1a\u6cbf\u7740\u8d1f\u68af\u5ea6\u7684\u65b9\u5411\u8d70\u4e00\u6b65\uff0c\u4ee5\u4fbf\u5c3d\u5feb\u964d\u4f4e\u635f\u5931\u3002 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7b97\u6cd5\u7528\u68af\u5ea6\u4e58\u4ee5\u4e00\u4e2a\u79f0\u4e3a \u5b66\u4e60\u901f\u7387 \uff08\u6709\u65f6\u4e5f\u79f0\u4e3a \u6b65\u957f \uff09\u7684\u6807\u91cf\uff0c\u4ee5\u786e\u5b9a\u4e0b\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u68af\u5ea6\u5927\u5c0f\u4e3a 2.5\uff0c\u5b66\u4e60\u901f\u7387\u4e3a 0.01\uff0c\u5219\u68af\u5ea6\u4e0b\u964d\u6cd5\u7b97\u6cd5\u4f1a\u9009\u62e9\u8ddd\u79bb\u524d\u4e00\u4e2a\u70b9 0.025 \u7684\u4f4d\u7f6e\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u70b9\u3002 \u901a\u8fc7\u4ece\u6211\u4eec\u7684\u6570\u636e\u96c6\u4e2d\u968f\u673a\u9009\u62e9\u6837\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c0f\u5f97\u591a\u7684\u6570\u636e\u96c6\u4f30\u7b97\uff08\u5c3d\u7ba1\u8fc7\u7a0b\u975e\u5e38\u6742\u4e71\uff09\u51fa\u8f83\u5927\u7684\u5e73\u5747\u503c\u3002 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5 ( SGD ) \u5c06\u8fd9\u79cd\u60f3\u6cd5\u8fd0\u7528\u5230\u6781\u81f4\uff0c\u5b83\u6bcf\u6b21\u8fed\u4ee3\u53ea\u4f7f\u7528\u4e00\u4e2a\u6837\u672c\uff08\u6279\u91cf\u5927\u5c0f\u4e3a 1\uff09\u3002\u5982\u679c\u8fdb\u884c\u8db3\u591f\u7684\u8fed\u4ee3\uff0cSGD \u4e5f\u53ef\u4ee5\u53d1\u6325\u4f5c\u7528\uff0c\u4f46\u8fc7\u7a0b\u4f1a\u975e\u5e38\u6742\u4e71\u3002\u201c\u968f\u673a\u201d\u8fd9\u4e00\u672f\u8bed\u8868\u793a\u6784\u6210\u5404\u4e2a\u6279\u91cf\u7684\u4e00\u4e2a\u6837\u672c\u90fd\u662f\u968f\u673a\u9009\u62e9\u7684\u3002 \u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5 \uff08 \u5c0f\u6279\u91cf SGD \uff09\u662f\u4ecb\u4e8e\u5168\u6279\u91cf\u8fed\u4ee3\u4e0e SGD \u4e4b\u95f4\u7684\u6298\u8877\u65b9\u6848\u3002\u5c0f\u6279\u91cf\u901a\u5e38\u5305\u542b 10-1000 \u4e2a\u968f\u673a\u9009\u62e9\u7684\u6837\u672c\u3002\u5c0f\u6279\u91cf SGD \u53ef\u4ee5\u51cf\u5c11 SGD \u4e2d\u7684\u6742\u4e71\u6837\u672c\u6570\u91cf\uff0c\u4f46\u4ecd\u7136\u6bd4\u5168\u6279\u91cf\u66f4\u9ad8\u6548\u3002","title":"\u964d\u4f4e\u635f\u5931 (Reducing Loss)\uff1a\u68af\u5ea6\u4e0b\u964d\u6cd5"},{"location":"ESP32/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/#tensorflow","text":"","title":"\u4f7f\u7528 TensorFlow \u7684\u8d77\u59cb\u6b65\u9aa4"},{"location":"ESP32/Thermal%20Impedance/","text":"+++ date = \"2017-04-13\" image = \"pcbpic.jpg\" description = \"Thermal Impedance and Thermal Resistance\" categories = [\"Thermal\", \"Learning\"] title = \"Thermal Impedance and Thermal Resistance\" slug = \"Thermal Impedance and Thermal Resistance\" tags = [\"TIM\"] +++ \u70ed\u963b \u70ed\u963b \uff08thermal resistance\uff09\uff0c \\(R\\) \uff0c\u5355\u4f4d\u662f \\(\u00b0C/W\\) \uff0c\u5b83\u4ee3\u8868\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u5f53\u6709\u5355\u4f4d\u70ed\u80fd\u91cf\u901a\u8fc7\u7269\u4f53\u65f6\uff0c\u7269\u4f53\u4e24\u7aef\u7684\u6e29\u5ea6\u5dee\u3002 \\[R=(T_1-T_2)/Q=\\Delta T/Q\\] \u5e94\u7528\u5df2\u77e5\u70ed\u963b\u8ba1\u7b97\u6e29\u5ea6\u5dee \\(\\Delta T=RQ\\) \u3002 \u5bfc\u70ed\u7387 \u5bfc\u70ed\u7387 \uff08thermal conductivity\uff09\uff0c \\(k\\) \uff0c\u5355\u4f4d\u662f \\(W/(m\u00b7\u00b0C)\\) \uff0c\u662f\u6750\u6599\u7684\u56fa\u6709\u7279\u6027\u3002 \u6839\u636eFourier's law\u6709 \\[Q=\\frac {kA\\Delta T}{t}\\] \u56e0\u6b64\u53ef\u4ee5\u8ba1\u7b97\u67d0\u4e00\u7279\u5b9a\u5f62\u72b6\u7269\u4f53\u7684\u70ed\u963b\uff1a \\[R=\\frac{t}{kA}\\] \u29f8\u29f8\u4ece\u4e0a\u5f0f\u53ef\u4ee5\u770b\u51fa\u6750\u6599\u7684\u5bfc\u70ed\u7387 \\(k\\) \u8d8a\u5927\uff0c\u63a5\u89e6\u9762\u79ef\u8d8a\u5927 \\(A\\) \uff0c\u70ed\u963b\u8d8a\u5c0f\uff1b\u539a\u5ea6\u6216\u95f4\u9699 \\(t\\) \u8d8a\u5927\uff0c\u70ed\u963b\u8d8a\u5927\u3002\u29f8\u29f8\u4ece\u4e0a\u5f0f\u53ef\u4ee5\u770b\u51fa\u7269\u4f53\u7684\u70ed\u963b \\(R\\) \u4e0d\u4ec5\u548c\u5176\u672c\u8eab\u7684\u5bfc\u70ed\u7387 \\(k\\) \u76f8\u5173\uff0c\u8fd8\u548c\u53c2\u4e0e\u70ed\u4f20\u5bfc\u7684\u9762\u79ef \\(A\\) \u53ca\u539a\u5ea6 \\(t\\) \u76f8\u5173\u3002\u6750\u6599\u7684\u5bfc\u70ed\u7387 \\(k\\) \u8d8a\u5927\uff0c\u63a5\u89e6\u9762\u79ef\u8d8a\u5927 \\(A\\) \uff0c\u70ed\u963b\u8d8a\u5c0f\uff1b\u539a\u5ea6\u6216\u95f4\u9699 \\(t\\) \u8d8a\u5927\uff0c\u70ed\u963b\u8d8a\u5927\u3002\u29f8\u29f8 \u63a5\u89e6\u70ed\u963b \u63a5\u89e6\u70ed\u963b\uff08thermal contact resistance\uff09\uff0c\u8fd9\u91cc\u5c06\u63a5\u89e6\u70ed\u963b\u6807\u8bb0\u4e3a \\(R_c\\) \uff0c\u5355\u4f4d\u662f \\(m^2\u00b7\u00b0C/W\\) \u3002 \u29f8\u29f8\u4e24\u4e2a\u4e92\u76f8\u63a5\u89e6\u7684\u56fa\u4f53\u8868\u9762\uff0c\u5b9e\u9645\u4e0a\u63a5\u89e6\u4ec5\u4ec5\u53d1\u751f\u5728\u4e00\u4e9b\u79bb\u6563\u7684\u9762\u79ef\u5143\u4e0a\uff0c\u5728\u672a\u63a5\u89e6\u7684\u754c\u9762\u4e4b\u95f4\u7684\u95f4\u9699\u5e38\u5e38\u5145\u6ee1\u4e86\u7a7a\u6c14\uff0c\u70ed\u91cf\u5c06\u4ee5\u4f20\u5bfc\u7684\u65b9\u5f0f\u7a7f\u8fc7\u8fd9\u79cd\u6c14\u9699\u5c42\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0e\u56fa\u4f53\u8868\u9762\u5b8c\u5168\u63a5\u89e6\u76f8\u6bd4\uff0c\u589e\u52a0\u4e86\u4f20\u9012\u70ed\u963b\u3002\u63a5\u89e6\u70ed\u963b\u7b49\u4e8e\u4e24\u4e2a\u4ea4\u754c\u8868\u9762\u6e29\u5ea6\u4e4b\u5dee\u9664\u4ee5\u70ed\u6d41\u91cf\u3002\u63a5\u89e6\u70ed\u963b\u5355\u4f4d\u662f\uff1a \\(m^2\u00b7K/W\\) \u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u63a5\u89e6\u70ed\u963b\u7684\u5355\u4f4d\u548c\u6211\u4eec\u524d\u9762\u8bf4\u7684\u70ed\u963b\u7684\u5355\u4f4d\u662f\u4e0d\u4e00\u6837\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u63a5\u89e6\u70ed\u963b\u7b49\u70ed\u963b\u4e58\u4ee5\u9762\u79ef\uff0c\u56e0\u6b64\u63a5\u89e6\u70ed\u963b\u7684\u5927\u5c0f\u4e0e\u63a5\u89e6\u9762\u79ef\u65e0\u5173\u3002 Since \\(T_c\\) and \\(T_s\\) depend on the position of the detection point, their shares of the total thermal resistance may vary. The total thermal resistance, however, is always calculated as follows (this also applies to Zth): \\[R_{th\\(j-c\\)} + R{th\\(c-s\\)} + R{th\\(s-a\\)} = R{th\\(j-a\\)}\\] Thermal resistance may be used to calculate true constant quantities, as well as average temperatures of periodic functions. Normally, however, the current conducted through a semiconductor device and, consequently, the power losses, are time dependent parameters. In line rectifiers, the losses and temperatures vary within the bounds of the line frequency around a mean value. The virtual junction temperature Tj is higher under peak load than under direct current load or if calculated with a mean power loss PFAV /PTAV and Rth . The temperature fluctuation range depends on the current waveform and the current flow time within a cycle. With help of the thermal impedance, the effective junction temperature Tj(t) can be calculated for any given duration of power dissipation. The datasheets of older components still contain auxiliary values. This is owing to the restricted methods of calculation at that time. These values should enable the user to factor in the load dependent power loss and temperature fluctuation based on the operating frequency. Although not correct from a physics point of view, the static resistance Rth is used as a mathematical aid and is multiplied by a corrective factor in order to project the mean temperature to the maximum temperature value (Figure 1). The resulting value Rth, which is given either as a pure operand or in the form of a diagram, applies to the given current waveform and the lead angle for a frequency range of 40\u202660 Hz. In other words, Rec120 stands for \"rectangular current with a current flow time of 120\u00b0\". Figure 1. Rth(j-c) of a discrete 100A thyristor multiplied by a corrective factor to calculate the temperature fluctuation as a function of the current conduction angle \u0398 and current waveform Similar auxiliary parameters are, for example, the thermal pulse impedance Zth(p) and the thermal supplementary impedance Zth(z). The thermal impedance is used to calculate the temperature change at a specified point in time after power dissipation has been in effect. For this purpose, the mean on-state power dissipation PTAV is normally averaged over one line frequency cycle. This temperature rise is also superposed by a fluctuation at operation frequency. This fluctuation can be calculated analytically using the thermal impedances for individual pulses and pulse sequences. Although not correct from a physics point of view, the thermal impedance is indicated with a supplementary value in former datasheets in order to infer the maximum temperature from the average dissipated power. For example, Figure 2 gives such supplementary impedances for different current conduction angles and waveforms. Figure 2. Zth to case (Zth(j-c)) and to heatsink (Zth(j-s)) of a discrete 100 A thyristor and mathematical auxiliary parameter Zth(z) to calculate the temperature fluctuation at line frequency for different current conduction angles and waveforms For more information, please read: Heat Transfer in Power Semiconductor Devices Cooling Methods for Power Semiconductor Devices \u29f8\u29f8\u4e24\u4e2a\u4e92\u76f8\u63a5\u89e6\u7684\u56fa\u4f53\u8868\u9762\uff0c\u5b9e\u9645\u4e0a\u63a5\u89e6\u4ec5\u4ec5\u53d1\u751f\u5728\u4e00\u4e9b\u79bb\u6563\u7684\u9762\u79ef\u5143\u4e0a\uff0c\u5728\u672a\u63a5\u89e6\u7684\u754c\u9762\u4e4b\u95f4\u7684\u95f4\u9699\u5e38\u5e38\u5145\u6ee1\u4e86\u7a7a\u6c14\uff0c\u70ed\u91cf\u5c06\u4ee5\u4f20\u5bfc\u7684\u65b9\u5f0f\u7a7f\u8fc7\u8fd9\u79cd\u6c14\u9699\u5c42\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0e\u56fa\u4f53\u8868\u9762\u5b8c\u5168\u63a5\u89e6\u76f8\u6bd4\uff0c\u589e\u52a0\u4e86\u4f20\u9012\u70ed\u963b\u3002\u63a5\u89e6\u70ed\u963b\u7b49\u4e8e\u4e24\u4e2a\u4ea4\u754c\u8868\u9762\u6e29\u5ea6\u4e4b\u5dee\u9664\u4ee5\u70ed\u6d41\u91cf\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u63a5\u89e6\u70ed\u963b\u7684\u5355\u4f4d\u548c\u6211\u4eec\u524d\u9762\u8bf4\u7684\u70ed\u963b\u7684\u5355\u4f4d\u662f\u4e0d\u4e00\u6837\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u63a5\u89e6\u70ed\u963b\u7b49\u70ed\u963b\u4e58\u4ee5\u9762\u79ef\uff1a \\[R_c=RA=\\frac{t}{k}\\] \u56e0\u6b64\u63a5\u89e6\u70ed\u963b\u7684\u5927\u5c0f\u4e0e\u63a5\u89e6\u9762\u79ef\u65e0\u5173\u3002\u6ce8\u610f\u5bf9\u4e8e\u63a5\u89e6\u9762\u800c\u8a00\uff0c\u4e0a\u5f0f\u4e2d\u7684 \\(k\\) \u5b9e\u9645\u4e0a\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u56e0\u4e3a\u63a5\u89e6\u9762\u5e76\u4e0d\u662f\u4e00\u4e2a\u7279\u5b9a\u7684\u7269\u7406\u5b9e\u4f53\u3002\u29f8\u29f8","title":"Thermal Impedance"},{"location":"ESP32/Thermal%20Impedance/#_1","text":"\u70ed\u963b \uff08thermal resistance\uff09\uff0c \\(R\\) \uff0c\u5355\u4f4d\u662f \\(\u00b0C/W\\) \uff0c\u5b83\u4ee3\u8868\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u5f53\u6709\u5355\u4f4d\u70ed\u80fd\u91cf\u901a\u8fc7\u7269\u4f53\u65f6\uff0c\u7269\u4f53\u4e24\u7aef\u7684\u6e29\u5ea6\u5dee\u3002 \\[R=(T_1-T_2)/Q=\\Delta T/Q\\] \u5e94\u7528\u5df2\u77e5\u70ed\u963b\u8ba1\u7b97\u6e29\u5ea6\u5dee \\(\\Delta T=RQ\\) \u3002","title":"\u70ed\u963b"},{"location":"ESP32/Thermal%20Impedance/#_2","text":"\u5bfc\u70ed\u7387 \uff08thermal conductivity\uff09\uff0c \\(k\\) \uff0c\u5355\u4f4d\u662f \\(W/(m\u00b7\u00b0C)\\) \uff0c\u662f\u6750\u6599\u7684\u56fa\u6709\u7279\u6027\u3002 \u6839\u636eFourier's law\u6709 \\[Q=\\frac {kA\\Delta T}{t}\\] \u56e0\u6b64\u53ef\u4ee5\u8ba1\u7b97\u67d0\u4e00\u7279\u5b9a\u5f62\u72b6\u7269\u4f53\u7684\u70ed\u963b\uff1a \\[R=\\frac{t}{kA}\\] \u29f8\u29f8\u4ece\u4e0a\u5f0f\u53ef\u4ee5\u770b\u51fa\u6750\u6599\u7684\u5bfc\u70ed\u7387 \\(k\\) \u8d8a\u5927\uff0c\u63a5\u89e6\u9762\u79ef\u8d8a\u5927 \\(A\\) \uff0c\u70ed\u963b\u8d8a\u5c0f\uff1b\u539a\u5ea6\u6216\u95f4\u9699 \\(t\\) \u8d8a\u5927\uff0c\u70ed\u963b\u8d8a\u5927\u3002\u29f8\u29f8\u4ece\u4e0a\u5f0f\u53ef\u4ee5\u770b\u51fa\u7269\u4f53\u7684\u70ed\u963b \\(R\\) \u4e0d\u4ec5\u548c\u5176\u672c\u8eab\u7684\u5bfc\u70ed\u7387 \\(k\\) \u76f8\u5173\uff0c\u8fd8\u548c\u53c2\u4e0e\u70ed\u4f20\u5bfc\u7684\u9762\u79ef \\(A\\) \u53ca\u539a\u5ea6 \\(t\\) \u76f8\u5173\u3002\u6750\u6599\u7684\u5bfc\u70ed\u7387 \\(k\\) \u8d8a\u5927\uff0c\u63a5\u89e6\u9762\u79ef\u8d8a\u5927 \\(A\\) \uff0c\u70ed\u963b\u8d8a\u5c0f\uff1b\u539a\u5ea6\u6216\u95f4\u9699 \\(t\\) \u8d8a\u5927\uff0c\u70ed\u963b\u8d8a\u5927\u3002\u29f8\u29f8","title":"\u5bfc\u70ed\u7387"},{"location":"ESP32/Thermal%20Impedance/#_3","text":"\u63a5\u89e6\u70ed\u963b\uff08thermal contact resistance\uff09\uff0c\u8fd9\u91cc\u5c06\u63a5\u89e6\u70ed\u963b\u6807\u8bb0\u4e3a \\(R_c\\) \uff0c\u5355\u4f4d\u662f \\(m^2\u00b7\u00b0C/W\\) \u3002 \u29f8\u29f8\u4e24\u4e2a\u4e92\u76f8\u63a5\u89e6\u7684\u56fa\u4f53\u8868\u9762\uff0c\u5b9e\u9645\u4e0a\u63a5\u89e6\u4ec5\u4ec5\u53d1\u751f\u5728\u4e00\u4e9b\u79bb\u6563\u7684\u9762\u79ef\u5143\u4e0a\uff0c\u5728\u672a\u63a5\u89e6\u7684\u754c\u9762\u4e4b\u95f4\u7684\u95f4\u9699\u5e38\u5e38\u5145\u6ee1\u4e86\u7a7a\u6c14\uff0c\u70ed\u91cf\u5c06\u4ee5\u4f20\u5bfc\u7684\u65b9\u5f0f\u7a7f\u8fc7\u8fd9\u79cd\u6c14\u9699\u5c42\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0e\u56fa\u4f53\u8868\u9762\u5b8c\u5168\u63a5\u89e6\u76f8\u6bd4\uff0c\u589e\u52a0\u4e86\u4f20\u9012\u70ed\u963b\u3002\u63a5\u89e6\u70ed\u963b\u7b49\u4e8e\u4e24\u4e2a\u4ea4\u754c\u8868\u9762\u6e29\u5ea6\u4e4b\u5dee\u9664\u4ee5\u70ed\u6d41\u91cf\u3002\u63a5\u89e6\u70ed\u963b\u5355\u4f4d\u662f\uff1a \\(m^2\u00b7K/W\\) \u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u63a5\u89e6\u70ed\u963b\u7684\u5355\u4f4d\u548c\u6211\u4eec\u524d\u9762\u8bf4\u7684\u70ed\u963b\u7684\u5355\u4f4d\u662f\u4e0d\u4e00\u6837\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u63a5\u89e6\u70ed\u963b\u7b49\u70ed\u963b\u4e58\u4ee5\u9762\u79ef\uff0c\u56e0\u6b64\u63a5\u89e6\u70ed\u963b\u7684\u5927\u5c0f\u4e0e\u63a5\u89e6\u9762\u79ef\u65e0\u5173\u3002 Since \\(T_c\\) and \\(T_s\\) depend on the position of the detection point, their shares of the total thermal resistance may vary. The total thermal resistance, however, is always calculated as follows (this also applies to Zth): \\[R_{th\\(j-c\\)} + R{th\\(c-s\\)} + R{th\\(s-a\\)} = R{th\\(j-a\\)}\\] Thermal resistance may be used to calculate true constant quantities, as well as average temperatures of periodic functions. Normally, however, the current conducted through a semiconductor device and, consequently, the power losses, are time dependent parameters. In line rectifiers, the losses and temperatures vary within the bounds of the line frequency around a mean value. The virtual junction temperature Tj is higher under peak load than under direct current load or if calculated with a mean power loss PFAV /PTAV and Rth . The temperature fluctuation range depends on the current waveform and the current flow time within a cycle. With help of the thermal impedance, the effective junction temperature Tj(t) can be calculated for any given duration of power dissipation. The datasheets of older components still contain auxiliary values. This is owing to the restricted methods of calculation at that time. These values should enable the user to factor in the load dependent power loss and temperature fluctuation based on the operating frequency. Although not correct from a physics point of view, the static resistance Rth is used as a mathematical aid and is multiplied by a corrective factor in order to project the mean temperature to the maximum temperature value (Figure 1). The resulting value Rth, which is given either as a pure operand or in the form of a diagram, applies to the given current waveform and the lead angle for a frequency range of 40\u202660 Hz. In other words, Rec120 stands for \"rectangular current with a current flow time of 120\u00b0\". Figure 1. Rth(j-c) of a discrete 100A thyristor multiplied by a corrective factor to calculate the temperature fluctuation as a function of the current conduction angle \u0398 and current waveform Similar auxiliary parameters are, for example, the thermal pulse impedance Zth(p) and the thermal supplementary impedance Zth(z). The thermal impedance is used to calculate the temperature change at a specified point in time after power dissipation has been in effect. For this purpose, the mean on-state power dissipation PTAV is normally averaged over one line frequency cycle. This temperature rise is also superposed by a fluctuation at operation frequency. This fluctuation can be calculated analytically using the thermal impedances for individual pulses and pulse sequences. Although not correct from a physics point of view, the thermal impedance is indicated with a supplementary value in former datasheets in order to infer the maximum temperature from the average dissipated power. For example, Figure 2 gives such supplementary impedances for different current conduction angles and waveforms. Figure 2. Zth to case (Zth(j-c)) and to heatsink (Zth(j-s)) of a discrete 100 A thyristor and mathematical auxiliary parameter Zth(z) to calculate the temperature fluctuation at line frequency for different current conduction angles and waveforms For more information, please read: Heat Transfer in Power Semiconductor Devices Cooling Methods for Power Semiconductor Devices \u29f8\u29f8\u4e24\u4e2a\u4e92\u76f8\u63a5\u89e6\u7684\u56fa\u4f53\u8868\u9762\uff0c\u5b9e\u9645\u4e0a\u63a5\u89e6\u4ec5\u4ec5\u53d1\u751f\u5728\u4e00\u4e9b\u79bb\u6563\u7684\u9762\u79ef\u5143\u4e0a\uff0c\u5728\u672a\u63a5\u89e6\u7684\u754c\u9762\u4e4b\u95f4\u7684\u95f4\u9699\u5e38\u5e38\u5145\u6ee1\u4e86\u7a7a\u6c14\uff0c\u70ed\u91cf\u5c06\u4ee5\u4f20\u5bfc\u7684\u65b9\u5f0f\u7a7f\u8fc7\u8fd9\u79cd\u6c14\u9699\u5c42\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0e\u56fa\u4f53\u8868\u9762\u5b8c\u5168\u63a5\u89e6\u76f8\u6bd4\uff0c\u589e\u52a0\u4e86\u4f20\u9012\u70ed\u963b\u3002\u63a5\u89e6\u70ed\u963b\u7b49\u4e8e\u4e24\u4e2a\u4ea4\u754c\u8868\u9762\u6e29\u5ea6\u4e4b\u5dee\u9664\u4ee5\u70ed\u6d41\u91cf\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u63a5\u89e6\u70ed\u963b\u7684\u5355\u4f4d\u548c\u6211\u4eec\u524d\u9762\u8bf4\u7684\u70ed\u963b\u7684\u5355\u4f4d\u662f\u4e0d\u4e00\u6837\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u63a5\u89e6\u70ed\u963b\u7b49\u70ed\u963b\u4e58\u4ee5\u9762\u79ef\uff1a \\[R_c=RA=\\frac{t}{k}\\] \u56e0\u6b64\u63a5\u89e6\u70ed\u963b\u7684\u5927\u5c0f\u4e0e\u63a5\u89e6\u9762\u79ef\u65e0\u5173\u3002\u6ce8\u610f\u5bf9\u4e8e\u63a5\u89e6\u9762\u800c\u8a00\uff0c\u4e0a\u5f0f\u4e2d\u7684 \\(k\\) \u5b9e\u9645\u4e0a\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u56e0\u4e3a\u63a5\u89e6\u9762\u5e76\u4e0d\u662f\u4e00\u4e2a\u7279\u5b9a\u7684\u7269\u7406\u5b9e\u4f53\u3002\u29f8\u29f8","title":"\u63a5\u89e6\u70ed\u963b"},{"location":"ESP32/Use%20flogate_cl%20Command%20convert%20xml%20to%20pdml/","text":"Use flogate_cl Command convert xml to pdml set up the FloTHERM environment Start the command prompt with \"run as administrator\", then run cd \"C:\\Program Files\\MentorMA\\flosuite_v12\\flotherm\\WinXP\\bin\" flotherm -env Then convert xml as below: flogate_cl -i xml -r C:\\Users\\q19439\\Desktop\\New folder\\folded_fin_heat_sink.xml -o pdml -w C:\\test.pdml","title":"Use flogate_cl Command convert xml to pdml"},{"location":"ESP32/Use%20flogate_cl%20Command%20convert%20xml%20to%20pdml/#use-flogate_cl-command-convert-xml-to-pdml","text":"set up the FloTHERM environment Start the command prompt with \"run as administrator\", then run cd \"C:\\Program Files\\MentorMA\\flosuite_v12\\flotherm\\WinXP\\bin\" flotherm -env Then convert xml as below: flogate_cl -i xml -r C:\\Users\\q19439\\Desktop\\New folder\\folded_fin_heat_sink.xml -o pdml -w C:\\test.pdml","title":"Use flogate_cl Command convert xml to pdml"},{"location":"ESP32/VL6180X%E6%B5%8B%E8%B7%9D/","text":"VL6180X\u6d4b\u8ddd VL6180X\u6a21\u5757 VL6180X\u6a21\u5757\u5f15\u811a VIN\uff1a\u7535\u6e90\u7535\u538b\uff083-5V\uff09\uff0c\u82af\u7247\u4f7f\u75282.8V\u7684\u7535\u538b\uff0c\u6a21\u5757\u4e0a\u6709\u4e00\u4e2aLDO\u5c06\u8f93\u5165\u7535\u538b\u8f6c\u6362\u4e3a2.8V\u3002 2V8\uff1a2.8V\u7a33\u538b\u5668\u8f93\u51fa\uff0c\u6700\u5927\u8f93\u51fa\u7535\u6d41100mA\u3002 GND\uff1a\u5730\u7ebf GPIO1\uff1a\u53ef\u7f16\u7a0b\u4e2d\u65ad\u8f93\u51fa SHDN\uff1a\u4f20\u611f\u5668\u7684\u5173\u95ed\u5f15\u811a\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u88ab\u62c9\u9ad8\u3002\u6709\u4e00\u4e2a\u7535\u5e73\u8f6c\u6362\u4e8c\u6781\u7ba1\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728\u6b64\u5f15\u811a\u4e0a\u4f7f\u75283-5V\u903b\u8f91\u3002\u5f53\u5f15\u811a\u62c9\u4f4e\u65f6\uff0c\u4f20\u611f\u5668\u8fdb\u5165\u5173\u65ad\u6a21\u5f0f\u3002 SCL\uff1aI2C\u65f6\u949f SDA\uff1aI2C\u6570\u636e \u6a21\u5757\u539f\u7406\u56fe https://learn.adafruit.com/adafruit-vl6180x-time-of-flight-micro-lidar-distance-sensor-breakout/downloads \u4f7f\u7528\u5355\u4e2a\u4f20\u611f\u5668\uff0c\u4ec5\u9700\u8981SCL\uff0cSDA\uff0cGND\u548cVIN\u3002\u4e0b\u9762\u4ee5ESP32\u4e3a\u4f8b\u8bfb\u53d6\u6570\u636e\u3002 ESP32 I2C\u63a5\u53e3 GPIO 21\uff08SDA\uff09 GPIO 22\uff08SCL\uff09 \u8f6f\u4ef6 \u641c\u7d22\u5b89\u88c5\u5e93: adafruit vl6180","title":"VL6180X\u6d4b\u8ddd"},{"location":"ESP32/VL6180X%E6%B5%8B%E8%B7%9D/#vl6180x","text":"","title":"VL6180X\u6d4b\u8ddd"},{"location":"ESP32/VL6180X%E6%B5%8B%E8%B7%9D/#vl6180x_1","text":"VL6180X\u6a21\u5757\u5f15\u811a VIN\uff1a\u7535\u6e90\u7535\u538b\uff083-5V\uff09\uff0c\u82af\u7247\u4f7f\u75282.8V\u7684\u7535\u538b\uff0c\u6a21\u5757\u4e0a\u6709\u4e00\u4e2aLDO\u5c06\u8f93\u5165\u7535\u538b\u8f6c\u6362\u4e3a2.8V\u3002 2V8\uff1a2.8V\u7a33\u538b\u5668\u8f93\u51fa\uff0c\u6700\u5927\u8f93\u51fa\u7535\u6d41100mA\u3002 GND\uff1a\u5730\u7ebf GPIO1\uff1a\u53ef\u7f16\u7a0b\u4e2d\u65ad\u8f93\u51fa SHDN\uff1a\u4f20\u611f\u5668\u7684\u5173\u95ed\u5f15\u811a\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u88ab\u62c9\u9ad8\u3002\u6709\u4e00\u4e2a\u7535\u5e73\u8f6c\u6362\u4e8c\u6781\u7ba1\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728\u6b64\u5f15\u811a\u4e0a\u4f7f\u75283-5V\u903b\u8f91\u3002\u5f53\u5f15\u811a\u62c9\u4f4e\u65f6\uff0c\u4f20\u611f\u5668\u8fdb\u5165\u5173\u65ad\u6a21\u5f0f\u3002 SCL\uff1aI2C\u65f6\u949f SDA\uff1aI2C\u6570\u636e \u6a21\u5757\u539f\u7406\u56fe https://learn.adafruit.com/adafruit-vl6180x-time-of-flight-micro-lidar-distance-sensor-breakout/downloads \u4f7f\u7528\u5355\u4e2a\u4f20\u611f\u5668\uff0c\u4ec5\u9700\u8981SCL\uff0cSDA\uff0cGND\u548cVIN\u3002\u4e0b\u9762\u4ee5ESP32\u4e3a\u4f8b\u8bfb\u53d6\u6570\u636e\u3002 ESP32 I2C\u63a5\u53e3 GPIO 21\uff08SDA\uff09 GPIO 22\uff08SCL\uff09","title":"VL6180X\u6a21\u5757"},{"location":"ESP32/VL6180X%E6%B5%8B%E8%B7%9D/#_1","text":"\u641c\u7d22\u5b89\u88c5\u5e93: adafruit vl6180","title":"\u8f6f\u4ef6"},{"location":"ESP32/VS-code/","text":"VS Code and PlatformIO IDE for ESP32 and ESP8266 Arudino platform code introduction In this article, we will introduce how to program the ESP32 and ESP8266 boards using VS Code with PlatformIO IDE. The Arduino IDE works great for small applications. However, for advanced projects with more than 200 lines of code, multiple files, and other advanced features like auto completion and error checking, VS Code with the PlatformIO IDE extension is the best alternative. In this tutorial, we\u2019ll cover the following topics: Installing VS Code (Visual Studio Code): Installing PlatformIO IDE Extension on VS Code Visual Studio Quick Interface Overview PlatformIO IDE Overview Uploading Code using PlatformIO IDE: ESP32/ESP8266 Changing the Serial Monitor Baud Rate \u2013 PlatformIO IDE Installing Libraries on PlatformIO IDE Installing VS Code Go to Visual Studio Code and download the stable build for your operating system (Windows). Click on the installation wizard to start the installation and follow all the steps to complete the installation. Make sure click Add to PATH option, and click Next . Then follow the wizard complete the installation. Open VS Code and you\u2019ll be greeted by a Welcome tab with the released notes of the newest version. That\u2019s it. Visual Studio Code was successfully installed. Installing Python on Windows To program the ESP32 and ESP8266 boards with PlatformIO IDE you need Python 3.5 or higher installed in your computer. We\u2019re using Python 3.8.5. Go to python.org/download and download Python 3.8.5 or a newest version. Open the downloaded file to start the Python installation wizard. The following window shows up. IMPORTANT: Make sure you check the option Add Python 3.8 to PATH. Then, you can click on the Install Now button. When the installation is successful you\u2019ll get the following message. You can click the Close button. Installing PlatformIO IDE Extension on VS Code It is possible to program the ESP32 and ESP8266 boards using VS Code with the PlatformIO IDE extension. Follow the next steps to install the PlatformIO IDE extension. Open VS Code: Click on the Extensions icon or press Ctrl + Shift + X to open the Extensions tab Search for \u201c PlatformIO IDE \u201d Select the first option Finally, click the Install button (Note: the installation may take a few minutes) After installing, make sure that PlatformIO IDE extension is enabled as shown below. After that, the PlatformIO icon should show up on the left sidebar as well as an Home icon that redirects you to PlatformIO home. That\u2019s it, PlatformIO IDE extension was successfully added to VS Code. If you don\u2019t see the PIO icon and the quick tools at the bottom, you may need to restart VS code for the changes to take effect. Either way, we recommend restarting VS Code before proceeding. VS Code Quick Interface Overview Open VS Code. The following print screen shows the meaning of each icon on the left sidebar and its shortcuts: File explorer Search across files Source code management (using gist) Launch and debug your code Manage extensions Additionally, you can press Ctrl + Shift + P or go to View > Command Palette\u2026 to show all the available commands. If you\u2019re searching for a command and you don\u2019t know where it is or its shortcut, you just need to go to the Command Palette and search for it. At the bottom, there\u2019s a blue bar with PlatformIO commands. Here\u2019s the what icon does from left to right: PlatformIO Home Build/Compile Upload Clean Serial Monitor New Terminal If you hover your mouse over the icons, it will show what each icon does. Alternatively, you can also click on the PIO icon to see all the PlatformIO tasks. If the tasks don\u2019t show up on your IDE when you click the icon, you may need to click on the three dot icon at the top and enable PlatformIO tasks as shown below. PlatformIO IDE Overview For you to get an overview on how PlatformIO works on VS code, we\u2019ll show you how to create, save and upload a \u201cBlinking LED\u201d sketch to your ESP32 or ESP8266 board. Create a New Project On VS Code, click on the PlartfomIO Home icon. Click on + New Project to start a new project. Give your project a name (for example Blink_LED ) and select the board you\u2019re using. In our case, we\u2019re using the DOIT ESP32 DEVKIT V1 . The Framework should be \u201c Arduino \u201d to use the Arduino core. You can choose the default location to save your project or a custom location. The default location is in this path Documents > PlatformIO > Projects . For this test, you can use the default location. Finally, click \u201cFinish\u201d. For this example, we\u2019ll be using the DOIT ESP32 DEVKIT board . If you are using an ESP8266 NodeMCU board the process is very similar, you just need to select your ESP8266 board: The Blink_LED project should be accessible from the Explorer tab. VS Code and PlatformIO have a folder structure that is different from the standard .ino project. If you click on the Explorer tab, you\u2019ll see all the files it created under your project folder. It may seem a lot of files to work with. But, don\u2019t worry, usually you\u2019ll just need to deal with one or two of those files. Warning: you shouldn\u2019t delete, modify or move the folders and the platformio.ini file. Otherwise, you will no longer be able to compile your project using PlatformIO. platformio.ini file The platformio.ini file is the PlatformIO Configuration File for your project. It shows the platform, board, and framework for your project. You can also add other configurations like libraries to be included, upload options, changing the Serial Monitor baud rate and other configurations. platform : which corresponds to the SoC used by the board. board : the development board you\u2019re using. framework : the software environment that will run the project code. With the ESP32 and ESP8266, if you want to use a baud rate of 115200 in your Serial Monitor, you just need to add the following line to your platformio.ini file. monitor_speed = 115200 After that, make sure you save the changes made to the file by pressing Ctrl + S . In this file, you can also include the identifier of libraries you\u2019ll use in your project using the lib_deps directive, as we\u2019ll see later. src folder The src folder is your working folder. Under the src folder, there\u2019s a main.cpp file. That\u2019s where you write your code. Click on that file. The structure of an Arduino program should open with the setup() and loop() functions. In PlatformIO, all your Arduino sketches should start with the #include . Uploading Code using PlatformIO IDE: ESP32/ESP8266 Copy the following code to your main.cpp file. /********* Rui Santos Complete project details at https://RandomNerdTutorials.com/vs-code-platformio-ide-esp32-esp8266-arduino/*********/ #include <Arduino.h> #define LED 2 void setup () { // put your setup code here, to run once: Serial . begin ( 115200 ); pinMode ( LED , OUTPUT ); } void loop () { // put your main code here, to run repeatedly: digitalWrite ( LED , HIGH ); Serial . println ( \"LED is on\" ); delay ( 1000 ); digitalWrite ( LED , LOW ); Serial . println ( \"LED is off\" ); delay ( 1000 ); } This code blinks the on-board LED every second. It works with the ESP32 and ESP8266 boards (both have the on-board LED connected to GPIO 2). We recommend that you copy this code manually, so that you see the autocompletion and other interesting features of the IDE in action. Additionally, if you have a syntax error somewhere in your program, it will underline it in red even before compiling. After that, press Ctrl + S or go to File > Save to save the file. Now, you can click on the Upload icon to compile and upload the code. Alternatively, you can go to the PIO Project Tasks menu and select Upload . If the code is successfully uploaded, you should get the following message. After uploading the code, the ESP32 or ESP8266 should be blinking its on-board LED every second. Now, click on the Serial Monitor icon and you should see it printing the current LED state. Note: if you don\u2019t see the Terminal window, go to the menu Terminal > New Terminal. Detect COM Port PlatformIO will automatically detect the port your board is connected to. To check the connected devices you can go to the PIO Home and click the Devices icon. Troubleshooting If when trying to upload code you get the following error: \u201cF ailed to connect to ESP32: Timed out waiting for packet header \u201d it usually means that your board is not in flashing mode when you\u2019re uploading the code. When this happens you need to press the ESP32 on-board BOOT button when you start seeing a lot of dots in the debugging window. If you don\u2019t want to have to press the BOOT button every time you upload new code, you can follow this guide: [SOLVED] Failed to connect to ESP32: Timed out waiting for packet header. Changing the Serial Monitor Baud Rate \u2013 PlatformIO IDE The default baud rate used by PlatformIO is 9600. However, it is possible to set up a different value as mentioned previously. On the File Explorer, under your project folder, open the platformio.ini file and add the following line: monitor_speed = baud_rate For example: monitor_speed = 115200 After that, save that file. Installing ESP32/ESP8266 Libraries on PlatformIO IDE Follow the next procedure if you need to install libraries in PlatformIO IDE. Click the Home icon to go to PlatformIO Home. Click on the Libraries icon on the left side bar. Search for the library you want to install. For example Adafruit_BME280 . Click on the library you want to include in your project. Then, click Add to Project . Select the project were you want to use the library. This will add the library identifier using the lid_deps directive on the platformio.ini file. If you open your project\u2019s platformio.ini file, it should look as shown in the following image. Alternatively, on the library window, if you select the Installation tab and scroll a bit, you\u2019ll see the identifier for the library. You can choose any of those identifiers depending on the options you want to use. The library identifiers are highlighted in red. Then, go to the platformio.ini file of your project and paste the library identifier into that file, like this: lib_deps = adafruit/Adafruit BME280 Library@^2.1.0 If you need multiple libraries, you can separate their name by a coma or put them on different lines. For example: lib_deps = arduino-libraries/Arduino_JSON @ 0.1.0 adafruit/Adafruit BME280 Library @ ^2.1.0 adafruit/Adafruit Unified Sensor @ ^1.1.4 PlatformIO has a built-in powerful Library Manager, that allows you to specify custom dependencies per project in the Project Configuration File platformio.ini using lib_deps. This will tell PlatformIO to automatically download the library and all its dependencies when you save the configuration file or when you compile your project. Open a Project Folder To open an existing project folder on PlatformIO, open VS Code, go to PlatformIO Home and click on Open Project . Navigate through the files and select your project folder. PlatformIO will open all the files within the project folder. VS Code Color Themes VS Code lets you choose between different color themes. Go to the Manage icon and select Color Theme . You can then select from several different light and dark themes. Shortcuts\u2019 List For a complete list of VS Code shortcuts for Windows, Mac OS X or Linux, check the next link: VS Code Keyboard Shortcuts Reference . Wrapping Up In this tutorial you\u2019ve learned how to install and prepare Visual Studio Code to work with the ESP32 and ESP8266 boards. VS Code with the PlatformIO IDE extension is a great alternative to the classical Arduino IDE, especially when you\u2019re working on more advanced sketches for larger applications. Here\u2019s some of the advantages of using VS Code with PlatformIO IDE over Arduino IDE: It detects the COM port your board is connected to automatically; VS Code IntelliSense: Auto-Complete. IntelliSense code completion tries to guess what you want to write, displaying the different possibilities and provides insight into the parameters that a function may expect; Error Highlights: VS Code + PIO underlines errors in your code before compiling; Multiple open tabs: you can have several code tabs open at once; You can hide certain parts of the code; Advanced code navigation; And much more\u2026 If you\u2019re looking for a more advanced IDE to write your applications for the ESP32 and ESP8266 boards, VS Code with the PlatformIO IDE extension is a great option.","title":"VS Code and PlatformIO IDE for ESP32 and ESP8266 Arudino platform  code introduction"},{"location":"ESP32/VS-code/#vs-code-and-platformio-ide-for-esp32-and-esp8266-arudino-platform-code-introduction","text":"In this article, we will introduce how to program the ESP32 and ESP8266 boards using VS Code with PlatformIO IDE. The Arduino IDE works great for small applications. However, for advanced projects with more than 200 lines of code, multiple files, and other advanced features like auto completion and error checking, VS Code with the PlatformIO IDE extension is the best alternative. In this tutorial, we\u2019ll cover the following topics: Installing VS Code (Visual Studio Code): Installing PlatformIO IDE Extension on VS Code Visual Studio Quick Interface Overview PlatformIO IDE Overview Uploading Code using PlatformIO IDE: ESP32/ESP8266 Changing the Serial Monitor Baud Rate \u2013 PlatformIO IDE Installing Libraries on PlatformIO IDE","title":"VS Code and PlatformIO IDE for ESP32 and ESP8266 Arudino platform  code introduction"},{"location":"ESP32/VS-code/#installing-vs-code","text":"Go to Visual Studio Code and download the stable build for your operating system (Windows). Click on the installation wizard to start the installation and follow all the steps to complete the installation. Make sure click Add to PATH option, and click Next . Then follow the wizard complete the installation. Open VS Code and you\u2019ll be greeted by a Welcome tab with the released notes of the newest version. That\u2019s it. Visual Studio Code was successfully installed.","title":"Installing VS Code"},{"location":"ESP32/VS-code/#installing-python-on-windows","text":"To program the ESP32 and ESP8266 boards with PlatformIO IDE you need Python 3.5 or higher installed in your computer. We\u2019re using Python 3.8.5. Go to python.org/download and download Python 3.8.5 or a newest version. Open the downloaded file to start the Python installation wizard. The following window shows up. IMPORTANT: Make sure you check the option Add Python 3.8 to PATH. Then, you can click on the Install Now button. When the installation is successful you\u2019ll get the following message. You can click the Close button.","title":"Installing Python on Windows"},{"location":"ESP32/VS-code/#installing-platformio-ide-extension-on-vs-code","text":"It is possible to program the ESP32 and ESP8266 boards using VS Code with the PlatformIO IDE extension. Follow the next steps to install the PlatformIO IDE extension. Open VS Code: Click on the Extensions icon or press Ctrl + Shift + X to open the Extensions tab Search for \u201c PlatformIO IDE \u201d Select the first option Finally, click the Install button (Note: the installation may take a few minutes) After installing, make sure that PlatformIO IDE extension is enabled as shown below. After that, the PlatformIO icon should show up on the left sidebar as well as an Home icon that redirects you to PlatformIO home. That\u2019s it, PlatformIO IDE extension was successfully added to VS Code. If you don\u2019t see the PIO icon and the quick tools at the bottom, you may need to restart VS code for the changes to take effect. Either way, we recommend restarting VS Code before proceeding.","title":"Installing PlatformIO IDE Extension on VS Code"},{"location":"ESP32/VS-code/#vs-code-quick-interface-overview","text":"Open VS Code. The following print screen shows the meaning of each icon on the left sidebar and its shortcuts: File explorer Search across files Source code management (using gist) Launch and debug your code Manage extensions Additionally, you can press Ctrl + Shift + P or go to View > Command Palette\u2026 to show all the available commands. If you\u2019re searching for a command and you don\u2019t know where it is or its shortcut, you just need to go to the Command Palette and search for it. At the bottom, there\u2019s a blue bar with PlatformIO commands. Here\u2019s the what icon does from left to right: PlatformIO Home Build/Compile Upload Clean Serial Monitor New Terminal If you hover your mouse over the icons, it will show what each icon does. Alternatively, you can also click on the PIO icon to see all the PlatformIO tasks. If the tasks don\u2019t show up on your IDE when you click the icon, you may need to click on the three dot icon at the top and enable PlatformIO tasks as shown below.","title":"VS Code Quick Interface Overview"},{"location":"ESP32/VS-code/#platformio-ide-overview","text":"For you to get an overview on how PlatformIO works on VS code, we\u2019ll show you how to create, save and upload a \u201cBlinking LED\u201d sketch to your ESP32 or ESP8266 board.","title":"PlatformIO IDE Overview"},{"location":"ESP32/VS-code/#create-a-new-project","text":"On VS Code, click on the PlartfomIO Home icon. Click on + New Project to start a new project. Give your project a name (for example Blink_LED ) and select the board you\u2019re using. In our case, we\u2019re using the DOIT ESP32 DEVKIT V1 . The Framework should be \u201c Arduino \u201d to use the Arduino core. You can choose the default location to save your project or a custom location. The default location is in this path Documents > PlatformIO > Projects . For this test, you can use the default location. Finally, click \u201cFinish\u201d. For this example, we\u2019ll be using the DOIT ESP32 DEVKIT board . If you are using an ESP8266 NodeMCU board the process is very similar, you just need to select your ESP8266 board: The Blink_LED project should be accessible from the Explorer tab. VS Code and PlatformIO have a folder structure that is different from the standard .ino project. If you click on the Explorer tab, you\u2019ll see all the files it created under your project folder. It may seem a lot of files to work with. But, don\u2019t worry, usually you\u2019ll just need to deal with one or two of those files. Warning: you shouldn\u2019t delete, modify or move the folders and the platformio.ini file. Otherwise, you will no longer be able to compile your project using PlatformIO.","title":"Create a New Project"},{"location":"ESP32/VS-code/#platformioini-file","text":"The platformio.ini file is the PlatformIO Configuration File for your project. It shows the platform, board, and framework for your project. You can also add other configurations like libraries to be included, upload options, changing the Serial Monitor baud rate and other configurations. platform : which corresponds to the SoC used by the board. board : the development board you\u2019re using. framework : the software environment that will run the project code. With the ESP32 and ESP8266, if you want to use a baud rate of 115200 in your Serial Monitor, you just need to add the following line to your platformio.ini file. monitor_speed = 115200 After that, make sure you save the changes made to the file by pressing Ctrl + S . In this file, you can also include the identifier of libraries you\u2019ll use in your project using the lib_deps directive, as we\u2019ll see later.","title":"platformio.ini file"},{"location":"ESP32/VS-code/#src-folder","text":"The src folder is your working folder. Under the src folder, there\u2019s a main.cpp file. That\u2019s where you write your code. Click on that file. The structure of an Arduino program should open with the setup() and loop() functions. In PlatformIO, all your Arduino sketches should start with the #include .","title":"src folder"},{"location":"ESP32/VS-code/#uploading-code-using-platformio-ide-esp32esp8266","text":"Copy the following code to your main.cpp file. /********* Rui Santos Complete project details at https://RandomNerdTutorials.com/vs-code-platformio-ide-esp32-esp8266-arduino/*********/ #include <Arduino.h> #define LED 2 void setup () { // put your setup code here, to run once: Serial . begin ( 115200 ); pinMode ( LED , OUTPUT ); } void loop () { // put your main code here, to run repeatedly: digitalWrite ( LED , HIGH ); Serial . println ( \"LED is on\" ); delay ( 1000 ); digitalWrite ( LED , LOW ); Serial . println ( \"LED is off\" ); delay ( 1000 ); } This code blinks the on-board LED every second. It works with the ESP32 and ESP8266 boards (both have the on-board LED connected to GPIO 2). We recommend that you copy this code manually, so that you see the autocompletion and other interesting features of the IDE in action. Additionally, if you have a syntax error somewhere in your program, it will underline it in red even before compiling. After that, press Ctrl + S or go to File > Save to save the file. Now, you can click on the Upload icon to compile and upload the code. Alternatively, you can go to the PIO Project Tasks menu and select Upload . If the code is successfully uploaded, you should get the following message. After uploading the code, the ESP32 or ESP8266 should be blinking its on-board LED every second. Now, click on the Serial Monitor icon and you should see it printing the current LED state. Note: if you don\u2019t see the Terminal window, go to the menu Terminal > New Terminal.","title":"Uploading Code using PlatformIO IDE: ESP32/ESP8266"},{"location":"ESP32/VS-code/#detect-com-port","text":"PlatformIO will automatically detect the port your board is connected to. To check the connected devices you can go to the PIO Home and click the Devices icon.","title":"Detect COM Port"},{"location":"ESP32/VS-code/#troubleshooting","text":"If when trying to upload code you get the following error: \u201cF ailed to connect to ESP32: Timed out waiting for packet header \u201d it usually means that your board is not in flashing mode when you\u2019re uploading the code. When this happens you need to press the ESP32 on-board BOOT button when you start seeing a lot of dots in the debugging window. If you don\u2019t want to have to press the BOOT button every time you upload new code, you can follow this guide: [SOLVED] Failed to connect to ESP32: Timed out waiting for packet header.","title":"Troubleshooting"},{"location":"ESP32/VS-code/#changing-the-serial-monitor-baud-rate-platformio-ide","text":"The default baud rate used by PlatformIO is 9600. However, it is possible to set up a different value as mentioned previously. On the File Explorer, under your project folder, open the platformio.ini file and add the following line: monitor_speed = baud_rate For example: monitor_speed = 115200 After that, save that file.","title":"Changing the Serial Monitor Baud Rate \u2013 PlatformIO IDE"},{"location":"ESP32/VS-code/#installing-esp32esp8266-libraries-on-platformio-ide","text":"Follow the next procedure if you need to install libraries in PlatformIO IDE. Click the Home icon to go to PlatformIO Home. Click on the Libraries icon on the left side bar. Search for the library you want to install. For example Adafruit_BME280 . Click on the library you want to include in your project. Then, click Add to Project . Select the project were you want to use the library. This will add the library identifier using the lid_deps directive on the platformio.ini file. If you open your project\u2019s platformio.ini file, it should look as shown in the following image. Alternatively, on the library window, if you select the Installation tab and scroll a bit, you\u2019ll see the identifier for the library. You can choose any of those identifiers depending on the options you want to use. The library identifiers are highlighted in red. Then, go to the platformio.ini file of your project and paste the library identifier into that file, like this: lib_deps = adafruit/Adafruit BME280 Library@^2.1.0 If you need multiple libraries, you can separate their name by a coma or put them on different lines. For example: lib_deps = arduino-libraries/Arduino_JSON @ 0.1.0 adafruit/Adafruit BME280 Library @ ^2.1.0 adafruit/Adafruit Unified Sensor @ ^1.1.4 PlatformIO has a built-in powerful Library Manager, that allows you to specify custom dependencies per project in the Project Configuration File platformio.ini using lib_deps. This will tell PlatformIO to automatically download the library and all its dependencies when you save the configuration file or when you compile your project.","title":"Installing ESP32/ESP8266 Libraries on PlatformIO IDE"},{"location":"ESP32/VS-code/#open-a-project-folder","text":"To open an existing project folder on PlatformIO, open VS Code, go to PlatformIO Home and click on Open Project . Navigate through the files and select your project folder. PlatformIO will open all the files within the project folder.","title":"Open a Project Folder"},{"location":"ESP32/VS-code/#vs-code-color-themes","text":"VS Code lets you choose between different color themes. Go to the Manage icon and select Color Theme . You can then select from several different light and dark themes.","title":"VS Code Color Themes"},{"location":"ESP32/VS-code/#shortcuts-list","text":"For a complete list of VS Code shortcuts for Windows, Mac OS X or Linux, check the next link: VS Code Keyboard Shortcuts Reference .","title":"Shortcuts\u2019 List"},{"location":"ESP32/VS-code/#wrapping-up","text":"In this tutorial you\u2019ve learned how to install and prepare Visual Studio Code to work with the ESP32 and ESP8266 boards. VS Code with the PlatformIO IDE extension is a great alternative to the classical Arduino IDE, especially when you\u2019re working on more advanced sketches for larger applications. Here\u2019s some of the advantages of using VS Code with PlatformIO IDE over Arduino IDE: It detects the COM port your board is connected to automatically; VS Code IntelliSense: Auto-Complete. IntelliSense code completion tries to guess what you want to write, displaying the different possibilities and provides insight into the parameters that a function may expect; Error Highlights: VS Code + PIO underlines errors in your code before compiling; Multiple open tabs: you can have several code tabs open at once; You can hide certain parts of the code; Advanced code navigation; And much more\u2026 If you\u2019re looking for a more advanced IDE to write your applications for the ESP32 and ESP8266 boards, VS Code with the PlatformIO IDE extension is a great option.","title":"Wrapping Up"},{"location":"ESP32/edgeimpulse/","text":"\u6536\u96c6\u6570\u636e Edge Impulse\u652f\u6301\u591a\u79cd\u6570\u636e\u6536\u96c6\u65b9\u5f0f\u3002 \u8fd9\u91cc\u4f7f\u7528Data from any device with the data forwarder\u8fd9\u79cd\u65b9\u5f0f\u3002\u4e5f\u5c31\u662f\u5229\u7528EDGE IMPULSE CLI\u5de5\u5177\u5c06\u8bbe\u5907\u4e32\u53e3\u6570\u636e\u901a\u8fc7\u7535\u8111\u4e0a\u4f20\u5230Edge Impulse\u3002 \u5b89\u88c5edge-impulse-cli\u5de5\u5177 \u7535\u8111\u5b89\u88c5python\u548cNode.js\u3002 npm install -g edge-impulse-cli - -force \u8bbe\u7f6e\u8fde\u63a5\u4ee3\u7406 set HTTPS_PROXY = http :// 10 . 144 . 1 . 10 : 8080 edge-impulse-daemon \u6570\u636e\u8f6c\u53d1Data forwarder device\u4e32\u53e3\u8f93\u51fa\u6570\u636e\u683c\u5f0f\u3002\u4ee5 , \u6216 TAB \u5206\u9694\u3002 -0.12,-6.20,7.90 -0.13,-6.19,7.91 -0.14,-6.20,7.92 -0.13,-6.20,7.90 -0.14,-6.20,7.91 \u901a\u8fc7\u4e32\u53e3\u8fde\u63a5\u8bbe\u5907\uff0c\u8fd0\u884cedge-impulse-cli\u5de5\u5177 edge-impulse-data-forwarder \u5728\u7f51\u9875\u7aef\u91c7\u96c6\u6570\u636e\uff0c\u6807\u7b7e\u3002\u8bad\u7ec3\u6a21\u578b\u3002\u4e0b\u8f7d\u6a21\u578b\u3002 PlatformIO\u4e2d\u5b89\u88c5\u6a21\u578b pio lib install ei-colin-project-1-arduino-1.0.1.zip","title":"Edgeimpulse"},{"location":"ESP32/edgeimpulse/#_1","text":"Edge Impulse\u652f\u6301\u591a\u79cd\u6570\u636e\u6536\u96c6\u65b9\u5f0f\u3002 \u8fd9\u91cc\u4f7f\u7528Data from any device with the data forwarder\u8fd9\u79cd\u65b9\u5f0f\u3002\u4e5f\u5c31\u662f\u5229\u7528EDGE IMPULSE CLI\u5de5\u5177\u5c06\u8bbe\u5907\u4e32\u53e3\u6570\u636e\u901a\u8fc7\u7535\u8111\u4e0a\u4f20\u5230Edge Impulse\u3002","title":"\u6536\u96c6\u6570\u636e"},{"location":"ESP32/edgeimpulse/#edge-impulse-cli","text":"\u7535\u8111\u5b89\u88c5python\u548cNode.js\u3002 npm install -g edge-impulse-cli - -force \u8bbe\u7f6e\u8fde\u63a5\u4ee3\u7406 set HTTPS_PROXY = http :// 10 . 144 . 1 . 10 : 8080 edge-impulse-daemon","title":"\u5b89\u88c5edge-impulse-cli\u5de5\u5177"},{"location":"ESP32/edgeimpulse/#data-forwarder","text":"device\u4e32\u53e3\u8f93\u51fa\u6570\u636e\u683c\u5f0f\u3002\u4ee5 , \u6216 TAB \u5206\u9694\u3002 -0.12,-6.20,7.90 -0.13,-6.19,7.91 -0.14,-6.20,7.92 -0.13,-6.20,7.90 -0.14,-6.20,7.91 \u901a\u8fc7\u4e32\u53e3\u8fde\u63a5\u8bbe\u5907\uff0c\u8fd0\u884cedge-impulse-cli\u5de5\u5177 edge-impulse-data-forwarder \u5728\u7f51\u9875\u7aef\u91c7\u96c6\u6570\u636e\uff0c\u6807\u7b7e\u3002\u8bad\u7ec3\u6a21\u578b\u3002\u4e0b\u8f7d\u6a21\u578b\u3002 PlatformIO\u4e2d\u5b89\u88c5\u6a21\u578b pio lib install ei-colin-project-1-arduino-1.0.1.zip","title":"\u6570\u636e\u8f6c\u53d1Data forwarder"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/","text":"\u5f00\u53d1\u677f \u6211\u8d2d\u4e70\u7684\u5f00\u53d1\u56fe\u7247\u5982\u4e0b \u80cc\u9762\u6807\u8bc6ESP32 DEVKITV1 \u539f\u7406\u56fe\u94fe\u63a5 https://github.com/Nicholas3388/LuaNode \u914d\u7f6e Microcontroller ESP32 Frequency 240MHz Flash 4MB RAM 320KB Vendor DOIT \u5f00\u53d1\u677f\u5f15\u811a \u642d\u5efa\u5f00\u53d1\u73af\u5883 \u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u4f7f\u7528VSCODE\u7684 platformIO\u63d2\u4ef6\u8fdb\u884cESP32\u5f00\u53d1\u3002\u5206\u522b\u4ecb\u7ecd\u4e24\u79cd\u5f00\u53d1\u65b9\u5f0f\uff1a \u4f7f\u7528Arduino \u4f7f\u7528ESP-idf \u8f6f\u4ef6\u5b89\u88c5 \u5b89\u88c5VScode \u5b89\u88c5\u63d2\u4ef6platformIO IDE \u5728platforms\u4e2d\u5b89\u88c5esp32\u63d2\u4ef6 Espressif 32 \u5f00\u53d1\u677f\u578b\u53f7espressif esp32 dev module \u57fa\u4e8eAriduino\u6846\u67b6 https://docs.platformio.org/en/latest/tutorials/espressif32/arduino_debugging_unit_testing.html#tutorial-espressif32-arduino-debugging-unit-testing \u65b0\u5efa\u9879\u76ee \u5728platform\u4e2d\u65b0\u5efa\u9879\u76ee\u3002\u5f00\u53d1\u677f\u9009\u62e9ESP32-DevKitC\uff0cFramework\u9009\u62e9Arduino\u3002 \u5728src\u76ee\u5f55\u4e2d\u521b\u5efa\u6587\u4ef6main.cpp #include <Arduino.h> void setup () { Serial . begin ( 9600 ); } void loop () { Serial . println ( \"Hello world!\" ); delay ( 1000 ); } \u7f16\u8bd1\uff0c\u4e0a\u4f20 \u7f16\u8bd1 ctrl-alt-b \u6216\u8005\u5de6\u4fa7\u5de5\u5177\u680f\u4e2d\u7684build \u4e0a\u4f20 ctrl-alt-u \u6216\u8005\u5de6\u4fa7\u5de5\u5177\u680f\u4e2d\u7684upload \u67e5\u770b\u4e32\u53e3\u8f93\u51fa \u5de6\u4fa7\u5de5\u5177\u680f\u4e2d\u7684Monitor \u5982\u679c\u770b\u5230\u76d1\u89c6\u5668\u8f93\u51faHello world!\u5219\u8bf4\u660e\u6d4b\u8bd5\u6210\u529f\u3002 \u5b89\u88c5\u7b2c\u4e09\u65b9\u5305 \u5728Libraries\u4e2d\u641c\u7d22\uff0c\u7136\u540e\u5b89\u88c5\u3002 \u76f4\u63a5\u5c06\u5e93\u6587\u4ef6\u653e\u5230lib\u6587\u4ef6\u5939\u4e0b\u3002\u6ce8\u610f\u6587\u4ef6\u5939\u540d\u79f0\u548c\u4e3b\u6587\u4ef6\u540d\u79f0\u4e00\u81f4\u3002 \u57fa\u4e8eESP32 IDF\u6846\u67b6 \u65b0\u5efa\u9879\u76ee\u65f6\u5f00\u53d1\u6846\u67b6\u9009\u62e9 Espressif IoT Development Franmework \u5728 src \u76ee\u5f55\u4e2d\u65b0\u5efa\u6587\u4ef6 main.c /* WiFi softAP Example This example code is in the Public Domain (or CC0 licensed, at your option.) Unless required by applicable law or agreed to in writing, this software is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. */ #include <string.h> #include \"freertos/FreeRTOS.h\" #include \"freertos/task.h\" #include \"esp_system.h\" #include \"esp_wifi.h\" #include \"esp_event.h\" #include \"esp_log.h\" #include \"nvs_flash.h\" #include \"lwip/err.h\" #include \"lwip/sys.h\" #define EXAMPLE_ESP_WIFI_SSID \"mywifissid\" #define EXAMPLE_ESP_WIFI_PASS \"mywifipass\" #define EXAMPLE_MAX_STA_CONN (3) static const char * TAG = \"wifi softAP\" ; static void wifi_event_handler ( void * arg , esp_event_base_t event_base , int32_t event_id , void * event_data ) { if ( event_id == WIFI_EVENT_AP_STACONNECTED ) { wifi_event_ap_staconnected_t * event = ( wifi_event_ap_staconnected_t * ) event_data ; ESP_LOGI ( TAG , \"station \" MACSTR \" join, AID=%d\" , MAC2STR ( event -> mac ), event -> aid ); } else if ( event_id == WIFI_EVENT_AP_STADISCONNECTED ) { wifi_event_ap_stadisconnected_t * event = ( wifi_event_ap_stadisconnected_t * ) event_data ; ESP_LOGI ( TAG , \"station \" MACSTR \" leave, AID=%d\" , MAC2STR ( event -> mac ), event -> aid ); } } void wifi_init_softap () { tcpip_adapter_init (); ESP_ERROR_CHECK ( esp_event_loop_create_default ()); wifi_init_config_t cfg = WIFI_INIT_CONFIG_DEFAULT (); ESP_ERROR_CHECK ( esp_wifi_init ( & cfg )); ESP_ERROR_CHECK ( esp_event_handler_register ( WIFI_EVENT , ESP_EVENT_ANY_ID , & wifi_event_handler , NULL )); wifi_config_t wifi_config = { . ap = { . ssid = EXAMPLE_ESP_WIFI_SSID , . ssid_len = strlen ( EXAMPLE_ESP_WIFI_SSID ), . password = EXAMPLE_ESP_WIFI_PASS , . max_connection = EXAMPLE_MAX_STA_CONN , . authmode = WIFI_AUTH_WPA_WPA2_PSK }, }; if ( strlen ( EXAMPLE_ESP_WIFI_PASS ) == 0 ) { wifi_config . ap . authmode = WIFI_AUTH_OPEN ; } ESP_ERROR_CHECK ( esp_wifi_set_mode ( WIFI_MODE_AP )); ESP_ERROR_CHECK ( esp_wifi_set_config ( ESP_IF_WIFI_AP , & wifi_config )); ESP_ERROR_CHECK ( esp_wifi_start ()); ESP_LOGI ( TAG , \"wifi_init_softap finished. SSID:%s password:%s\" , EXAMPLE_ESP_WIFI_SSID , EXAMPLE_ESP_WIFI_PASS ); } void app_main () { //Initialize NVS esp_err_t ret = nvs_flash_init (); if ( ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND ) { ESP_ERROR_CHECK ( nvs_flash_erase ()); ret = nvs_flash_init (); } ESP_ERROR_CHECK ( ret ); ESP_LOGI ( TAG , \"ESP_WIFI_MODE_AP\" ); wifi_init_softap (); } \u4e0a\u4f20\u4ee3\u7801\u540e\uff0c\u6253\u5f00\u624b\u673a\u53ef\u4ee5\u641c\u7d22\u5230\u540d\u79f0\u4e3amywifissid\u7684wifi\u70ed\u70b9\u3002 \u9700\u6ce8\u610f\u5728 platformio.ini \u6587\u4ef6\u4e2d\u8bbe\u7f6e\u4e32\u53e3\u4f20\u8f93\u901f\u7387\u4e3a115200\uff0c\u5426\u5219\u76d1\u89c6\u8f93\u51fa\u4f1a\u51fa\u73b0\u4e71\u7801 [env:esp32dev] platform = espressif32 board = esp32dev framework = espidf monitor_speed = 115200 \u8c03\u8bd5 \u8fdb\u5165\u8c03\u8bd5\u6a21\u5f0f\u9700\u4f7f\u7528JTAG \u7ebf\u8fde\u63a5\u81f3\u5f00\u53d1\u677f\uff0c\u63a5\u7ebf\u65b9\u5f0f\u5982\u4e0b ESP32 pin JTAG probe pin 3.3V Pin 1(VTref) GPIO 9 (EN) Pin 3 (nTRST) GND Pin 4 (GND) GPIO 12 (TDI) Pin 5 (TDI) GPIO 14 (TMS) Pin 7 (TMS) GPIO 13 (TCK) Pin 9 (TCK) GPIO 15 (TDO) Pin 13 (TDO) \u5b9e\u4f8b1 LED\u95ea\u70c1 #include <Arduino.h> #define LED 5 void setup () { // put your setup code here, to run once: pinMode ( LED , OUTPUT ); } void loop () { // put your main code here, to run repeatedly: digitalWrite ( LED , HIGH ); //\u9ad8\u7535\u5e73 delay ( 1000 ); //\u7b49\u5f851000\u6beb\u79d2 digitalWrite ( LED , LOW ); //\u4f4e\u7535\u5e73 delay ( 1000 ); //\u7b49\u5f851000\u6beb\u79d2 } \u5b9e\u4f8b2 \u6309\u94ae\u63a7\u5236LED #include <Arduino.h> #define LED 5 #define botton 0 void setup () { // put your setup code here, to run once: pinMode ( LED , OUTPUT ); pinMode ( botton , INPUT_PULLUP ); //\u5185\u90e8\u4e0a\u62c9 } void loop () { // put your main code here, to run repeatedly: if ( digitalRead ( botton )){ digitalWrite ( LED , HIGH ); //\u9ad8\u7535\u5e73 } else { digitalWrite ( LED , LOW ); //\u4f4e\u7535\u5e73 } } \u53c2\u8003\u6587\u6863 https://juejin.im/collection/6845244081140924423","title":"Esp32\u5f00\u53d1\u73af\u5883"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_1","text":"\u6211\u8d2d\u4e70\u7684\u5f00\u53d1\u56fe\u7247\u5982\u4e0b \u80cc\u9762\u6807\u8bc6ESP32 DEVKITV1 \u539f\u7406\u56fe\u94fe\u63a5 https://github.com/Nicholas3388/LuaNode \u914d\u7f6e Microcontroller ESP32 Frequency 240MHz Flash 4MB RAM 320KB Vendor DOIT \u5f00\u53d1\u677f\u5f15\u811a","title":"\u5f00\u53d1\u677f"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_2","text":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u4f7f\u7528VSCODE\u7684 platformIO\u63d2\u4ef6\u8fdb\u884cESP32\u5f00\u53d1\u3002\u5206\u522b\u4ecb\u7ecd\u4e24\u79cd\u5f00\u53d1\u65b9\u5f0f\uff1a \u4f7f\u7528Arduino \u4f7f\u7528ESP-idf","title":"\u642d\u5efa\u5f00\u53d1\u73af\u5883"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_3","text":"\u5b89\u88c5VScode \u5b89\u88c5\u63d2\u4ef6platformIO IDE \u5728platforms\u4e2d\u5b89\u88c5esp32\u63d2\u4ef6 Espressif 32 \u5f00\u53d1\u677f\u578b\u53f7espressif esp32 dev module","title":"\u8f6f\u4ef6\u5b89\u88c5"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#ariduino","text":"https://docs.platformio.org/en/latest/tutorials/espressif32/arduino_debugging_unit_testing.html#tutorial-espressif32-arduino-debugging-unit-testing","title":"\u57fa\u4e8eAriduino\u6846\u67b6"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_4","text":"\u5728platform\u4e2d\u65b0\u5efa\u9879\u76ee\u3002\u5f00\u53d1\u677f\u9009\u62e9ESP32-DevKitC\uff0cFramework\u9009\u62e9Arduino\u3002 \u5728src\u76ee\u5f55\u4e2d\u521b\u5efa\u6587\u4ef6main.cpp #include <Arduino.h> void setup () { Serial . begin ( 9600 ); } void loop () { Serial . println ( \"Hello world!\" ); delay ( 1000 ); }","title":"\u65b0\u5efa\u9879\u76ee"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_5","text":"\u7f16\u8bd1 ctrl-alt-b \u6216\u8005\u5de6\u4fa7\u5de5\u5177\u680f\u4e2d\u7684build \u4e0a\u4f20 ctrl-alt-u \u6216\u8005\u5de6\u4fa7\u5de5\u5177\u680f\u4e2d\u7684upload \u67e5\u770b\u4e32\u53e3\u8f93\u51fa \u5de6\u4fa7\u5de5\u5177\u680f\u4e2d\u7684Monitor \u5982\u679c\u770b\u5230\u76d1\u89c6\u5668\u8f93\u51faHello world!\u5219\u8bf4\u660e\u6d4b\u8bd5\u6210\u529f\u3002","title":"\u7f16\u8bd1\uff0c\u4e0a\u4f20"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_6","text":"\u5728Libraries\u4e2d\u641c\u7d22\uff0c\u7136\u540e\u5b89\u88c5\u3002 \u76f4\u63a5\u5c06\u5e93\u6587\u4ef6\u653e\u5230lib\u6587\u4ef6\u5939\u4e0b\u3002\u6ce8\u610f\u6587\u4ef6\u5939\u540d\u79f0\u548c\u4e3b\u6587\u4ef6\u540d\u79f0\u4e00\u81f4\u3002","title":"\u5b89\u88c5\u7b2c\u4e09\u65b9\u5305"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#esp32-idf","text":"\u65b0\u5efa\u9879\u76ee\u65f6\u5f00\u53d1\u6846\u67b6\u9009\u62e9 Espressif IoT Development Franmework \u5728 src \u76ee\u5f55\u4e2d\u65b0\u5efa\u6587\u4ef6 main.c /* WiFi softAP Example This example code is in the Public Domain (or CC0 licensed, at your option.) Unless required by applicable law or agreed to in writing, this software is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. */ #include <string.h> #include \"freertos/FreeRTOS.h\" #include \"freertos/task.h\" #include \"esp_system.h\" #include \"esp_wifi.h\" #include \"esp_event.h\" #include \"esp_log.h\" #include \"nvs_flash.h\" #include \"lwip/err.h\" #include \"lwip/sys.h\" #define EXAMPLE_ESP_WIFI_SSID \"mywifissid\" #define EXAMPLE_ESP_WIFI_PASS \"mywifipass\" #define EXAMPLE_MAX_STA_CONN (3) static const char * TAG = \"wifi softAP\" ; static void wifi_event_handler ( void * arg , esp_event_base_t event_base , int32_t event_id , void * event_data ) { if ( event_id == WIFI_EVENT_AP_STACONNECTED ) { wifi_event_ap_staconnected_t * event = ( wifi_event_ap_staconnected_t * ) event_data ; ESP_LOGI ( TAG , \"station \" MACSTR \" join, AID=%d\" , MAC2STR ( event -> mac ), event -> aid ); } else if ( event_id == WIFI_EVENT_AP_STADISCONNECTED ) { wifi_event_ap_stadisconnected_t * event = ( wifi_event_ap_stadisconnected_t * ) event_data ; ESP_LOGI ( TAG , \"station \" MACSTR \" leave, AID=%d\" , MAC2STR ( event -> mac ), event -> aid ); } } void wifi_init_softap () { tcpip_adapter_init (); ESP_ERROR_CHECK ( esp_event_loop_create_default ()); wifi_init_config_t cfg = WIFI_INIT_CONFIG_DEFAULT (); ESP_ERROR_CHECK ( esp_wifi_init ( & cfg )); ESP_ERROR_CHECK ( esp_event_handler_register ( WIFI_EVENT , ESP_EVENT_ANY_ID , & wifi_event_handler , NULL )); wifi_config_t wifi_config = { . ap = { . ssid = EXAMPLE_ESP_WIFI_SSID , . ssid_len = strlen ( EXAMPLE_ESP_WIFI_SSID ), . password = EXAMPLE_ESP_WIFI_PASS , . max_connection = EXAMPLE_MAX_STA_CONN , . authmode = WIFI_AUTH_WPA_WPA2_PSK }, }; if ( strlen ( EXAMPLE_ESP_WIFI_PASS ) == 0 ) { wifi_config . ap . authmode = WIFI_AUTH_OPEN ; } ESP_ERROR_CHECK ( esp_wifi_set_mode ( WIFI_MODE_AP )); ESP_ERROR_CHECK ( esp_wifi_set_config ( ESP_IF_WIFI_AP , & wifi_config )); ESP_ERROR_CHECK ( esp_wifi_start ()); ESP_LOGI ( TAG , \"wifi_init_softap finished. SSID:%s password:%s\" , EXAMPLE_ESP_WIFI_SSID , EXAMPLE_ESP_WIFI_PASS ); } void app_main () { //Initialize NVS esp_err_t ret = nvs_flash_init (); if ( ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND ) { ESP_ERROR_CHECK ( nvs_flash_erase ()); ret = nvs_flash_init (); } ESP_ERROR_CHECK ( ret ); ESP_LOGI ( TAG , \"ESP_WIFI_MODE_AP\" ); wifi_init_softap (); } \u4e0a\u4f20\u4ee3\u7801\u540e\uff0c\u6253\u5f00\u624b\u673a\u53ef\u4ee5\u641c\u7d22\u5230\u540d\u79f0\u4e3amywifissid\u7684wifi\u70ed\u70b9\u3002 \u9700\u6ce8\u610f\u5728 platformio.ini \u6587\u4ef6\u4e2d\u8bbe\u7f6e\u4e32\u53e3\u4f20\u8f93\u901f\u7387\u4e3a115200\uff0c\u5426\u5219\u76d1\u89c6\u8f93\u51fa\u4f1a\u51fa\u73b0\u4e71\u7801 [env:esp32dev] platform = espressif32 board = esp32dev framework = espidf monitor_speed = 115200","title":"\u57fa\u4e8eESP32 IDF\u6846\u67b6"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_7","text":"\u8fdb\u5165\u8c03\u8bd5\u6a21\u5f0f\u9700\u4f7f\u7528JTAG \u7ebf\u8fde\u63a5\u81f3\u5f00\u53d1\u677f\uff0c\u63a5\u7ebf\u65b9\u5f0f\u5982\u4e0b ESP32 pin JTAG probe pin 3.3V Pin 1(VTref) GPIO 9 (EN) Pin 3 (nTRST) GND Pin 4 (GND) GPIO 12 (TDI) Pin 5 (TDI) GPIO 14 (TMS) Pin 7 (TMS) GPIO 13 (TCK) Pin 9 (TCK) GPIO 15 (TDO) Pin 13 (TDO)","title":"\u8c03\u8bd5"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#1-led","text":"#include <Arduino.h> #define LED 5 void setup () { // put your setup code here, to run once: pinMode ( LED , OUTPUT ); } void loop () { // put your main code here, to run repeatedly: digitalWrite ( LED , HIGH ); //\u9ad8\u7535\u5e73 delay ( 1000 ); //\u7b49\u5f851000\u6beb\u79d2 digitalWrite ( LED , LOW ); //\u4f4e\u7535\u5e73 delay ( 1000 ); //\u7b49\u5f851000\u6beb\u79d2 }","title":"\u5b9e\u4f8b1 LED\u95ea\u70c1"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#2-led","text":"#include <Arduino.h> #define LED 5 #define botton 0 void setup () { // put your setup code here, to run once: pinMode ( LED , OUTPUT ); pinMode ( botton , INPUT_PULLUP ); //\u5185\u90e8\u4e0a\u62c9 } void loop () { // put your main code here, to run repeatedly: if ( digitalRead ( botton )){ digitalWrite ( LED , HIGH ); //\u9ad8\u7535\u5e73 } else { digitalWrite ( LED , LOW ); //\u4f4e\u7535\u5e73 } }","title":"\u5b9e\u4f8b2 \u6309\u94ae\u63a7\u5236LED"},{"location":"ESP32/esp32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_8","text":"https://juejin.im/collection/6845244081140924423","title":"\u53c2\u8003\u6587\u6863"},{"location":"ESP32/face_recognition%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","text":"\u5b89\u88c5 \u7b2c\u4e00\u6b65\uff1a \u5b89\u88c5Cmake\u3002\u4e0b\u8f7d\u5730\u5740 https://cmake.org/download \u7b2c\u4e8c\u6b65\uff1a \u5b89\u88c5face_recognition\u3002 pip3 install face_recognition \u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f\u3002 \u8fdb\u5165python\u73af\u5883\u4e0b\u6267\u884c\u5982\u4e0b\u4e24\u884c\u4ee3\u7801\uff0c\u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f\u3002 import face_recognition","title":"face_recognition windows \u5b89\u88c5\u4f7f\u7528"},{"location":"ESP32/face_recognition%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/#_1","text":"\u7b2c\u4e00\u6b65\uff1a \u5b89\u88c5Cmake\u3002\u4e0b\u8f7d\u5730\u5740 https://cmake.org/download \u7b2c\u4e8c\u6b65\uff1a \u5b89\u88c5face_recognition\u3002 pip3 install face_recognition","title":"\u5b89\u88c5"},{"location":"ESP32/face_recognition%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/#_2","text":"\u8fdb\u5165python\u73af\u5883\u4e0b\u6267\u884c\u5982\u4e0b\u4e24\u884c\u4ee3\u7801\uff0c\u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f\u3002 import face_recognition","title":"\u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f\u3002"},{"location":"ESP32/flask_socketio_echarts/","text":"title: SocketIO\u7ed3\u5408Echarts\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u65f6\u76d1\u63a7\u56fe date: 2018/8/27 tags: - Flask \u200b--- \u6548\u679c\u5982\u56fe\u6240\u793a\uff1a \u540e\u53f0\u4ee3\u7801\uff1a import psutil import time from threading import Lock from flask import Flask , render_template from flask_socketio import SocketIO async_mode = None app = Flask ( __name__ ) app . config [ 'SECRET_KEY' ] = 'secret!' socketio = SocketIO ( app , async_mode = async_mode ) thread = None thread_lock = Lock () # \u540e\u53f0\u7ebf\u7a0b \u4ea7\u751f\u6570\u636e\uff0c\u5373\u523b\u63a8\u9001\u81f3\u524d\u7aef def background_thread (): \"\"\"Example of how to send server generated events to clients.\"\"\" count = 0 while True : socketio . sleep ( 1 ) count += 1 t = time . strftime ( '%M:%S' , time . localtime ()) # \u83b7\u53d6\u7cfb\u7edf\u65f6\u95f4\uff08\u53ea\u53d6\u5206:\u79d2\uff09 cpus = psutil . cpu_percent ( interval = None , percpu = True ) # \u83b7\u53d6\u7cfb\u7edfcpu\u4f7f\u7528\u7387 non-blocking socketio . emit ( 'server_response' , { 'data' : [ t , * cpus ], 'count' : count }, namespace = '/test' ) # \u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u9700\u8981\u5ba2\u6237\u7aef\u8fde\u63a5\u7684\u4e0a\u4e0b\u6587\uff0c\u9ed8\u8ba4 broadcast = True \uff01\uff01\uff01\uff01\uff01\uff01\uff01 # \u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u9700\u8981\u5ba2\u6237\u7aef\u8fde\u63a5\u7684\u4e0a\u4e0b\u6587\uff0c\u9ed8\u8ba4 broadcast = True @app . route ( '/' ) def index (): return render_template ( 'cpu.html' , async_mode = socketio . async_mode ) @socketio . on ( 'connect' , namespace = '/test' ) def test_connect (): global thread with thread_lock : if thread is None : thread = socketio . start_background_task ( target = background_thread ) if __name__ == '__main__' : socketio . run ( app , debug = True ) \u9875\u9762\u6a21\u7248\uff1a <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" > < title > ECharts3 Ajax </ title > < script type = \"text/javascript\" src = \"//cdn.bootcss.com/jquery/3.1.1/jquery.min.js\" ></ script > < script type = \"text/javascript\" src = \"//cdn.bootcss.com/socket.io/1.5.1/socket.io.min.js\" ></ script > <!-- ECharts 3 \u5f15\u5165 --> < script src = \"http://echarts.baidu.com/dist/echarts.min.js\" ></ script > </ head > < body > <!--\u4e3aECharts\u51c6\u5907\u4e00\u4e2a\u5177\u5907\u5927\u5c0f\uff08\u5bbd\u9ad8\uff09\u7684Dom--> < div id = \"main\" style = \"height:500px;border:1px solid #ccc;padding:10px;\" ></ div > < script type = \"text/javascript\" > // \u4f5c\u8005\uff1ahhh5460 // \u65f6\u95f4\uff1a2017.8.19 //--- \u6298\u67f1 --- var myChart = echarts . init ( document . getElementById ( 'main' )); myChart . setOption ({ title : { text : '\u670d\u52a1\u5668\u7cfb\u7edf\u76d1\u63a7' }, tooltip : {}, legend : { data : [ 'cpu1' , 'cpu2' , 'cpu3' , 'cpu4' ] }, xAxis : { data : [] }, yAxis : {}, series : [{ name : 'cpu1' , type : 'line' , data : [] },{ name : 'cpu2' , type : 'line' , data : [] },{ name : 'cpu3' , type : 'line' , data : [] },{ name : 'cpu4' , type : 'line' , data : [] }] }); // \u672c\u4eba\u7b14\u8bb0\u672c\u6709\u56db\u4e2acpu\uff0c\u8bfb\u8005\u670b\u53cb\u8bf7\u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\uff0c\u76f8\u5e94\u4fee\u6539\uff01\uff01 // \u4e94\u4e2a\u5168\u5c40\u53d8\u91cf\uff1atime\u3001cpu1\u3001cpu2\u3001cpu3\u3001cpu4 var time = [ \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" ], cpu1 = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], cpu2 = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], cpu3 = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], cpu4 = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] //\u51c6\u5907\u597d\u7edf\u4e00\u7684 callback \u51fd\u6570 var update_mychart = function ( res ) { //res\u662fjson\u683c\u5f0f\u7684response\u5bf9\u8c61 // \u9690\u85cf\u52a0\u8f7d\u52a8\u753b myChart . hideLoading (); // \u51c6\u5907\u6570\u636e time . push ( res . data [ 0 ]); cpu1 . push ( parseFloat ( res . data [ 1 ])); cpu2 . push ( parseFloat ( res . data [ 2 ])); cpu3 . push ( parseFloat ( res . data [ 3 ])); cpu4 . push ( parseFloat ( res . data [ 4 ])); if ( time . length >= 100 ){ time . shift (); cpu1 . shift (); cpu2 . shift (); cpu3 . shift (); cpu4 . shift (); } // \u586b\u5165\u6570\u636e myChart . setOption ({ xAxis : { data : time }, series : [{ name : 'cpu1' , // \u6839\u636e\u540d\u5b57\u5bf9\u5e94\u5230\u76f8\u5e94\u7684\u7cfb\u5217 data : cpu1 },{ name : 'cpu2' , data : cpu2 },{ name : 'cpu3' , data : cpu3 },{ name : 'cpu4' , data : cpu4 }] }); }; // \u9996\u6b21\u663e\u793a\u52a0\u8f7d\u52a8\u753b myChart . showLoading (); // \u5efa\u7acbsocket\u8fde\u63a5\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u201c\u63a8\u9001\u201d\u6570\u636e\uff0c\u7528\u56de\u8c03\u51fd\u6570\u66f4\u65b0\u56fe\u8868 $ ( document ). ready ( function () { namespace = '/test' ; var socket = io . connect ( location . protocol + '//' + document . domain + ':' + location . port + namespace ); socket . on ( 'server_response' , function ( res ) { update_mychart ( res ); }); }); </ script > </ body > </ html >","title":"Flask socketio echarts"},{"location":"ESP32/flask_socketio_echarts/#_1","text":"","title":"\u6548\u679c\u5982\u56fe\u6240\u793a\uff1a"},{"location":"ESP32/flask_socketio_echarts/#_2","text":"import psutil import time from threading import Lock from flask import Flask , render_template from flask_socketio import SocketIO async_mode = None app = Flask ( __name__ ) app . config [ 'SECRET_KEY' ] = 'secret!' socketio = SocketIO ( app , async_mode = async_mode ) thread = None thread_lock = Lock () # \u540e\u53f0\u7ebf\u7a0b \u4ea7\u751f\u6570\u636e\uff0c\u5373\u523b\u63a8\u9001\u81f3\u524d\u7aef def background_thread (): \"\"\"Example of how to send server generated events to clients.\"\"\" count = 0 while True : socketio . sleep ( 1 ) count += 1 t = time . strftime ( '%M:%S' , time . localtime ()) # \u83b7\u53d6\u7cfb\u7edf\u65f6\u95f4\uff08\u53ea\u53d6\u5206:\u79d2\uff09 cpus = psutil . cpu_percent ( interval = None , percpu = True ) # \u83b7\u53d6\u7cfb\u7edfcpu\u4f7f\u7528\u7387 non-blocking socketio . emit ( 'server_response' , { 'data' : [ t , * cpus ], 'count' : count }, namespace = '/test' ) # \u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u9700\u8981\u5ba2\u6237\u7aef\u8fde\u63a5\u7684\u4e0a\u4e0b\u6587\uff0c\u9ed8\u8ba4 broadcast = True \uff01\uff01\uff01\uff01\uff01\uff01\uff01 # \u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u9700\u8981\u5ba2\u6237\u7aef\u8fde\u63a5\u7684\u4e0a\u4e0b\u6587\uff0c\u9ed8\u8ba4 broadcast = True @app . route ( '/' ) def index (): return render_template ( 'cpu.html' , async_mode = socketio . async_mode ) @socketio . on ( 'connect' , namespace = '/test' ) def test_connect (): global thread with thread_lock : if thread is None : thread = socketio . start_background_task ( target = background_thread ) if __name__ == '__main__' : socketio . run ( app , debug = True )","title":"\u540e\u53f0\u4ee3\u7801\uff1a"},{"location":"ESP32/flask_socketio_echarts/#_3","text":"<!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" > < title > ECharts3 Ajax </ title > < script type = \"text/javascript\" src = \"//cdn.bootcss.com/jquery/3.1.1/jquery.min.js\" ></ script > < script type = \"text/javascript\" src = \"//cdn.bootcss.com/socket.io/1.5.1/socket.io.min.js\" ></ script > <!-- ECharts 3 \u5f15\u5165 --> < script src = \"http://echarts.baidu.com/dist/echarts.min.js\" ></ script > </ head > < body > <!--\u4e3aECharts\u51c6\u5907\u4e00\u4e2a\u5177\u5907\u5927\u5c0f\uff08\u5bbd\u9ad8\uff09\u7684Dom--> < div id = \"main\" style = \"height:500px;border:1px solid #ccc;padding:10px;\" ></ div > < script type = \"text/javascript\" > // \u4f5c\u8005\uff1ahhh5460 // \u65f6\u95f4\uff1a2017.8.19 //--- \u6298\u67f1 --- var myChart = echarts . init ( document . getElementById ( 'main' )); myChart . setOption ({ title : { text : '\u670d\u52a1\u5668\u7cfb\u7edf\u76d1\u63a7' }, tooltip : {}, legend : { data : [ 'cpu1' , 'cpu2' , 'cpu3' , 'cpu4' ] }, xAxis : { data : [] }, yAxis : {}, series : [{ name : 'cpu1' , type : 'line' , data : [] },{ name : 'cpu2' , type : 'line' , data : [] },{ name : 'cpu3' , type : 'line' , data : [] },{ name : 'cpu4' , type : 'line' , data : [] }] }); // \u672c\u4eba\u7b14\u8bb0\u672c\u6709\u56db\u4e2acpu\uff0c\u8bfb\u8005\u670b\u53cb\u8bf7\u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\uff0c\u76f8\u5e94\u4fee\u6539\uff01\uff01 // \u4e94\u4e2a\u5168\u5c40\u53d8\u91cf\uff1atime\u3001cpu1\u3001cpu2\u3001cpu3\u3001cpu4 var time = [ \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" ], cpu1 = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], cpu2 = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], cpu3 = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], cpu4 = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] //\u51c6\u5907\u597d\u7edf\u4e00\u7684 callback \u51fd\u6570 var update_mychart = function ( res ) { //res\u662fjson\u683c\u5f0f\u7684response\u5bf9\u8c61 // \u9690\u85cf\u52a0\u8f7d\u52a8\u753b myChart . hideLoading (); // \u51c6\u5907\u6570\u636e time . push ( res . data [ 0 ]); cpu1 . push ( parseFloat ( res . data [ 1 ])); cpu2 . push ( parseFloat ( res . data [ 2 ])); cpu3 . push ( parseFloat ( res . data [ 3 ])); cpu4 . push ( parseFloat ( res . data [ 4 ])); if ( time . length >= 100 ){ time . shift (); cpu1 . shift (); cpu2 . shift (); cpu3 . shift (); cpu4 . shift (); } // \u586b\u5165\u6570\u636e myChart . setOption ({ xAxis : { data : time }, series : [{ name : 'cpu1' , // \u6839\u636e\u540d\u5b57\u5bf9\u5e94\u5230\u76f8\u5e94\u7684\u7cfb\u5217 data : cpu1 },{ name : 'cpu2' , data : cpu2 },{ name : 'cpu3' , data : cpu3 },{ name : 'cpu4' , data : cpu4 }] }); }; // \u9996\u6b21\u663e\u793a\u52a0\u8f7d\u52a8\u753b myChart . showLoading (); // \u5efa\u7acbsocket\u8fde\u63a5\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u201c\u63a8\u9001\u201d\u6570\u636e\uff0c\u7528\u56de\u8c03\u51fd\u6570\u66f4\u65b0\u56fe\u8868 $ ( document ). ready ( function () { namespace = '/test' ; var socket = io . connect ( location . protocol + '//' + document . domain + ':' + location . port + namespace ); socket . on ( 'server_response' , function ( res ) { update_mychart ( res ); }); }); </ script > </ body > </ html >","title":"\u9875\u9762\u6a21\u7248\uff1a"},{"location":"ESP32/git%20proxy/","text":"\u7b2c\u4e00\u79cd\u65b9\u5f0f\u7f16\u8f91 .gitconfig \u6587\u4ef6 To directly add a proxy to Github Desktop without using git shell: Set up/Sign in to your account in Github Desktop(This won't be a problem, proxy only doesn't allow you to Add, create or clone repo) Close Github Desktop for the time being(to set up proxy). Go to C:\\Users\\@yourusername . There you will find a file named .gitconfig Open it with any text editor(I have used sublime text 3) and add [http] proxy = http://username:password@your.proxy.address:8080 and save. Now you can add, create and clone repos in Github Desktop. \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u901a\u8fc7git \u547d\u4ee4\u4fee\u6539 \u5b89\u88c5github desktop\uff0c\u4f1a\u540c\u65f6\u5b89\u88c5git\uff0c\u8def\u5f84\u5982\u4e0b C:\\Users\\xxx\\AppData\\Local\\GitHubDesktop\\app-1.2.6\\resources\\app\\git\\cmd \u5728\u6b64\u76ee\u5f55\u4e0b\u6253\u5f00CMD\u754c\u9762 git config --global http.proxy proxy_address:proxy_port git config --global https.proxy proxy_address:proxy_port","title":"Github Desktop \u8bbe\u7f6e\u4ee3\u7406"},{"location":"ESP32/git%20proxy/#gitconfig","text":"To directly add a proxy to Github Desktop without using git shell: Set up/Sign in to your account in Github Desktop(This won't be a problem, proxy only doesn't allow you to Add, create or clone repo) Close Github Desktop for the time being(to set up proxy). Go to C:\\Users\\@yourusername . There you will find a file named .gitconfig Open it with any text editor(I have used sublime text 3) and add [http] proxy = http://username:password@your.proxy.address:8080 and save. Now you can add, create and clone repos in Github Desktop.","title":"\u7b2c\u4e00\u79cd\u65b9\u5f0f\u7f16\u8f91 .gitconfig \u6587\u4ef6"},{"location":"ESP32/git%20proxy/#git","text":"\u5b89\u88c5github desktop\uff0c\u4f1a\u540c\u65f6\u5b89\u88c5git\uff0c\u8def\u5f84\u5982\u4e0b C:\\Users\\xxx\\AppData\\Local\\GitHubDesktop\\app-1.2.6\\resources\\app\\git\\cmd \u5728\u6b64\u76ee\u5f55\u4e0b\u6253\u5f00CMD\u754c\u9762 git config --global http.proxy proxy_address:proxy_port git config --global https.proxy proxy_address:proxy_port","title":"\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u901a\u8fc7git \u547d\u4ee4\u4fee\u6539"},{"location":"ESP32/hello-world/","text":"Welcome to Hexo ! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub . Quick Start Create a new post $ hexo new \"My New Post\" More info: Writing Run server $ hexo server More info: Server Generate static files $ hexo generate More info: Generating Deploy to remote sites $ hexo deploy More info: Deployment","title":"Hello World"},{"location":"ESP32/hello-world/#quick-start","text":"","title":"Quick Start"},{"location":"ESP32/hello-world/#create-a-new-post","text":"$ hexo new \"My New Post\" More info: Writing","title":"Create a new post"},{"location":"ESP32/hello-world/#run-server","text":"$ hexo server More info: Server","title":"Run server"},{"location":"ESP32/hello-world/#generate-static-files","text":"$ hexo generate More info: Generating","title":"Generate static files"},{"location":"ESP32/hello-world/#deploy-to-remote-sites","text":"$ hexo deploy More info: Deployment","title":"Deploy to remote sites"},{"location":"ESP32/icepak%20tips/","text":"This article will collect some useful Icepak tips. How to include solar loading in an Icepak model? The solar loading can directly be modeled beginning in ANSYS Icepak. Here is the procedure: Enable Solar Loading from Basic Parameters / General Advanced Setup Specify Date, Month, Time and Location information ( Time input is based on a 24 hr clock) Specify Illumination Parameters Sunshine fraction: 0 to 1: Used to account for the effects of clouds which may reduce the direct solar irradiation. Ground Reflectance: 0 to 1: Determines the contribution of reflected solar radiation from ground surfaces. Define the North direction vector. +X is default North","title":"Icepak Tips"},{"location":"ESP32/icepak%20tips/#how-to-include-solar-loading-in-an-icepak-model","text":"The solar loading can directly be modeled beginning in ANSYS Icepak. Here is the procedure: Enable Solar Loading from Basic Parameters / General Advanced Setup Specify Date, Month, Time and Location information ( Time input is based on a 24 hr clock) Specify Illumination Parameters Sunshine fraction: 0 to 1: Used to account for the effects of clouds which may reduce the direct solar irradiation. Ground Reflectance: 0 to 1: Determines the contribution of reflected solar radiation from ground surfaces. Define the North direction vector. +X is default North","title":"How to include solar loading in an Icepak model?"},{"location":"ESP32/iphone/","text":"iPhone 4 \u70ed\u5206\u6790 \u6240\u6709\u5236\u9020\u5546\u7684\u6240\u6709\u624b\u673a\u90fd\u8fc7\u70ed\uff01\u5305\u62ecApple\u7684\u6700\u65b0iPhone 6\u3002\u591a\u79cd\u539f\u56e0\u53ef\u80fd\u4f1a\u4ea7\u751f\u8fc7\u70ed\u95ee\u9898\uff0c\u4f46\u6709\u4e9b\u4e8b\u60c5\u662f\u80af\u5b9a\u7684\uff0c\u516c\u53f8\u6295\u5165\u5927\u91cf\u8d44\u6e90\u6765\u786e\u4fdd\u5176\u4ea7\u54c1\u8bbe\u8ba1\u5408\u7406\u5e76\u7b26\u5408\u6240\u6709\u70ed\u89c4\u683c\uff0c\u6709\u65f6\u5019 \u52aa\u529b\u5931\u8d25 \u3002 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u4e3aiPhone 4\u6784\u5efa\u4e86\u4e00\u4e2a\u70ed\u6a21\u578b\u3002\u8be5\u6a21\u578b\u5c06\u5728\u7a0d\u540e\u7684\u535a\u5ba2\u4e2d\u7528\u4e8e\u66f4\u8be6\u7ec6\u7684\u70ed\u5206\u6790\u3002\u6700\u8fd1\u7684iPhone\uff085\u548c6\uff09\u9075\u5faa\u4e0eiPhone 4\u7c7b\u4f3c\u7684\u6563\u70ed\u8bbe\u8ba1\u3002\u5b83\u4eec\u7684\u529f\u8017\uff08\u66f4\u597d\u7684\u6027\u80fd\uff09\uff0c\u5c3a\u5bf8\uff0c\u7ed3\u6784\u548c\u5916\u58f3\u6750\u6599\u90fd\u6709\u6240\u6539\u53d8\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u6563\u70ed\u67b6\u6784\u4fdd\u6301\u4e0d\u53d8\u3002 \u70ed\uff08\u548cCAD\uff09\u6a21\u578b\u5c06\u4ece\u539f\u59cb\u624b\u673a\u91cd\u5efa\u3002\u6709\u5173iPhone 4\u62c6\u89e3\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b iFixit \u3002\u867d\u7136\u53ef\u4ee5\u6d4b\u91cf\u5927\u591a\u6570\u5c3a\u5bf8\u548c\u51e0\u4f55\u5f62\u72b6\uff0c\u4f46\u5fc5\u987b\u505a\u51fa\u8bb8\u591a\u5047\u8bbe\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6700\u7ec8\u7ed3\u679c\u4f3c\u4e4e\u4e0e\u5b9e\u9645\u6d4b\u91cf\u7ed3\u679c\u975e\u5e38\u543b\u5408\u3002 \u6253\u5f00iPhone\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u77f3\u58a8\u7247\u7c98\u5728\u4e24\u4e2a\u5c4f\u853d\u76d6\u4e0a; \u5728\u56fe1\u4e2d\u4ee5\u9ed1\u8272\u7a81\u51fa\u663e\u793a\u3002 \u77f3\u58a8\u662f\u4e00\u79cd\u4f18\u79c0\u7684\u6563\u70ed\u5668\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u9ad8\u7684\u9762\u5185\u5bfc\u70ed\u7cfb\u6570\uff08400-1500 W/mK\uff09\u548c\u4f4e\u7684\u8d2f\u7a7f\u5e73\u9762\u5bfc\u7535\u7387\uff08<4 W/mK\uff09\u3002\u7ecf\u8fc7\u4ed4\u7ec6\u68c0\u67e5\uff0c\u4f3c\u4e4e\u8fd9\u4e9b\u77f3\u58a8\u7247\u4e3a\u4f4d\u4e8e\u7535\u8def\u677f\u53e6\u4e00\u4fa7\u7684CPU\uff08A4\uff09\u548cLTE\u8c03\u5236\u89e3\u8c03\u5668\u63d0\u4f9b\u6563\u70ed\uff0c\u800c\u4e0d\u662feMMC\uff0cDDR\u548c\u57fa\u5e26\uff0c\u5b83\u4eec\u88ab\u5c4f\u853d\u76d6\u6240\u8986\u76d6\u3002\u5e94\u7528\u77f3\u58a8\u3002\u7a0d\u540e\u901a\u8fc7\u6a21\u62df\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u70b9\u3002\u56fe1\uff08b\uff09\u4e2d\u7684\u5fae\u5c0f\u77f3\u58a8\u7247\u4f3c\u4e4e\u6ca1\u6709\u4efb\u4f55\u5e2e\u52a9\uff0c\u7531\u4e8e\u5176\u4e0d\u5bf9\u79f0\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u5b83\u53ef\u80fd\u662f\u4e00\u5757\u6602\u8d35\u7684\u7247\u3002\u6211\u731c\u6d4b\u65c1\u8fb9\u7684\u539a\u67d4\u6027\u7535\u7f06\u4f5c\u4e3a\u6563\u70ed\u5668\u6548\u679c\u66f4\u597d\u3002 \u56fe1.\u5e26\u6709\u77f3\u58a8\u677f\u7684iPhone 4\u4e3b\u677fa\u3002\u548cb\u3002 \u62c6\u4e0b\u663e\u793a\u5c4f\u4f1a\u9732\u51fa\u53e6\u4e00\u5757\u7c98\u5728\u4e2d\u6846\u91d1\u5c5e\u652f\u67b6\u4e0a\u7684\u77f3\u58a8\u677f\uff08\u56fe2\uff09\u3002\u8be5\u540a\u5177\u6709\u52a9\u4e8e\u51cf\u8f7b\u6765\u81ea\u80cc\u5149LED\u548c\u4e3b\u677f\u7684\u4e00\u4e9b\u70ed\u91cf\u3002 \u8fd9\u5757\u77f3\u58a8\u677f\u8986\u76d6\u4e86\u4e2d\u6846\u652f\u6491\u7684\u6574\u4e2a\u533a\u57df\uff0c\u9664\u4e86\u6709\u5207\u53e3\u7684\u533a\u57df\uff0c\u4f46\u5b83\u53ef\u4ee5\u5728\u5c3a\u5bf8\u548c\u51e0\u4f55\u5f62\u72b6\u4e0a\u8fdb\u884c\u4f18\u5316\u3002\u7a0d\u540e\u5c06\u5728\u672c\u6587\u7684\u7b2c\u4e8c\u90e8\u5206\u4e2d\u5bf9\u6b64\u8fdb\u884c\u8c03\u67e5\u3002 \u56fe2.\u4e2d\u6846\u91d1\u5c5e\u652f\u6491\u4e0a\u7684\u77f3\u58a8\u677f\u3002 \u6700\u540e\uff0c\u5c06\u7b2c\u56db\u5757\u77f3\u58a8\u677f\u7c98\u5728\u5851\u6599\u5185\u76d6\u4e0a\uff08\u56fe3\uff09\u3002\u8be5\u77f3\u58a8\u7247\u9075\u5faa\u4e3b\u677f\u7684\u5f62\u72b6\u3002 \u5bf9\u4e8e\u677f\u7684\u957f\u5ea6\u4e0a\u51e0\u4e4e\u6ca1\u6709\u6e29\u5ea6\u68af\u5ea6\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u77f3\u58a8\u677f\u5c06\u662f\u975e\u5e38\u4f4e\u6548\u7684\uff0c\u4f8b\u5982\u5f53CPU\u548cLTE\u8c03\u5236\u89e3\u8c03\u5668\u90fd\u53d7\u5230\u5e94\u529b\uff08\u70ed\uff09\u5230\u7c7b\u4f3c\u7684\u503c\u65f6\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f4d\u4e8e\u76f8\u5bf9\u7684\u4e24\u7aef\u3002\u7535\u8def\u677f\uff08\u53c2\u89c1 \u7535\u8def\u677f\u5e03\u5c40 \u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\uff09\u3002 \u56fe3.\u540e\u76d6\u5185\u4fa7\u7684\u77f3\u58a8\u677f\u3002 \u6211\u786e\u4fe1Apple\u6709\u5404\u79cd\u5f62\u72b6\uff0c\u5c3a\u5bf8\uff0c\u989c\u8272\uff08\u6216\u6d82\u5c42\uff1f\uff09\u7684\u539f\u56e0\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u540a\u5177\u6216\u6563\u70ed\u57ab\u7684\u65b9\u5411\uff08\u901a\u8fc7\u53ea\u6709LTE-IC\u5177\u6709\u5bfc\u70ed\u57ab\u7684\u65b9\u5f0f\uff09\uff0c\u4ed6\u4eec\u4f7f\u7528\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u70ed\u91ca\u653e\u3002\u6709\u4e9b\u4eba\u4ece\u5916\u9762\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\u6b64\u5916\uff0c\u70ed\u91cf\u7f13\u89e3\u7684\u5f88\u5927\u4e00\u90e8\u5206\u6765\u81ea\u901a\u8fc7\u8f6f\u4ef6\u7b97\u6cd5\u5b9e\u73b0\u7684\u70ed\u63a7\u5236\uff0c\u4ee5\u4f18\u5316\u529f\u8017\u3002\u5b9e\u65bd\u4ec0\u4e48\u6216\u5982\u4f55\u5c06\u6c38\u8fdc\u662f\u4e00\u4e2a\u8c1c\u3002\u6211\u7684\u59bb\u5b50\u8bf4\u5979\u7684iPhone\u5f00\u59cb\u53d8\u5f97\u75af\u72c2\uff0c\u5f53\u5b83\u53d8\u5f97\u592a\u70ed\u65f6\u81ea\u5df1\u5f00\u59cb\u3002 \u7ed3\u679c \u6d4b\u91cf\u76f4\u63a5\u4eceiPhone 4\u8fdb\u884c\uff0c\u4ee5\u6784\u5efa\u534a\u8be6\u7ec6\u7684\u70ed\u6a21\u578b\u3002\u7279\u522b\u5173\u6ce8\u4e3b\u8981\u90e8\u4ef6\u5728\u901a\u5411\u5916\u58f3\u7684\u8def\u5f84\u4e0a\u9047\u5230\u7684\u6240\u6709\u4f20\u5bfc\u8def\u5f84\uff0c\u6c14\u9699\u548c\u70ed\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u4e2d\u70ed\u91cf\u901a\u8fc7\u5bf9\u6d41\u548c\u8f90\u5c04\u6d88\u6563\u3002\u663e\u793a\u5668\u7684\u7ec6\u8282\u6a21\u578b\u975e\u5e38\u96be\u4ee5\u91cd\u65b0\u521b\u5efa\uff0c\u4f46\u662f\u80cc\u5149LED\uff08\u663e\u793a\u5668\u7684\u4e3b\u8981\u70ed\u6e90\uff09\u7684\u4f4d\u7f6e\u4ee5\u53ca\u76d6\u73bb\u7247\uff0c\u89e6\u6478\u9762\u677f\u548cLCD\u7684\u539a\u5ea6\u88ab\u5c3d\u53ef\u80fd\u51c6\u786e\u5730\u6355\u83b7\u3002\u6b64\u5916\uff0c\u4ece\u4e3b\u677f\u5230\u524d\u540e\u76d6\u7684\u8ddd\u79bb\u4e5f\u88ab\u8ba4\u4e3a\u662f\u51c6\u786e\u7684\u3002 \u5047\u8bbe\u6240\u6709\u5c4f\u853d\u76d6\u90fd\u662f\u4e0d\u9508\u94a2\uff08SUS 304\uff09\u3002\u5047\u8bbe\u4e2d\u6846\u652f\u6491\u4e3a\u94dd\uff08Al-6063\uff09\u3002\u5047\u8bbe\u77f3\u58a8\u7247\u539a10\u03bcm\uff0c\u7c98\u5408\u5242\u548c\u6d82\u5c42\u5206\u522b\u4e3a10\u03bcm \uff0c\u603b\u539a\u5ea6\u4e3a30\u03bcm\u3002 \u7814\u7a76\u7684\u6848\u4f8b\u662fLTE\u4e0a\u7684\u89c6\u9891\u4f1a\u8bae\u3002\u9009\u62e9\u6b64\u6848\u4f8b\u662f\u56e0\u4e3a\u5b83\u5f3a\u8c03\u4e86\u8bbe\u5907\u4e2d\u7684\u5927\u90e8\u5206\u7ec4\u4ef6\uff1aLTE\u8c03\u5236\u89e3\u8c03\u5668\uff0cCPU\uff08A4\uff09\uff0ceMMC\uff0cDDR\u548c\u6210\u50cf\u4f20\u611f\u5668\uff08\u6765\u81ea\u4e3b\u6444\u50cf\u5934\uff09\u3002\u603b\u7cfb\u7edf\u529f\u7387\u4e3a2.4 W\uff08\u7c97\u7565\u4f30\u8ba1\uff09\u3002\u6240\u6709\u6a21\u62df\u5747\u572825\u2103\u7684\u73af\u5883\u6e29\u5ea6\u4e0b\u8fdb\u884c\u3002 \u56fe\u7247\uff08\u4e0b\u56fe\uff09\u663e\u793a\u4e86\u4eceiPhone 4\uff08\u5de6\u624b\u4fa7\uff09\u548c\u6a21\u62df\uff08\u53f3\u624b\u4fa7\uff09\u62cd\u6444\u7684\u7ea2\u5916\u56fe\u50cf\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002\u7ed3\u679c\u975e\u5e38\u76f8\u4f3c\uff01 \u56fe4.\u524d\u76d6\u73bb\u7483\u7684\u5b9e\u9645\u6d4b\u91cf\u503c\uff08\u5de6\uff09\u548c\u6a21\u62df\uff08\u53f3\uff09\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002 \u56fe5.\u540e\u76d6\u73bb\u7483\u7684\u5b9e\u9645\u6d4b\u91cf\u503c\uff08\u5de6\uff09\u548c\u6a21\u62df\uff08\u53f3\uff09\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002 \u8fd9\u4e9b\u7ed3\u679c\u76f4\u63a5\u53d6\u81ea\u70ed\u6a21\u578b\uff0c\u5047\u8bbe\u529f\u7387\u4e3a2.4 W\u524d\u76d6\u73bb\u7483\u4e0a\u7684\u5927\u7ea2\u8272\u70ed\u70b9\uff08\u56fe4\uff09\u662f\u7531\u4e3b\u6444\u50cf\u5934\u7684\u6210\u50cf\u4f20\u611f\u5668\u5f15\u8d77\u7684\u3002\u901a\u5e38\uff0c\u6d4b\u91cf\u548c\u6a21\u62df\u4e4b\u95f4\u5b58\u5728\u6781\u597d\u7684\u4e00\u81f4\u6027\u3002 \u672c\u6587\u7684\u76ee\u7684\u662f\u8fbe\u5230\u8fd9\u4e00\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bc1\u5b9eiPhone\u7684\u70ed\u6a21\u578b\u5de5\u4f5c\u6b63\u5e38\uff0c\u63d0\u4f9b\u5408\u7406\u7684\u7ed3\u679c\u5e76\u4e14\u4e0e\u5b9e\u9645\u6d4b\u91cf\u7ed3\u679c\u4e00\u81f4\u3002","title":"iPhone 4 \u70ed\u5206\u6790"},{"location":"ESP32/iphone/#iphone-4","text":"\u6240\u6709\u5236\u9020\u5546\u7684\u6240\u6709\u624b\u673a\u90fd\u8fc7\u70ed\uff01\u5305\u62ecApple\u7684\u6700\u65b0iPhone 6\u3002\u591a\u79cd\u539f\u56e0\u53ef\u80fd\u4f1a\u4ea7\u751f\u8fc7\u70ed\u95ee\u9898\uff0c\u4f46\u6709\u4e9b\u4e8b\u60c5\u662f\u80af\u5b9a\u7684\uff0c\u516c\u53f8\u6295\u5165\u5927\u91cf\u8d44\u6e90\u6765\u786e\u4fdd\u5176\u4ea7\u54c1\u8bbe\u8ba1\u5408\u7406\u5e76\u7b26\u5408\u6240\u6709\u70ed\u89c4\u683c\uff0c\u6709\u65f6\u5019 \u52aa\u529b\u5931\u8d25 \u3002 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u4e3aiPhone 4\u6784\u5efa\u4e86\u4e00\u4e2a\u70ed\u6a21\u578b\u3002\u8be5\u6a21\u578b\u5c06\u5728\u7a0d\u540e\u7684\u535a\u5ba2\u4e2d\u7528\u4e8e\u66f4\u8be6\u7ec6\u7684\u70ed\u5206\u6790\u3002\u6700\u8fd1\u7684iPhone\uff085\u548c6\uff09\u9075\u5faa\u4e0eiPhone 4\u7c7b\u4f3c\u7684\u6563\u70ed\u8bbe\u8ba1\u3002\u5b83\u4eec\u7684\u529f\u8017\uff08\u66f4\u597d\u7684\u6027\u80fd\uff09\uff0c\u5c3a\u5bf8\uff0c\u7ed3\u6784\u548c\u5916\u58f3\u6750\u6599\u90fd\u6709\u6240\u6539\u53d8\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u6563\u70ed\u67b6\u6784\u4fdd\u6301\u4e0d\u53d8\u3002 \u70ed\uff08\u548cCAD\uff09\u6a21\u578b\u5c06\u4ece\u539f\u59cb\u624b\u673a\u91cd\u5efa\u3002\u6709\u5173iPhone 4\u62c6\u89e3\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b iFixit \u3002\u867d\u7136\u53ef\u4ee5\u6d4b\u91cf\u5927\u591a\u6570\u5c3a\u5bf8\u548c\u51e0\u4f55\u5f62\u72b6\uff0c\u4f46\u5fc5\u987b\u505a\u51fa\u8bb8\u591a\u5047\u8bbe\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6700\u7ec8\u7ed3\u679c\u4f3c\u4e4e\u4e0e\u5b9e\u9645\u6d4b\u91cf\u7ed3\u679c\u975e\u5e38\u543b\u5408\u3002 \u6253\u5f00iPhone\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u77f3\u58a8\u7247\u7c98\u5728\u4e24\u4e2a\u5c4f\u853d\u76d6\u4e0a; \u5728\u56fe1\u4e2d\u4ee5\u9ed1\u8272\u7a81\u51fa\u663e\u793a\u3002 \u77f3\u58a8\u662f\u4e00\u79cd\u4f18\u79c0\u7684\u6563\u70ed\u5668\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u9ad8\u7684\u9762\u5185\u5bfc\u70ed\u7cfb\u6570\uff08400-1500 W/mK\uff09\u548c\u4f4e\u7684\u8d2f\u7a7f\u5e73\u9762\u5bfc\u7535\u7387\uff08<4 W/mK\uff09\u3002\u7ecf\u8fc7\u4ed4\u7ec6\u68c0\u67e5\uff0c\u4f3c\u4e4e\u8fd9\u4e9b\u77f3\u58a8\u7247\u4e3a\u4f4d\u4e8e\u7535\u8def\u677f\u53e6\u4e00\u4fa7\u7684CPU\uff08A4\uff09\u548cLTE\u8c03\u5236\u89e3\u8c03\u5668\u63d0\u4f9b\u6563\u70ed\uff0c\u800c\u4e0d\u662feMMC\uff0cDDR\u548c\u57fa\u5e26\uff0c\u5b83\u4eec\u88ab\u5c4f\u853d\u76d6\u6240\u8986\u76d6\u3002\u5e94\u7528\u77f3\u58a8\u3002\u7a0d\u540e\u901a\u8fc7\u6a21\u62df\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u70b9\u3002\u56fe1\uff08b\uff09\u4e2d\u7684\u5fae\u5c0f\u77f3\u58a8\u7247\u4f3c\u4e4e\u6ca1\u6709\u4efb\u4f55\u5e2e\u52a9\uff0c\u7531\u4e8e\u5176\u4e0d\u5bf9\u79f0\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u5b83\u53ef\u80fd\u662f\u4e00\u5757\u6602\u8d35\u7684\u7247\u3002\u6211\u731c\u6d4b\u65c1\u8fb9\u7684\u539a\u67d4\u6027\u7535\u7f06\u4f5c\u4e3a\u6563\u70ed\u5668\u6548\u679c\u66f4\u597d\u3002 \u56fe1.\u5e26\u6709\u77f3\u58a8\u677f\u7684iPhone 4\u4e3b\u677fa\u3002\u548cb\u3002 \u62c6\u4e0b\u663e\u793a\u5c4f\u4f1a\u9732\u51fa\u53e6\u4e00\u5757\u7c98\u5728\u4e2d\u6846\u91d1\u5c5e\u652f\u67b6\u4e0a\u7684\u77f3\u58a8\u677f\uff08\u56fe2\uff09\u3002\u8be5\u540a\u5177\u6709\u52a9\u4e8e\u51cf\u8f7b\u6765\u81ea\u80cc\u5149LED\u548c\u4e3b\u677f\u7684\u4e00\u4e9b\u70ed\u91cf\u3002 \u8fd9\u5757\u77f3\u58a8\u677f\u8986\u76d6\u4e86\u4e2d\u6846\u652f\u6491\u7684\u6574\u4e2a\u533a\u57df\uff0c\u9664\u4e86\u6709\u5207\u53e3\u7684\u533a\u57df\uff0c\u4f46\u5b83\u53ef\u4ee5\u5728\u5c3a\u5bf8\u548c\u51e0\u4f55\u5f62\u72b6\u4e0a\u8fdb\u884c\u4f18\u5316\u3002\u7a0d\u540e\u5c06\u5728\u672c\u6587\u7684\u7b2c\u4e8c\u90e8\u5206\u4e2d\u5bf9\u6b64\u8fdb\u884c\u8c03\u67e5\u3002 \u56fe2.\u4e2d\u6846\u91d1\u5c5e\u652f\u6491\u4e0a\u7684\u77f3\u58a8\u677f\u3002 \u6700\u540e\uff0c\u5c06\u7b2c\u56db\u5757\u77f3\u58a8\u677f\u7c98\u5728\u5851\u6599\u5185\u76d6\u4e0a\uff08\u56fe3\uff09\u3002\u8be5\u77f3\u58a8\u7247\u9075\u5faa\u4e3b\u677f\u7684\u5f62\u72b6\u3002 \u5bf9\u4e8e\u677f\u7684\u957f\u5ea6\u4e0a\u51e0\u4e4e\u6ca1\u6709\u6e29\u5ea6\u68af\u5ea6\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u77f3\u58a8\u677f\u5c06\u662f\u975e\u5e38\u4f4e\u6548\u7684\uff0c\u4f8b\u5982\u5f53CPU\u548cLTE\u8c03\u5236\u89e3\u8c03\u5668\u90fd\u53d7\u5230\u5e94\u529b\uff08\u70ed\uff09\u5230\u7c7b\u4f3c\u7684\u503c\u65f6\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f4d\u4e8e\u76f8\u5bf9\u7684\u4e24\u7aef\u3002\u7535\u8def\u677f\uff08\u53c2\u89c1 \u7535\u8def\u677f\u5e03\u5c40 \u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\uff09\u3002 \u56fe3.\u540e\u76d6\u5185\u4fa7\u7684\u77f3\u58a8\u677f\u3002 \u6211\u786e\u4fe1Apple\u6709\u5404\u79cd\u5f62\u72b6\uff0c\u5c3a\u5bf8\uff0c\u989c\u8272\uff08\u6216\u6d82\u5c42\uff1f\uff09\u7684\u539f\u56e0\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u540a\u5177\u6216\u6563\u70ed\u57ab\u7684\u65b9\u5411\uff08\u901a\u8fc7\u53ea\u6709LTE-IC\u5177\u6709\u5bfc\u70ed\u57ab\u7684\u65b9\u5f0f\uff09\uff0c\u4ed6\u4eec\u4f7f\u7528\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u70ed\u91ca\u653e\u3002\u6709\u4e9b\u4eba\u4ece\u5916\u9762\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\u6b64\u5916\uff0c\u70ed\u91cf\u7f13\u89e3\u7684\u5f88\u5927\u4e00\u90e8\u5206\u6765\u81ea\u901a\u8fc7\u8f6f\u4ef6\u7b97\u6cd5\u5b9e\u73b0\u7684\u70ed\u63a7\u5236\uff0c\u4ee5\u4f18\u5316\u529f\u8017\u3002\u5b9e\u65bd\u4ec0\u4e48\u6216\u5982\u4f55\u5c06\u6c38\u8fdc\u662f\u4e00\u4e2a\u8c1c\u3002\u6211\u7684\u59bb\u5b50\u8bf4\u5979\u7684iPhone\u5f00\u59cb\u53d8\u5f97\u75af\u72c2\uff0c\u5f53\u5b83\u53d8\u5f97\u592a\u70ed\u65f6\u81ea\u5df1\u5f00\u59cb\u3002","title":"iPhone 4 \u70ed\u5206\u6790"},{"location":"ESP32/iphone/#_1","text":"\u6d4b\u91cf\u76f4\u63a5\u4eceiPhone 4\u8fdb\u884c\uff0c\u4ee5\u6784\u5efa\u534a\u8be6\u7ec6\u7684\u70ed\u6a21\u578b\u3002\u7279\u522b\u5173\u6ce8\u4e3b\u8981\u90e8\u4ef6\u5728\u901a\u5411\u5916\u58f3\u7684\u8def\u5f84\u4e0a\u9047\u5230\u7684\u6240\u6709\u4f20\u5bfc\u8def\u5f84\uff0c\u6c14\u9699\u548c\u70ed\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u4e2d\u70ed\u91cf\u901a\u8fc7\u5bf9\u6d41\u548c\u8f90\u5c04\u6d88\u6563\u3002\u663e\u793a\u5668\u7684\u7ec6\u8282\u6a21\u578b\u975e\u5e38\u96be\u4ee5\u91cd\u65b0\u521b\u5efa\uff0c\u4f46\u662f\u80cc\u5149LED\uff08\u663e\u793a\u5668\u7684\u4e3b\u8981\u70ed\u6e90\uff09\u7684\u4f4d\u7f6e\u4ee5\u53ca\u76d6\u73bb\u7247\uff0c\u89e6\u6478\u9762\u677f\u548cLCD\u7684\u539a\u5ea6\u88ab\u5c3d\u53ef\u80fd\u51c6\u786e\u5730\u6355\u83b7\u3002\u6b64\u5916\uff0c\u4ece\u4e3b\u677f\u5230\u524d\u540e\u76d6\u7684\u8ddd\u79bb\u4e5f\u88ab\u8ba4\u4e3a\u662f\u51c6\u786e\u7684\u3002 \u5047\u8bbe\u6240\u6709\u5c4f\u853d\u76d6\u90fd\u662f\u4e0d\u9508\u94a2\uff08SUS 304\uff09\u3002\u5047\u8bbe\u4e2d\u6846\u652f\u6491\u4e3a\u94dd\uff08Al-6063\uff09\u3002\u5047\u8bbe\u77f3\u58a8\u7247\u539a10\u03bcm\uff0c\u7c98\u5408\u5242\u548c\u6d82\u5c42\u5206\u522b\u4e3a10\u03bcm \uff0c\u603b\u539a\u5ea6\u4e3a30\u03bcm\u3002 \u7814\u7a76\u7684\u6848\u4f8b\u662fLTE\u4e0a\u7684\u89c6\u9891\u4f1a\u8bae\u3002\u9009\u62e9\u6b64\u6848\u4f8b\u662f\u56e0\u4e3a\u5b83\u5f3a\u8c03\u4e86\u8bbe\u5907\u4e2d\u7684\u5927\u90e8\u5206\u7ec4\u4ef6\uff1aLTE\u8c03\u5236\u89e3\u8c03\u5668\uff0cCPU\uff08A4\uff09\uff0ceMMC\uff0cDDR\u548c\u6210\u50cf\u4f20\u611f\u5668\uff08\u6765\u81ea\u4e3b\u6444\u50cf\u5934\uff09\u3002\u603b\u7cfb\u7edf\u529f\u7387\u4e3a2.4 W\uff08\u7c97\u7565\u4f30\u8ba1\uff09\u3002\u6240\u6709\u6a21\u62df\u5747\u572825\u2103\u7684\u73af\u5883\u6e29\u5ea6\u4e0b\u8fdb\u884c\u3002 \u56fe\u7247\uff08\u4e0b\u56fe\uff09\u663e\u793a\u4e86\u4eceiPhone 4\uff08\u5de6\u624b\u4fa7\uff09\u548c\u6a21\u62df\uff08\u53f3\u624b\u4fa7\uff09\u62cd\u6444\u7684\u7ea2\u5916\u56fe\u50cf\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002\u7ed3\u679c\u975e\u5e38\u76f8\u4f3c\uff01 \u56fe4.\u524d\u76d6\u73bb\u7483\u7684\u5b9e\u9645\u6d4b\u91cf\u503c\uff08\u5de6\uff09\u548c\u6a21\u62df\uff08\u53f3\uff09\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002 \u56fe5.\u540e\u76d6\u73bb\u7483\u7684\u5b9e\u9645\u6d4b\u91cf\u503c\uff08\u5de6\uff09\u548c\u6a21\u62df\uff08\u53f3\uff09\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002 \u8fd9\u4e9b\u7ed3\u679c\u76f4\u63a5\u53d6\u81ea\u70ed\u6a21\u578b\uff0c\u5047\u8bbe\u529f\u7387\u4e3a2.4 W\u524d\u76d6\u73bb\u7483\u4e0a\u7684\u5927\u7ea2\u8272\u70ed\u70b9\uff08\u56fe4\uff09\u662f\u7531\u4e3b\u6444\u50cf\u5934\u7684\u6210\u50cf\u4f20\u611f\u5668\u5f15\u8d77\u7684\u3002\u901a\u5e38\uff0c\u6d4b\u91cf\u548c\u6a21\u62df\u4e4b\u95f4\u5b58\u5728\u6781\u597d\u7684\u4e00\u81f4\u6027\u3002 \u672c\u6587\u7684\u76ee\u7684\u662f\u8fbe\u5230\u8fd9\u4e00\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bc1\u5b9eiPhone\u7684\u70ed\u6a21\u578b\u5de5\u4f5c\u6b63\u5e38\uff0c\u63d0\u4f9b\u5408\u7406\u7684\u7ed3\u679c\u5e76\u4e14\u4e0e\u5b9e\u9645\u6d4b\u91cf\u7ed3\u679c\u4e00\u81f4\u3002","title":"\u7ed3\u679c"},{"location":"ESP32/latextools/","text":"\u5b89\u88c5Latextools Ctrl+shift+P, Install Package, LaTexTools \u5b89\u88c5SmartPDF \u4e3a\u4e86\u652f\u6301\u53cd\u5411\u641c\u7d22\u529f\u80fd \u8bbe\u7f6eSmartPDF\uff0csetting\uff0coptions,\u5728\u6700\u4e0b\u65b9\u7684\u9006\u5411\u641c\u7d22\u547d\u4ee4\u884c\uff0c\u8f93\u5165 \"C:\\Program Files\\Sublime Text 3\\sublime_text.exe\" \"%f:%l\" \u7f16\u8bd1\u67e5\u770b\u6587\u6863 Sublime\u91cc\u9762 Ctrl+B,\u6216F7\u5373\u53ef\u7f16\u8bd1\u67e5\u770b\u6587\u6863\u4e86\u3002 \u914d\u7f6eLatextools \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cLaTeXTools \u4f7f\u7528 pdflatex\u7f16\u8bd1\uff0c\u4f46\u662f\u73b0\u5728\u4e00\u822c\u90fd\u662f\u7528 XeLaTeX\uff0c\u56e0\u6b64\uff0c\u8fd9\u91cc\u8fd8\u662f\u9700\u8981\u4e00\u70b9\u6539\u53d8\u7684\u3002 Preferences, Package Settings, Latex tools, Setting User \u589e\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a \"builder_settings\": { \"program\": \"xelatex\" }","title":"Latextools"},{"location":"ESP32/latextools/#latextools","text":"Ctrl+shift+P, Install Package, LaTexTools","title":"\u5b89\u88c5Latextools"},{"location":"ESP32/latextools/#smartpdf","text":"\u4e3a\u4e86\u652f\u6301\u53cd\u5411\u641c\u7d22\u529f\u80fd \u8bbe\u7f6eSmartPDF\uff0csetting\uff0coptions,\u5728\u6700\u4e0b\u65b9\u7684\u9006\u5411\u641c\u7d22\u547d\u4ee4\u884c\uff0c\u8f93\u5165 \"C:\\Program Files\\Sublime Text 3\\sublime_text.exe\" \"%f:%l\"","title":"\u5b89\u88c5SmartPDF"},{"location":"ESP32/latextools/#_1","text":"Sublime\u91cc\u9762 Ctrl+B,\u6216F7\u5373\u53ef\u7f16\u8bd1\u67e5\u770b\u6587\u6863\u4e86\u3002","title":"\u7f16\u8bd1\u67e5\u770b\u6587\u6863"},{"location":"ESP32/latextools/#latextools_1","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cLaTeXTools \u4f7f\u7528 pdflatex\u7f16\u8bd1\uff0c\u4f46\u662f\u73b0\u5728\u4e00\u822c\u90fd\u662f\u7528 XeLaTeX\uff0c\u56e0\u6b64\uff0c\u8fd9\u91cc\u8fd8\u662f\u9700\u8981\u4e00\u70b9\u6539\u53d8\u7684\u3002 Preferences, Package Settings, Latex tools, Setting User \u589e\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a \"builder_settings\": { \"program\": \"xelatex\" }","title":"\u914d\u7f6eLatextools"},{"location":"ESP32/matplotlib_Chinese/","text":"python matplotlib \u652f\u6301\u4e2d\u6587\u6807\u9898 \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165\u4e2d\u6587\u5b57\u4f53\u3002 \u627e\u5230matplotlib\u7684\u914d\u7f6e\u6587\u4ef6 matplotlibrc \u7684\u8def\u5f84\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53ef\u627e\u51fa\uff1a import matplotlib a = matplotlib . matplotlib_fname () print ( a ) \u627e\u5230 matplotlibrc \u6587\u4ef6\u4e2d\u7684 font.sans-serif \uff0c\u5c06\u524d\u9762\u7684\u6ce8\u91ca\u7b26\u53bb\u6389\uff0c\u540e\u9762\u52a0\u5165 Microsoft YaHei, \u5373\u4fee\u6539\u6210\u8fd9\u6837\uff1a font.sans-serif: Microsoft YaHei, DejaVu Sans, Bitstream Vera Sans, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif \u5373\u53ef! \u4e5f\u53ef\u4ee5\u7528\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u5b57\u4f53\uff0c\u5982KaiTi\uff0c\u7b49\u3002","title":"python matplotlib \u652f\u6301\u4e2d\u6587\u6807\u9898"},{"location":"ESP32/matplotlib_Chinese/#python-matplotlib","text":"\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165\u4e2d\u6587\u5b57\u4f53\u3002 \u627e\u5230matplotlib\u7684\u914d\u7f6e\u6587\u4ef6 matplotlibrc \u7684\u8def\u5f84\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53ef\u627e\u51fa\uff1a import matplotlib a = matplotlib . matplotlib_fname () print ( a ) \u627e\u5230 matplotlibrc \u6587\u4ef6\u4e2d\u7684 font.sans-serif \uff0c\u5c06\u524d\u9762\u7684\u6ce8\u91ca\u7b26\u53bb\u6389\uff0c\u540e\u9762\u52a0\u5165 Microsoft YaHei, \u5373\u4fee\u6539\u6210\u8fd9\u6837\uff1a font.sans-serif: Microsoft YaHei, DejaVu Sans, Bitstream Vera Sans, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif \u5373\u53ef! \u4e5f\u53ef\u4ee5\u7528\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u5b57\u4f53\uff0c\u5982KaiTi\uff0c\u7b49\u3002","title":"python matplotlib \u652f\u6301\u4e2d\u6587\u6807\u9898"},{"location":"ESP32/meke%E6%9C%9F%E5%88%8A/","text":"\u7c73\u514b\u7f51\u4ee5\u540e\u66f4\u65b0\u7684\u6587\u7ae0\u5c06\u4f1a\u653e\u5728Github\u4e0a https://github.com/mekesim/thermal_note \u672c\u671f\u66f4\u65b0\u4e86\u4e00\u7bc7\u5173\u4e8e\u98ce\u6247\u8bbe\u8ba1\u4e0e\u9009\u578b\u7684\u5185\u5bb9\u3002 \u6b22\u8fce\u6307\u6b63\uff01","title":"\u98ce\u6247\u8bbe\u8ba1\u4e0e\u9009\u578b"},{"location":"ESP32/mkdoc%20github/","text":"MKDocs \u662f\u4e00\u4e2a\u57fa\u4e8e Python \u5199\u6210\u7684\u6587\u6863\u751f\u6210\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u52a9 GitHub Action \u6765\u5b9e\u73b0\u81ea\u52a8\u90e8\u7f72\u5230 GitHub Pages \u3002 \u672c\u5730\u914d\u7f6e \u9996\u5148\uff0c\u4f60\u9700\u8981\u5148\u5728\u672c\u5730\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u5185\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a \u2502 mkdocs.yml \u2502 \u251c\u2500.github \u2502 \u2514\u2500workflows \u2502 main.yml \u2502 \u2514\u2500docs \u2502 xxx.md \u2502 index.md mkdocs.yml \u662fmkdocs\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u4e3b\u9898\u7b49\u7b49\u3002 /docs \u6587\u4ef6\u5939\u5185\u653e\u6587\u7ae0\u5185\u5bb9\u7684markdown\u6587\u4ef6\u3002 main.yml \u914d\u7f6egithub\u81ea\u52a8\u53d1\u5e03\u811a\u672c\u3002\u6700\u7b80\u5355\u7684\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a name : ci on : push : branches : - master #- main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force Note branches \u7684\u8bbe\u7f6e\uff0c\u56e0\u4e3agithub\u5c06\u9ed8\u8ba4\u5206\u652f\u540d\u6539\u4e3a\u4e86main,\u8bf7\u6ce8\u610f\u67e5\u770b\u4f60\u7684github\u9879\u76ee\u9ed8\u8ba4\u5206\u652f\u540d\u79f0\u662f master \u8fd8\u662f main. Github\u914d\u7f6e \u9996\u5148\u5728Github\u4e0a\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u9879\u76ee\u540d\u79f0\u4e3a\u4f60\u5728github\u7684\u7528\u6237\u540d \uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u901a\u8fc7 .github.io/ \u6253\u5f00\u7f51\u9875\u4e86\u3002 \u5f53\u7136\u5982\u679c\u9879\u76ee\u540d\u79f0\u4f7f\u7528\u7684\u662f\u5176\u4ed6\u540d\u79f0\uff0c\u5219\u8bbf\u95ee\u5730\u5740\u662f .github.io/ \u5173\u4e8egithub page\u529f\u80fd\u7684\u8be6\u7ec6\u4f7f\u7528\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 \u5c06\u672c\u5730\u9879\u76eepush\u5230\u8fdc\u7a0b\u540e\u5c06\u4f1a\u81ea\u52a8\u6267\u884cmkdocs\u90e8\u7f72\u811a\u672c\u3002\u6253\u5f00\u7f51\u9875\u5c31\u53ef\u4ee5\u770b\u5230\u66f4\u65b0\u4e86\u3002","title":"Mkdoc github"},{"location":"ESP32/mkdoc%20github/#_1","text":"\u9996\u5148\uff0c\u4f60\u9700\u8981\u5148\u5728\u672c\u5730\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u5185\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a \u2502 mkdocs.yml \u2502 \u251c\u2500.github \u2502 \u2514\u2500workflows \u2502 main.yml \u2502 \u2514\u2500docs \u2502 xxx.md \u2502 index.md mkdocs.yml \u662fmkdocs\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u4e3b\u9898\u7b49\u7b49\u3002 /docs \u6587\u4ef6\u5939\u5185\u653e\u6587\u7ae0\u5185\u5bb9\u7684markdown\u6587\u4ef6\u3002 main.yml \u914d\u7f6egithub\u81ea\u52a8\u53d1\u5e03\u811a\u672c\u3002\u6700\u7b80\u5355\u7684\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a name : ci on : push : branches : - master #- main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force Note branches \u7684\u8bbe\u7f6e\uff0c\u56e0\u4e3agithub\u5c06\u9ed8\u8ba4\u5206\u652f\u540d\u6539\u4e3a\u4e86main,\u8bf7\u6ce8\u610f\u67e5\u770b\u4f60\u7684github\u9879\u76ee\u9ed8\u8ba4\u5206\u652f\u540d\u79f0\u662f master \u8fd8\u662f main.","title":"\u672c\u5730\u914d\u7f6e"},{"location":"ESP32/mkdoc%20github/#github","text":"\u9996\u5148\u5728Github\u4e0a\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u9879\u76ee\u540d\u79f0\u4e3a\u4f60\u5728github\u7684\u7528\u6237\u540d \uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u901a\u8fc7 .github.io/ \u6253\u5f00\u7f51\u9875\u4e86\u3002 \u5f53\u7136\u5982\u679c\u9879\u76ee\u540d\u79f0\u4f7f\u7528\u7684\u662f\u5176\u4ed6\u540d\u79f0\uff0c\u5219\u8bbf\u95ee\u5730\u5740\u662f .github.io/ \u5173\u4e8egithub page\u529f\u80fd\u7684\u8be6\u7ec6\u4f7f\u7528\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 \u5c06\u672c\u5730\u9879\u76eepush\u5230\u8fdc\u7a0b\u540e\u5c06\u4f1a\u81ea\u52a8\u6267\u884cmkdocs\u90e8\u7f72\u811a\u672c\u3002\u6253\u5f00\u7f51\u9875\u5c31\u53ef\u4ee5\u770b\u5230\u66f4\u65b0\u4e86\u3002","title":"Github\u914d\u7f6e"},{"location":"ESP32/rasp_pi_installation/","text":"+++ date = \"2017-05-27\" description = \"\u6811\u8393\u6d3e\u5b89\u88c5\" title = \"\u6811\u8393\u6d3e\u5b89\u88c5\" +++ 1. Image\u4e0b\u8f7d \u5b98\u65b9\u4e0b\u8f7d\uff1a https://www.raspberrypi.org/downloads/raspbian/ \u56e0\u4e3a\u6587\u4ef6\u8f83\u5927\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d.zip\u6587\u4ef6\u53ef\u80fd\u4f1a\u4e2d\u65ad\uff0c\u6587\u4ef6\u4e0d\u5b8c\u6574\u7b49\u95ee\u9898\u3002\u4e0b\u8f7d\u5b8c\u6210\u540e\u63a8\u8350\u4f7f\u7528fciv\u5de5\u5177\u68c0\u67e5\u6587\u4ef6\u3002 fciv xxx.zip -sha1 \u6821\u9a8c\u6587\u4ef6\u7684 SHA-1\u548c\u5b98\u65b9\u7f51\u7ad9\u4e0a\u7ed9\u51fa\u7684\u662f\u5426\u4e00\u81f4\u3002 2. Image\u5237\u5165SD\u5361 \u5b98\u65b9\u5efa\u8bae\u4f7f\u7528Etcher (https://etcher.io/) \u5237\u5165\uff0c\u64cd\u4f5c\u7b80\u5355 SD\u5361\u63d2\u5165\u7535\u8111\uff0c\u542f\u52a8Etcher\uff0c\u754c\u9762\u5982\u4e0b\u3002\u9009\u62e9\u521a\u624d\u4e0b\u8f7d\u7684.zip\u6587\u4ef6\uff0c\u9009\u62e9SD\u5361\uff0cFlash! \u5199\u5165\u540e\u8fd8\u4f1a\u9a8c\u8bc1\uff0c\u5927\u6982\u9700\u898115\u5206\u949f\u7684\u6837\u5b50\u3002 \u9810\u8a2d\u5e33\u865f\u662fpi\uff0c\u5bc6\u78bc\u662fraspberry \u5f00\u673a\u8bbe\u7f6e \u5c06SD\u5361\u63d2\u5165\u6811\u8393\u6d3e\uff0c\u63a5\u901a\u7535\u6e90\u3002 \u8fde\u63a5wifi \u5f00\u542fSSH\u548cVNC\u670d\u52a1 Perference -- > Raspberry Pi Configuration -- > Interface \u8f93\u5165ifconfig\u83b7\u53d6\u6811\u8393\u6d3e\u7684IP\u5730\u5740\u3002 \u53ef\u4ee5\u4f7f\u7528SSH\u7ec8\u7aefPutty\u8bbf\u95ee\u6811\u8393\u6d3e\uff0c\u9ed8\u8ba4\u8d26\u53f7\u5bc6\u7801\u662fpi/raspberry \u4e5f\u53ef\u4ee5\u4f7f\u7528RealVNC Viewer \u4ecePC\u4e0a\u8bbf\u95eeRPi\u4e86\u3002 \u5b89\u88c5MQTT Client sudo apt-get install mosquitto-clients","title":"Rasp pi installation"},{"location":"ESP32/rasp_pi_installation/#1-image","text":"\u5b98\u65b9\u4e0b\u8f7d\uff1a https://www.raspberrypi.org/downloads/raspbian/ \u56e0\u4e3a\u6587\u4ef6\u8f83\u5927\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d.zip\u6587\u4ef6\u53ef\u80fd\u4f1a\u4e2d\u65ad\uff0c\u6587\u4ef6\u4e0d\u5b8c\u6574\u7b49\u95ee\u9898\u3002\u4e0b\u8f7d\u5b8c\u6210\u540e\u63a8\u8350\u4f7f\u7528fciv\u5de5\u5177\u68c0\u67e5\u6587\u4ef6\u3002 fciv xxx.zip -sha1 \u6821\u9a8c\u6587\u4ef6\u7684 SHA-1\u548c\u5b98\u65b9\u7f51\u7ad9\u4e0a\u7ed9\u51fa\u7684\u662f\u5426\u4e00\u81f4\u3002","title":"1. Image\u4e0b\u8f7d"},{"location":"ESP32/rasp_pi_installation/#2-imagesd","text":"\u5b98\u65b9\u5efa\u8bae\u4f7f\u7528Etcher (https://etcher.io/) \u5237\u5165\uff0c\u64cd\u4f5c\u7b80\u5355 SD\u5361\u63d2\u5165\u7535\u8111\uff0c\u542f\u52a8Etcher\uff0c\u754c\u9762\u5982\u4e0b\u3002\u9009\u62e9\u521a\u624d\u4e0b\u8f7d\u7684.zip\u6587\u4ef6\uff0c\u9009\u62e9SD\u5361\uff0cFlash! \u5199\u5165\u540e\u8fd8\u4f1a\u9a8c\u8bc1\uff0c\u5927\u6982\u9700\u898115\u5206\u949f\u7684\u6837\u5b50\u3002 \u9810\u8a2d\u5e33\u865f\u662fpi\uff0c\u5bc6\u78bc\u662fraspberry","title":"2. Image\u5237\u5165SD\u5361"},{"location":"ESP32/rasp_pi_installation/#_1","text":"\u5c06SD\u5361\u63d2\u5165\u6811\u8393\u6d3e\uff0c\u63a5\u901a\u7535\u6e90\u3002","title":"\u5f00\u673a\u8bbe\u7f6e"},{"location":"ESP32/rasp_pi_installation/#wifi","text":"","title":"\u8fde\u63a5wifi"},{"location":"ESP32/rasp_pi_installation/#sshvnc","text":"Perference -- > Raspberry Pi Configuration -- > Interface \u8f93\u5165ifconfig\u83b7\u53d6\u6811\u8393\u6d3e\u7684IP\u5730\u5740\u3002 \u53ef\u4ee5\u4f7f\u7528SSH\u7ec8\u7aefPutty\u8bbf\u95ee\u6811\u8393\u6d3e\uff0c\u9ed8\u8ba4\u8d26\u53f7\u5bc6\u7801\u662fpi/raspberry \u4e5f\u53ef\u4ee5\u4f7f\u7528RealVNC Viewer \u4ecePC\u4e0a\u8bbf\u95eeRPi\u4e86\u3002","title":"\u5f00\u542fSSH\u548cVNC\u670d\u52a1"},{"location":"ESP32/rasp_pi_installation/#mqtt-client","text":"sudo apt-get install mosquitto-clients","title":"\u5b89\u88c5MQTT Client"},{"location":"ESP32/shadowsocks_pi/","text":"\u5728\u6811\u8393\u6d3e\u4e0a\u5b89\u88c5 shadowsocks \u5ba2\u6237\u7aef \u73b0\u5728\u6765\u5b89\u88c5\u5ba2\u6237\u7aef\u5230\u672c\u5730\u670d\u52a1\u5668\uff0c\u8fd9\u6837\u7684\u8bdd\u53ea\u8981\u672c\u5730\u670d\u52a1\u5668\u5f00\u673a\u5c31\u53ef\u4ee5\u7ed9\u5168\u90e8\u7684\u672c\u5730\u673a\u5668\u4ee3\u7406\u4e0a\u7f51\u4e86\u3002\u800c\u4e0d\u5fc5\u6bcf\u4e2a\u672c\u5730\u673a\u5668\u90fd\u5b89\u88c5\u5ba2\u6237\u7aef\u3002 \u5b89\u88c5 Shadowsocks pip install shadowsocks \u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 sudo nano /etc/shadowsocks.json \u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u3002 { \"server\" : \"SS\u670d\u52a1\u5668ip\u5730\u5740\" , \"server_port\" : 443 , \"local_address\" : \"192.168.4.13\" , \"local_port\" : 1080 , \"password\" : \"your-passwd\" , \"timeout\" : 300 , \"method\" : \"aes-256-cfb\" , \"fast_open\" : false , \"workers\" : 10 } \u914d\u7f6e\u6587\u4ef6\u8bf4\u660e SS\u670d\u52a1\u5668ip\u5730\u5740\uff0c\u8bf7\u586b\u4f60\u7684\u670d\u52a1\u5668 IP \u5730\u5740\u3002\u4e0d\u786e\u5b9a\u7684\u8bdd\uff0c\u53bb\u670d\u52a1\u5668\u4e0a\u67e5\u770b\u3002 \"server_port\"\uff0c\u8bf7\u586b\u5199\u4f60\u7684 SS\u670d\u52a1 \u7aef\u53e3\u3002\u4e0d\u786e\u5b9a\u7684\u8bdd\uff0c\u53bb\u670d\u52a1\u5668\u4e0a\u770b\u4f60\u7684SS\u914d\u7f6e\u3002 \"local_address\":\"192.168.4.13\",\u8fd9\u4e2a\u662f\u6211\u6811\u8393\u6d3e\u5728\u672c\u5730\u7684 IP \u5730\u5740\uff0c\u4f9b\u7ed9\u672c\u5730\u673a\u5668\u4f7f\u7528 \"local_port\":1080,\u662f\u6211\u4f9b\u7ed9\u672c\u5730\u673a\u5668\u4f7f\u7528\u7684\u7aef\u53e3 \"password\":\"your-passwd\",\u586b\u5199\u670d\u52a1\u5bc6\u7801\u3002\u786e\u4fdd\u548c\u670d\u52a1\u5668\u4e0a\u5199\u7684\u4e00\u6837\u3002 \"timeout\":300,\u4ee5\u4e0b\u5168\u90e8\u548c\u8fdc\u7a0b\u670d\u52a1\u5668\u4fdd\u6301\u4e00\u81f4 \"method\":\"aes-256-cfb\", \"fast_open\":false, \"workers\":10 \u6dfb\u52a0\u5230\u5f00\u673a\u81ea\u542f\u52a8 sudo nano /etc/rc.local \u5728 exit 0 \u4e4b\u524d\u5199\u5165\u8fd9\u4e00\u884c /usr/local/bin/sslocal -c /etc/shadowsocks.json -d start \u91cd\u542f\u6811\u8393\u6d3e sudo reboot \u5728\u4efb\u4e00\u548c\u6811\u8393\u6d3e \u540c\u5c40\u57df\u7f51\u5185\u7684\u672c\u5730\u673a\u5668 \u5982\u8fd9\u4e2a IP \u7684\u673a\u5668\u4e0a\uff1a192.168.4.33 \u6253\u5f00 Firefox \u6d4f\u89c8\u5668\uff0c\u5728\u5730\u5740\u680f\u8f93\u5165 about:preferences#advanced \u9009 \u7f51\u7edc \u8fde\u63a5 \u914d\u7f6e Firefox \u5982\u4f55\u8fde\u63a5\u81f3\u56fd\u9645\u4e92\u8054\u7f51\uff0c \u8bbe\u7f6e(E).. \u624b\u52a8\u914d\u7f6e\u4ee3\u7406(M) \u9009\u62e9 SOCKS\u4e3b\u673a \u5730\u5740\u4e3a 192.168.4.13 \u7aef\u53e3 1080 \u7248\u672c\u9009 SOCKSv5 \u4fdd\u5b58 \u53c2\u8003 http://wiki.guoruei.org/computer/software/linux/install-shadowsocks-on-ubuntu-vps https://story.tonylee.name/2016/03/31/yong-shu-mei-pai-da-zao-wu-xian-zhong-ji-ke-xue-shang-wang-lu-you-qi/","title":"\u5728\u6811\u8393\u6d3e\u4e0a\u5b89\u88c5 shadowsocks \u5ba2\u6237\u7aef"},{"location":"ESP32/shadowsocks_pi/#shadowsocks","text":"\u73b0\u5728\u6765\u5b89\u88c5\u5ba2\u6237\u7aef\u5230\u672c\u5730\u670d\u52a1\u5668\uff0c\u8fd9\u6837\u7684\u8bdd\u53ea\u8981\u672c\u5730\u670d\u52a1\u5668\u5f00\u673a\u5c31\u53ef\u4ee5\u7ed9\u5168\u90e8\u7684\u672c\u5730\u673a\u5668\u4ee3\u7406\u4e0a\u7f51\u4e86\u3002\u800c\u4e0d\u5fc5\u6bcf\u4e2a\u672c\u5730\u673a\u5668\u90fd\u5b89\u88c5\u5ba2\u6237\u7aef\u3002","title":"\u5728\u6811\u8393\u6d3e\u4e0a\u5b89\u88c5 shadowsocks \u5ba2\u6237\u7aef"},{"location":"ESP32/shadowsocks_pi/#shadowsocks_1","text":"pip install shadowsocks","title":"\u5b89\u88c5 Shadowsocks"},{"location":"ESP32/shadowsocks_pi/#_1","text":"sudo nano /etc/shadowsocks.json \u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u3002 { \"server\" : \"SS\u670d\u52a1\u5668ip\u5730\u5740\" , \"server_port\" : 443 , \"local_address\" : \"192.168.4.13\" , \"local_port\" : 1080 , \"password\" : \"your-passwd\" , \"timeout\" : 300 , \"method\" : \"aes-256-cfb\" , \"fast_open\" : false , \"workers\" : 10 }","title":"\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6"},{"location":"ESP32/shadowsocks_pi/#_2","text":"SS\u670d\u52a1\u5668ip\u5730\u5740\uff0c\u8bf7\u586b\u4f60\u7684\u670d\u52a1\u5668 IP \u5730\u5740\u3002\u4e0d\u786e\u5b9a\u7684\u8bdd\uff0c\u53bb\u670d\u52a1\u5668\u4e0a\u67e5\u770b\u3002 \"server_port\"\uff0c\u8bf7\u586b\u5199\u4f60\u7684 SS\u670d\u52a1 \u7aef\u53e3\u3002\u4e0d\u786e\u5b9a\u7684\u8bdd\uff0c\u53bb\u670d\u52a1\u5668\u4e0a\u770b\u4f60\u7684SS\u914d\u7f6e\u3002 \"local_address\":\"192.168.4.13\",\u8fd9\u4e2a\u662f\u6211\u6811\u8393\u6d3e\u5728\u672c\u5730\u7684 IP \u5730\u5740\uff0c\u4f9b\u7ed9\u672c\u5730\u673a\u5668\u4f7f\u7528 \"local_port\":1080,\u662f\u6211\u4f9b\u7ed9\u672c\u5730\u673a\u5668\u4f7f\u7528\u7684\u7aef\u53e3 \"password\":\"your-passwd\",\u586b\u5199\u670d\u52a1\u5bc6\u7801\u3002\u786e\u4fdd\u548c\u670d\u52a1\u5668\u4e0a\u5199\u7684\u4e00\u6837\u3002 \"timeout\":300,\u4ee5\u4e0b\u5168\u90e8\u548c\u8fdc\u7a0b\u670d\u52a1\u5668\u4fdd\u6301\u4e00\u81f4 \"method\":\"aes-256-cfb\", \"fast_open\":false, \"workers\":10","title":"\u914d\u7f6e\u6587\u4ef6\u8bf4\u660e"},{"location":"ESP32/shadowsocks_pi/#_3","text":"sudo nano /etc/rc.local \u5728 exit 0 \u4e4b\u524d\u5199\u5165\u8fd9\u4e00\u884c /usr/local/bin/sslocal -c /etc/shadowsocks.json -d start","title":"\u6dfb\u52a0\u5230\u5f00\u673a\u81ea\u542f\u52a8"},{"location":"ESP32/shadowsocks_pi/#_4","text":"sudo reboot \u5728\u4efb\u4e00\u548c\u6811\u8393\u6d3e \u540c\u5c40\u57df\u7f51\u5185\u7684\u672c\u5730\u673a\u5668 \u5982\u8fd9\u4e2a IP \u7684\u673a\u5668\u4e0a\uff1a192.168.4.33 \u6253\u5f00 Firefox \u6d4f\u89c8\u5668\uff0c\u5728\u5730\u5740\u680f\u8f93\u5165 about:preferences#advanced \u9009 \u7f51\u7edc \u8fde\u63a5 \u914d\u7f6e Firefox \u5982\u4f55\u8fde\u63a5\u81f3\u56fd\u9645\u4e92\u8054\u7f51\uff0c \u8bbe\u7f6e(E).. \u624b\u52a8\u914d\u7f6e\u4ee3\u7406(M) \u9009\u62e9 SOCKS\u4e3b\u673a \u5730\u5740\u4e3a 192.168.4.13 \u7aef\u53e3 1080 \u7248\u672c\u9009 SOCKSv5 \u4fdd\u5b58","title":"\u91cd\u542f\u6811\u8393\u6d3e"},{"location":"ESP32/shadowsocks_pi/#_5","text":"http://wiki.guoruei.org/computer/software/linux/install-shadowsocks-on-ubuntu-vps https://story.tonylee.name/2016/03/31/yong-shu-mei-pai-da-zao-wu-xian-zhong-ji-ke-xue-shang-wang-lu-you-qi/","title":"\u53c2\u8003"},{"location":"ESP32/wemos/","text":"+++ description = \"WeMos\u5f00\u53d1\u677f\u7684\u4f7f\u7528\" title = \"WeMos\u5f00\u53d1\u677f\u7684\u4f7f\u7528\" +++ WeMos D1 Drivers & Software Environment Install the latest Ch340G drivers if you\u2019re on Windows or Mac. Both platform\u2019s drivers are available on that link. If you\u2019re running Linux, you\u2019re in luck \u2013 no drivers required. I\u2019m going to presume you already have at least v 1.6.5 of the Arduino developer environment set up on your PC \u2013 if not, visit the Arduino Software page, download, install, then come back here. Once you\u2019re ready, start Arduino and: Select File , then Preferences In the Additional Boards Manager URLs text box, enter http://arduino.esp8266.com/stable/package_esp8266com_index.json and hit OK Select Tools , mouse over your currently selected board, and choose Boards Manager from the popup menu In the Boards Manager window that appears, enter ESP in the Filter your search\u2026 box, click on the esp8266 by ESP8266 Community entry that appears, and then select Install Wait for a while, while the Board Definitions and Tools are downloaded \u2013 and note, you can use this same download to support a whole heap of other boards, including the WeMos D1 mini, the Adafruit HUZZAH ESP8266, and the NodeMCU ESP-12E dev board that I\u2019m so, so fond of. Once complete, select Tools again, and choose the WeMos D1 from the Boards dropdown. Voila, you\u2019re all set! Well, you might like to get some sample code to play with of course. Here\u2019s how you can do that: Download the Samples zip file from GitHub Open the zip file, and move the D1_mini_Examples-master to your default Sketch directory (if you\u2019re not sure where that is, open File / Preferences and it\u2019ll tell you there) Rename the D1_mini_Examples-master folder to D1_mini_Examples Restart the Arduino IDE You\u2019ll find all the example code under File / Examples under the Examples from Custom Libraries section Try some of the HelloServer sketch example \u2013 load it, enter your SSID name and password in place of the dots here: const char ssid = \"........\"; const char password = \"........\"; then verify and upload it. Open your serial monitor to see the IP address that your board has been assigned, and connect to it with your web browser. WeMos D1 Documentation You\u2019ll absolutely want to review the ESP8266 Arduino Core documentation, a great resource covering Digital and Analog IO, timing and delays, the Serial object, use of WiFi, some ESP8266 specific APIs, and much more. Thre are many differences here if you\u2019re coming from a NodeMCU Lua-based background, somewhat more familiar ground if your coming at this with Arduino experience, but either way a must-read. Other libraries include servo support (up to 24 supported on any available output pin), DNS, SPI, SSDP, and I2C. Plenty to keep you busy. There\u2019s a useful section linking on to other APIs not included in the standard setup \u2013 some particularly interesting examples include Blynk , the widget-based gui builder with Android support that let\u2019s you control devices over the Internet, and Adafruit\u2019s NeoPixel library.","title":"Wemos"},{"location":"ESP32/wemos/#wemos-d1-drivers-software-environment","text":"Install the latest Ch340G drivers if you\u2019re on Windows or Mac. Both platform\u2019s drivers are available on that link. If you\u2019re running Linux, you\u2019re in luck \u2013 no drivers required. I\u2019m going to presume you already have at least v 1.6.5 of the Arduino developer environment set up on your PC \u2013 if not, visit the Arduino Software page, download, install, then come back here. Once you\u2019re ready, start Arduino and: Select File , then Preferences In the Additional Boards Manager URLs text box, enter http://arduino.esp8266.com/stable/package_esp8266com_index.json and hit OK Select Tools , mouse over your currently selected board, and choose Boards Manager from the popup menu In the Boards Manager window that appears, enter ESP in the Filter your search\u2026 box, click on the esp8266 by ESP8266 Community entry that appears, and then select Install Wait for a while, while the Board Definitions and Tools are downloaded \u2013 and note, you can use this same download to support a whole heap of other boards, including the WeMos D1 mini, the Adafruit HUZZAH ESP8266, and the NodeMCU ESP-12E dev board that I\u2019m so, so fond of. Once complete, select Tools again, and choose the WeMos D1 from the Boards dropdown. Voila, you\u2019re all set! Well, you might like to get some sample code to play with of course. Here\u2019s how you can do that: Download the Samples zip file from GitHub Open the zip file, and move the D1_mini_Examples-master to your default Sketch directory (if you\u2019re not sure where that is, open File / Preferences and it\u2019ll tell you there) Rename the D1_mini_Examples-master folder to D1_mini_Examples Restart the Arduino IDE You\u2019ll find all the example code under File / Examples under the Examples from Custom Libraries section Try some of the HelloServer sketch example \u2013 load it, enter your SSID name and password in place of the dots here: const char ssid = \"........\"; const char password = \"........\"; then verify and upload it. Open your serial monitor to see the IP address that your board has been assigned, and connect to it with your web browser.","title":"WeMos D1 Drivers &amp; Software Environment"},{"location":"ESP32/wemos/#wemos-d1-documentation","text":"You\u2019ll absolutely want to review the ESP8266 Arduino Core documentation, a great resource covering Digital and Analog IO, timing and delays, the Serial object, use of WiFi, some ESP8266 specific APIs, and much more. Thre are many differences here if you\u2019re coming from a NodeMCU Lua-based background, somewhat more familiar ground if your coming at this with Arduino experience, but either way a must-read. Other libraries include servo support (up to 24 supported on any available output pin), DNS, SPI, SSDP, and I2C. Plenty to keep you busy. There\u2019s a useful section linking on to other APIs not included in the standard setup \u2013 some particularly interesting examples include Blynk , the widget-based gui builder with Android support that let\u2019s you control devices over the Internet, and Adafruit\u2019s NeoPixel library.","title":"WeMos D1 Documentation"},{"location":"ESP32/%E4%BF%A1%E9%81%93%E7%BC%96%E7%A0%81%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/","text":"\u6765\u6e90\uff1a\u5c04\u9891\u767e\u82b1\u6f6d \u4fe1\u9053\u7f16\u7801\uff0c\u4e5f\u53eb\u5dee\u9519\u63a7\u5236\u7f16\u7801\uff0c\u662f\u6240\u6709\u73b0\u4ee3\u901a\u4fe1\u7cfb\u7edf\u7684\u57fa\u77f3\u3002\u51e0\u5341\u5e74\u6765\uff0c\u4fe1\u9053\u7f16\u7801\u6280\u672f\u4e0d\u65ad\u903c\u8fd1\u9999\u519c\u6781\u9650\uff0c\u6ce2\u6f9c\u58ee\u9614\u822c\u63a8\u52a8\u7740\u4eba\u7c7b\u901a\u4fe1\u8fc8\u8fc7\u4e00\u4e2a\u53c8\u4e00\u4e2a\u9876\u5cf0\u30025G\u5230\u6765\uff0c\u6211\u4eec\u8fd8\u80fd\u7a81\u7834\u81ea\u6211\uff0c\u518d\u521b\u901a\u4fe1\u5947\u8ff9\u5417\uff1f\u6240\u8c13\u4fe1\u9053\u7f16\u7801\uff0c\u5c31\u662f\u5728\u53d1\u9001\u7aef\u5bf9\u539f\u6570\u636e\u6dfb\u52a0\u5197\u4f59\u4fe1\u606f\uff0c\u8fd9\u4e9b\u5197\u4f59\u4fe1\u606f\u662f\u548c\u539f\u6570\u636e\u76f8\u5173\u7684\uff0c\u518d\u5728\u63a5\u6536\u7aef\u6839\u636e\u8fd9\u79cd\u76f8\u5173\u6027\u6765\u68c0\u6d4b\u548c\u7ea0\u6b63\u4f20\u8f93\u8fc7\u7a0b\u4ea7\u751f\u7684\u5dee\u9519\u3002\u8fd9\u4e9b\u52a0\u5165\u7684\u5197\u4f59\u4fe1\u606f\u5c31\u662f\u7ea0\u9519\u7801\uff0c\u7528\u5b83\u6765\u5bf9\u6297\u4f20\u8f93\u8fc7\u7a0b\u7684\u5e72\u6270\u3002 1948\u5e74\uff0c\u73b0\u4ee3\u4fe1\u606f\u8bba\u7684\u5960\u57fa\u4eba\u9999\u519c\u53d1\u8868\u4e86\u300a\u901a\u4fe1\u7684\u6570\u5b66\u7406\u8bba\u300b\uff0c\u6807\u5fd7\u7740\u4fe1\u606f\u4e0e\u7f16\u7801\u7406\u8bba\u8fd9\u4e00\u5b66\u79d1\u7684\u521b\u7acb\u3002 \u6839\u636e\u9999\u519c\u5b9a\u7406\uff0c\u8981\u60f3\u5728\u4e00\u4e2a\u5e26\u5bbd\u786e\u5b9a\u800c\u5b58\u5728\u566a\u58f0\u7684\u4fe1\u9053\u91cc\u53ef\u9760\u5730\u4f20\u9001\u4fe1\u53f7\uff0c\u65e0\u975e\u6709\u4e24\u79cd\u9014\u5f84\uff1a\u52a0\u5927\u4fe1\u566a\u6bd4\u6216\u5728\u4fe1\u53f7\u7f16\u7801\u4e2d\u52a0\u5165\u9644\u52a0\u7684\u7ea0\u9519\u7801\u3002 \u8fd9\u5c31\u50cf\u5728\u5608\u6742\u7684\u9152\u5427\u91cc\uff0c\u9152\u559d\u5b8c\u4e86\uff0c\u4f60\u8fd8\u60f3\u6765\u4e00\u6253\uff0c\u8981\u60f3\u8ba9\u670d\u52a1\u5458\u542c\u5230\uff0c\u4f60\u5c31\u5f97\u63d0\u9ad8\u55d3\u95e8\uff08\u4fe1\u566a\u6bd4\uff09\uff0c\u53cd\u590d\u5406\u559d\uff08\u9644\u52a0\u7684\u5197\u4f59\u4fe1\u53f7\uff09\u3002\u4f46\u662f\uff0c\u9999\u519c\u867d\u7136\u6307\u51fa\u4e86\u53ef\u4ee5\u901a\u8fc7\u5dee\u9519\u63a7\u5236\u7801\u5728\u4fe1\u606f\u4f20\u8f93\u901f\u7387\u4e0d\u5927\u4e8e\u4fe1\u9053\u5bb9\u91cf\u7684\u524d\u63d0\u4e0b\u5b9e\u73b0\u53ef\u9760\u901a\u4fe1\uff0c\u4f46\u5374\u6ca1\u6709\u7ed9\u51fa\u5177\u4f53\u5b9e\u73b0\u5dee\u9519\u63a7\u5236\u7f16\u7801\u7684\u65b9\u6cd5\u3002 \u4eba\u7c7b\u5728\u4fe1\u9053\u7f16\u7801\u4e0a\u7684\u7b2c\u4e00\u6b21\u7a81\u7834\u53d1\u751f\u57281949\u5e74\u3002R.Hamming\u548cM.Golay\u63d0\u51fa\u4e86\u7b2c\u4e00\u4e2a\u5b9e\u7528\u7684\u5dee\u9519\u63a7\u5236\u7f16\u7801\u65b9\u6848\u3002\u53d7\u96c7\u4e8e\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u7684\u6570\u5b66\u5bb6R.Hamming\u5c06\u8f93\u5165\u6570\u636e\u6bcf4\u4e2a\u6bd4\u7279\u5206\u4e3a\u4e00\u7ec4\uff0c\u7136\u540e\u901a\u8fc7\u8ba1\u7b97\u8fd9\u4e9b\u4fe1\u606f\u6bd4\u7279\u7684\u7ebf\u6027\u7ec4\u5408\u6765\u5f97\u52303\u4e2a\u6821\u9a8c\u6bd4\u7279\uff0c\u7136\u540e\u5c06\u5f97\u5230\u76847\u4e2a\u6bd4\u7279\u9001\u5165\u8ba1\u7b97\u673a\u3002 \u8ba1\u7b97\u673a\u6309\u7167\u4e00\u5b9a\u7684\u539f\u5219\u8bfb\u53d6\u8fd9\u4e9b\u7801\u5b57\uff0c\u901a\u8fc7\u91c7\u7528\u4e00\u5b9a\u7684\u7b97\u6cd5\uff0c\u4e0d\u4ec5\u80fd\u591f\u68c0\u6d4b\u5230\u662f\u5426\u6709\u9519\u8bef\u53d1\u751f\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u627e\u5230\u53d1\u751f\u5355\u4e2a\u6bd4\u7279\u9519\u8bef\u7684\u6bd4\u7279\u7684\u4f4d\u7f6e\uff0c\u8be5\u7801\u53ef\u4ee5\u7ea0\u6b637\u4e2a\u6bd4\u7279\u4e2d\u6240\u53d1\u751f\u7684\u5355\u4e2a\u6bd4\u7279\u9519\u8bef\u3002\u8fd9\u4e2a\u7f16\u7801\u65b9\u6cd5\u5c31\u662f \u5206\u7ec4\u7801 \u7684\u57fa\u672c\u601d\u60f3\uff0cHamming\u63d0\u51fa\u7684\u7f16\u7801\u65b9\u6848\u540e\u6765\u88ab\u547d\u540d\u4e3a \u6c49\u660e\u7801 \u3002\u6c49\u660e\u7801\u7684\u7f16\u7801\u6548\u7387\u6bd4\u8f83\u4f4e\uff0c\u5b83\u6bcf4\u4e2a\u6bd4\u7279\u7f16\u7801\u5c31\u9700\u89813\u4e2a\u6bd4\u7279\u7684\u5197\u4f59\u6821\u9a8c\u6bd4\u7279\u3002\u53e6\u5916\uff0c\u5728\u4e00\u4e2a\u7801\u7ec4\u4e2d\u53ea\u80fd\u7ea0\u6b63\u5355\u4e2a\u7684\u6bd4\u7279\u9519\u8bef\u3002M.Golay\u5148\u751f\u7814\u7a76\u4e86\u6c49\u660e\u7801\u7684\u7f3a\u70b9\uff0c\u63d0\u51fa\u4e86 Golay\u7801 \u3002Golay\u7801\u5206\u4e3a\u4e8c\u5143Golay\u7801\u548c\u4e09\u5143Golay\u7801\uff0c\u524d\u8005\u5c06\u4fe1\u606f\u6bd4\u7279\u6bcf12\u4e2a\u5206\u4e3a\u4e00\u7ec4\uff0c\u7f16\u7801\u751f\u621011\u4e2a\u5197\u4f59\u6821\u9a8c\u6bd4\u7279\uff0c\u76f8\u5e94\u7684\u8bd1\u7801\u7b97\u6cd5\u53ef\u4ee5\u7ea0\u6b633\u4e2a\u9519\u8bef\uff1b\u540e\u8005\u7684\u64cd\u4f5c\u5bf9\u8c61\u662f\u4e09\u5143\u800c\u975e\u4e8c\u5143\u6570\u5b57\uff0c\u4e09\u5143Golay\u7801\u5c06\u6bcf6\u4e2a\u4e09\u5143\u7b26\u53f7\u5206\u4e3a\u4e00\u7ec4\uff0c\u7f16\u7801\u751f\u62105\u4e2a\u5197\u4f59\u6821\u9a8c\u4e09\u5143\u7b26\u53f7\uff0c\u8fd9\u6837\u753111\u4e2a\u4e09\u5143\u7b26\u53f7\u7ec4\u6210\u7684\u4e09\u5143Golay\u7801\u7801\u5b57\u53ef\u4ee5\u7ea0\u6b632\u4e2a\u9519\u8bef\u3002Golay\u7801\u66fe\u5e94\u7528\u4e8eNASA\u7684\u65c5\u884c\u80051\u53f7(Voyager 1)\uff0c\u5c06\u6210\u767e\u5f20\u6728\u661f\u548c\u571f\u661f\u7684\u5f69\u8272\u7167\u7247\u5e26\u56de\u5730\u7403\u3002 \u5728\u63a5\u4e0b\u6765\u768410\u5e74\u91cc\uff0c\u65e0\u7ebf\u901a\u4fe1\u6027\u80fd\u7b80\u76f4\u662f\u8df3\u8dc3\u5f0f\u7684\u53d1\u5c55\uff0c\u8fd9\u4e3b\u8981\u5f52\u529f\u4e8e\u5377\u79ef\u7801\u7684\u53d1\u660e\u3002 \u5377\u79ef\u7801 \u662fElias\u57281955\u5e74\u63d0\u51fa\u7684\u3002 \u5377\u79ef\u7801\u4e0e\u5206\u7ec4\u7801\u7684\u4e0d\u540c\u5728\u4e8e\uff1a\u5b83\u5145\u5206\u5229\u7528\u4e86\u5404\u4e2a\u4fe1\u606f\u5757\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002\u901a\u5e38\u5377\u79ef\u7801\u8bb0\u4e3a(n,k,N)\u7801\u3002\u5377\u79ef\u7801\u7684\u7f16\u7801\u8fc7\u7a0b\u662f\u8fde\u7eed\u8fdb\u884c\u7684\uff0c\u4f9d\u6b21\u8fde\u7eed\u5c06\u6bcfk\u4e2a\u4fe1\u606f\u5143\u8f93\u5165\u7f16\u7801\u5668\uff0c\u5f97\u5230n\u4e2a\u7801\u5143\uff0c\u5f97\u5230\u7684\u7801\u5143\u4e2d\u7684\u68c0\u9a8c\u5143\u4e0d\u4ec5\u4e0e\u672c\u7801\u7684\u4fe1\u606f\u5143\u6709\u5173\uff0c\u8fd8\u4e0e\u4ee5\u524d\u65f6\u523b\u8f93\u5165\u5230\u7f16\u7801\u5668\u7684\u4fe1\u606f\u5143(\u53cd\u6620\u5728\u7f16\u7801\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u4e0a)\u6709\u5173\u3002\u540c\u6837\uff0c\u5728\u5377\u79ef\u7801\u7684\u8bd1\u7801\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4ec5\u8981\u4ece\u672c\u7801\u4e2d\u63d0\u53d6\u8bd1\u7801\u4fe1\u606f\uff0c\u8fd8\u8981\u5145\u5206\u5229\u7528\u4ee5\u524d\u548c\u4ee5\u540e\u65f6\u523b\u6536\u5230\u7684\u7801\u7ec4\u3002\u4ece\u8fd9\u4e9b\u7801\u7ec4\u4e2d\u63d0\u53d6\u8bd1\u7801\u76f8\u5173\u4fe1\u606f,\uff0c\u800c\u4e14\u8bd1\u7801\u4e5f\u662f\u53ef\u4ee5\u8fde\u7eed\u8fdb\u884c\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5377\u79ef\u7801\u7684\u8bd1\u7801\u5ef6\u65f6\u76f8\u5bf9\u6bd4\u8f83\u5c0f\u3002\u901a\u5e38\uff0c\u5728\u7cfb\u7edf\u6761\u4ef6\u76f8\u540c\u7684\u6761\u4ef6\u4e0b\uff0c\u5728\u8fbe\u5230\u76f8\u540c\u8bd1\u7801\u6027\u80fd\u65f6\uff0c\u5377\u79ef\u7801\u7684\u4fe1\u606f\u5757\u957f\u5ea6\u548c\u7801\u5b57\u957f\u5ea6\u90fd\u8981\u6bd4\u5206\u7ec4\u7801\u7684\u4fe1\u606f\u5757\u957f\u5ea6\u548c\u7801\u5b57\u957f\u5ea6\u5c0f\uff0c\u76f8\u5e94\u8bd1\u7801\u590d\u6742\u6027\u4e5f\u5c0f\u4e00\u4e9b\u3002 \u5f88\u660e\u663e\uff0c\u5728\u4e0d\u523010\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u901a\u4fe1\u7f16\u7801\u6280\u672f\u7684\u53d1\u5c55\u662f\u98de\u8dc3\u5f0f\u7684\uff0c\u76f4\u5230\u9047\u5230\u4e86\u74f6\u9888\u3002\u6839\u636e\u9999\u519c\u524d\u8f88\u7684\u6307\u793a\uff0c\u8981\u63d0\u9ad8\u4fe1\u53f7\u7f16\u7801\u6548\u7387\u8fbe\u5230\u4fe1\u9053\u5bb9\u91cf\uff0c\u5c31\u8981\u4f7f\u7f16\u7801\u7684\u5206\u6bb5\u5c3d\u53ef\u80fd\u52a0\u957f\u800c\u4e14\u4f7f\u4fe1\u606f\u7684\u7f16\u7801\u5c3d\u53ef\u80fd\u968f\u673a\u3002\u4f46\u662f\uff0c\u8fd9\u5e26\u6765\u7684\u56f0\u96be\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u91cc\u7ecf\u5e38\u78b0\u5230\u7684\u201c\u8ba1\u7b97\u590d\u6742\u6027\u201d\u95ee\u9898\u3002\u8fd8\u597d\uff0c\u8fd9\u4e2a\u4e16\u754c\u6709\u4e00\u4e2a\u795e\u5947\u7684\u6469\u5c14\u5b9a\u5f8b\u3002\u5f97\u76ca\u4e8e\u6469\u5c14\u5b9a\u5f8b\uff0c\u7f16\u7801\u6280\u672f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u8ba1\u7b97\u590d\u6742\u6027\u548c\u529f\u8017\u95ee\u9898\u3002\u800c\u968f\u7740\u6469\u5c14\u5b9a\u5f8b\u800c\u6765\u7684\u662f\uff0c1967\u5e74\uff0cViterbi\u63d0\u51fa\u4e86 Viterbi\u8bd1\u7801\u7b97\u6cd5 \u3002 \u5728Viterbi\u8bd1\u7801\u7b97\u6cd5\u63d0\u51fa\u4e4b\u540e\uff0c\u5377\u79ef\u7801\u5728\u901a\u4fe1\u7cfb\u7edf\u4e2d\u5f97\u5230\u4e86\u6781\u4e3a\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u5982GSM\u3001 IS-95 CDMA\u30013G\u3001\u5546\u4e1a\u536b\u661f\u901a\u4fe1\u7cfb\u7edf\u7b49\u3002\u4f46\u662f\uff0c\u8ba1\u7b97\u590d\u6742\u6027\u4f9d\u7136\u662f\u4e00\u9053\u8fc8\u4e0d\u8fc7\u7684\u5899\u3002\u5c3d\u7ba1\u4eba\u4eec\u540e\u6765\u5728\u5206\u7ec4\u7801\u3001\u5377\u79ef\u7801\u7b49\u57fa\u672c\u7f16\u7801\u65b9\u6cd5\u7684\u57fa\u7840\u4e0a\u63d0\u51fa\u4e86\u8bb8\u591a\u7b80\u5316\u8bd1\u7801\u590d\u6742\u6027\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5747\u56e0\u65e0\u6bd4\u9ad8\u8038\u7684\u8ba1\u7b97\u590d\u6742\u6027\u4e4b\u5899\u963b\u6321\u800c\u53d8\u5f97\u4e0d\u53ef\u903e\u8d8a\u3002\u7f16\u7801\u4e13\u5bb6\u4eec\u82e6\u82e6\u601d\u7d22\uff0c\u8bd5\u56fe\u5728\u53ef\u63a5\u53d7\u7684\u8ba1\u7b97\u590d\u6742\u6027\u6761\u4ef6\u4e0b\u8bbe\u8ba1\u7f16\u7801\u548c\u7b97\u6cd5\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u5176\u589e\u76ca\u4e0e\u9999\u519c\u7406\u8bba\u6781\u9650\u59cb\u7ec8\u90fd\u5b58\u57282~3dB\u7684\u5dee\u8ddd\u3002\u76f4\u52301993\u5e74\uff0c\u5728\u65e5\u5185\u74e6\u53ec\u5f00\u7684 IEEE\u901a\u4fe1\u56fd\u9645\u4f1a\u8bae\u4e0a\uff0c\u4e24\u4f4d\u5f53\u65f6\u540d\u4e0d\u89c1\u7ecf\u4f20\u7684\u6cd5\u56fd\u7535\u673a\u5de5\u7a0b\u5e08C.Berrou\u548cA.Glavieux\u58f0\u79f0\u4ed6\u4eec\u53d1\u660e\u4e86\u4e00\u79cd\u7f16\u7801\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u4fe1\u9053\u7f16\u7801\u6548\u7387\u63a5\u8fd1\u9999\u519c\u6781\u9650\u3002 \u8fd9\u4e00\u6d88\u606f\u592a\u201c\u8f70\u52a8\u201d\u4e86\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6240\u6709\u7684\u4e13\u5bb6\u90fd\u8ba4\u4e3a\u8fd9\u4fe9\u201c\u68d2\u69cc\u201d\u662f\u6765\u6363\u4e71\u7684\u3002\u8fd9\u4e48\u591a\u6570\u5b66\u5bb6\u90fd\u6ca1\u80fd\u7a81\u7834\uff0c\u5c31\u4f60\u8fd9\u4e24\u4e2a\u5c0f\u89d2\u8272\u4e5f\u6562\u5ba3\u79f0\u63a5\u8fd1\u9999\u519c\u6781\u9650\uff1f\u4e0d\u662f\u5b58\u5fc3\u6363\u4e71\u5417\uff1f\u4e00\u5b9a\u662f\u8ba1\u7b97\u4e0a\u51fa\u4e86\u9519\u8bef\u5427\uff1f\u8bb8\u591a\u4e13\u5bb6\u751a\u81f3\u61d2\u5f97\u53bb\u8bfb\u5b8c\u8fd9\u7bc7\u8bba\u6587\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e24\u4f4d\u6cd5\u56fd\u8001\u5144\u7684\u6570\u5b66\u529f\u5e95\u53ef\u80fd\u771f\u7684\u4e0d\u600e\u4e48\u6837\uff0c\u4ed6\u4eec\u6ca1\u6709\u8bd5\u56fe\u4ece\u6570\u5b66\u4e0a\u627e\u7a81\u7834\u53e3\uff0c\u56e0\u6b64\u4ed6\u4eec\u7684\u8bba\u6587\u5728\u4f1a\u4e0a\u88ab\u6000\u7591\u548c\u5ffd\u7565\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002\u4f46\u662f\uff0c\u4e13\u5bb6\u4eec\u5ffd\u7565\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u51ed\u7740\u7535\u673a\u5de5\u7a0b\u5e08\u7684\u7ecf\u9a8c\uff0c\u4ed6\u4eec\u53d1\u73b0\u5728\u7535\u5b50\u5b66\u4e2d\u7ecf\u5e38\u7528\u5230\u7684\u53cd\u9988\u6982\u5ff5\u4f3c\u4e4e\u88ab\u6570\u5b66\u5bb6\u4eec\u5ffd\u7565\u3002\u4e5f\u8bb8\u53cd\u9988\u80fd\u591f\u4f7f\u6211\u4eec\u7ed5\u8fc7\u8ba1\u7b97\u590d\u6742\u6027\u95ee\u9898\uff0c\u4e8e\u662f\u4ed6\u4eec\u5c31\u8bbe\u8ba1\u4e86\u4e00\u5957\u65b0\u7684\u529e\u6cd5\u3002 \u9996\u5148\u4ed6\u4eec\u6448\u5f03\u4e86\u201c\u7eaf\u7cb9\u201d\u7684\u6570\u5b57\u5316\u6982\u5ff5\u3002\u5728\u5178\u578b\u7684\u6570\u5b57\u5316\u65b9\u6cd5\u4e2d\uff0c\u603b\u662f\u5148\u628a\u67d0\u4e00\u7535\u5e73\u8bbe\u5b9a\u4e3a\u9608\u503c\u3002\u4fe1\u53f7\u7535\u5e73\u9ad8\u4e8e\u8fd9\u4e00\u9608\u503c\u5c31\u5224\u51b3\u4e3a\u201c1\u201d\uff0c\u4f4e\u4e8e\u5c31\u5224\u51b3\u4e3a\u201c0\u201d\u3002\u5728Turbo\u7801\u89e3\u7801\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e00\u7279\u5b9a\u6bd4\u7279\u7684\u7535\u5e73\u88ab\u91cf\u5316\u4e3a\u6574\u6570\uff0c\u4f8b\u5982\u4ece-127 \u5230+127\u3002\u5176\u6570\u503c\u5c31\u4f5c\u4e3a\u5224\u51b3\u8be5\u6bd4\u7279\u4e3a\u201c1\u201d\u6216\u201c0\u201d\u7684\u53ef\u7f6e\u4fe1\u5ea6\u7684\u5ea6\u91cf\uff08\u4f8b\u5982-110\u610f\u5473\u8be5\u6bd4\u7279\u975e\u5e38\u975e\u5e38\u53ef\u80fd\u662f\u201c0\u201d\uff0c\u800c+40\u610f\u5473\u8be5\u6bd4\u7279\u4e5f\u8bb8\u662f\u201c1\u201d\u4f46\u628a\u63e1\u4e0d\u5927\uff09\u3002 \u5176\u6b21\uff0c\u4e0e\u5176\u4ed6\u7cfb\u7edf\u4e0d\u540c\uff0cTurbo\u7801\u7cfb\u7edf\u5728\u53d1\u5c04\u7aef\u548c\u63a5\u6536\u7aef\u5206\u522b\u8bbe\u7f6e\u4e24\u4e2a\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u3002\u5176\u4e2d\u4e00\u5bf9\u7f16\u89e3\u7801\u5668\u5bf9\u7279\u5b9a\u7684\u4e00\u6bb5\u6bd4\u7279\u6d41\u8fdb\u884c\u5947\u5076\u6821\u9a8c\u7801\u7684\u52a0\u5165\u548c\u6821\u9a8c\u8ba1\u7b97\uff0c\u53e6\u4e00\u5bf9\u7f16\u89e3\u7801\u5668\u5219\u5728\u540c\u4e00\u6bb5\u7801\u6d41\u7ecf\u8fc7\u4ea4\u7ec7\u6270\u52a8\u540e\u5bf9\u5176\u8fdb\u884c\u4e0a\u8ff0\u540c\u6837\u64cd\u4f5c\u3002 Turbo\u7801\u7f16\u7801\u5668\u662f\u7531\u4e24\u4e2a\u6216\u591a\u4e2a\u53cd\u9988\u7684\u7cfb\u7edf\u5377\u79ef\u7801\u7f16\u7801\u5668\u901a\u8fc7\u4e00\u4e2a\u968f\u673a\u4ea4\u7ec7\u5668\u5e76\u884c\u8fde\u63a5\u800c\u6210\uff0c\u7f16\u7801\u540e\u7684\u6821\u9a8c\u4f4d\u7ecf\u8fc7\u5220\u4f59\u77e9\u9635\uff0c\u4ece\u800c\u4ea7\u751f\u4e0d\u540c\u7801\u7387\u7684\u7801\u5b57\u3002\u7531\u4e8e\u8fd9\u4e24\u6bb5\u7801\u6d41\u5305\u542b\u540c\u6837\u7684\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u4fe1\u9053\u566a\u58f0\uff0c\u89e3\u7801\u7ed3\u679c\u5e94\u8be5\u4e00\u81f4\u3002\u4f46\u5728\u566a\u58f0\u5e72\u6270\u4e0b\u4e24\u7ec4\u7ed3\u679c\u4f1a\u4ea7\u751f\u5dee\u522b\u3002\u901a\u8fc7\u4e0a\u8ff0\u5bf9\u6bd4\u7279\u5224\u51b3\u7684\u53ef\u7f6e\u4fe1\u5ea6\u4fe1\u606f\u7684\u5e2e\u52a9\uff0c\u628a\u8fd9\u4e24\u7ec4\u7ed3\u679c\u5f7c\u6b64\u53c2\u7167\uff0c\u53ef\u4ee5\u5f97\u51fa\u7b2c\u4e00\u6b21\u8fd1\u4f3c\u7684\u7ed3\u679c\u3002\u628a\u8fd9\u4e00\u7ed3\u679c\u201c\u53cd\u9988\u201d\u5230\u89e3\u7801\u5668\u524d\u7aef\uff0c\u518d\u8fdb\u884c\u8fed\u4ee3\uff0c\u7ecf\u8fc7\u51e0\u6b21\u8fed\u4ee3\u4e24\u4e2a\u89e3\u7801\u5668\u7684\u7ed3\u679c\u5c31\u4f1a\u4e92\u76f8\u63a5\u8fd1\uff08\u6536\u655b\uff09\u3002\u8fd9\u6837\u5c31\u7ed5\u8fc7\u4e86\u8ba1\u7b97\u590d\u6742\u6027\u95ee\u9898\u3002Turbo\u7801\u7684\u8bd1\u7801\u5668\u6709\u4e24\u4e2a\u5206\u91cf\u7801\u8bd1\u7801\u5668\uff0c\u8bd1\u7801\u5728\u4e24\u4e2a\u5206\u91cf\u8bd1\u7801\u5668\u4e4b\u95f4\u8fdb\u884c\u8fed\u4ee3\u8bd1\u7801\uff0c\u6545\u6574\u4e2a\u8bd1\u7801\u8fc7\u7a0b\u7c7b\u4f3c\u6da1\u8f6e\uff08turbo\uff09\u5de5\u4f5c\uff0c\u6240\u4ee5\u53c8\u5f62\u8c61\u7684\u79f0\u4e3a Turbo\u7801 \u3002 \u5f53\u7136\u8fd9\u6837\u505a\u4e5f\u5f97\u4ed8\u51fa\u4ee3\u4ef7\u3002\u7531\u4e8e\u8fed\u4ee3\u89e3\u7801\uff0c\u5fc5\u7136\u4f1a\u4ea7\u751f\u65f6\u5ef6\u3002\u6240\u4ee5\u5bf9\u4e8e\u5b9e\u65f6\u6027\u8981\u6c42\u5f88\u9ad8\u7684\u573a\u5408\uff0cTurbo\u7801\u76f4\u63a5\u5e94\u7528\u4f1a\u53d7\u5230\u9650\u5236\u3002\u63a5\u4e0b\u6765\uff0c\u90a3\u4e9b\u7f16\u7801\u4e13\u5bb6\u4eec\u8dcc\u7834\u4e86\u773c\u955c\u3002\u4e0d\u53ef\u601d\u8bae\uff0c\u5f53\u5176\u4ed6\u5c0f\u7ec4\u9a8c\u8bc1\u4e86\u8fd9\u4e24\u4f4d\u6cd5\u56fd\u8001\u5144\u7684\u65b9\u6848\u65f6\uff0c\u8bc1\u660e\u4e86\u7ed3\u8bba\u662f\u6b63\u786e\u7684\u3002\u73b0\u5728\u4eba\u4eec\u8c08\u8bba\u7684\u5df2\u7ecf\u662f\u548c\u9999\u519c\u6781\u9650\u76f8\u5dee0.1dB\u8fd8\u662f0.01dB\u4e86\u3002\u4e00\u4e2a\u901a\u4fe1\u7f16\u7801\u53f2\u4e0a\u7684\u9769\u547d\u6027\u7684\u65f6\u4ee3\u5230\u6765\u4e86\uff01\u4e24\u4f4d\u540d\u4e0d\u89c1\u7ecf\u4f20\u7684\u7535\u673a\u5de5\u7a0b\u5e08\u4e0d\u987e\u79d1\u5b66\u6743\u5a01\u8ba4\u5b9a\u7684\u79cd\u79cd\u201c\u6781\u9650\u201d\uff0c\u5728\u4e00\u7247\u5632\u7b11\u58f0\u4e2d\uff0c\u53e6\u8f9f\u8e4a\u5f84\uff0c\u7a81\u7834\u4e86\u7406\u8bba\u58c1\u5792\u3002\u4e00\u5f00\u59cb\uff0cTurbo\u7801\u53ea\u662f\u5e94\u7528\u4e8e\u4e00\u4e9b\u7279\u6b8a\u573a\u5408\uff0c\u6bd4\u5982\u536b\u661f\u94fe\u8def\u3002\u540e\u6765\uff0c\u7814\u7a76\u4eba\u5458\u5c06\u5b83\u6269\u5c55\u5230\u6570\u5b57\u97f3\u9891\u548c\u89c6\u9891\u5e7f\u64ad\u9886\u57df\u3002\u7d27\u63a5\u7740\uff0cTurbo\u7801\u6210\u4e3a\u901a\u4fe1\u7814\u7a76\u7684\u524d\u6cbf\uff0c\u5168\u4e16\u754c\u5404\u5927\u516c\u53f8\u90fd\u805a\u7126\u5728\u8fd9\u4e2a\u9886\u57df\uff0c\u5305\u62ec\u6cd5\u56fd\u7535\u4fe1\u3001NTT\u3001DoCoMo\u3001\u7d22\u5c3c\u3001NEC\u3001\u6717\u8baf\u3001\u4e09\u661f\u3001\u7231\u7acb\u4fe1\u3001\u8bfa\u57fa\u4e9a \u3001\u6469\u6258\u7f57\u62c9\u548c\u9ad8\u901a\u7b49\u7b49\u3002Turbo\u7801\u6210\u4e3a\u4e86\u59cb\u4e8e\u672c\u4e16\u7eaa\u521d\u76843G/4G\u79fb\u52a8\u901a\u4fe1\u6280\u672f\u7684\u6838\u5fc3\uff0c\u76f4\u5230\u4eca\u59294.5G\uff0c\u6211\u4eec\u4f9d\u7136\u5728\u91c7\u7528\u3002\u73b0\u5728\uff0c\u7f16\u7801\u4e13\u5bb6\u4eec\u90fd\u677e\u4e86\u4e00\u53e3\u6c14\uff0c\u603b\u7b97\u89e3\u51b3\u4e86\u8fd9\u4e2a\u68d8\u624b\u7684\u95ee\u9898\u3002\u4e5f\u540c\u65f6\u90fd\u53f9\u4e86\u4e00\u53e3\u6c14\uff0c\u56e0\u4e3a\u8fd9\u5df2\u7ecf\u63a5\u8fd1\u9999\u519c\u6781\u9650\u4e86\uff0c\u53d1\u73b0\u4f3c\u4e4e\u5728\u8fd9\u9886\u57df\u5df2\u7ecf\u5f88\u96be\u518d\u7a81\u7834\u4e86\u3002\u6536\u5de5\uff0c\u56de\u5bb6\uff0c\u5e26\u5a03\u3002 \u4f46\u662f\uff0c\u57281999\u5e74\uff0c\u7f16\u7801\u754c\u53c8\u53d1\u751f\u4e86\u4e00\u4ef6\u6709\u8da3\u7684\u4e8b\u3002\u4eba\u4eec\u91cd\u71c3\u8d77\u4e86\u5bf9LDPC\u7684\u5174\u8da3\uff0c\u5c3d\u7ba1\u5b83\u5df2\u7ecf\u88ab\u4eba\u4eec\u9057\u5fd8\u4e86\u51e0\u5341\u5e74\u3002 LDPC\uff08 low-density parity check\uff09\uff0c\u5373\u4f4e\u5bc6\u5ea6\u5947\u5076\u6821\u9a8c\u7801\u3002 \u5b83\u4e8e1962\u5e74\u7531Gallager\u63d0\u51fa\uff0c\u7136\u540e\uff0c\u88ab\u4eba\u4eec\u9057\u5fd8\u4e86\u3002\u76f4\u5230Turbo\u7801\u88ab\u63d0\u51fa\u4ee5\u540e\uff0c\u4eba\u4eec\u624d\u53d1\u73b0Turbo\u7801\u4ece\u67d0\u79cd\u89d2\u5ea6\u4e0a\u8bf4\u4e5f\u662f\u4e00\u79cdLDPC\u7801\u3002 \u53e6\u4e00\u4ef6\u8ba9\u4eba\u4eec\u611f\u5174\u8da3\u7684\u4e8b\u662f\uff0cLDPC\u7801\u53d1\u660e\u8f83\u65e9\uff0c\u5176\u57fa\u672c\u4e13\u5229\u52301999\u5e74\u5c31\u5230\u671f\u4e86\uff0c\u800cTurbo\u7801\u8981\u52302013\u5e74\u624d\u5230\u671f\u3002LDPC\u5229\u7528\u6821\u9a8c\u77e9\u9635\u7684\u7a00\u758f\u6027\uff0c\u4f7f\u5f97\u8bd1\u7801\u590d\u6742\u5ea6\u53ea\u4e0e\u7801\u957f\u6210\u7ebf\u6027\u5173\u7cfb\uff0c\u5728\u957f\u7801\u957f\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u53ef\u4ee5\u6709\u6548\u7684\u8fdb\u884c\u8bd1\u7801\uff0c\u56e0\u800c\u5177\u6709\u66f4\u7b80\u5355\u7684\u8bd1\u7801\u7b97\u6cd5\u3002\u968f\u7740\u4eba\u4eec\u5bf9LDPC\u7801\u91cd\u65b0\u8fdb\u884c\u4e86\u7814\u7a76\uff0c\u53d1\u73b0LDPC\u7801\u4e0eTurbo\u4e00\u6837\u5177\u6709\u903c\u8fd1\u9999\u519c\u6781\u9650\u7684\u6027\u80fd\u3002\u8f83\u65b0\u7684\u7814\u7a76\u7ed3\u679c\u663e\u793a\uff0c\u5b9e\u9a8c\u4e2d\u5df2\u627e\u5230\u7684\u6700\u597dLDPC\u7801\uff0c\u5176\u6781\u9650\u6027\u80fd\u8ddd\u9999\u519c\u7406\u8bba\u9650\u4ec5\u76f8\u5dee0.0045dB\u3002\u63a5\u7740\uff0cLDPC\u5728IEEE 802.11n \u4ee5\u53ca802.16\u7684\u6280\u672f\u63d0\u6848\u4e2d\u88ab\u70ed\u70c8\u8ba8\u8bba\u3002DVB-S2\u4e5f\u51b3\u8bae\u4ee5LDPC\u66ff\u4ee3Turbo\u7801\u3002\u6709\u4eba\u8ba4\u4e3a\uff0cLDPC\u662f\u7ec8\u6781\u7ea0\u9519\u7f16\u7801\uff0c\u6781\u6709\u53ef\u80fd\u6210\u4e3a\u672a\u6765\u4e3b\u6d41\u7f16\u7801\u6280\u672f\u3002\u6240\u4ee5\uff0c\u4e00\u573a\u5173\u4e8eTurbo\u7801\u548cLDPC\u7801\u7684\u4e89\u8bba\u5c31\u62c9\u5f00\u4e86\u3002\u968f\u77405G\u6807\u51c6\u5316\u7684\u5230\u6765\uff0cTurbo\u7801\u548cLDPC\u7801\u50cf\u62f3\u51fb\u53f0\u4e0a\u4e24\u540d\u91cd\u91cf\u7ea7\u9009\u624b\uff0c\u4e24\u4eba\u90fd\u5ba3\u79f0\u81ea\u5df1\u5c06\u662f\u83b7\u80dc\u8005\uff0c\u4f46\u88c1\u5224\u7684\u7ed3\u675f\u54e8\u58f0\u5374\u4e00\u76f4\u672a\u5439\u54cd\u3002\u88c1\u5224\u5f88\u5934\u75db\uff0c\u8fd9\u662f\u4e00\u573a\u51e0\u4e4e\u65e0\u6cd5\u6253\u5206\u7684\u6bd4\u8d5b\u3002\u56e0\u4e3a\uff0c\u4e4b\u6240\u4ee5\u6709\u4e89\u8bba\uff0c\u65e0\u975e\u662f\u8981\u8bc1\u660e\uff0c\u8c01\u624d\u66f4\u9002\u5408\u672a\u67655G\u7528\u4f8b\uff1f\u8c01\u624d\u80fd\u66f4\u597d\u6ee1\u8db3\u65b0\u7684\u6280\u672f\u9700\u6c42\uff1f\u4f17\u6240\u5468\u77e5\uff0c2G\u7684\u5e94\u7528\u573a\u666f\u662f\u8bed\u97f3\u548c\u4f4e\u901f\u7387\u6570\u636e\u4e1a\u52a1\uff0c3G\u548c4G\u7684\u5e94\u7528\u573a\u666f\u662f\u8bed\u97f3\u548c\u66f4\u9ad8\u901f\u7387\u7684\u6570\u636e\u4e1a\u52a1\u3002\u53ef\u4ee5\u786e\u5b9a\u7684\u662f\uff0cTurbo\u7801\u548cLDPC\u7801\u90fd\u80fd\u5f88\u597d\u7684\u6ee1\u8db33/4G\uff0c\u751a\u81f3\u662f4.5G\u7528\u4f8b\u3002\u800c5G\u7528\u4f8b\u5462\uff1f\u5e02\u573a\u4e0a\u8fd8\u6ca1\u6709\u51fa\u73b0\uff0c\u800c\u4e14\u5f88\u591a\u3002\u4e0d\u7ba1\u662fTurbo\u7801\uff0c\u8fd8\u662fLDPC\u7801\uff0c\u90fd\u65e0\u6cd5\u786e\u5b9a\u8c01\u624d\u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u4e24\u8005\u5404\u6709\u4f18\u7f3a\u70b9\uff0c\u8981\u8986\u76d6\u5168\u90e85G\u5e94\u7528\uff0c\u4e0d\u592a\u73b0\u5b9e\u3002 \u6b63\u5f53Turbo\u7801\u548cLDPC\u7801\u6253\u62f3\u51fb\u8d5b\u4e4b\u65f6\uff0cPolar\u7801\u51b2\u4e0a\u4e86\u62f3\u53f0\uff0c\u53d8\u6210\u4e86\u4e00\u573a\u6454\u89d2\u8fd0\u52a8\u3002\u5f88\u5e78\u8fd0\uff0c\u5728\u7f16\u7801\u6280\u672f\u4e0d\u65ad\u6253\u7834\u8bb0\u5f55\u5e26\u7ed9\u6211\u4eec\u60ca\u559c\u65f6\uff0c\u53e6\u4e00\u9879\u7f16\u7801\u9886\u57df\u91cc\u7684\u6fc0\u52a8\u4eba\u5fc3\u7684\u7814\u7a76\u5df2\u6d6e\u51fa\u6c34\u9762\u30022007\u5e74\uff0c\u571f\u8033\u5176\u6bd4\u5c14\u80af\u5927\u5b66\u6559\u6388E. Arikan\u57fa\u4e8e\u4fe1\u9053\u6781\u5316\u7406\u8bba\u63d0\u51fa\u7684\u4e00\u79cd\u7ebf\u6027\u4fe1\u9053\u7f16\u7801\u65b9\u6cd5\uff0c\u5373 Polar\u7801 \u3002\u8be5\u7801\u5b57\u662f\u8fc4\u4eca\u53d1\u73b0\u7684\u552f\u4e00\u4e00\u7c7b\u80fd\u591f\u8fbe\u5230\u9999\u519c\u9650\u7684\u7f16\u7801\u65b9\u6cd5\uff0c\u5e76\u4e14\u5177\u6709\u8f83\u4f4e\u7684\u7f16\u8bd1\u7801\u590d\u6742\u5ea6\uff0c\u5f53\u7f16\u7801\u957f\u5ea6\u4e3aN\u65f6\uff0c\u590d\u6742\u5ea6\u5927\u5c0f\u4e3a O ( NlogN)\u3002 Polar\u7801\u7684\u7406\u8bba\u57fa\u7840\u5c31\u662f\u4fe1\u9053\u6781\u5316\u3002\u4fe1\u9053\u6781\u5316\u5305\u62ec\u4fe1\u9053\u7ec4\u5408\u548c\u4fe1\u9053\u5206\u89e3\u90e8\u5206\u3002\u5f53\u7ec4\u5408\u4fe1\u9053\u7684\u6570\u76ee\u8d8b\u4e8e\u65e0\u7a77\u5927\u65f6\uff0c\u5219\u4f1a\u51fa\u73b0\u6781\u5316\u73b0\u8c61\uff1a\u4e00\u90e8\u5206\u4fe1\u9053\u5c06\u8d8b\u4e8e\u65e0\u566a\u4fe1\u9053\uff0c\u53e6\u5916\u4e00\u90e8\u5206\u5219\u8d8b\u4e8e\u5168\u566a\u4fe1\u9053\uff0c\u8fd9\u79cd\u73b0\u8c61\u5c31\u662f\u4fe1\u9053\u6781\u5316\u73b0\u8c61\u3002\u65e0\u566a\u4fe1\u9053\u7684\u4f20\u8f93\u901f\u7387\u5c06\u4f1a\u8fbe\u5230\u4fe1\u9053\u5bb9\u91cf I (W)\uff0c\u800c\u5168\u566a\u4fe1\u9053\u7684\u4f20\u8f93\u901f\u7387\u8d8b\u4e8e\u96f6\u3002Polar\u7801\u7684\u7f16\u7801\u7b56\u7565\u6b63\u662f\u5e94\u7528\u4e86\u8fd9\u79cd\u73b0\u8c61\u7684\u7279\u6027\uff0c\u5229\u7528\u65e0\u566a\u4fe1\u9053\u4f20\u8f93\u7528\u6237\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5168\u566a\u4fe1\u9053\u4f20\u8f93\u7ea6\u5b9a\u7684\u4fe1\u606f\u6216\u8005\u4e0d\u4f20\u4fe1\u606f\u3002Polar\u7801\u6bd4Turbo\u7801\u548cLDPC\u7801\u66f4\u63a5\u8fd1\u4fe1\u9053\u5bb9\u91cf\uff0cPolar\u7801\u53ef\u4ee5\u4fdd\u8bc15G\u4efb\u4f55\u573a\u666f\u7684\u9ad8\u6027\u80fd\u901a\u4fe1\u3002\u5938\u5f20\u7684\u8bb2\uff0c\u5982\u679c\u4e0d\u8003\u8651\u7cfb\u7edf\u8bbe\u8ba1\u95ee\u9898\uff0c\u7f16\u7801\u6280\u672f\u7684\u5386\u53f2\u5c31\u5e94\u8be5\u5230\u6b64\u7ec8\u7ed3\u4e86\uff0c\u7ec8\u7ed3\u5728Polar\u7801\u7684\u624b\u91cc\u3002\u4f46\u662f\uff0c\u7f16\u89e3\u7801\u7684\u590d\u6742\u6027\u662fPolar\u7684\u95ee\u9898\uff0c\u4e0d\u8fc7\uff0c\u5728\u4f7f\u7528\u6539\u8fdb\u540e\u7684SCL\uff08Successive Cancelation List\uff09\u8bd1\u7801\u7b97\u6cd5\u65f6\u80fd\u4ee5\u8f83\u4f4e\u590d\u6742\u5ea6\u7684\u4ee3\u4ef7\uff0c\u63a5\u8fd1\u6700\u5927\u4f3c\u7136\u8bd1\u7801\u7684\u6027\u80fd\u3002\u5173\u952e\u662f\uff0cPolar\u7801\u8fd8\u662f\u592a\u5e74\u8f7b\u4e86\uff0c\u53d1\u660e\u5f97\u6bd4\u8f83\u665a\uff0c\u5f88\u591a\u7814\u7a76\u8fd8\u5efa\u7acb\u5728\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u4e0d\u50cfTurbo\u7801\u548cLDPC\u7801\u5df2\u7ecf\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5b9e\u9645\u573a\u666f\u3002\u53ea\u6709\u7b49\u5f85\u65f6\u95f4\u6765\u544a\u8bc9\u6211\u4eec\uff0cPolar\u7801\u5230\u5e95\u662f\u4e0d\u662f5G\u4fe1\u9053\u7f16\u7801\u7684\u738b\u8005\u3002 \u56de\u987e\u4fe1\u9053\u7f16\u7801\u5386\u53f2\uff0c\u6ce2\u6f9c\u58ee\u9614\u3002\u5728\u51e0\u5341\u5e74\u5e76\u4e0d\u6f2b\u957f\u7684\u5c81\u6708\u91cc\uff0c\u4e00\u6b21\u53c8\u4e00\u6b21\u5173\u952e\u6280\u672f\u7684\u5386\u53f2\u6027\u7a81\u7834\uff0c\u9020\u5c31\u4e86\u4eca\u5929\u4eba\u7c7b\u901a\u4fe1\u5947\u8ff9\u3002\u800c\u5f535G\u5373\u5c06\u5230\u6765\u4e4b\u65f6\uff0c\u66f4\u4ee4\u4eba\u5174\u594b\u7684\u662f\uff0c\u6211\u4eec\u770b\u5230\u4e86\u5404\u79cd\u4f18\u79c0\u7684\u7f16\u7801\u6280\u672f\u7684\u6d8c\u73b0\u3002\u6beb\u4e0d\u5938\u5f20\u7684\u8bf4\uff0c\u8fd9\u662f\u4fe1\u9053\u7f16\u7801\u6280\u672f\u7684\u6587\u827a\u590d\u5174\u65f6\u671f\u3002\u800c\u5f00\u542f\u6587\u827a\u590d\u5174\u4e4b\u95e8\u7684\uff0c\u4e0d\u4ec5\u4ec5\u662f\u4fe1\u9053\u7f16\u7801\uff0c5G\u5c06\u6fc0\u53d1\u65e0\u7ebf\u4ea7\u4e1a\u53f2\u65e0\u524d\u4f8b\u7684\u521b\u65b0\u6d3b\u529b\u3002","title":"\u4fe1\u9053\u7f16\u7801\u7684\u524d\u4e16\u4eca\u751f"},{"location":"ESP32/%E5%8A%A8%E7%89%A9%E7%8E%8B%E5%9B%BD%E5%BC%80%E5%A4%A7%E4%BC%9A/","text":"\u52a8\u7269\u738b\u56fd\u5f00\u5927\u4f1a \u7b2c\u4e00\u573a \u97f3\u4e50\u8d77\uff0c\u8001\u864e\u3001\u72d7\u718a\u5165\u573a\u3002 \u8001\u864e\uff1a\u72d7\u718a\uff0c\u5feb\u8981\u653e\u5047\u4e86\uff0c\u4f60\u8bf4\u6691\u5047\u6211\u4eec\u5b66\u6821\u8981\u4e0d\u8981\u7ec4\u7ec7\u4e2a\u590f\u4ee4\u8425\u554a\uff1f \u72d7\u718a\uff1a\u597d\u5440\u597d\u5440\uff0c\u6211\u6700\u559c\u6b22\u53bb\u590f\u4ee4\u8425\u5566\uff0c\u6211\u8981\u53bb\u9732\u8425\u3002 \u8001\u864e\uff1a\u90a3\u4f60\u8bf4\u5230\u54ea\u91cc\u53bb\u590f\u4ee4\u8425\u554a\uff1f\u4ec0\u4e48\u65f6\u5019\u53bb\u597d\u5462\uff1f \u72d7\u718a\uff1a\u8fd9\u4e2a...\uff0c\u6211\u4e5f\u6ca1\u4e3b\u610f\u3002 \u8001\u864e\uff1a\u8fd9\u6837\u5427\uff0c\u4f60\u53bb\u901a\u77e5\u5927\u5bb6\u4e00\u8d77\u5f00\u4e2a\u4f1a\u8ba8\u8bba\u4e0b\u3002 \u72d7\u718a\uff1a\u597d\u5450\uff01 \u72d7\u718a\u8001\u864e\u9000\u573a\u3002 \u7b2c\u4e8c\u573a \u72d7\u718a\u51fa\u573a\u3002\u8001\u864e\u505a\u5728\u65c1\u8fb9\uff0c\u505a\u529e\u516c\u7684\u6837\u5b50\u3002 \u72d7\u718a\uff1a\u5927\u5bb6\u6ce8\u610f\uff0c\u52a8\u7269\u738b\u56fd\u8981\u5f00\u5927\u4f1a\uff0c\u8bf7\u4f60\u4eec\u90fd\u53c2\u52a0\uff01\uff08\u558a\u4e09\u904d\uff09 \u72d0\u72f8\u8dd1\u51fa\u6765\uff0c\u5bf9\u72d7\u718a\u8bf4\uff1a\u72d7\u718a\uff0c\u4f60\u5728\u558a\u4ec0\u4e48\u5440\uff0c\u5435\u7684\u6211\u6ca1\u6cd5\u505a\u4f5c\u4e1a\u4e86\u3002 \u72d7\u718a\uff1a\u8001\u864e\u5927\u738b\u8ba9\u6211\u901a\u77e5\u4f60\u4eec\u53bb\u5f00\u4f1a \u72d0\u72f8\uff1a\u8fd9\u6837\u554a\uff0c\u4e0d\u8fc7\uff0c\u5373\u4f7f\u4f60\u558a\u4e00\u767e\u904d\uff0c\u5927\u4f1a\u4e5f\u5f00\u4e0d\u8d77\u6765\u3002 \u72d7\u718a\uff1a\u4e3a\u4ec0\u4e48\uff1f \u72d0\u72f8\uff1a\u56e0\u4e3a\u4f60\u6ca1\u544a\u8bc9\u5927\u5bb6\uff0c\u5927\u4f1a\u5728\u54ea\u4e00\u5929\u5f00\uff0c\u662f\u4eca\u5929\uff0c\u8fd8\u662f\u660e\u5929\uff0c\u8fd8\u662f\u2026\u2026 \u72d7\u718a\u4e00\u542c\uff0c\u4f38\u4e86\u4f38\u820c\u5934\uff0c\u505a\u4e86\u4e2a\u9b3c\u8138\uff0c\u8fde\u5fd9\u8bf4\uff1a\u5bf9\uff0c\u5bf9\uff0c\u5bf9\uff01\u6211\u53bb\u95ee\u95ee\u8001\u864e\u5927\u738b\u3002 \u72d0\u72f8\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u72d0\u72f8\u9000\u573a\uff0c\u72d7\u718a\u8dd1\u53bb\u95ee\u8001\u864e\u3002 \u72d7\u718a\uff1a\u5927\u738b\u5927\u738b\uff0c\u5927\u4f1a\u4ec0\u4e48\u65f6\u5019\u5f00\u554a\uff1f \u8001\u864e\uff1a\u5927\u4f1a\u5c31\u5728\u660e\u5929\u5f00\uff0c\u4f60\u5feb\u53bb\u901a\u77e5\u5927\u5bb6\u5427\uff01\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u72d7\u718a\uff1a\u597d\u5450\uff01 \u7b2c\u4e09\u573a \u72d7\u718a\u53c8\u7528\u5587\u53ed\u5927\u58f0\u558a\uff1a\u5927\u5bb6\u6ce8\u610f\uff0c\u52a8\u7269\u738b\u56fd\u8981\u5728\u660e\u5929\u5f00\u5927\u4f1a\uff0c\u8bf7\u4f60\u4eec\u90fd\u53c2\u52a0\uff01\uff08\u558a\u4e09\u904d\uff09 \u5927\u7070\u72fc\u8dd1\u51fa\u6765\uff0c\u5bf9\u72d7\u718a\u8bf4\uff1a\u72d7\u718a\uff0c\u4f60\u5728\u558a\u4ec0\u4e48\u5440\uff0c\u5435\u7684\u6211\u90fd\u6ca1\u6cd5\u770b\u4e66\u4e86\u3002 \u72d7\u718a\uff1a\u8001\u864e\u5927\u738b\u8ba9\u6211\u901a\u77e5\u4f60\u4eec\u660e\u5929\u53bb\u5f00\u4f1a \u5927\u7070\u72fc\uff1a\u54e6\uff0c\u8fd9\u6837\u554a\u3002\u4e0d\u8fc7\u4f60\u8bf4\u4e00\u767e\u904d\uff0c\u5927\u4f1a\u4e5f\u5f00\u4e0d\u8d77\u6765\u3002 \u72d7\u718a\uff1a\u4e3a\u4ec0\u4e48\uff1f \u5927\u7070\u72fc\uff1a\u56e0\u4e3a\u4f60\u6ca1\u544a\u8bc9\u5927\u5bb6\uff0c\u5728\u660e\u5929\u4ec0\u4e48\u65f6\u5019\u5f00\uff0c\u4e00\u5929\u90a3\u4e48\u957f\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u600e\u4e48\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u6765\uff0c\u4e0a\u5348\u8fd8\u662f\u4e0b\u5348\uff0c\u51e0\u70b9\u949f\uff1f \u72d7\u718a\u8fb9\u70b9\u5934\u8fb9\u8bf4\uff1a\u6709\u9053\u7406\uff0c\u6709\u9053\u7406\uff01\u6211\u53bb\u95ee\u95ee\u8001\u864e\u5927\u738b\u3002 \u5927\u7070\u72fc\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u72d7\u718a\u8dd1\u53bb\u95ee\u8001\u864e\u3002 \u72d7\u718a\uff1a\u5927\u738b\u5927\u738b\uff0c\u5927\u4f1a\u5b9a\u5728\u660e\u5929\u4ec0\u4e48\u65f6\u5019\u5f00\u554a\uff1f \u8001\u864e\uff1a\u5927\u4f1a\u5c31\u5728\u660e\u5929\u4e0a\u5348\u516b\u70b9\u5f00\uff0c\u4f60\u518d\u53bb\u901a\u77e5\u5927\u5bb6\u5427\uff01 \u72d7\u718a\uff1a\u77e5\u9053\u4e86\u5927\u738b\uff01 \u8001\u864e\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u7b2c\u56db\u573a \u72d7\u718a\u7528\u5587\u53ed\u5927\u58f0\u558a\uff1a\u5927\u5bb6\u6ce8\u610f\uff0c\u52a8\u7269\u738b\u56fd\u8981\u5728\u660e\u5929\u4e0a\u5348\u516b\u70b9\u5f00\u5927\u4f1a\uff0c\u8bf7\u4f60\u4eec\u90fd\u53c2\u52a0\uff01\uff08\u558a\u4e09\u904d\uff09 \u6885\u82b1\u9e7f\u8dd1\u51fa\u6765\uff0c\u5bf9\u72d7\u718a\u8bf4\uff1a\u72d7\u718a\uff0c\u4f60\u5728\u558a\u4ec0\u4e48\u5440\uff0c\u5435\u7684\u6211\u90fd\u6ca1\u6cd5\u7761\u89c9\u4e86\u3002 \u72d7\u718a\uff1a\u8001\u864e\u5927\u738b\u8ba9\u6211\u901a\u77e5\u4f60\u4eec\u660e\u5929\u4e0a\u5348\u516b\u70b9\u5f00\u5927\u4f1a\u3002 \u6885\u82b1\u9e7f\uff1a\u54e6\uff0c\u8fd9\u6837\u554a\u3002\u4e0d\u8fc7\u4f60\u8bf4\u4e00\u767e\u904d\uff0c\u5927\u4f1a\u4e5f\u5f00\u4e0d\u8d77\u6765\u3002 \u72d7\u718a\uff1a\u4e3a\u4ec0\u4e48\uff1f \u6885\u82b1\u9e7f\uff1a\u5927\u4f1a\u5728\u54ea\u513f\u5f00\u5440\uff1f\u4f60\u5f97\u8bf4\u6e05\u695a\u3002 \u72d7\u718a\u6376\u6376\u81ea\u5df1\u7684\u8111\u888b\uff0c\u8bf4\uff1a\u201c\u6211\u600e\u4e48\u6ca1\u95ee\u6e05\u695a\u5462\uff1f\u201d \u6885\u82b1\u9e7f\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u4e8e\u662f\u53c8\u53bb\u95ee\u8001\u864e\u3002 \u72d7\u718a\uff1a\u5927\u738b\u5927\u738b\uff0c\u5927\u4f1a\u5b9a\u5728\u4ec0\u4e48\u5730\u65b9\u5f00\u554a\uff1f \u8001\u864e\uff1a\u5c31\u5728\u68ee\u6797\u5e7f\u573a\u5f00\uff0c\u4f60\u518d\u53bb\u901a\u77e5\u5927\u5bb6\u5427\uff01 \u72d7\u718a\uff1a\u77e5\u9053\u4e86\u5927\u738b\uff01 \u8001\u864e\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u7b2c\u4e94\u573a \u72d7\u718a\u7528\u5587\u53ed\u5927\u58f0\u558a\uff1a\u5927\u5bb6\u6ce8\u610f\uff0c\u52a8\u7269\u738b\u56fd\u8981\u5728\u660e\u5929\u4e0a\u5348\u516b\u70b9\uff0c\u5728\u68ee\u6797\u5e7f\u573a\u5f00\u5927\u4f1a\uff0c\u8bf7\u5927\u5bb6\u51c6\u65f6\u53c2\u52a0\uff01\uff08\u558a\u4e09\u904d\uff09 \u6240\u6709\u52a8\u7269\u51fa\u573a\uff0c\u4e00\u8d77\u8bf4\uff1a\u660e\u5929\u4e0a\u516b\u70b9\uff0c\u5728\u68ee\u6797\u5e7f\u573a\u5f00\u5927\u4f1a\uff0c\u77e5\u9053\u4e86\uff01\u5f00\u4f1a\u662f\u4ec0\u4e48\u4e8b\u554a\uff1f\u5e74\u8f7b\u4eba\uff01\u54c8\u54c8\uff01 \u7ad9\u6210\u4e00\u6392\uff0c\u97a0\u8eac\uff0c\u9000\u573a\u3002","title":"\u52a8\u7269\u738b\u56fd\u5f00\u5927\u4f1a"},{"location":"ESP32/%E5%8A%A8%E7%89%A9%E7%8E%8B%E5%9B%BD%E5%BC%80%E5%A4%A7%E4%BC%9A/#_1","text":"","title":"\u52a8\u7269\u738b\u56fd\u5f00\u5927\u4f1a"},{"location":"ESP32/%E5%8A%A8%E7%89%A9%E7%8E%8B%E5%9B%BD%E5%BC%80%E5%A4%A7%E4%BC%9A/#_2","text":"\u97f3\u4e50\u8d77\uff0c\u8001\u864e\u3001\u72d7\u718a\u5165\u573a\u3002 \u8001\u864e\uff1a\u72d7\u718a\uff0c\u5feb\u8981\u653e\u5047\u4e86\uff0c\u4f60\u8bf4\u6691\u5047\u6211\u4eec\u5b66\u6821\u8981\u4e0d\u8981\u7ec4\u7ec7\u4e2a\u590f\u4ee4\u8425\u554a\uff1f \u72d7\u718a\uff1a\u597d\u5440\u597d\u5440\uff0c\u6211\u6700\u559c\u6b22\u53bb\u590f\u4ee4\u8425\u5566\uff0c\u6211\u8981\u53bb\u9732\u8425\u3002 \u8001\u864e\uff1a\u90a3\u4f60\u8bf4\u5230\u54ea\u91cc\u53bb\u590f\u4ee4\u8425\u554a\uff1f\u4ec0\u4e48\u65f6\u5019\u53bb\u597d\u5462\uff1f \u72d7\u718a\uff1a\u8fd9\u4e2a...\uff0c\u6211\u4e5f\u6ca1\u4e3b\u610f\u3002 \u8001\u864e\uff1a\u8fd9\u6837\u5427\uff0c\u4f60\u53bb\u901a\u77e5\u5927\u5bb6\u4e00\u8d77\u5f00\u4e2a\u4f1a\u8ba8\u8bba\u4e0b\u3002 \u72d7\u718a\uff1a\u597d\u5450\uff01 \u72d7\u718a\u8001\u864e\u9000\u573a\u3002","title":"\u7b2c\u4e00\u573a"},{"location":"ESP32/%E5%8A%A8%E7%89%A9%E7%8E%8B%E5%9B%BD%E5%BC%80%E5%A4%A7%E4%BC%9A/#_3","text":"\u72d7\u718a\u51fa\u573a\u3002\u8001\u864e\u505a\u5728\u65c1\u8fb9\uff0c\u505a\u529e\u516c\u7684\u6837\u5b50\u3002 \u72d7\u718a\uff1a\u5927\u5bb6\u6ce8\u610f\uff0c\u52a8\u7269\u738b\u56fd\u8981\u5f00\u5927\u4f1a\uff0c\u8bf7\u4f60\u4eec\u90fd\u53c2\u52a0\uff01\uff08\u558a\u4e09\u904d\uff09 \u72d0\u72f8\u8dd1\u51fa\u6765\uff0c\u5bf9\u72d7\u718a\u8bf4\uff1a\u72d7\u718a\uff0c\u4f60\u5728\u558a\u4ec0\u4e48\u5440\uff0c\u5435\u7684\u6211\u6ca1\u6cd5\u505a\u4f5c\u4e1a\u4e86\u3002 \u72d7\u718a\uff1a\u8001\u864e\u5927\u738b\u8ba9\u6211\u901a\u77e5\u4f60\u4eec\u53bb\u5f00\u4f1a \u72d0\u72f8\uff1a\u8fd9\u6837\u554a\uff0c\u4e0d\u8fc7\uff0c\u5373\u4f7f\u4f60\u558a\u4e00\u767e\u904d\uff0c\u5927\u4f1a\u4e5f\u5f00\u4e0d\u8d77\u6765\u3002 \u72d7\u718a\uff1a\u4e3a\u4ec0\u4e48\uff1f \u72d0\u72f8\uff1a\u56e0\u4e3a\u4f60\u6ca1\u544a\u8bc9\u5927\u5bb6\uff0c\u5927\u4f1a\u5728\u54ea\u4e00\u5929\u5f00\uff0c\u662f\u4eca\u5929\uff0c\u8fd8\u662f\u660e\u5929\uff0c\u8fd8\u662f\u2026\u2026 \u72d7\u718a\u4e00\u542c\uff0c\u4f38\u4e86\u4f38\u820c\u5934\uff0c\u505a\u4e86\u4e2a\u9b3c\u8138\uff0c\u8fde\u5fd9\u8bf4\uff1a\u5bf9\uff0c\u5bf9\uff0c\u5bf9\uff01\u6211\u53bb\u95ee\u95ee\u8001\u864e\u5927\u738b\u3002 \u72d0\u72f8\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u72d0\u72f8\u9000\u573a\uff0c\u72d7\u718a\u8dd1\u53bb\u95ee\u8001\u864e\u3002 \u72d7\u718a\uff1a\u5927\u738b\u5927\u738b\uff0c\u5927\u4f1a\u4ec0\u4e48\u65f6\u5019\u5f00\u554a\uff1f \u8001\u864e\uff1a\u5927\u4f1a\u5c31\u5728\u660e\u5929\u5f00\uff0c\u4f60\u5feb\u53bb\u901a\u77e5\u5927\u5bb6\u5427\uff01\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u72d7\u718a\uff1a\u597d\u5450\uff01","title":"\u7b2c\u4e8c\u573a"},{"location":"ESP32/%E5%8A%A8%E7%89%A9%E7%8E%8B%E5%9B%BD%E5%BC%80%E5%A4%A7%E4%BC%9A/#_4","text":"\u72d7\u718a\u53c8\u7528\u5587\u53ed\u5927\u58f0\u558a\uff1a\u5927\u5bb6\u6ce8\u610f\uff0c\u52a8\u7269\u738b\u56fd\u8981\u5728\u660e\u5929\u5f00\u5927\u4f1a\uff0c\u8bf7\u4f60\u4eec\u90fd\u53c2\u52a0\uff01\uff08\u558a\u4e09\u904d\uff09 \u5927\u7070\u72fc\u8dd1\u51fa\u6765\uff0c\u5bf9\u72d7\u718a\u8bf4\uff1a\u72d7\u718a\uff0c\u4f60\u5728\u558a\u4ec0\u4e48\u5440\uff0c\u5435\u7684\u6211\u90fd\u6ca1\u6cd5\u770b\u4e66\u4e86\u3002 \u72d7\u718a\uff1a\u8001\u864e\u5927\u738b\u8ba9\u6211\u901a\u77e5\u4f60\u4eec\u660e\u5929\u53bb\u5f00\u4f1a \u5927\u7070\u72fc\uff1a\u54e6\uff0c\u8fd9\u6837\u554a\u3002\u4e0d\u8fc7\u4f60\u8bf4\u4e00\u767e\u904d\uff0c\u5927\u4f1a\u4e5f\u5f00\u4e0d\u8d77\u6765\u3002 \u72d7\u718a\uff1a\u4e3a\u4ec0\u4e48\uff1f \u5927\u7070\u72fc\uff1a\u56e0\u4e3a\u4f60\u6ca1\u544a\u8bc9\u5927\u5bb6\uff0c\u5728\u660e\u5929\u4ec0\u4e48\u65f6\u5019\u5f00\uff0c\u4e00\u5929\u90a3\u4e48\u957f\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u600e\u4e48\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u6765\uff0c\u4e0a\u5348\u8fd8\u662f\u4e0b\u5348\uff0c\u51e0\u70b9\u949f\uff1f \u72d7\u718a\u8fb9\u70b9\u5934\u8fb9\u8bf4\uff1a\u6709\u9053\u7406\uff0c\u6709\u9053\u7406\uff01\u6211\u53bb\u95ee\u95ee\u8001\u864e\u5927\u738b\u3002 \u5927\u7070\u72fc\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u72d7\u718a\u8dd1\u53bb\u95ee\u8001\u864e\u3002 \u72d7\u718a\uff1a\u5927\u738b\u5927\u738b\uff0c\u5927\u4f1a\u5b9a\u5728\u660e\u5929\u4ec0\u4e48\u65f6\u5019\u5f00\u554a\uff1f \u8001\u864e\uff1a\u5927\u4f1a\u5c31\u5728\u660e\u5929\u4e0a\u5348\u516b\u70b9\u5f00\uff0c\u4f60\u518d\u53bb\u901a\u77e5\u5927\u5bb6\u5427\uff01 \u72d7\u718a\uff1a\u77e5\u9053\u4e86\u5927\u738b\uff01 \u8001\u864e\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01","title":"\u7b2c\u4e09\u573a"},{"location":"ESP32/%E5%8A%A8%E7%89%A9%E7%8E%8B%E5%9B%BD%E5%BC%80%E5%A4%A7%E4%BC%9A/#_5","text":"\u72d7\u718a\u7528\u5587\u53ed\u5927\u58f0\u558a\uff1a\u5927\u5bb6\u6ce8\u610f\uff0c\u52a8\u7269\u738b\u56fd\u8981\u5728\u660e\u5929\u4e0a\u5348\u516b\u70b9\u5f00\u5927\u4f1a\uff0c\u8bf7\u4f60\u4eec\u90fd\u53c2\u52a0\uff01\uff08\u558a\u4e09\u904d\uff09 \u6885\u82b1\u9e7f\u8dd1\u51fa\u6765\uff0c\u5bf9\u72d7\u718a\u8bf4\uff1a\u72d7\u718a\uff0c\u4f60\u5728\u558a\u4ec0\u4e48\u5440\uff0c\u5435\u7684\u6211\u90fd\u6ca1\u6cd5\u7761\u89c9\u4e86\u3002 \u72d7\u718a\uff1a\u8001\u864e\u5927\u738b\u8ba9\u6211\u901a\u77e5\u4f60\u4eec\u660e\u5929\u4e0a\u5348\u516b\u70b9\u5f00\u5927\u4f1a\u3002 \u6885\u82b1\u9e7f\uff1a\u54e6\uff0c\u8fd9\u6837\u554a\u3002\u4e0d\u8fc7\u4f60\u8bf4\u4e00\u767e\u904d\uff0c\u5927\u4f1a\u4e5f\u5f00\u4e0d\u8d77\u6765\u3002 \u72d7\u718a\uff1a\u4e3a\u4ec0\u4e48\uff1f \u6885\u82b1\u9e7f\uff1a\u5927\u4f1a\u5728\u54ea\u513f\u5f00\u5440\uff1f\u4f60\u5f97\u8bf4\u6e05\u695a\u3002 \u72d7\u718a\u6376\u6376\u81ea\u5df1\u7684\u8111\u888b\uff0c\u8bf4\uff1a\u201c\u6211\u600e\u4e48\u6ca1\u95ee\u6e05\u695a\u5462\uff1f\u201d \u6885\u82b1\u9e7f\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01 \u4e8e\u662f\u53c8\u53bb\u95ee\u8001\u864e\u3002 \u72d7\u718a\uff1a\u5927\u738b\u5927\u738b\uff0c\u5927\u4f1a\u5b9a\u5728\u4ec0\u4e48\u5730\u65b9\u5f00\u554a\uff1f \u8001\u864e\uff1a\u5c31\u5728\u68ee\u6797\u5e7f\u573a\u5f00\uff0c\u4f60\u518d\u53bb\u901a\u77e5\u5927\u5bb6\u5427\uff01 \u72d7\u718a\uff1a\u77e5\u9053\u4e86\u5927\u738b\uff01 \u8001\u864e\uff1a\u5509\uff01\u5e74\u8f7b\u4eba\u5450\uff01","title":"\u7b2c\u56db\u573a"},{"location":"ESP32/%E5%8A%A8%E7%89%A9%E7%8E%8B%E5%9B%BD%E5%BC%80%E5%A4%A7%E4%BC%9A/#_6","text":"\u72d7\u718a\u7528\u5587\u53ed\u5927\u58f0\u558a\uff1a\u5927\u5bb6\u6ce8\u610f\uff0c\u52a8\u7269\u738b\u56fd\u8981\u5728\u660e\u5929\u4e0a\u5348\u516b\u70b9\uff0c\u5728\u68ee\u6797\u5e7f\u573a\u5f00\u5927\u4f1a\uff0c\u8bf7\u5927\u5bb6\u51c6\u65f6\u53c2\u52a0\uff01\uff08\u558a\u4e09\u904d\uff09 \u6240\u6709\u52a8\u7269\u51fa\u573a\uff0c\u4e00\u8d77\u8bf4\uff1a\u660e\u5929\u4e0a\u516b\u70b9\uff0c\u5728\u68ee\u6797\u5e7f\u573a\u5f00\u5927\u4f1a\uff0c\u77e5\u9053\u4e86\uff01\u5f00\u4f1a\u662f\u4ec0\u4e48\u4e8b\u554a\uff1f\u5e74\u8f7b\u4eba\uff01\u54c8\u54c8\uff01 \u7ad9\u6210\u4e00\u6392\uff0c\u97a0\u8eac\uff0c\u9000\u573a\u3002","title":"\u7b2c\u4e94\u573a"},{"location":"ESP32/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/","text":"","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2"},{"location":"ESP32/%E5%9B%BA%E6%80%81%E7%95%8C%E9%9D%A2%E6%9D%90%E6%96%99%E7%83%AD%E7%89%B9%E6%80%A7%E6%B5%8B%E9%87%8F/","text":"\u6d4b\u8bd5\u6807\u51c6ASTM-D5470 \u52a0\u70ed\u677f\u7535\u6d41 \\(I_H\\) \uff0c\u5f85\u5e73\u8861\u72b6\u6001 \u51cf\u5c0f\u52a0\u70ed\u677f\u7535\u6d41\u5230 \\(I_S\\) \u8ba1\u7b97\u4e24\u79cd\u72b6\u6001\u4e0b\u52a0\u70ed\u4e8c\u6781\u7ba1\u7684\u6e29\u5ea6\u5dee \\(\\Delta T_j\\) \uff0c\u548c\u52a0\u70ed\u529f\u7387\u5dee \\(\\Delta P\\) \u3002\u5f97\u5230\u6574\u4e2a\u94fe\u8def\u7684\u70ed\u963b $$ \\theta_{total}=\\frac{\\Delta T_j}{\\Delta P} $$ \u5176\u4e2d \\(\\theta_{total}\\) \u5305\u542b\u6d4b\u8bd5\u6837\u54c1\u7684\u70ed\u963b\uff0c\u6d4b\u8bd5\u8bbe\u5907\u70ed\u963b\uff0c\u63a5\u89e6\u754c\u9762\u70ed\u963b\u3002 \u6539\u53d8TIM\u539a\u5ea6\uff0c\u91cd\u590d\u540c\u6837\u6d4b\u8bd5\u8ba1\u7b97\u70ed\u963b\u5dee \\(\\Delta \\theta_{total}\\) \uff0c\u5373\u53ef\u5f97\u51fa $$ \\Delta \\theta_{total}=\\Delta \\theta_{TIM} $$ \u6d4b\u91cf\u7684\u539a\u5ea6\u5dee\u4e3a \\(\\Delta t\\) \u3002 \u8ba1\u7b97TIM\u7684\u5bfc\u70ed\u7387 \\(k\\) \uff0cthermal conductivity $$ k=\\frac{\\Delta \\theta_{total}}{\\Delta t A} $$ \u6d4b\u8bd5\u8fc7\u7a0b\u5b8c\u6210\u3002 \u9700\u6ce8\u610f\u52a0\u70ed\u4e8c\u6781\u7ba1\u603b\u4f1a\u6709\u4e00\u90e8\u5206\u70ed\u91cf\u4f1a\u4ece\u5176\u4ed6\u9014\u5f84\u6563\u53d1\u5230\u5468\u56f4\u73af\u5883\u4e2d\uff0c\u56e0\u6b64\u4e0a\u9762\u7684\u8ba1\u7b97\u4e2d\u7528\u5230\u7684 \\(\\Delta P\\) \u4f1a\u5b58\u5728\u8bef\u5dee\uff0c\u8fd9\u90e8\u5206\u70ed\u91cf\u79f0\u4e3a\u5bc4\u751f\u635f\u5931\u70ed\u91cfparasitic heat loss\u3002 \u901a\u8fc7\u70ed\u901a\u91cf\u4f20\u611f\u5668\u6d4b\u91cf\u5bc4\u751f\u70ed\u91cf\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u603b\u70ed\u963b\u4e0e\u5bc4\u751f\u70ed\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u53ef\u4ee5\u770b\u5230\u5f53\u6d4b\u91cf\u7cfb\u7edf\u603b\u70ed\u963b\u4e3a15K/W\u65f6\uff0c\u5927\u7ea6\u670928%\u7684\u70ed\u91cf\u4ece\u5176\u5b83\u901a\u9053\u6563\u8d70\u3002 \u6b64\u5173\u7cfb\u8ddf\u5177\u4f53\u6d4b\u8bd5\u8bbe\u5907\u76f8\u5173\uff0c\u53ea\u505a\u53c2\u8003\u3002 \u6587\u7ae0\u6765\u6e90\uff1amentor.com \u6d4b\u8bd5\u6807\u51c6ASTM-D5470 \u52a0\u70ed\u677f\u7535\u6d41 \\(I_H\\) \uff0c\u5f85\u5e73\u8861\u72b6\u6001 \u51cf\u5c0f\u52a0\u70ed\u677f\u7535\u6d41\u5230 \\(I_S\\) \u8ba1\u7b97\u4e24\u79cd\u72b6\u6001\u4e0b\u52a0\u70ed\u4e8c\u6781\u7ba1\u7684\u6e29\u5ea6\u5dee \\(\\Delta T_j\\) \uff0c\u548c\u52a0\u70ed\u529f\u7387\u5dee \\(\\Delta P\\) \u3002\u5f97\u5230\u6574\u4e2a\u94fe\u8def\u7684\u70ed\u963b $$ \\theta_{total}=\\frac{\\Delta T_j}{\\Delta P} $$ \u5176\u4e2d \\(\\theta_{total}\\) \u5305\u542b\u6d4b\u8bd5\u6837\u54c1\u7684\u70ed\u963b\uff0c\u6d4b\u8bd5\u8bbe\u5907\u70ed\u963b\uff0c\u63a5\u89e6\u754c\u9762\u70ed\u963b\u3002 \u6539\u53d8TIM\u539a\u5ea6\uff0c\u91cd\u590d\u540c\u6837\u6d4b\u8bd5\u8ba1\u7b97\u70ed\u963b\u5dee \\(\\Delta \\theta_{total}\\) \uff0c\u5373\u53ef\u5f97\u51fa $$ \\Delta \\theta_{total}=\\Delta \\theta_{TIM} $$ \u6d4b\u91cf\u7684\u539a\u5ea6\u5dee\u4e3a \\(\\Delta t\\) \u3002 \u8ba1\u7b97TIM\u7684\u5bfc\u70ed\u7387 \\(k\\) \uff0cthermal conductivity $$ k=\\frac{\\Delta \\theta_{total}}{\\Delta t A} $$ \u6d4b\u8bd5\u8fc7\u7a0b\u5b8c\u6210\u3002 \u9700\u6ce8\u610f\u52a0\u70ed\u4e8c\u6781\u7ba1\u603b\u4f1a\u6709\u4e00\u90e8\u5206\u70ed\u91cf\u4f1a\u4ece\u5176\u4ed6\u9014\u5f84\u6563\u53d1\u5230\u5468\u56f4\u73af\u5883\u4e2d\uff0c\u56e0\u6b64\u4e0a\u9762\u7684\u8ba1\u7b97\u4e2d\u7528\u5230\u7684 \\(\\Delta P\\) \u4f1a\u5b58\u5728\u8bef\u5dee\uff0c\u8fd9\u90e8\u5206\u70ed\u91cf\u79f0\u4e3a\u5bc4\u751f\u635f\u5931\u70ed\u91cfparasitic heat loss\u3002 \u901a\u8fc7\u70ed\u901a\u91cf\u4f20\u611f\u5668\u6d4b\u91cf\u5bc4\u751f\u70ed\u91cf\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u603b\u70ed\u963b\u4e0e\u5bc4\u751f\u70ed\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u53ef\u4ee5\u770b\u5230\u5f53\u6d4b\u91cf\u7cfb\u7edf\u603b\u70ed\u963b\u4e3a15K/W\u65f6\uff0c\u5927\u7ea6\u670928%\u7684\u70ed\u91cf\u4ece\u5176\u5b83\u901a\u9053\u6563\u8d70\u3002 \u6b64\u5173\u7cfb\u8ddf\u5177\u4f53\u6d4b\u8bd5\u8bbe\u5907\u76f8\u5173\uff0c\u53ea\u505a\u53c2\u8003\u3002 \u6587\u7ae0\u6765\u6e90\uff1amentor.com","title":"\u56fa\u6001\u754c\u9762\u6750\u6599\u70ed\u7279\u6027\u6d4b\u91cf"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/","text":"\u56fe\u8868highcharts\u8054\u5408jquery ajax \u540e\u7aef\u53d6\u6570\u636e\u524d\u7aef\u56fe\u8868\u6e32\u67d3 rfyiamcool \u5173\u6ce8 9\u4eba\u8bc4\u8bba 13746\u4eba\u9605\u8bfb 2013-06-13 13:44:30 Highcharts\u662f\u4e00\u4e2a\u5236\u4f5c\u56fe\u8868\u7684\u7eafJavascript\u7c7b\u5e93\uff0c\u4e3b\u8981\u7279\u6027\u5982\u4e0b\uff1a \u517c\u5bb9\u6027\uff1a\u517c\u5bb9\u5f53\u4eca\u6240\u6709\u7684\u6d4f\u89c8\u5668\uff0c\u5305\u62eciPhone\u3001IE\u548c\u706b\u72d0\u7b49\u7b49\uff1b \u5bf9\u4e2a\u4eba\u7528\u6237\u5b8c\u5168\u514d\u8d39\uff1b \u7eafJS\uff0c\u65e0BS\uff1b \u652f\u6301\u5927\u90e8\u5206\u7684\u56fe\u8868\u7c7b\u578b\uff1a\u76f4\u7ebf\u56fe\uff0c\u66f2\u7ebf\u56fe\u3001\u533a\u57df\u56fe\u3001\u533a\u57df\u66f2\u7ebf\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u997c\u88c5\u56fe\u3001\u6563\u5e03\u56fe\uff1b \u8de8\u8bed\u8a00\uff1a\u4e0d\u7ba1\u662fPHP\u3001Asp.net\u8fd8\u662fJava\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u5b83\u53ea\u9700\u8981\u4e09\u4e2a\u6587\u4ef6\uff1a\u4e00\u4e2a\u662fHighcharts\u7684\u6838\u5fc3\u6587\u4ef6highcharts.js\uff0c\u8fd8\u6709a canvas emulator for IE\u548cJquery\u7c7b\u5e93\u6216\u8005MooTools\u7c7b\u5e93\uff1b \u63d0\u793a\u529f\u80fd\uff1a\u9f20\u6807\u79fb\u52a8\u5230\u56fe\u8868\u7684\u67d0\u4e00\u70b9\u4e0a\u6709\u63d0\u793a\u4fe1\u606f\uff1b \u653e\u5927\u529f\u80fd\uff1a\u9009\u4e2d\u56fe\u8868\u90e8\u5206\u653e\u5927\uff0c\u8fd1\u8ddd\u79bb\u89c2\u5bdf\u56fe\u8868\uff1b \u6613\u7528\u6027\uff1a\u65e0\u9700\u8981\u7279\u6b8a\u7684\u5f00\u53d1\u6280\u80fd\uff0c\u53ea\u9700\u8981\u8bbe\u7f6e\u4e00\u4e0b\u9009\u9879\u5c31\u53ef\u4ee5\u5236\u4f5c\u9002\u5408\u81ea\u5df1\u7684\u56fe\u8868\uff1b \u65f6\u95f4\u8f74\uff1a\u53ef\u4ee5\u7cbe\u786e\u5230\u6beb\u79d2\uff1b Highcharts\u63d0\u4f9b\u5927\u91cf\u7684\u9009\u9879\u914d\u7f6e\u53c2\u6570\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5b9a\u5236\u7b26\u5408\u7528\u6237\u8981\u6c42\u7684\u56fe\u8868\uff0c\u76ee\u524d\u5b98\u7f51\u53ea\u63d0\u4f9b\u82f1\u6587\u7248\u7684\u5f00\u53d1\u914d\u7f6e\u8bf4\u660e\u6587\u6863\uff0c\u800c\u4e2d\u6587\u7248\u7684\u6587\u6863\u7f51\u4e0a\u751a\u5c11\uff0c\u4e14\u96f6\u6563\u4e0d\u5168\u3002\u8fd9\u91cc\uff0c\u6211\u628aHighcharts\u5e38\u7528\u7684\u6700\u6838\u5fc3\u7684\u53c2\u6570\u9009\u9879\u914d\u7f6e\u6574\u7406\u6210\u6587\u6863\uff0c\u4e0e\u5927\u5bb6\u5206\u4eab\u3002 Chart\uff1a\u56fe\u8868\u533a\u9009\u9879 Chart\u56fe\u8868\u533a\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u533a\u76f8\u5173\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c backgroundColor \u8bbe\u7f6e\u56fe\u8868\u533a\u80cc\u666f\u8272 #FFFFFF borderWidth \u8bbe\u7f6e\u56fe\u8868\u8fb9\u6846\u5bbd\u5ea6 0 borderRadius \u8bbe\u7f6e\u56fe\u8868\u8fb9\u6846\u5706\u89d2\u89d2\u5ea6 5 renderTo \u56fe\u8868\u653e\u7f6e\u7684\u5bb9\u5668\uff0c\u4e00\u822c\u5728html\u4e2d\u653e\u7f6e\u4e00\u4e2aDIV\uff0c\u83b7\u53d6DIV\u7684id\u5c5e\u6027\u503c null defaultSeriesType \u9ed8\u8ba4\u56fe\u8868\u7c7b\u578bline, spline, area, areaspline, column, bar, pie , scatter 0 width \u56fe\u8868\u5bbd\u5ea6\uff0c\u9ed8\u8ba4\u6839\u636e\u56fe\u8868\u5bb9\u5668\u81ea\u9002\u5e94\u5bbd\u5ea6 null height \u56fe\u8868\u9ad8\u5ea6\uff0c\u9ed8\u8ba4\u6839\u636e\u56fe\u8868\u5bb9\u5668\u81ea\u9002\u5e94\u9ad8\u5ea6 null margin \u8bbe\u7f6e\u56fe\u8868\u4e0e\u5176\u4ed6\u5143\u7d20\u4e4b\u95f4\u7684\u95f4\u8ddd\uff0c\u6570\u7ec4\uff0c\u5982[0,0,0,0] [null] plotBackgroundColor \u4e3b\u56fe\u8868\u533a\u80cc\u666f\u8272\uff0c\u5373X\u8f74\u4e0eY\u8f74\u56f4\u6210\u7684\u533a\u57df\u7684\u80cc\u666f\u8272 null plotBorderColor \u4e3b\u56fe\u8868\u533a\u8fb9\u6846\u7684\u989c\u8272\uff0c\u5373X\u8f74\u4e0eY\u8f74\u56f4\u6210\u7684\u533a\u57df\u7684\u8fb9\u6846\u989c\u8272 null plotBorderWidth \u4e3b\u56fe\u8868\u533a\u8fb9\u6846\u7684\u5bbd\u5ea6 0 shadow \u662f\u5426\u8bbe\u7f6e\u9634\u5f71\uff0c\u9700\u8981\u8bbe\u7f6e\u80cc\u666f\u8272backgroundColor\u3002 false reflow \u662f\u5426\u81ea\u4f7f\u7528\u56fe\u8868\u533a\u57df\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6ewidth\u548cheight\u65f6\uff0c\u4f1a\u81ea\u9002\u5e94\u5927\u5c0f\u3002 true zoomType \u62d6\u52a8\u9f20\u6807\u8fdb\u884c\u7f29\u653e\uff0c\u6cbfx\u8f74\u6216y\u8f74\u8fdb\u884c\u7f29\u653e\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\uff1a'x','y','xy' '' events \u4e8b\u4ef6\u56de\u8c03\uff0c\u652f\u6301addSeries\u65b9\u6cd5\uff0cclick\u65b9\u6cd5\uff0cload\u65b9\u6cd5\uff0cselection\u65b9\u6cd5\u7b49\u7684\u56de\u8c03\u51fd\u6570\u3002 Color\uff1a\u989c\u8272\u9009\u9879 Color\u989c\u8272\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u7684\u989c\u8272\u65b9\u6848\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c color \u7528\u4e8e\u5c55\u793a\u56fe\u8868\uff0c\u6298\u7ebf/\u67f1\u72b6/\u997c\u72b6\u7b49\u56fe\u7684\u989c\u8272\uff0c\u6570\u7ec4\u5f62\u5f0f\u3002 array Highcharts\u5df2\u7ecf\u9ed8\u8ba4\u63d0\u4f9b\u4e86\u591a\u79cd\u989c\u8272\u65b9\u6848\uff0c\u5f53\u8981\u663e\u793a\u7684\u56fe\u5f62\u591a\u4e8e\u989c\u8272\u79cd\u7c7b\u65f6\uff0c\u591a\u51fa\u7684\u56fe\u5f62\u4f1a\u81ea\u52a8\u4ece\u7b2c\u4e00\u79cd\u989c\u8272\u65b9\u6848\u5f00\u59cb\u9009\u53d6\u3002\u81ea\u5b9a\u4e49\u989c\u8272\u65b9\u6848\u7684\u65b9\u6cd5\uff1a Highcharts.setOptions({ colors: ['#058DC7', '#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#FFF263', '#6AF9C4'] }); Title\uff1a\u6807\u9898\u9009\u9879 Title\u6807\u9898\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u7684\u6807\u9898\u76f8\u5173\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c text \u6807\u9898\u6587\u672c\u5185\u5bb9\u3002 Chart title align \u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f\u3002 center verticalAlign \u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f\u3002 top margin \u6807\u9898\u4e0e\u526f\u6807\u9898\u4e4b\u95f4\u6216\u8005\u4e3b\u56fe\u8868\u533a\u95f4\u7684\u95f4\u8ddd\u3002 15 floating \u662f\u5426\u6d6e\u52a8\uff0c\u5982\u679c\u4e3atrue\uff0c\u5219\u6807\u9898\u53ef\u4ee5\u504f\u79bb\u4e3b\u56fe\u8868\u533a\uff0c\u53ef\u914d\u5408x,y\u5c5e\u6027\u4f7f\u7528\u3002 false style \u8bbe\u7f6eCSS\u6837\u5f0f\u3002 {color: '#3E576F', fontSize: '16px'} Subtitle\uff1a\u526f\u6807\u9898\u9009\u9879 \u526f\u6807\u9898\u63d0\u4f9b\u7684\u5c5e\u6027\u9009\u9879\u4e0e\u6807\u9898title\u5927\u81f4\u76f8\u540c\uff0c\u53ef\u53c2\u7167\u4e0a\u8ff0\u6807\u9898\u9009\u9879\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\u526f\u6807\u9898\u7684text\u9009\u9879\u9ed8\u8ba4\u4e3a''\uff0c\u5373\u7a7a\u7684\uff0c\u6240\u4ee5\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u526f\u6807\u9898\u4e0d\u663e\u793a\u3002 xAxis\uff1aX\u8f74\u9009\u9879 X\u8f74\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868X\u8f74\u76f8\u5173\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c categories \u8bbe\u7f6eX\u8f74\u5206\u7c7b\u540d\u79f0\uff0c\u6570\u7ec4\uff0c\u4f8b\u5982\uff1acategories: ['Apples', 'Bananas', 'Oranges'] [] title X\u8f74\u540d\u79f0\uff0c\u652f\u6301text\u3001enabled\u3001align\u3001rotation\u3001style\u7b49\u5c5e\u6027 labels \u8bbe\u7f6eX\u8f74\u5404\u5206\u7c7b\u540d\u79f0\u7684\u6837\u5f0fstyle\uff0c\u683c\u5f0fformatter\uff0c\u89d2\u5ea6rotation\u7b49\u3002 array max X\u8f74\u6700\u5927\u503c(categories\u4e3a\u7a7a\u65f6)\uff0c\u5982\u679c\u4e3anull\uff0c\u5219\u6700\u5927\u503c\u4f1a\u6839\u636eX\u8f74\u6570\u636e\u81ea\u52a8\u5339\u914d\u4e00\u4e2a\u6700\u5927\u503c\u3002 null min X\u8f74\u6700\u5c0f\u503c(categories\u4e3a\u7a7a\u65f6)\uff0c\u5982\u679c\u4e3anull\uff0c\u5219\u6700\u5c0f\u503c\u4f1a\u6839\u636eX\u8f74\u6570\u636e\u81ea\u52a8\u5339\u914d\u4e00\u4e2a\u6700\u5c0f\u503c\u3002 array gridLineColor \u7f51\u683c\uff08\u7ad6\u7ebf\uff09\u989c\u8272 #C0C0C0 gridLineWidth \u7f51\u683c(\u7ad6\u7ebf)\u5bbd\u5ea6 1 lineColor \u57fa\u7ebf\u989c\u8272 #C0D0E0 lineWidth \u57fa\u7ebf\u5bbd\u5ea6 0 yAxis\uff1aY\u8f74\u9009\u9879 Y\u8f74\u9009\u9879\u4e0e\u4e0a\u8ff0xAxis\u9009\u9879\u57fa\u672c\u4e00\u81f4\uff0c\u8bf7\u53c2\u7167\u4e0a\u8868\u4e2d\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c\u4e0d\u518d\u5355\u72ec\u5217\u51fa\u3002 Series\uff1a\u6570\u636e\u5217\u9009\u9879 \u6570\u636e\u5217\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u4e2d\u8981\u5c55\u793a\u7684\u6570\u636e\u76f8\u5173\u7684\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c data \u663e\u793a\u5728\u56fe\u8868\u4e2d\u7684\u6570\u636e\u5217\uff0c\u53ef\u4ee5\u4e3a\u6570\u7ec4\u6216\u8005JSON\u683c\u5f0f\u7684\u6570\u636e\u3002\u5982\uff1adata:[0, 5, 3, 5]\uff0c\u6216 data: [{name: 'Point 1',y: 0}, {name: 'Point 2',y: 5}] '' name \u663e\u793a\u6570\u636e\u5217\u7684\u540d\u79f0\u3002 '' type \u6570\u636e\u5217\u7c7b\u578b\uff0c\u652f\u6301 area, areaspline, bar, column, line, pie, scatter or spline line plotOptions\uff1a\u6570\u636e\u70b9\u9009\u9879 plotOptions\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u4e2d\u7684\u6570\u636e\u70b9\u76f8\u5173\u5c5e\u6027\u3002plotOptions\u6839\u636e\u5404\u79cd\u56fe\u8868\u7c7b\u578b\uff0c\u5176\u5c5e\u6027\u8bbe\u7f6e\u7565\u5fae\u6709\u4e9b\u5dee\u5f02\uff0c\u73b0\u5c06\u5e38\u7528\u9009\u9879\u5217\u51fa\u6765\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c enabled \u662f\u5426\u5728\u6570\u636e\u70b9\u4e0a\u76f4\u63a5\u663e\u793a\u6570\u636e false allowPointSelect \u662f\u5426\u5141\u8bb8\u4f7f\u7528\u9f20\u6807\u9009\u4e2d\u6570\u636e\u70b9 false formatter \u56de\u8c03\u51fd\u6570\uff0c\u683c\u5f0f\u5316\u6570\u636e\u663e\u793a\u5185\u5bb9 formatter: function() {return this.y;} Tooltip\uff1a\u6570\u636e\u70b9\u63d0\u793a\u6846 Tooltip\u7528\u4e8e\u8bbe\u7f6e\u5f53\u9f20\u6807\u6ed1\u5411\u6570\u636e\u70b9\u65f6\u663e\u793a\u7684\u63d0\u793a\u6846\u4fe1\u606f\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c enabled \u662f\u5426\u663e\u793a\u63d0\u793a\u6846 true backgroundColor \u8bbe\u7f6e\u63d0\u793a\u6846\u7684\u80cc\u666f\u8272 rgba(255, 255, 255, .85) borderColor \u63d0\u793a\u6846\u8fb9\u6846\u989c\u8272\uff0c\u9ed8\u8ba4\u81ea\u52a8\u5339\u914d\u6570\u636e\u5217\u7684\u989c\u8272 auto borderRadius \u63d0\u793a\u6846\u5706\u89d2\u5ea6 5 shadow \u662f\u5426\u663e\u793a\u63d0\u793a\u6846\u9634\u5f71 true style \u8bbe\u7f6e\u63d0\u793a\u6846\u5185\u5bb9\u6837\u5f0f\uff0c\u5982\u5b57\u4f53\u989c\u8272\u7b49 color:'#333' formatter \u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u683c\u5f0f\u5316\u8f93\u51fa\u63d0\u793a\u6846\u7684\u663e\u793a\u5185\u5bb9\u3002\u8fd4\u56de\u7684\u5185\u5bb9\u652f\u6301html\u6807\u7b7e\u5982\uff1a , , , , , 2 Legend\uff1a\u56fe\u4f8b\u9009\u9879 legend\u7528\u4e8e\u8bbe\u7f6e\u56fe\u4f8b\u76f8\u5173\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c layout \u663e\u793a\u5f62\u5f0f\uff0c\u652f\u6301\u6c34\u5e73horizontal\u548c\u5782\u76f4vertical horizontal align \u5bf9\u9f50\u65b9\u5f0f\u3002 center backgroundColor \u56fe\u4f8b\u80cc\u666f\u8272\u3002 null borderColor \u56fe\u4f8b\u8fb9\u6846\u989c\u8272\u3002 #909090 borderRadius \u56fe\u4f8b\u8fb9\u6846\u89d2\u5ea6 5 enabled \u662f\u5426\u663e\u793a\u56fe\u4f8b true floating \u662f\u5426\u53ef\u4ee5\u6d6e\u52a8\uff0c\u914d\u5408x\uff0cy\u5c5e\u6027\u3002 false shadow \u662f\u5426\u663e\u793a\u9634\u5f71 false style \u8bbe\u7f6e\u56fe\u4f8b\u5185\u5bb9\u6837\u5f0f '' \u7b2c\u4e00\u4e2a\u4f8b\u5b50\uff1a \u8fd9\u4e2a\u662f\u4ece\u540e\u7aefapi\u53d6\u503c\uff0c\u540e\u7aef\u518d\u4ece\u6570\u636e\u5e93\u91cc\u53d6\u503c\u3002 \u4e3a\u4e86\u4e0d\u8ba9\u6574\u4e2a\u9875\u9762\u5237\u65b0\uff0c\u7528\u4e86ajax\u505a\u5c40\u90e8\u5237\u65b0 $ ( function () { $ ( document ). ready ( function () { //////// // Mysql Questions //////// var mysqlQuestionsOptions = { chart : { renderTo : 'mysql-questions-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per second' }, min : 0 }, series : [{ name : 'Select' },{ name : 'Insert' },{ name : 'Replace' },{ name : 'Update' },{ name : 'Delete' }] }; $ . ajax ({ url : 'stats/mysql/questions' , dataType : \"json\" , success : function ( data ) { //init series arays select_arr = []; insert_arr = []; replace_arr = []; update_arr = []; delete_arr =[]; for ( i in data ) { //build var r = data [ i ]; select_arr . push ([ r . ts , r . Select_per_second ]); insert_arr . push ([ r . ts , r . Insert_per_second ]); replace_arr . push ([ r . ts , r . Replace_per_second ]); update_arr . push ([ r . ts , r . Update_per_second ]); delete_arr . push ([ r . ts , r . Delete_per_second ]); } //save series mysqlQuestionsOptions . series [ 0 ]. data = select_arr ; mysqlQuestionsOptions . series [ 1 ]. data = insert_arr ; mysqlQuestionsOptions . series [ 2 ]. data = replace_arr ; mysqlQuestionsOptions . series [ 3 ]. data = update_arr ; mysqlQuestionsOptions . series [ 4 ]. data = delete_arr ; var chart = new Highcharts . Chart ( mysqlQuestionsOptions ); }, cache : false }); //////// // Mysql Select Sort //////// var mysqlSelectSortOptions = { chart : { renderTo : 'mysql-select-sort-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per second' }, min : 0 }, series : [{ name : 'Select Scan' },{ name : 'Select Range' },{ name : 'Select Full Join' },{ name : 'Select Range Check' },{ name : 'Select Full Range Join' },{ name : 'Sort Scan' },{ name : 'Sort Range' },{ name : 'Sort Merge Passes' }] }; $ . ajax ({ url : 'stats/mysql/select_sort' , dataType : \"json\" , success : function ( data ) { //init series arays select_scan_arr = []; select_range_arr = []; select_full_join_arr = []; select_range_check_arr = []; select_full_range_join_arr =[]; sort_scan_arr =[]; sort_range_arr =[]; sort_merge_passes_arr =[]; for ( i in data ) { //build var r = data [ i ]; select_scan_arr . push ([ r . ts , r . Select_scan_per_sec ]); select_range_arr . push ([ r . ts , r . Select_range_per_sec ]); select_full_join_arr . push ([ r . ts , r . Select_full_join_per_sec ]); select_range_check_arr . push ([ r . ts , r . Select_range_check_per_sec ]); select_full_range_join_arr . push ([ r . ts , r . Select_full_range_join_per_sec ]); sort_scan_arr . push ([ r . ts , r . Sort_scan_per_sec ]); sort_range_arr . push ([ r . ts , r . Sort_range_per_sec ]); sort_merge_passes_arr . push ([ r . ts , r . Sort_merge_passes_per_sec ]); } //save series mysqlSelectSortOptions . series [ 0 ]. data = select_scan_arr ; mysqlSelectSortOptions . series [ 1 ]. data = select_range_arr ; mysqlSelectSortOptions . series [ 2 ]. data = select_full_join_arr ; mysqlSelectSortOptions . series [ 3 ]. data = select_range_check_arr ; mysqlSelectSortOptions . series [ 4 ]. data = select_full_range_join_arr ; mysqlSelectSortOptions . series [ 5 ]. data = sort_scan_arr ; mysqlSelectSortOptions . series [ 6 ]. data = sort_range_arr ; mysqlSelectSortOptions . series [ 7 ]. data = sort_merge_passes_arr ; var chart = new Highcharts . Chart ( mysqlSelectSortOptions ); }, cache : false }); //////// // Mysql Connections //////// var mysqlConnectionsOptions = { chart : { renderTo : 'mysql-connections-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : [{ title : { text : 'per second' }, min : 0 },{ title : { text : 'count' }, min : 0 , opposite : true }], series : [{ name : 'Max Connections' , yAxis : 1 , type : 'area' },{ name : 'Max Used Connections' , yAxis : 1 , type : 'area' },{ name : 'Process Count' , yAxis : 1 , type : 'area' },{ name : 'Running Process Count' , yAxis : 1 },{ name : 'Connection Rate' , yAxis : 0 },{ name : 'Aborted connects Rate' , yAxis : 0 },{ name : 'Aborted clients Rate' , yAxis : 0 }] }; $ . ajax ({ url : 'stats/mysql/connections' , dataType : \"json\" , success : function ( data ) { //init series arays connections_arr = []; aborted_connects_arr = []; aborted_clients_arr = []; max_used_connections_arr = []; max_connections_arr =[]; process_count_arr = []; running_process_count_arr =[]; for ( i in data ) { //build var r = data [ i ]; connections_arr . push ([ r . ts , r . Connections_per_second ]); aborted_connects_arr . push ([ r . ts , r . Aborted_connects_per_second ]); aborted_clients_arr . push ([ r . ts , r . Aborted_clients_per_second ]); max_used_connections_arr . push ([ r . ts , r . max_used_connections ]); max_connections_arr . push ([ r . ts , r . max_connections ]); process_count_arr . push ([ r . ts , r . process_count ]); running_process_count_arr . push ([ r . ts , r . process_count_non_sleep ]); } //save series mysqlConnectionsOptions . series [ 4 ]. data = connections_arr ; mysqlConnectionsOptions . series [ 5 ]. data = aborted_connects_arr ; mysqlConnectionsOptions . series [ 6 ]. data = aborted_clients_arr ; mysqlConnectionsOptions . series [ 0 ]. data = max_connections_arr ; mysqlConnectionsOptions . series [ 1 ]. data = max_used_connections_arr ; mysqlConnectionsOptions . series [ 2 ]. data = process_count_arr ; mysqlConnectionsOptions . series [ 3 ]. data = running_process_count_arr ; var chart = new Highcharts . Chart ( mysqlConnectionsOptions ); }, cache : false }); //////// // Mysql Bytes //////// var mysqlBytesOptions = { chart : { renderTo : 'mysql-bytes-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'kBps' }, min : 0 }, series : [{ name : 'Sent' },{ name : 'Recieved' }] }; $ . ajax ({ url : 'stats/mysql/bytes' , dataType : \"json\" , success : function ( data ) { //init series arays sent = []; recieved =[]; for ( i in data ) { //build var r = data [ i ]; sent . push ([ r . ts , r . kBps_sent ]); recieved . push ([ r . ts , r . kBps_recieved ]); } //save series mysqlBytesOptions . series [ 0 ]. data = sent ; mysqlBytesOptions . series [ 1 ]. data = recieved ; var chart = new Highcharts . Chart ( mysqlBytesOptions ); }, cache : false }); //////// // Mysql Temp //////// var mysqlTempOptions = { chart : { renderTo : 'mysql-temp-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per minute' }, min : 0 }, series : [{ name : 'Created Tmp Disk Tables' },{ name : 'Created Tmp Tables' },{ name : 'Created Tmp Files' }] }; $ . ajax ({ url : 'stats/mysql/temp' , dataType : \"json\" , success : function ( data ) { //init series arays tmp_disk_tables = []; tmp_tables = []; tmp_files = []; for ( i in data ) { //build var r = data [ i ]; tmp_disk_tables . push ([ r . ts , r . Created_tmp_disk_tables_per_min ]); tmp_tables . push ([ r . ts , r . Created_tmp_tables_per_min ]); tmp_files . push ([ r . ts , r . Created_tmp_files_per_min ]); } //save series mysqlTempOptions . series [ 0 ]. data = tmp_disk_tables ; mysqlTempOptions . series [ 1 ]. data = tmp_tables ; mysqlTempOptions . series [ 2 ]. data = tmp_files ; var chart = new Highcharts . Chart ( mysqlTempOptions ); }, cache : false }); //////// // Mysql Table Locks //////// var mysqlTableLocksOptions = { chart : { renderTo : 'mysql-table-locks-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per second' }, min : 0 }, series : [{ name : 'Table locks wait' },{ name : 'Table locks immediate' }] }; $ . ajax ({ url : 'stats/mysql/table_locks' , dataType : \"json\" , success : function ( data ) { //init series arays wait = []; immediate = []; for ( i in data ) { //build var r = data [ i ]; wait . push ([ r . ts , r . Table_locks_wait_per_sec ]); immediate . push ([ r . ts , r . Table_locks_immediate_per_sec ]); } //save series mysqlTableLocksOptions . series [ 0 ]. data = wait ; mysqlTableLocksOptions . series [ 1 ]. data = immediate ; var chart = new Highcharts . Chart ( mysqlTableLocksOptions ); }, cache : false }); //////// // Mysql Innodb Buffer Pool Usage //////// var mysqlInnoDBBPOptions = { chart : { renderTo : 'mysql-innodb-bp-container' , type : 'area' }, title : { text : 'Buffer Pool Usage' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : [{ title : { text : 'MBytes' }, min : 0 },{ title : { text : 'Hit Rate %' }, min : 0 , max : 100 , opposite : true }], series : [{ name : 'Buffer Pool Total' },{ name : 'Buffer Pool Used' },{ name : 'Read Hit Rate' , type : 'spline' , yAxis : 1 }] }; //////// // Mysql Innodb //////// var mysqlInnoDBOptions = { chart : { renderTo : 'mysql-innodb-container' , type : 'spline' }, title : { text : 'InnoDB Stats' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per second' }, min : 0 }, series : [{ name : 'Buffer Pool Read Request' },{ name : 'Buffer Pool Reads' },{ name : 'Buffer Pool Read Ahead Rnd' },{ name : 'Buffer Pool Read Ahead Seq' },{ name : 'Buffer Pool Write Request' },{ name : 'Buffer Pool Pages Flushed' },{ name : 'Buffer Pool Wait Free' },{ name : 'Row Lock Waits' },{ name : 'Data Reads' },{ name : 'Data Writes' },{ name : 'Data Fsyncs' },{ name : 'Pages Created' },{ name : 'Pages Read' },{ name : 'Pages Written' },{ name : 'Rows Deleted' },{ name : 'Rows Inserted' },{ name : 'Rows Read' },{ name : 'Rows Updated' }] }; $ . ajax ({ url : 'stats/mysql/innodb' , dataType : \"json\" , success : function ( data ) { //init series arays bp_used = []; bp_total = []; bp_read_ratio = []; bp_read_requests = []; bp_reads = [] bp_read_rnd = []; bp_read_seq = []; bp_write_req = []; bp_pages_flush = []; bp_wait_free = []; row_lock_waits = []; data_reads = []; data_write = []; data_fsyncs = []; pages_created = []; pages_read = []; pages_written = []; rows_deleted = []; rows_inserted = []; rows_read = []; rows_updated = []; for ( i in data ) { //build var r = data [ i ]; bp_used . push ([ r . ts , r . Innodb_buffer_pool_used_mb ]); bp_total . push ([ r . ts , r . Innodb_buffer_pool_total_mb ]); bp_read_ratio . push ([ r . ts , r . Innodb_buffer_pool_read_ratio ]); bp_read_requests . push ([ r . ts , r . Innodb_buffer_pool_read_requests_per_second ]); bp_reads . push ([ r . ts , r . Innodb_buffer_pool_reads_per_second ]); bp_read_rnd . push ([ r . ts , r . Innodb_buffer_pool_read_ahead_rnd_per_second ]); bp_read_seq . push ([ r . ts , r . Innodb_buffer_pool_read_ahead_seq_per_second ]); bp_write_req . push ([ r . ts , r . Innodb_buffer_pool_write_requests_per_second ]); bp_pages_flush . push ([ r . ts , r . Innodb_buffer_pool_pages_flushed_per_second ]); bp_wait_free . push ([ r . ts , r . Innodb_buffer_pool_wait_free_per_second ]); row_lock_waits . push ([ r . ts , r . Innodb_row_lock_waits_per_second ]); data_reads . push ([ r . ts , r . Innodb_data_reads_per_second ]); data_write . push ([ r . ts , r . Innodb_data_writes_per_second ]); data_fsyncs . push ([ r . ts , r . Innodb_data_fsyncs_per_second ]); pages_created . push ([ r . ts , r . Innodb_pages_created_per_second ]); pages_read . push ([ r . ts , r . Innodb_pages_read_per_second ]); pages_written . push ([ r . ts , r . Innodb_pages_written_per_second ]); rows_deleted . push ([ r . ts , r . Innodb_rows_deleted_per_second ]); rows_inserted . push ([ r . ts , r . Innodb_rows_inserted_per_second ]); rows_read . push ([ r . ts , r . Innodb_rows_read_per_second ]); rows_updated . push ([ r . ts , r . Innodb_rows_updated_per_second ]); } //save series mysqlInnoDBBPOptions . series [ 1 ]. data = bp_used ; mysqlInnoDBBPOptions . series [ 0 ]. data = bp_total ; mysqlInnoDBBPOptions . series [ 2 ]. data = bp_read_ratio ; mysqlInnoDBOptions . series [ 0 ]. data = bp_read_requests ; mysqlInnoDBOptions . series [ 1 ]. data = bp_reads ; mysqlInnoDBOptions . series [ 2 ]. data = bp_read_rnd ; mysqlInnoDBOptions . series [ 3 ]. data = bp_read_seq ; mysqlInnoDBOptions . series [ 4 ]. data = bp_write_req ; mysqlInnoDBOptions . series [ 5 ]. data = bp_pages_flush ; mysqlInnoDBOptions . series [ 6 ]. data = bp_wait_free ; mysqlInnoDBOptions . series [ 7 ]. data = row_lock_waits ; mysqlInnoDBOptions . series [ 8 ]. data = data_reads ; mysqlInnoDBOptions . series [ 9 ]. data = data_write ; mysqlInnoDBOptions . series [ 10 ]. data = data_fsyncs ; mysqlInnoDBOptions . series [ 11 ]. data = pages_created ; mysqlInnoDBOptions . series [ 12 ]. data = pages_read ; mysqlInnoDBOptions . series [ 13 ]. data = pages_written ; mysqlInnoDBOptions . series [ 14 ]. data = rows_deleted ; mysqlInnoDBOptions . series [ 15 ]. data = rows_inserted ; mysqlInnoDBOptions . series [ 16 ]. data = rows_updated ; var chart = new Highcharts . Chart ( mysqlInnoDBBPOptions ); chart = new Highcharts . Chart ( mysqlInnoDBOptions ); }, cache : false }); }); }); $ ( document ). scroll ( function (){ // If has not activated (has no attribute \"data-top\" if (! $ ( '.subnav' ). attr ( 'data-top' )) { // If already fixed, then do nothing if ( $ ( '.subnav' ). hasClass ( 'subnav-fixed' )) return ; // Remember top position var offset = $ ( '.subnav' ). offset (); $ ( '.subnav' ). attr ( 'data-top' , offset . top ); } if ( $ ( '.subnav' ). attr ( 'data-top' ) - $ ( '.subnav' ). outerHeight () <= $ ( this ). scrollTop ()) $ ( '.subnav' ). addClass ( 'subnav-fixed' ); else $ ( '.subnav' ). removeClass ( 'subnav-fixed' ); }); \u7b2c\u4e8c\u4e2a\u4f8b\u5b50 \u8fd9\u4e2a\u548c\u524d\u9762\u662f\u4e00\u6837\u7684\u65b9\u5f0f\uff0c\u8fd9\u91cc\u505a\u4e86\u591a\u4e2a\u5f15\u7528\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u753b\u591a\u6761\u7ebf\u8def \u8fd9\u4e2a\u56fe\u4e0d\u662f\u6211\u8fd9\u7684\uff0c\u4f46\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u884c\u7684\u901a\u7684\uff0c\u53ef\u4ee5\u653e\u5230\u4e00\u4e2ajs\u91cc\u9762\u5f15\u7528\uff0c\u7136\u540e\u901a\u8fc7ajax\u4f20\u503c\u8fc7\u53bb\uff0c\u5728\u524d\u7aef\u8fdb\u884c\u6570\u636e\u7684\u6e32\u67d3\u3002 var charts = new Array (); var serverCount = 6 ; var lastTimes = new Array (); var max = $ { params . int ( \"max\" )?: 120 }; $ ( document ). ready ( function () { Highcharts . setOptions ({ global : { useUTC : false } }); for ( var i = 0 ; i < serverCount ; i ++) { charts [ i ] = new Highcharts . Chart ({ chart : { renderTo : 'container' + i , type : 'spline' , events : { load : function () { // set up the updating of the chart each second var series = this . series ; var serverIndex = i ; lastTimes [ serverIndex ] = 0 ; var loadData = function () { $ . getJSON ( \"http://${request.serverName}:${request.serverPort}${request.contextPath}/toolkits/queryStatistics.gsp\" , { \"lasTime\" : lastTimes [ serverIndex ], \"proxy\" : true , \"index\" : serverIndex , \"max\" : max }, function ( data ) { for ( var k = 0 ; k < series . length ; k ++) { for ( var j = 0 ; j < data [ k ]. length ; j ++) { var point = data [ k ][ j ]; var isShift = series [ k ]. data . length >= max ; console . log ( \"series \" + k + \".data.length=\" + series [ k ]. data . length ); var lastTime = 0 ; if ( series [ k ]. data . length > 0 ) lastTime = series [ k ]. data [ series [ k ]. data . length - 1 ]. x ; if ( point [ 0 ] > lastTime ) series [ k ]. addPoint ([ point [ 0 ], point [ 1 ]], true , isShift ); lastTimes [ serverIndex ] = point [ 0 ]; } } }) }; loadData (); setInterval ( loadData , 60000 ); } } }, title : { text : '\u8bbf\u95ee\u91cf\u5b9e\u65f6\u76d1\u63a7' }, xAxis : [ { type : 'datetime' , tickPixelInterval : 120 } ], yAxis : [ { title : { text : '\u603b\u8bf7\u6c42/\u5206\u949f' , style : { color : '#3E576F' } } }, { title : { text : '\u5e73\u5747\u54cd\u5e94\u65f6\u95f4' , style : { color : '#00AA00' } }, opposite : true } ], plotOptions : { spline : { marker :{ enabled : false , states : { hover : { enabled : true , symbol : 'circle' , radius : 5 , lineWidth : 1 } } } } }, tooltip : { formatter : function () { return '<b>' + this . series . name + '</b><br/>' + Highcharts . dateFormat ( '%Y-%m-%d %H:%M:%S' , this . x ) + '<br/>' + Highcharts . numberFormat ( this . y , 2 ); } }, legend : { enabled : true }, exporting : { enabled : false }, series : [ { name : '\u603b\u8bf7\u6c42\u6570' , data : [] }, { name : '\u9519\u8bef\u8bf7\u6c42\u6570' , data : [] }, { name : '\u5e73\u5747\u54cd\u5e94\u65f6\u95f4' , yAxis : 1 , data : [] } ] }); } })","title":"\u56fe\u8868highcharts\u8054\u5408jquery ajax \u540e\u7aef\u53d6\u6570\u636e\u524d\u7aef\u56fe\u8868\u6e32\u67d3"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#highchartsjquery-ajax","text":"rfyiamcool \u5173\u6ce8 9\u4eba\u8bc4\u8bba 13746\u4eba\u9605\u8bfb 2013-06-13 13:44:30 Highcharts\u662f\u4e00\u4e2a\u5236\u4f5c\u56fe\u8868\u7684\u7eafJavascript\u7c7b\u5e93\uff0c\u4e3b\u8981\u7279\u6027\u5982\u4e0b\uff1a \u517c\u5bb9\u6027\uff1a\u517c\u5bb9\u5f53\u4eca\u6240\u6709\u7684\u6d4f\u89c8\u5668\uff0c\u5305\u62eciPhone\u3001IE\u548c\u706b\u72d0\u7b49\u7b49\uff1b \u5bf9\u4e2a\u4eba\u7528\u6237\u5b8c\u5168\u514d\u8d39\uff1b \u7eafJS\uff0c\u65e0BS\uff1b \u652f\u6301\u5927\u90e8\u5206\u7684\u56fe\u8868\u7c7b\u578b\uff1a\u76f4\u7ebf\u56fe\uff0c\u66f2\u7ebf\u56fe\u3001\u533a\u57df\u56fe\u3001\u533a\u57df\u66f2\u7ebf\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u997c\u88c5\u56fe\u3001\u6563\u5e03\u56fe\uff1b \u8de8\u8bed\u8a00\uff1a\u4e0d\u7ba1\u662fPHP\u3001Asp.net\u8fd8\u662fJava\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u5b83\u53ea\u9700\u8981\u4e09\u4e2a\u6587\u4ef6\uff1a\u4e00\u4e2a\u662fHighcharts\u7684\u6838\u5fc3\u6587\u4ef6highcharts.js\uff0c\u8fd8\u6709a canvas emulator for IE\u548cJquery\u7c7b\u5e93\u6216\u8005MooTools\u7c7b\u5e93\uff1b \u63d0\u793a\u529f\u80fd\uff1a\u9f20\u6807\u79fb\u52a8\u5230\u56fe\u8868\u7684\u67d0\u4e00\u70b9\u4e0a\u6709\u63d0\u793a\u4fe1\u606f\uff1b \u653e\u5927\u529f\u80fd\uff1a\u9009\u4e2d\u56fe\u8868\u90e8\u5206\u653e\u5927\uff0c\u8fd1\u8ddd\u79bb\u89c2\u5bdf\u56fe\u8868\uff1b \u6613\u7528\u6027\uff1a\u65e0\u9700\u8981\u7279\u6b8a\u7684\u5f00\u53d1\u6280\u80fd\uff0c\u53ea\u9700\u8981\u8bbe\u7f6e\u4e00\u4e0b\u9009\u9879\u5c31\u53ef\u4ee5\u5236\u4f5c\u9002\u5408\u81ea\u5df1\u7684\u56fe\u8868\uff1b \u65f6\u95f4\u8f74\uff1a\u53ef\u4ee5\u7cbe\u786e\u5230\u6beb\u79d2\uff1b Highcharts\u63d0\u4f9b\u5927\u91cf\u7684\u9009\u9879\u914d\u7f6e\u53c2\u6570\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5b9a\u5236\u7b26\u5408\u7528\u6237\u8981\u6c42\u7684\u56fe\u8868\uff0c\u76ee\u524d\u5b98\u7f51\u53ea\u63d0\u4f9b\u82f1\u6587\u7248\u7684\u5f00\u53d1\u914d\u7f6e\u8bf4\u660e\u6587\u6863\uff0c\u800c\u4e2d\u6587\u7248\u7684\u6587\u6863\u7f51\u4e0a\u751a\u5c11\uff0c\u4e14\u96f6\u6563\u4e0d\u5168\u3002\u8fd9\u91cc\uff0c\u6211\u628aHighcharts\u5e38\u7528\u7684\u6700\u6838\u5fc3\u7684\u53c2\u6570\u9009\u9879\u914d\u7f6e\u6574\u7406\u6210\u6587\u6863\uff0c\u4e0e\u5927\u5bb6\u5206\u4eab\u3002","title":"\u56fe\u8868highcharts\u8054\u5408jquery ajax \u540e\u7aef\u53d6\u6570\u636e\u524d\u7aef\u56fe\u8868\u6e32\u67d3"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#chart","text":"Chart\u56fe\u8868\u533a\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u533a\u76f8\u5173\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c backgroundColor \u8bbe\u7f6e\u56fe\u8868\u533a\u80cc\u666f\u8272 #FFFFFF borderWidth \u8bbe\u7f6e\u56fe\u8868\u8fb9\u6846\u5bbd\u5ea6 0 borderRadius \u8bbe\u7f6e\u56fe\u8868\u8fb9\u6846\u5706\u89d2\u89d2\u5ea6 5 renderTo \u56fe\u8868\u653e\u7f6e\u7684\u5bb9\u5668\uff0c\u4e00\u822c\u5728html\u4e2d\u653e\u7f6e\u4e00\u4e2aDIV\uff0c\u83b7\u53d6DIV\u7684id\u5c5e\u6027\u503c null defaultSeriesType \u9ed8\u8ba4\u56fe\u8868\u7c7b\u578bline, spline, area, areaspline, column, bar, pie , scatter 0 width \u56fe\u8868\u5bbd\u5ea6\uff0c\u9ed8\u8ba4\u6839\u636e\u56fe\u8868\u5bb9\u5668\u81ea\u9002\u5e94\u5bbd\u5ea6 null height \u56fe\u8868\u9ad8\u5ea6\uff0c\u9ed8\u8ba4\u6839\u636e\u56fe\u8868\u5bb9\u5668\u81ea\u9002\u5e94\u9ad8\u5ea6 null margin \u8bbe\u7f6e\u56fe\u8868\u4e0e\u5176\u4ed6\u5143\u7d20\u4e4b\u95f4\u7684\u95f4\u8ddd\uff0c\u6570\u7ec4\uff0c\u5982[0,0,0,0] [null] plotBackgroundColor \u4e3b\u56fe\u8868\u533a\u80cc\u666f\u8272\uff0c\u5373X\u8f74\u4e0eY\u8f74\u56f4\u6210\u7684\u533a\u57df\u7684\u80cc\u666f\u8272 null plotBorderColor \u4e3b\u56fe\u8868\u533a\u8fb9\u6846\u7684\u989c\u8272\uff0c\u5373X\u8f74\u4e0eY\u8f74\u56f4\u6210\u7684\u533a\u57df\u7684\u8fb9\u6846\u989c\u8272 null plotBorderWidth \u4e3b\u56fe\u8868\u533a\u8fb9\u6846\u7684\u5bbd\u5ea6 0 shadow \u662f\u5426\u8bbe\u7f6e\u9634\u5f71\uff0c\u9700\u8981\u8bbe\u7f6e\u80cc\u666f\u8272backgroundColor\u3002 false reflow \u662f\u5426\u81ea\u4f7f\u7528\u56fe\u8868\u533a\u57df\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6ewidth\u548cheight\u65f6\uff0c\u4f1a\u81ea\u9002\u5e94\u5927\u5c0f\u3002 true zoomType \u62d6\u52a8\u9f20\u6807\u8fdb\u884c\u7f29\u653e\uff0c\u6cbfx\u8f74\u6216y\u8f74\u8fdb\u884c\u7f29\u653e\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\uff1a'x','y','xy' '' events \u4e8b\u4ef6\u56de\u8c03\uff0c\u652f\u6301addSeries\u65b9\u6cd5\uff0cclick\u65b9\u6cd5\uff0cload\u65b9\u6cd5\uff0cselection\u65b9\u6cd5\u7b49\u7684\u56de\u8c03\u51fd\u6570\u3002","title":"Chart\uff1a\u56fe\u8868\u533a\u9009\u9879"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#color","text":"Color\u989c\u8272\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u7684\u989c\u8272\u65b9\u6848\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c color \u7528\u4e8e\u5c55\u793a\u56fe\u8868\uff0c\u6298\u7ebf/\u67f1\u72b6/\u997c\u72b6\u7b49\u56fe\u7684\u989c\u8272\uff0c\u6570\u7ec4\u5f62\u5f0f\u3002 array Highcharts\u5df2\u7ecf\u9ed8\u8ba4\u63d0\u4f9b\u4e86\u591a\u79cd\u989c\u8272\u65b9\u6848\uff0c\u5f53\u8981\u663e\u793a\u7684\u56fe\u5f62\u591a\u4e8e\u989c\u8272\u79cd\u7c7b\u65f6\uff0c\u591a\u51fa\u7684\u56fe\u5f62\u4f1a\u81ea\u52a8\u4ece\u7b2c\u4e00\u79cd\u989c\u8272\u65b9\u6848\u5f00\u59cb\u9009\u53d6\u3002\u81ea\u5b9a\u4e49\u989c\u8272\u65b9\u6848\u7684\u65b9\u6cd5\uff1a Highcharts.setOptions({ colors: ['#058DC7', '#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#FFF263', '#6AF9C4'] });","title":"Color\uff1a\u989c\u8272\u9009\u9879"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#title","text":"Title\u6807\u9898\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u7684\u6807\u9898\u76f8\u5173\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c text \u6807\u9898\u6587\u672c\u5185\u5bb9\u3002 Chart title align \u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f\u3002 center verticalAlign \u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f\u3002 top margin \u6807\u9898\u4e0e\u526f\u6807\u9898\u4e4b\u95f4\u6216\u8005\u4e3b\u56fe\u8868\u533a\u95f4\u7684\u95f4\u8ddd\u3002 15 floating \u662f\u5426\u6d6e\u52a8\uff0c\u5982\u679c\u4e3atrue\uff0c\u5219\u6807\u9898\u53ef\u4ee5\u504f\u79bb\u4e3b\u56fe\u8868\u533a\uff0c\u53ef\u914d\u5408x,y\u5c5e\u6027\u4f7f\u7528\u3002 false style \u8bbe\u7f6eCSS\u6837\u5f0f\u3002 {color: '#3E576F', fontSize: '16px'}","title":"Title\uff1a\u6807\u9898\u9009\u9879"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#subtitle","text":"\u526f\u6807\u9898\u63d0\u4f9b\u7684\u5c5e\u6027\u9009\u9879\u4e0e\u6807\u9898title\u5927\u81f4\u76f8\u540c\uff0c\u53ef\u53c2\u7167\u4e0a\u8ff0\u6807\u9898\u9009\u9879\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\u526f\u6807\u9898\u7684text\u9009\u9879\u9ed8\u8ba4\u4e3a''\uff0c\u5373\u7a7a\u7684\uff0c\u6240\u4ee5\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u526f\u6807\u9898\u4e0d\u663e\u793a\u3002","title":"Subtitle\uff1a\u526f\u6807\u9898\u9009\u9879"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#xaxisx","text":"X\u8f74\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868X\u8f74\u76f8\u5173\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c categories \u8bbe\u7f6eX\u8f74\u5206\u7c7b\u540d\u79f0\uff0c\u6570\u7ec4\uff0c\u4f8b\u5982\uff1acategories: ['Apples', 'Bananas', 'Oranges'] [] title X\u8f74\u540d\u79f0\uff0c\u652f\u6301text\u3001enabled\u3001align\u3001rotation\u3001style\u7b49\u5c5e\u6027 labels \u8bbe\u7f6eX\u8f74\u5404\u5206\u7c7b\u540d\u79f0\u7684\u6837\u5f0fstyle\uff0c\u683c\u5f0fformatter\uff0c\u89d2\u5ea6rotation\u7b49\u3002 array max X\u8f74\u6700\u5927\u503c(categories\u4e3a\u7a7a\u65f6)\uff0c\u5982\u679c\u4e3anull\uff0c\u5219\u6700\u5927\u503c\u4f1a\u6839\u636eX\u8f74\u6570\u636e\u81ea\u52a8\u5339\u914d\u4e00\u4e2a\u6700\u5927\u503c\u3002 null min X\u8f74\u6700\u5c0f\u503c(categories\u4e3a\u7a7a\u65f6)\uff0c\u5982\u679c\u4e3anull\uff0c\u5219\u6700\u5c0f\u503c\u4f1a\u6839\u636eX\u8f74\u6570\u636e\u81ea\u52a8\u5339\u914d\u4e00\u4e2a\u6700\u5c0f\u503c\u3002 array gridLineColor \u7f51\u683c\uff08\u7ad6\u7ebf\uff09\u989c\u8272 #C0C0C0 gridLineWidth \u7f51\u683c(\u7ad6\u7ebf)\u5bbd\u5ea6 1 lineColor \u57fa\u7ebf\u989c\u8272 #C0D0E0 lineWidth \u57fa\u7ebf\u5bbd\u5ea6 0","title":"xAxis\uff1aX\u8f74\u9009\u9879"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#yaxisy","text":"Y\u8f74\u9009\u9879\u4e0e\u4e0a\u8ff0xAxis\u9009\u9879\u57fa\u672c\u4e00\u81f4\uff0c\u8bf7\u53c2\u7167\u4e0a\u8868\u4e2d\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c\u4e0d\u518d\u5355\u72ec\u5217\u51fa\u3002","title":"yAxis\uff1aY\u8f74\u9009\u9879"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#series","text":"\u6570\u636e\u5217\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u4e2d\u8981\u5c55\u793a\u7684\u6570\u636e\u76f8\u5173\u7684\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c data \u663e\u793a\u5728\u56fe\u8868\u4e2d\u7684\u6570\u636e\u5217\uff0c\u53ef\u4ee5\u4e3a\u6570\u7ec4\u6216\u8005JSON\u683c\u5f0f\u7684\u6570\u636e\u3002\u5982\uff1adata:[0, 5, 3, 5]\uff0c\u6216 data: [{name: 'Point 1',y: 0}, {name: 'Point 2',y: 5}] '' name \u663e\u793a\u6570\u636e\u5217\u7684\u540d\u79f0\u3002 '' type \u6570\u636e\u5217\u7c7b\u578b\uff0c\u652f\u6301 area, areaspline, bar, column, line, pie, scatter or spline line","title":"Series\uff1a\u6570\u636e\u5217\u9009\u9879"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#plotoptions","text":"plotOptions\u7528\u4e8e\u8bbe\u7f6e\u56fe\u8868\u4e2d\u7684\u6570\u636e\u70b9\u76f8\u5173\u5c5e\u6027\u3002plotOptions\u6839\u636e\u5404\u79cd\u56fe\u8868\u7c7b\u578b\uff0c\u5176\u5c5e\u6027\u8bbe\u7f6e\u7565\u5fae\u6709\u4e9b\u5dee\u5f02\uff0c\u73b0\u5c06\u5e38\u7528\u9009\u9879\u5217\u51fa\u6765\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c enabled \u662f\u5426\u5728\u6570\u636e\u70b9\u4e0a\u76f4\u63a5\u663e\u793a\u6570\u636e false allowPointSelect \u662f\u5426\u5141\u8bb8\u4f7f\u7528\u9f20\u6807\u9009\u4e2d\u6570\u636e\u70b9 false formatter \u56de\u8c03\u51fd\u6570\uff0c\u683c\u5f0f\u5316\u6570\u636e\u663e\u793a\u5185\u5bb9 formatter: function() {return this.y;}","title":"plotOptions\uff1a\u6570\u636e\u70b9\u9009\u9879"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#tooltip","text":"Tooltip\u7528\u4e8e\u8bbe\u7f6e\u5f53\u9f20\u6807\u6ed1\u5411\u6570\u636e\u70b9\u65f6\u663e\u793a\u7684\u63d0\u793a\u6846\u4fe1\u606f\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c enabled \u662f\u5426\u663e\u793a\u63d0\u793a\u6846 true backgroundColor \u8bbe\u7f6e\u63d0\u793a\u6846\u7684\u80cc\u666f\u8272 rgba(255, 255, 255, .85) borderColor \u63d0\u793a\u6846\u8fb9\u6846\u989c\u8272\uff0c\u9ed8\u8ba4\u81ea\u52a8\u5339\u914d\u6570\u636e\u5217\u7684\u989c\u8272 auto borderRadius \u63d0\u793a\u6846\u5706\u89d2\u5ea6 5 shadow \u662f\u5426\u663e\u793a\u63d0\u793a\u6846\u9634\u5f71 true style \u8bbe\u7f6e\u63d0\u793a\u6846\u5185\u5bb9\u6837\u5f0f\uff0c\u5982\u5b57\u4f53\u989c\u8272\u7b49 color:'#333' formatter \u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u683c\u5f0f\u5316\u8f93\u51fa\u63d0\u793a\u6846\u7684\u663e\u793a\u5185\u5bb9\u3002\u8fd4\u56de\u7684\u5185\u5bb9\u652f\u6301html\u6807\u7b7e\u5982\uff1a , , , , , 2","title":"Tooltip\uff1a\u6570\u636e\u70b9\u63d0\u793a\u6846"},{"location":"ESP32/%E5%9B%BE%E8%A1%A8highcharts%E8%81%94%E5%90%88jquery%20ajax%20%E5%90%8E%E7%AB%AF%E5%8F%96%E6%95%B0%E6%8D%AE%E5%89%8D%E7%AB%AF%E5%9B%BE%E8%A1%A8%E6%B8%B2%E6%9F%93/#legend","text":"legend\u7528\u4e8e\u8bbe\u7f6e\u56fe\u4f8b\u76f8\u5173\u5c5e\u6027\u3002 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c layout \u663e\u793a\u5f62\u5f0f\uff0c\u652f\u6301\u6c34\u5e73horizontal\u548c\u5782\u76f4vertical horizontal align \u5bf9\u9f50\u65b9\u5f0f\u3002 center backgroundColor \u56fe\u4f8b\u80cc\u666f\u8272\u3002 null borderColor \u56fe\u4f8b\u8fb9\u6846\u989c\u8272\u3002 #909090 borderRadius \u56fe\u4f8b\u8fb9\u6846\u89d2\u5ea6 5 enabled \u662f\u5426\u663e\u793a\u56fe\u4f8b true floating \u662f\u5426\u53ef\u4ee5\u6d6e\u52a8\uff0c\u914d\u5408x\uff0cy\u5c5e\u6027\u3002 false shadow \u662f\u5426\u663e\u793a\u9634\u5f71 false style \u8bbe\u7f6e\u56fe\u4f8b\u5185\u5bb9\u6837\u5f0f '' \u7b2c\u4e00\u4e2a\u4f8b\u5b50\uff1a \u8fd9\u4e2a\u662f\u4ece\u540e\u7aefapi\u53d6\u503c\uff0c\u540e\u7aef\u518d\u4ece\u6570\u636e\u5e93\u91cc\u53d6\u503c\u3002 \u4e3a\u4e86\u4e0d\u8ba9\u6574\u4e2a\u9875\u9762\u5237\u65b0\uff0c\u7528\u4e86ajax\u505a\u5c40\u90e8\u5237\u65b0 $ ( function () { $ ( document ). ready ( function () { //////// // Mysql Questions //////// var mysqlQuestionsOptions = { chart : { renderTo : 'mysql-questions-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per second' }, min : 0 }, series : [{ name : 'Select' },{ name : 'Insert' },{ name : 'Replace' },{ name : 'Update' },{ name : 'Delete' }] }; $ . ajax ({ url : 'stats/mysql/questions' , dataType : \"json\" , success : function ( data ) { //init series arays select_arr = []; insert_arr = []; replace_arr = []; update_arr = []; delete_arr =[]; for ( i in data ) { //build var r = data [ i ]; select_arr . push ([ r . ts , r . Select_per_second ]); insert_arr . push ([ r . ts , r . Insert_per_second ]); replace_arr . push ([ r . ts , r . Replace_per_second ]); update_arr . push ([ r . ts , r . Update_per_second ]); delete_arr . push ([ r . ts , r . Delete_per_second ]); } //save series mysqlQuestionsOptions . series [ 0 ]. data = select_arr ; mysqlQuestionsOptions . series [ 1 ]. data = insert_arr ; mysqlQuestionsOptions . series [ 2 ]. data = replace_arr ; mysqlQuestionsOptions . series [ 3 ]. data = update_arr ; mysqlQuestionsOptions . series [ 4 ]. data = delete_arr ; var chart = new Highcharts . Chart ( mysqlQuestionsOptions ); }, cache : false }); //////// // Mysql Select Sort //////// var mysqlSelectSortOptions = { chart : { renderTo : 'mysql-select-sort-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per second' }, min : 0 }, series : [{ name : 'Select Scan' },{ name : 'Select Range' },{ name : 'Select Full Join' },{ name : 'Select Range Check' },{ name : 'Select Full Range Join' },{ name : 'Sort Scan' },{ name : 'Sort Range' },{ name : 'Sort Merge Passes' }] }; $ . ajax ({ url : 'stats/mysql/select_sort' , dataType : \"json\" , success : function ( data ) { //init series arays select_scan_arr = []; select_range_arr = []; select_full_join_arr = []; select_range_check_arr = []; select_full_range_join_arr =[]; sort_scan_arr =[]; sort_range_arr =[]; sort_merge_passes_arr =[]; for ( i in data ) { //build var r = data [ i ]; select_scan_arr . push ([ r . ts , r . Select_scan_per_sec ]); select_range_arr . push ([ r . ts , r . Select_range_per_sec ]); select_full_join_arr . push ([ r . ts , r . Select_full_join_per_sec ]); select_range_check_arr . push ([ r . ts , r . Select_range_check_per_sec ]); select_full_range_join_arr . push ([ r . ts , r . Select_full_range_join_per_sec ]); sort_scan_arr . push ([ r . ts , r . Sort_scan_per_sec ]); sort_range_arr . push ([ r . ts , r . Sort_range_per_sec ]); sort_merge_passes_arr . push ([ r . ts , r . Sort_merge_passes_per_sec ]); } //save series mysqlSelectSortOptions . series [ 0 ]. data = select_scan_arr ; mysqlSelectSortOptions . series [ 1 ]. data = select_range_arr ; mysqlSelectSortOptions . series [ 2 ]. data = select_full_join_arr ; mysqlSelectSortOptions . series [ 3 ]. data = select_range_check_arr ; mysqlSelectSortOptions . series [ 4 ]. data = select_full_range_join_arr ; mysqlSelectSortOptions . series [ 5 ]. data = sort_scan_arr ; mysqlSelectSortOptions . series [ 6 ]. data = sort_range_arr ; mysqlSelectSortOptions . series [ 7 ]. data = sort_merge_passes_arr ; var chart = new Highcharts . Chart ( mysqlSelectSortOptions ); }, cache : false }); //////// // Mysql Connections //////// var mysqlConnectionsOptions = { chart : { renderTo : 'mysql-connections-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : [{ title : { text : 'per second' }, min : 0 },{ title : { text : 'count' }, min : 0 , opposite : true }], series : [{ name : 'Max Connections' , yAxis : 1 , type : 'area' },{ name : 'Max Used Connections' , yAxis : 1 , type : 'area' },{ name : 'Process Count' , yAxis : 1 , type : 'area' },{ name : 'Running Process Count' , yAxis : 1 },{ name : 'Connection Rate' , yAxis : 0 },{ name : 'Aborted connects Rate' , yAxis : 0 },{ name : 'Aborted clients Rate' , yAxis : 0 }] }; $ . ajax ({ url : 'stats/mysql/connections' , dataType : \"json\" , success : function ( data ) { //init series arays connections_arr = []; aborted_connects_arr = []; aborted_clients_arr = []; max_used_connections_arr = []; max_connections_arr =[]; process_count_arr = []; running_process_count_arr =[]; for ( i in data ) { //build var r = data [ i ]; connections_arr . push ([ r . ts , r . Connections_per_second ]); aborted_connects_arr . push ([ r . ts , r . Aborted_connects_per_second ]); aborted_clients_arr . push ([ r . ts , r . Aborted_clients_per_second ]); max_used_connections_arr . push ([ r . ts , r . max_used_connections ]); max_connections_arr . push ([ r . ts , r . max_connections ]); process_count_arr . push ([ r . ts , r . process_count ]); running_process_count_arr . push ([ r . ts , r . process_count_non_sleep ]); } //save series mysqlConnectionsOptions . series [ 4 ]. data = connections_arr ; mysqlConnectionsOptions . series [ 5 ]. data = aborted_connects_arr ; mysqlConnectionsOptions . series [ 6 ]. data = aborted_clients_arr ; mysqlConnectionsOptions . series [ 0 ]. data = max_connections_arr ; mysqlConnectionsOptions . series [ 1 ]. data = max_used_connections_arr ; mysqlConnectionsOptions . series [ 2 ]. data = process_count_arr ; mysqlConnectionsOptions . series [ 3 ]. data = running_process_count_arr ; var chart = new Highcharts . Chart ( mysqlConnectionsOptions ); }, cache : false }); //////// // Mysql Bytes //////// var mysqlBytesOptions = { chart : { renderTo : 'mysql-bytes-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'kBps' }, min : 0 }, series : [{ name : 'Sent' },{ name : 'Recieved' }] }; $ . ajax ({ url : 'stats/mysql/bytes' , dataType : \"json\" , success : function ( data ) { //init series arays sent = []; recieved =[]; for ( i in data ) { //build var r = data [ i ]; sent . push ([ r . ts , r . kBps_sent ]); recieved . push ([ r . ts , r . kBps_recieved ]); } //save series mysqlBytesOptions . series [ 0 ]. data = sent ; mysqlBytesOptions . series [ 1 ]. data = recieved ; var chart = new Highcharts . Chart ( mysqlBytesOptions ); }, cache : false }); //////// // Mysql Temp //////// var mysqlTempOptions = { chart : { renderTo : 'mysql-temp-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per minute' }, min : 0 }, series : [{ name : 'Created Tmp Disk Tables' },{ name : 'Created Tmp Tables' },{ name : 'Created Tmp Files' }] }; $ . ajax ({ url : 'stats/mysql/temp' , dataType : \"json\" , success : function ( data ) { //init series arays tmp_disk_tables = []; tmp_tables = []; tmp_files = []; for ( i in data ) { //build var r = data [ i ]; tmp_disk_tables . push ([ r . ts , r . Created_tmp_disk_tables_per_min ]); tmp_tables . push ([ r . ts , r . Created_tmp_tables_per_min ]); tmp_files . push ([ r . ts , r . Created_tmp_files_per_min ]); } //save series mysqlTempOptions . series [ 0 ]. data = tmp_disk_tables ; mysqlTempOptions . series [ 1 ]. data = tmp_tables ; mysqlTempOptions . series [ 2 ]. data = tmp_files ; var chart = new Highcharts . Chart ( mysqlTempOptions ); }, cache : false }); //////// // Mysql Table Locks //////// var mysqlTableLocksOptions = { chart : { renderTo : 'mysql-table-locks-container' , type : 'spline' }, title : { text : '' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per second' }, min : 0 }, series : [{ name : 'Table locks wait' },{ name : 'Table locks immediate' }] }; $ . ajax ({ url : 'stats/mysql/table_locks' , dataType : \"json\" , success : function ( data ) { //init series arays wait = []; immediate = []; for ( i in data ) { //build var r = data [ i ]; wait . push ([ r . ts , r . Table_locks_wait_per_sec ]); immediate . push ([ r . ts , r . Table_locks_immediate_per_sec ]); } //save series mysqlTableLocksOptions . series [ 0 ]. data = wait ; mysqlTableLocksOptions . series [ 1 ]. data = immediate ; var chart = new Highcharts . Chart ( mysqlTableLocksOptions ); }, cache : false }); //////// // Mysql Innodb Buffer Pool Usage //////// var mysqlInnoDBBPOptions = { chart : { renderTo : 'mysql-innodb-bp-container' , type : 'area' }, title : { text : 'Buffer Pool Usage' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : [{ title : { text : 'MBytes' }, min : 0 },{ title : { text : 'Hit Rate %' }, min : 0 , max : 100 , opposite : true }], series : [{ name : 'Buffer Pool Total' },{ name : 'Buffer Pool Used' },{ name : 'Read Hit Rate' , type : 'spline' , yAxis : 1 }] }; //////// // Mysql Innodb //////// var mysqlInnoDBOptions = { chart : { renderTo : 'mysql-innodb-container' , type : 'spline' }, title : { text : 'InnoDB Stats' , x : - 20 //center }, xAxis : { type : 'datetime' }, yAxis : { title : { text : 'per second' }, min : 0 }, series : [{ name : 'Buffer Pool Read Request' },{ name : 'Buffer Pool Reads' },{ name : 'Buffer Pool Read Ahead Rnd' },{ name : 'Buffer Pool Read Ahead Seq' },{ name : 'Buffer Pool Write Request' },{ name : 'Buffer Pool Pages Flushed' },{ name : 'Buffer Pool Wait Free' },{ name : 'Row Lock Waits' },{ name : 'Data Reads' },{ name : 'Data Writes' },{ name : 'Data Fsyncs' },{ name : 'Pages Created' },{ name : 'Pages Read' },{ name : 'Pages Written' },{ name : 'Rows Deleted' },{ name : 'Rows Inserted' },{ name : 'Rows Read' },{ name : 'Rows Updated' }] }; $ . ajax ({ url : 'stats/mysql/innodb' , dataType : \"json\" , success : function ( data ) { //init series arays bp_used = []; bp_total = []; bp_read_ratio = []; bp_read_requests = []; bp_reads = [] bp_read_rnd = []; bp_read_seq = []; bp_write_req = []; bp_pages_flush = []; bp_wait_free = []; row_lock_waits = []; data_reads = []; data_write = []; data_fsyncs = []; pages_created = []; pages_read = []; pages_written = []; rows_deleted = []; rows_inserted = []; rows_read = []; rows_updated = []; for ( i in data ) { //build var r = data [ i ]; bp_used . push ([ r . ts , r . Innodb_buffer_pool_used_mb ]); bp_total . push ([ r . ts , r . Innodb_buffer_pool_total_mb ]); bp_read_ratio . push ([ r . ts , r . Innodb_buffer_pool_read_ratio ]); bp_read_requests . push ([ r . ts , r . Innodb_buffer_pool_read_requests_per_second ]); bp_reads . push ([ r . ts , r . Innodb_buffer_pool_reads_per_second ]); bp_read_rnd . push ([ r . ts , r . Innodb_buffer_pool_read_ahead_rnd_per_second ]); bp_read_seq . push ([ r . ts , r . Innodb_buffer_pool_read_ahead_seq_per_second ]); bp_write_req . push ([ r . ts , r . Innodb_buffer_pool_write_requests_per_second ]); bp_pages_flush . push ([ r . ts , r . Innodb_buffer_pool_pages_flushed_per_second ]); bp_wait_free . push ([ r . ts , r . Innodb_buffer_pool_wait_free_per_second ]); row_lock_waits . push ([ r . ts , r . Innodb_row_lock_waits_per_second ]); data_reads . push ([ r . ts , r . Innodb_data_reads_per_second ]); data_write . push ([ r . ts , r . Innodb_data_writes_per_second ]); data_fsyncs . push ([ r . ts , r . Innodb_data_fsyncs_per_second ]); pages_created . push ([ r . ts , r . Innodb_pages_created_per_second ]); pages_read . push ([ r . ts , r . Innodb_pages_read_per_second ]); pages_written . push ([ r . ts , r . Innodb_pages_written_per_second ]); rows_deleted . push ([ r . ts , r . Innodb_rows_deleted_per_second ]); rows_inserted . push ([ r . ts , r . Innodb_rows_inserted_per_second ]); rows_read . push ([ r . ts , r . Innodb_rows_read_per_second ]); rows_updated . push ([ r . ts , r . Innodb_rows_updated_per_second ]); } //save series mysqlInnoDBBPOptions . series [ 1 ]. data = bp_used ; mysqlInnoDBBPOptions . series [ 0 ]. data = bp_total ; mysqlInnoDBBPOptions . series [ 2 ]. data = bp_read_ratio ; mysqlInnoDBOptions . series [ 0 ]. data = bp_read_requests ; mysqlInnoDBOptions . series [ 1 ]. data = bp_reads ; mysqlInnoDBOptions . series [ 2 ]. data = bp_read_rnd ; mysqlInnoDBOptions . series [ 3 ]. data = bp_read_seq ; mysqlInnoDBOptions . series [ 4 ]. data = bp_write_req ; mysqlInnoDBOptions . series [ 5 ]. data = bp_pages_flush ; mysqlInnoDBOptions . series [ 6 ]. data = bp_wait_free ; mysqlInnoDBOptions . series [ 7 ]. data = row_lock_waits ; mysqlInnoDBOptions . series [ 8 ]. data = data_reads ; mysqlInnoDBOptions . series [ 9 ]. data = data_write ; mysqlInnoDBOptions . series [ 10 ]. data = data_fsyncs ; mysqlInnoDBOptions . series [ 11 ]. data = pages_created ; mysqlInnoDBOptions . series [ 12 ]. data = pages_read ; mysqlInnoDBOptions . series [ 13 ]. data = pages_written ; mysqlInnoDBOptions . series [ 14 ]. data = rows_deleted ; mysqlInnoDBOptions . series [ 15 ]. data = rows_inserted ; mysqlInnoDBOptions . series [ 16 ]. data = rows_updated ; var chart = new Highcharts . Chart ( mysqlInnoDBBPOptions ); chart = new Highcharts . Chart ( mysqlInnoDBOptions ); }, cache : false }); }); }); $ ( document ). scroll ( function (){ // If has not activated (has no attribute \"data-top\" if (! $ ( '.subnav' ). attr ( 'data-top' )) { // If already fixed, then do nothing if ( $ ( '.subnav' ). hasClass ( 'subnav-fixed' )) return ; // Remember top position var offset = $ ( '.subnav' ). offset (); $ ( '.subnav' ). attr ( 'data-top' , offset . top ); } if ( $ ( '.subnav' ). attr ( 'data-top' ) - $ ( '.subnav' ). outerHeight () <= $ ( this ). scrollTop ()) $ ( '.subnav' ). addClass ( 'subnav-fixed' ); else $ ( '.subnav' ). removeClass ( 'subnav-fixed' ); }); \u7b2c\u4e8c\u4e2a\u4f8b\u5b50 \u8fd9\u4e2a\u548c\u524d\u9762\u662f\u4e00\u6837\u7684\u65b9\u5f0f\uff0c\u8fd9\u91cc\u505a\u4e86\u591a\u4e2a\u5f15\u7528\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u753b\u591a\u6761\u7ebf\u8def \u8fd9\u4e2a\u56fe\u4e0d\u662f\u6211\u8fd9\u7684\uff0c\u4f46\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u884c\u7684\u901a\u7684\uff0c\u53ef\u4ee5\u653e\u5230\u4e00\u4e2ajs\u91cc\u9762\u5f15\u7528\uff0c\u7136\u540e\u901a\u8fc7ajax\u4f20\u503c\u8fc7\u53bb\uff0c\u5728\u524d\u7aef\u8fdb\u884c\u6570\u636e\u7684\u6e32\u67d3\u3002 var charts = new Array (); var serverCount = 6 ; var lastTimes = new Array (); var max = $ { params . int ( \"max\" )?: 120 }; $ ( document ). ready ( function () { Highcharts . setOptions ({ global : { useUTC : false } }); for ( var i = 0 ; i < serverCount ; i ++) { charts [ i ] = new Highcharts . Chart ({ chart : { renderTo : 'container' + i , type : 'spline' , events : { load : function () { // set up the updating of the chart each second var series = this . series ; var serverIndex = i ; lastTimes [ serverIndex ] = 0 ; var loadData = function () { $ . getJSON ( \"http://${request.serverName}:${request.serverPort}${request.contextPath}/toolkits/queryStatistics.gsp\" , { \"lasTime\" : lastTimes [ serverIndex ], \"proxy\" : true , \"index\" : serverIndex , \"max\" : max }, function ( data ) { for ( var k = 0 ; k < series . length ; k ++) { for ( var j = 0 ; j < data [ k ]. length ; j ++) { var point = data [ k ][ j ]; var isShift = series [ k ]. data . length >= max ; console . log ( \"series \" + k + \".data.length=\" + series [ k ]. data . length ); var lastTime = 0 ; if ( series [ k ]. data . length > 0 ) lastTime = series [ k ]. data [ series [ k ]. data . length - 1 ]. x ; if ( point [ 0 ] > lastTime ) series [ k ]. addPoint ([ point [ 0 ], point [ 1 ]], true , isShift ); lastTimes [ serverIndex ] = point [ 0 ]; } } }) }; loadData (); setInterval ( loadData , 60000 ); } } }, title : { text : '\u8bbf\u95ee\u91cf\u5b9e\u65f6\u76d1\u63a7' }, xAxis : [ { type : 'datetime' , tickPixelInterval : 120 } ], yAxis : [ { title : { text : '\u603b\u8bf7\u6c42/\u5206\u949f' , style : { color : '#3E576F' } } }, { title : { text : '\u5e73\u5747\u54cd\u5e94\u65f6\u95f4' , style : { color : '#00AA00' } }, opposite : true } ], plotOptions : { spline : { marker :{ enabled : false , states : { hover : { enabled : true , symbol : 'circle' , radius : 5 , lineWidth : 1 } } } } }, tooltip : { formatter : function () { return '<b>' + this . series . name + '</b><br/>' + Highcharts . dateFormat ( '%Y-%m-%d %H:%M:%S' , this . x ) + '<br/>' + Highcharts . numberFormat ( this . y , 2 ); } }, legend : { enabled : true }, exporting : { enabled : false }, series : [ { name : '\u603b\u8bf7\u6c42\u6570' , data : [] }, { name : '\u9519\u8bef\u8bf7\u6c42\u6570' , data : [] }, { name : '\u5e73\u5747\u54cd\u5e94\u65f6\u95f4' , yAxis : 1 , data : [] } ] }); } })","title":"Legend\uff1a\u56fe\u4f8b\u9009\u9879"},{"location":"ESP32/%E5%B7%A5%E5%85%B7%E5%90%88%E9%9B%86/","text":"pyecharts pyecharts \u662f\u4e00\u4e2a\u7528\u4e8e\u751f\u6210 Echarts \u56fe\u8868\u7684\u7c7b\u5e93\u3002Echarts \u662f\u767e\u5ea6\u5f00\u6e90\u7684\u4e00\u4e2a\u6570\u636e\u53ef\u89c6\u5316 JS \u5e93\u3002\u7528 Echarts \u751f\u6210\u7684\u56fe\u53ef\u89c6\u5316\u6548\u679c\u975e\u5e38\u68d2\uff0cpyecharts \u662f\u4e3a\u4e86\u4e0e Python \u8fdb\u884c\u5bf9\u63a5\uff0c\u65b9\u4fbf\u5728 Python \u4e2d\u76f4\u63a5\u4f7f\u7528\u6570\u636e\u751f\u6210\u56fe\u3002 http://pyecharts.org docsify docsify \u662f\u4e00\u4e2a\u52a8\u6001\u751f\u6210\u6587\u6863\u7f51\u7ad9\u7684\u5de5\u5177\u3002\u4e0d\u540c\u4e8e GitBook\u3001Hexo \u7684\u5730\u65b9\u662f\u5b83\u4e0d\u4f1a\u751f\u6210\u5c06 .md \u8f6c\u6210 .html \u6587\u4ef6\uff0c\u6240\u6709\u8f6c\u6362\u5de5\u4f5c\u90fd\u662f\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u3002 \u8fd9\u5c06\u975e\u5e38\u5b9e\u7528\uff0c\u5982\u679c\u53ea\u662f\u9700\u8981\u5feb\u901f\u7684\u642d\u5efa\u4e00\u4e2a\u5c0f\u578b\u7684\u6587\u6863\u7f51\u7ad9\uff0c\u6216\u8005\u4e0d\u60f3\u56e0\u4e3a\u751f\u6210\u7684\u4e00\u5806 .html \u6587\u4ef6\u201c\u6c61\u67d3\u201d commit \u8bb0\u5f55\uff0c\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a index.html \u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u6587\u6863\u800c\u4e14\u76f4\u63a5\u90e8\u7f72\u5728 GitHub Pages\u3002 pandas-highcharts https://github.com/gtnx/pandas-highcharts","title":"\u5de5\u5177\u5408\u96c6"},{"location":"ESP32/%E5%B7%A5%E5%85%B7%E5%90%88%E9%9B%86/#pyecharts","text":"pyecharts \u662f\u4e00\u4e2a\u7528\u4e8e\u751f\u6210 Echarts \u56fe\u8868\u7684\u7c7b\u5e93\u3002Echarts \u662f\u767e\u5ea6\u5f00\u6e90\u7684\u4e00\u4e2a\u6570\u636e\u53ef\u89c6\u5316 JS \u5e93\u3002\u7528 Echarts \u751f\u6210\u7684\u56fe\u53ef\u89c6\u5316\u6548\u679c\u975e\u5e38\u68d2\uff0cpyecharts \u662f\u4e3a\u4e86\u4e0e Python \u8fdb\u884c\u5bf9\u63a5\uff0c\u65b9\u4fbf\u5728 Python \u4e2d\u76f4\u63a5\u4f7f\u7528\u6570\u636e\u751f\u6210\u56fe\u3002 http://pyecharts.org","title":"pyecharts"},{"location":"ESP32/%E5%B7%A5%E5%85%B7%E5%90%88%E9%9B%86/#docsify","text":"docsify \u662f\u4e00\u4e2a\u52a8\u6001\u751f\u6210\u6587\u6863\u7f51\u7ad9\u7684\u5de5\u5177\u3002\u4e0d\u540c\u4e8e GitBook\u3001Hexo \u7684\u5730\u65b9\u662f\u5b83\u4e0d\u4f1a\u751f\u6210\u5c06 .md \u8f6c\u6210 .html \u6587\u4ef6\uff0c\u6240\u6709\u8f6c\u6362\u5de5\u4f5c\u90fd\u662f\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u3002 \u8fd9\u5c06\u975e\u5e38\u5b9e\u7528\uff0c\u5982\u679c\u53ea\u662f\u9700\u8981\u5feb\u901f\u7684\u642d\u5efa\u4e00\u4e2a\u5c0f\u578b\u7684\u6587\u6863\u7f51\u7ad9\uff0c\u6216\u8005\u4e0d\u60f3\u56e0\u4e3a\u751f\u6210\u7684\u4e00\u5806 .html \u6587\u4ef6\u201c\u6c61\u67d3\u201d commit \u8bb0\u5f55\uff0c\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a index.html \u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u6587\u6863\u800c\u4e14\u76f4\u63a5\u90e8\u7f72\u5728 GitHub Pages\u3002","title":"docsify"},{"location":"ESP32/%E5%B7%A5%E5%85%B7%E5%90%88%E9%9B%86/#pandas-highcharts","text":"https://github.com/gtnx/pandas-highcharts","title":"pandas-highcharts"},{"location":"ESP32/%E5%BE%A1%20Air%202%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B/","text":"1. \u98de\u884c\u51c6\u5907 \u5b89\u88c5\u87ba\u65cb\u6868\uff0c\u68c0\u67e5\u87ba\u65cb\u6868 \u79fb\u9664\u4e91\u53f0\u4fdd\u62a4\u7f69 \u5b89\u88c5\u9065\u63a7\u5668\u6447\u6746 2. \u98de\u884c\u63a7\u5236 \u5f00\u673a\uff1a\u77ed\u6309\u4e00\u6b21\u884c\u7535\u6c60\u7684\u7535\u6e90\u6309\u952e\uff0c\u518d\u957f\u6309\u76f4\u81f3\u5f00\u542f \u5de6\u6447\u6746\uff1a\u63a7\u5236\u98de\u884c\u5668\u7684\u5347\u964d\u548c\u822a\u5411 \u53f3\u6447\u6746\uff1a\u63a7\u5236\u98de\u884c\u5668\u524d\u540e\u5de6\u53f3\u7684\u6c34\u5e73\u79fb\u52a8 \u8d77\u98de \u81ea\u52a8\u8d77\u98de \u624b\u52a8\u8d77\u98de\uff1a\u5c06\u4e24\u4e2a\u6447\u6746\u540c\u65f6\u4e0b\u62c9\u5230\u5e95\uff0c\u5e76\u5411\u5185\u6216\u5411\u5916\u63b0\u6746\u542f\u52a8\u7535\u673a\u5e76\u4f7f\u98de\u884c\u5668\u60ac\u505c\u3002\u7535\u673a\u8d77\u8f6c\u540e\uff0c\u677e\u5f00\u6447\u6746\uff0c\u5e76\u8f7b\u63a8\u5de6\u6447\u6746\uff0c\u63a7\u5236\u98de\u884c\u5668\u8d77\u98de\u3002 \u964d\u843d \u81ea\u52a8\u964d\u843d \u624b\u52a8\u964d\u843d\uff1a\u5c06\u5de6\u53f3\u9065\u6746\u540c\u65f6\u4e0b\u62c9\u5230\u5e95 \u81ea\u52a8\u8fd4\u822a\u3002\u5f00\u542f\u667a\u80fd\u8fd4\u822a\u3001\u98de\u884c\u5668\u4f4e\u7535\u91cf\u89e6\u53d1\u667a\u80fd\u4f4e\u7535\u91cf\u8fd4\u822a\u3001\u6216\u901a\u8baf\u4fe1\u53f7\u4e22\u5931\u89e6\u53d1\u5931\u63a7\u8fd4\u822a\u65f6\uff0c\u98de\u884c\u5668\u5c06\u81ea\u52a8\u8fd4\u56de\u8fd4\u822a\u70b9\u5e76\u964d\u843d 3. \u9065\u63a7\u5668\u6309\u94ae \u62cd\u7167/\u5f55\u50cf\u5207\u6362\u6309\u952e \u62cd\u6444\u6309\u952e \u4e91\u53f0\u4fef\u4ef0\u89d2\u5ea6\u63a7\u5236\u62e8\u8f6e \u81ea\u52a8\u8fd4\u822a\u3002\u957f\u6309\u6b64\u6309\u952e\u76f4\u5230\u9065\u63a7\u5668\u53d1\u51fa\u201c\u5600\u5600\u201d\u58f0\uff0c\u5373\u53ef\u6210\u529f\u89e6\u53d1\u3002\u518d\u77ed\u6309\u4e00\u6b21\u5373\u53ef\u53d6\u6d88\u667a\u80fd\u8fd4\u822a Fn \u5355\u51fb\uff0c\u5f00\u542f\u548c\u5173\u95ed\u8865\u5149\u706f \u53cc\u51fb\uff0c\u4f7f\u4e91\u53f0\u56de\u4e2d \u667a\u80fd\u8ddf\u968f/\u805a\u7126 /\u5174\u8da3\u70b9\u73af\u7ed5 \u5728\u7a7a\u65f7\u5b89\u5168\u5730\u5e26\u542f\u52a8\u98de\u884c\u5668\uff0c\u4f7f\u4e4b\u98de\u81f3\u5408\u9002\u7684\u9ad8\u5ea6\u5e76\u60ac\u505c\u3002 \u8fdb\u5165 app \u76f8\u673a\u754c\u9762\uff0c\u76f4\u63a5\u5728\u5c4f\u5e55\u4e0a\u6846\u9009\u60f3\u8981\u8ddf\u968f\u7684\u76ee\u6807\u3002 \u9009\u62e9\u805a\u7126 2.0\u3002 \u70b9\u51fb\u62cd\u6444\u6309\u952e\u5f00\u59cb\u62cd\u6444\u3002 \u753b\u9762\u53ef\u901a\u8fc7\u9065\u611f\u548c\u4e91\u53f0\u62e8\u8f6e\u8fdb\u884c\u8c03\u6574\u3002 \u62cd\u6444\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u5c4f\u5e55\u7684\u201c\u505c\u6b62\u201d\u6309\u94ae\uff0c\u6216\u70b9\u51fb\u9065\u63a7\u5668\u81ea\u52a8\u8fd4\u822a\u6309\u94ae\u9000\u51fa\u8be5\u6a21\u5f0f\u3002 \u4e00\u952e\u77ed\u7247 \u5c06\u98de\u884c\u5668\u8bbe\u7f6e\u4e3a\u666e\u901a\u6863\u3002 \u70b9\u51fb\u62cd\u6444\u6a21\u5f0f\u56fe\u6807\uff0c\u9009\u62e9 \u4e00\u952e\u77ed\u7247 \u2014 ... \u6868\u53f6\u4fdd\u62a4\u7f69 \u59ff\u6001\u7403 \u8fd4\u822a\u70b9\uff0c\u65e0\u4eba\u673a\uff0c\u9065\u63a7\u5668\u4e09\u8005\u7684\u4f4d\u7f6e H\u56fe\u6807\u53d8\u7070\uff0c\u8868\u793aGPS\u4fe1\u53f7\u5f31 \u98de\u884c\u5668\u59ff\u6001\u53ef\u4ee5\u89c2\u5bdf\u51fa\uff0c\u98de\u884c\u5668\u524d\u8fdb\u540e\u9000\uff0c\u5de6\u53f3\u503e\u659c\u3002\u5982\u679c\u60ac\u505c\u72b6\u6001\u4e0b\u98de\u884c\u5668\u59ff\u6001\u4e0d\u5728\u4e2d\u5fc3\uff0c\u8868\u793a\u98ce\u529b\u5927 \u56db\u65cb\u7ffc\u98de\u884c\u5668\u7ed3\u6784\u548c\u539f\u7406","title":"\u5fa1 Air 2 \u65b0\u624b\u6559\u7a0b"},{"location":"ESP32/%E5%BE%A1%20Air%202%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B/#1","text":"\u5b89\u88c5\u87ba\u65cb\u6868\uff0c\u68c0\u67e5\u87ba\u65cb\u6868 \u79fb\u9664\u4e91\u53f0\u4fdd\u62a4\u7f69 \u5b89\u88c5\u9065\u63a7\u5668\u6447\u6746","title":"1. \u98de\u884c\u51c6\u5907"},{"location":"ESP32/%E5%BE%A1%20Air%202%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B/#2","text":"\u5f00\u673a\uff1a\u77ed\u6309\u4e00\u6b21\u884c\u7535\u6c60\u7684\u7535\u6e90\u6309\u952e\uff0c\u518d\u957f\u6309\u76f4\u81f3\u5f00\u542f \u5de6\u6447\u6746\uff1a\u63a7\u5236\u98de\u884c\u5668\u7684\u5347\u964d\u548c\u822a\u5411 \u53f3\u6447\u6746\uff1a\u63a7\u5236\u98de\u884c\u5668\u524d\u540e\u5de6\u53f3\u7684\u6c34\u5e73\u79fb\u52a8 \u8d77\u98de \u81ea\u52a8\u8d77\u98de \u624b\u52a8\u8d77\u98de\uff1a\u5c06\u4e24\u4e2a\u6447\u6746\u540c\u65f6\u4e0b\u62c9\u5230\u5e95\uff0c\u5e76\u5411\u5185\u6216\u5411\u5916\u63b0\u6746\u542f\u52a8\u7535\u673a\u5e76\u4f7f\u98de\u884c\u5668\u60ac\u505c\u3002\u7535\u673a\u8d77\u8f6c\u540e\uff0c\u677e\u5f00\u6447\u6746\uff0c\u5e76\u8f7b\u63a8\u5de6\u6447\u6746\uff0c\u63a7\u5236\u98de\u884c\u5668\u8d77\u98de\u3002 \u964d\u843d \u81ea\u52a8\u964d\u843d \u624b\u52a8\u964d\u843d\uff1a\u5c06\u5de6\u53f3\u9065\u6746\u540c\u65f6\u4e0b\u62c9\u5230\u5e95 \u81ea\u52a8\u8fd4\u822a\u3002\u5f00\u542f\u667a\u80fd\u8fd4\u822a\u3001\u98de\u884c\u5668\u4f4e\u7535\u91cf\u89e6\u53d1\u667a\u80fd\u4f4e\u7535\u91cf\u8fd4\u822a\u3001\u6216\u901a\u8baf\u4fe1\u53f7\u4e22\u5931\u89e6\u53d1\u5931\u63a7\u8fd4\u822a\u65f6\uff0c\u98de\u884c\u5668\u5c06\u81ea\u52a8\u8fd4\u56de\u8fd4\u822a\u70b9\u5e76\u964d\u843d","title":"2. \u98de\u884c\u63a7\u5236"},{"location":"ESP32/%E5%BE%A1%20Air%202%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B/#3","text":"\u62cd\u7167/\u5f55\u50cf\u5207\u6362\u6309\u952e \u62cd\u6444\u6309\u952e \u4e91\u53f0\u4fef\u4ef0\u89d2\u5ea6\u63a7\u5236\u62e8\u8f6e \u81ea\u52a8\u8fd4\u822a\u3002\u957f\u6309\u6b64\u6309\u952e\u76f4\u5230\u9065\u63a7\u5668\u53d1\u51fa\u201c\u5600\u5600\u201d\u58f0\uff0c\u5373\u53ef\u6210\u529f\u89e6\u53d1\u3002\u518d\u77ed\u6309\u4e00\u6b21\u5373\u53ef\u53d6\u6d88\u667a\u80fd\u8fd4\u822a Fn \u5355\u51fb\uff0c\u5f00\u542f\u548c\u5173\u95ed\u8865\u5149\u706f \u53cc\u51fb\uff0c\u4f7f\u4e91\u53f0\u56de\u4e2d","title":"3. \u9065\u63a7\u5668\u6309\u94ae"},{"location":"ESP32/%E5%BE%A1%20Air%202%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B/#_1","text":"\u5728\u7a7a\u65f7\u5b89\u5168\u5730\u5e26\u542f\u52a8\u98de\u884c\u5668\uff0c\u4f7f\u4e4b\u98de\u81f3\u5408\u9002\u7684\u9ad8\u5ea6\u5e76\u60ac\u505c\u3002 \u8fdb\u5165 app \u76f8\u673a\u754c\u9762\uff0c\u76f4\u63a5\u5728\u5c4f\u5e55\u4e0a\u6846\u9009\u60f3\u8981\u8ddf\u968f\u7684\u76ee\u6807\u3002 \u9009\u62e9\u805a\u7126 2.0\u3002 \u70b9\u51fb\u62cd\u6444\u6309\u952e\u5f00\u59cb\u62cd\u6444\u3002 \u753b\u9762\u53ef\u901a\u8fc7\u9065\u611f\u548c\u4e91\u53f0\u62e8\u8f6e\u8fdb\u884c\u8c03\u6574\u3002 \u62cd\u6444\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u5c4f\u5e55\u7684\u201c\u505c\u6b62\u201d\u6309\u94ae\uff0c\u6216\u70b9\u51fb\u9065\u63a7\u5668\u81ea\u52a8\u8fd4\u822a\u6309\u94ae\u9000\u51fa\u8be5\u6a21\u5f0f\u3002","title":"\u667a\u80fd\u8ddf\u968f/\u805a\u7126 /\u5174\u8da3\u70b9\u73af\u7ed5"},{"location":"ESP32/%E5%BE%A1%20Air%202%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B/#_2","text":"\u5c06\u98de\u884c\u5668\u8bbe\u7f6e\u4e3a\u666e\u901a\u6863\u3002 \u70b9\u51fb\u62cd\u6444\u6a21\u5f0f\u56fe\u6807\uff0c\u9009\u62e9 \u4e00\u952e\u77ed\u7247 \u2014 ...","title":"\u4e00\u952e\u77ed\u7247"},{"location":"ESP32/%E5%BE%A1%20Air%202%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B/#_3","text":"","title":"\u6868\u53f6\u4fdd\u62a4\u7f69"},{"location":"ESP32/%E5%BE%A1%20Air%202%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B/#_4","text":"\u8fd4\u822a\u70b9\uff0c\u65e0\u4eba\u673a\uff0c\u9065\u63a7\u5668\u4e09\u8005\u7684\u4f4d\u7f6e H\u56fe\u6807\u53d8\u7070\uff0c\u8868\u793aGPS\u4fe1\u53f7\u5f31 \u98de\u884c\u5668\u59ff\u6001\u53ef\u4ee5\u89c2\u5bdf\u51fa\uff0c\u98de\u884c\u5668\u524d\u8fdb\u540e\u9000\uff0c\u5de6\u53f3\u503e\u659c\u3002\u5982\u679c\u60ac\u505c\u72b6\u6001\u4e0b\u98de\u884c\u5668\u59ff\u6001\u4e0d\u5728\u4e2d\u5fc3\uff0c\u8868\u793a\u98ce\u529b\u5927","title":"\u59ff\u6001\u7403"},{"location":"ESP32/%E5%BE%A1%20Air%202%20%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B/#_5","text":"","title":"\u56db\u65cb\u7ffc\u98de\u884c\u5668\u7ed3\u6784\u548c\u539f\u7406"},{"location":"ESP32/%E6%95%B0%E5%AD%97%E8%B0%83%E5%88%B6/","text":"\u6570\u5b57\u8c03\u5236 \u672c\u8bb2\u5ea7\u5c06\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7\u8c03\u5236\u8f7d\u6ce2\u6ce2\u5f62\u6765\u4ee5\u6570\u5b57\u5f62\u5f0f\u4f20\u8f93\u4fe1\u606f\u3002\u6570\u5b57\u8c03\u5236\u65b9\u6cd5\u4e0e\u6a21\u62df\u4f20\u8f93\u76f8\u6bd4\u5177\u6709\u591a\u4e2a\u4f18\u70b9\uff0c\u4f7f\u9ad8\u7ea7\u4fe1\u53f7\u5904\u7406\u6210\u4e3a\u53ef\u80fd\uff08\u5982\u7ea0\u9519\u7f16\u7801\uff0c\u52a0\u5bc6\u548c\u591a\u6837\u6027\uff09\u3002 \u5e38\u7528\u7684\u7a84\u5e26\u6570\u5b57\u8c03\u5236\u6709\uff1a \u4e8c\u8fdb\u5236\u76f8\u79fb\u952e\u63a7\uff08BPSK\uff09 BPSK\u4e0e\u8109\u51b2\u6574\u5f62 BPSK\u5728\u79fb\u52a8\u8702\u7a9d\u4fe1\u9053\u4e2d\u7684\u8bef\u7801\u7387 \u6b63\u4ea4\u76f8\u79fb\u952e\u63a7\uff08QPSK\uff09 QAM\uff08PDF\u5e7b\u706f\u7247\u5b9e\u65bd\uff09 \u8fde\u7eed\u76f8\u79fb\u952e\u63a7 G-MSK\uff0c\u4f8b\u5982\u5728GSM\u4e2d\u5e94\u7528 \u5176\u4ed6\u65b9\u6cd5\u662f \u591a\u8f7d\u6ce2\u4f20\u8f93\uff0c\u7279\u522b\u662fOFDM\u548c\u591a\u8f7d\u6ce2CDMA \u76f4\u63a5\u5e8f\u5217CDMA \u591a\u5f84\u8870\u843d Multipath Fading \u591a\u5f84\u4f20\u64ad Multipath propagation Inter Symbol Interference (ISI) \u867d\u7136\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a \u6570\u5b57\u8c03\u5236 \uff08DM\uff09\uff0c\u4f46\u5b83\u901a\u5e38\u6d89\u53ca\u67d0\u79cd\u5f62\u5f0f\u7684AM\u548c/\u6216FM\u6216PM\u3002\u56e0\u6b64\uff0c\u6570\u5b57\u8c03\u5236\u5e94\u88ab\u89c6\u4e3a\u63cf\u8ff0AM / FM / PM\u53ef\u7528\u4e8e\u4ee5\u4fe1\u606f\u7684\u201c\u6bd4\u7279\u201d\u6a21\u5f0f\u4f20\u9001\u4fe1\u606f\u7684\u65b9\u5f0f\u3002\u539f\u5219\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u5f62\u5f0f\u7684\u8c03\u5236\u5668\u6216\u89e3\u8c03\u5668\uff0c\u56e0\u4e3a\u5f53\u4f7f\u7528AM / FM / PM\u53d1\u9001\u201c\u6a21\u62df\u201d\u6a21\u5f0f\u65f6\u3002\u4fe1\u606f\u7684\u6570\u5b57\u8868\u793a\u7684\u4f7f\u7528\u610f\u5473\u7740\u6211\u4eec\u73b0\u5728\u5fc5\u987b\u5904\u7406\u6709\u9650\u7684\u4e00\u7ec4\u5b9a\u4e49\u7684\u4fe1\u53f7\u5e45\u5ea6\u6216\u76f8\u4f4d\u6216\u9891\u7387\uff0c\u800c\u4e0d\u662f\u5728\u6a21\u62df\u8868\u793a\u4e2d\u51fa\u73b0\u7684\u5e73\u6ed1\u53d8\u91cf\u503c\u3002 \u7b80\u5355\u7684\u4e8c\u8fdb\u5236\u8c03\u5236 - \u4e00\u6b21\u4e00\u4e2a\u4f4d\uff01 \u6570\u5b57\u8c03\u5236\u7684\u6700\u7b80\u5355\u7684\u5f62\u5f0f\u901a\u8fc7\u6253\u5f00\u548c\u5173\u95ed\u7535\u8def\uff0c\u8868\u793a\u4e00\u7cfb\u5217\u903b\u8f91\u201c1\u201d\u548c\u201c0\u201d\u3002\u56e0\u6b64\uff0c\u5b83\u901a\u5e38\u88ab\u79f0\u4e3a \u5f00\u5173\u952e\u63a7 \uff08OOK\uff09\u3002 \uff08Key\u7ffb\u8bd1\u4e3a\u952e\u63a7\uff0c\u8fd9\u4e2a\u672f\u8bed\u53ef\u4ee5\u8ffd\u6eaf\u5230\u201c\u83ab\u5c14\u65af\u7535\u7801\u201d\u7684\u65f6\u4ee3\uff0c\u5f53\u65f6\u4f7f\u7528\u79f0\u4e3aKey\u201c\u94a5\u5319\u201d\u7684\u5f00\u5173\u624b\u52a8\u6253\u5f00\u548c\u5173\u95ed\u4f20\u8f93\uff09\u3002 \u4f8b\u5982\u56fe1\u6240\u793a\u3002\u5728\u8fd9\u91cc\uff0c\u901a\u8fc7\u4f7f\u8f7d\u6ce2\u201c\u5173\u95ed\u201d\uff08\u5373\uff0c\u5c06\u5176\u5e45\u5ea6\u51cf\u5c0f\u5230\u96f6\uff09\u6765\u8868\u793a\u201c0\u201d\uff0c\u5e76\u4e14\u901a\u8fc7\u4f7f\u8f7d\u6ce2\u201c\u5f00\u542f\u201d\uff08\u5373\u8f7d\u6ce2\u5e45\u5ea6 \\(A\\) \uff09\u6765\u8868\u793a\u201c1\u201d \u3002 \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5c06\u4f20\u8f93\u7684\u4fe1\u53f7\u5206\u6210\u4e00\u7cfb\u5217\u5b9a\u65f6\u7684\u201c\u5757\u201d\uff0c\u5e76\u7528\u5b83\u4eec\u4f9d\u6b21\u6307\u793a\u6bcf\u4e2a\u6bd4\u7279\u3002\u56e0\u6b64\uff0c\u56fe1\u6240\u793a\u7684\u4f8b\u5b50\u663e\u793a\u4e86\u5982\u679c\u6211\u4eec\u4f7f\u7528\u8fd9\u79cd\u7b80\u5355\u7684\u5f00/\u5173\u4e8c\u8fdb\u5236\u65b9\u6cd5\u53d1\u9001\u4e00\u7cfb\u5217\u4f4d\u201c01011010\u201d\u6211\u4eec\u53ef\u80fd\u4f1a\u5f97\u5230\u4ec0\u4e48\u3002\u5728\u6bcf\u4e2a\u65f6\u95f4\u5757\u4e2d\u4f7f\u7528\u7684\u4fe1\u53f7\u6a21\u5f0f\u88ab\u79f0\u4e3a \u7b26\u53f7\uff0c \u5e76\u4e14\u8868\u793a\u901a\u8fc7\u9002\u5f53\u5730\u6253\u5f00\u6216\u5173\u95ed\u4fe1\u53f7\u6765\u4f20\u8fbe\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 \u56fe2\u653e\u5927\u4e86\u4e0a\u8ff0\u4fe1\u53f7\u6a21\u5f0f\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u66f4\u6e05\u695a\u5730\u770b\u5230\u4e00\u4e9b\u7ec6\u8282\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u5b83\u4e0d\u662f\u96f6\u65f6\uff0c\u6bcf\u4e2a\u7b26\u53f7\u90fd\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a4\uff09\u6240\u9009\u8f7d\u9891\u7684\u5468\u671f\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4f8b\u598210MHz\u7684\u8f7d\u6ce2\u9891\u7387\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6bcf\u4e2a\u7b26\u53f7\u5c06\u5177\u6709 \\(4/10^7 = 0.4\\mu s\\) \u7684\u6301\u7eed\u65f6\u95f4\u3002 \u6bcf\u4e2a\u7b26\u53f7\u7684\u957f\u5ea6\u88ab\u79f0\u4e3a \u6709\u6548\u7b26\u53f7\u5bbd\u5ea6 \uff0c \\(T_s\\) \u3002\u5728\u8fde\u7eed\u7b26\u53f7\u4e4b\u95f4\u6211\u4eec\u4e5f\u53ef\u5177\u6709\u77ed\u7684\u201c\u95f4\u9694\u201d\u671f\u95f4\u79f0\u4e3a \u4fdd\u62a4\u95f4\u9694 \uff0c \\(T_G\\) \uff0c\u8fd9\u66f4\u6e05\u695a\u5730\u4ece\u4e0b\u4e00\u4e2a\u5206\u9694\u4e00\u4e2a\u7801\u5143 \u6211\u4eec\u53ef\u4ee5\u7528\u4ee3\u6570\u672f\u8bed\u6765\u8868\u793a\u6ce2\u5f62\u5305\u542b\u4fe1\u53f7\u7684\u5f00/\u5173\u8c03\u5236 $$ S{t}=a\\sin(2\\pi f t +\\varphi) $$ \u5f53 \\(a=A, \\varphi=0\\) \u65f6\u53d1\u9001\u7684\u662f\u201c1\u201d \uff0c \\(a=0, \\varphi=0\\) \u65f6\u53d1\u9001\u7684\u662f\u201c0\u201d\u3002 \u5f00/\u5173\u8c03\u5236\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u66ff\u4ee3\u65b9\u6cd5\u662f\u5728\u6bcf\u4e2a\u7b26\u53f7\u5468\u671f\u5185\u5177\u6709\u8f7d\u6ce2\u529f\u7387\u7684\u7a81\u53d1\uff0c\u4f46\u6539\u53d8\u8f7d\u6ce2\u7684\u76f8\u4f4d\u4ee5\u533a\u5206\u201c1\u201d\u548c\u201c0\u201d\u3002\u56fe19.3\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\u3002\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a \u4e8c\u8fdb\u5236\u76f8\u79fb\u952e\u63a7 \uff08BPSK\uff09\u8c03\u5236\uff0c\u5e76\u4e14\u901a\u5e38\u4f18\u9009\u7b80\u5355\u7684\u5f00/\u5173\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u8868\u793a\u3002\u6211\u4eec\u53ef\u4ee5 \u6216\u8005 \u8bf4\u662f\u4e00\u4e2a\u201c0\u201d\uff0c\u6211\u4eec\u73b0\u5728\u5df2\u7ecf \u548c\u201c1\u201d\uff0c\u6211\u4eec\u6709 \uff0c \u6216\u8005 \u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u4e00\u4e2a\u201c0\u201d\u6211\u4eec \u548c\u201c1\u201d\uff0c\u6211\u4eec\u6709 \u3002\u5373\u6211\u4eec\u53ef\u4ee5\u628a\u8c03\u5236\u770b\u4f5c\u662f\u8f7d\u4f53\u7684\u5012\u7f6e\uff0c\u6216\u8005\u662f\u76f8\u4f4d\u7684\u53d8\u5316\u3002\u51fa\u4e8e\u540e\u9762\u5e94\u8be5\u6e05\u695a\u7684\u539f\u56e0\uff0c\u5c06\u6b64\u89c6\u4e3a\u8f7d\u4f53\u9636\u6bb5\u7684\u53d8\u5316\u662f\u65b9\u4fbf\u7684\u3002 \u8d77\u521d\uff0c\u770b\u8d77\u6765\u5947\u602a\u7684\u662f\u66f4\u559c\u6b22\u8fd9\u79cd\u66f4\u590d\u6742\u7684\u8c03\u5236\u65b9\u6cd5\u3002\u7b80\u5355\u7684\u5f00/\u5173\u8c03\u5236\u53ef\u4ee5\u901a\u8fc7\u50cf\u5305\u7edc\u68c0\u6d4b\u5668\u8fd9\u6837\u7684\u5ec9\u4ef7\u7535\u8def\u6765\u5bb9\u6613\u5730\u89e3\u8c03\uff0c\u4f46\u662f\u4e3a\u4e86\u89e3\u8c03BPSK\uff0c\u6211\u4eec\u8981\u6c42\u63a5\u6536\u673a\u68c0\u6d4b\u4fe1\u53f7\u76f8\u4f4d\u7684\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u632f\u5e45\u3002\u504f\u597d\u7684\u539f\u56e0\u53ef\u4ee5\u901a\u8fc7\u8003\u8651\u6211\u4eec\u4f20\u9012\u4fe1\u606f\u6a21\u5f0f\u9700\u8981\u591a\u5c11\u529b\u91cf\u6765\u7406\u89e3\u3002 \u5f53\u4fe1\u53f7\u88ab\u63a5\u6536\u5e76\u63d0\u4f9b\u7ed9\u89e3\u8c03\u5668\u65f6\uff0c\u6240\u5e0c\u671b\u7684\u4fe1\u53f7\u5c06\u603b\u662f\u4f34\u6709\u4e00\u4e9b\u968f\u673a\u566a\u58f0\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u201c0\u201d\u4fe1\u53f7\u4e0e\u201c1\u201d\u4fe1\u53f7\u4e4b\u95f4\u7684\u5dee\u5f02\u8db3\u591f\u5927\uff0c\u4ee5\u4fbf\u5728\u566a\u58f0\u4e4b\u4e0a\u53ef\u8bc6\u522b\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u56fe19.4\u6240\u793a\u7684\u7c7b\u578b\u56fe\u3002 \u56fe19.4\u5de6\u8fb9\u7684\u56fe\u663e\u793a\u4e86\u6211\u4eec\u5982\u4f55\u8868\u793a\u7528\u6765\u8868\u793a\u7ed9\u5b9a\u4fe1\u606f\u5757\u7684\u7b26\u53f7\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u3002\u6211\u4eec\u53ef\u4ee5\u7ed8\u5236\u8f7d\u6ce2\u7684\u5e45\u5ea6\uff0c \u76f8\u4f4d \uff0c\u4ee5\u56fe\u5f62\u4e0a\u7684\u4e00\u4e2a\u70b9\u8868\u793a\u4e00\u4e2a\u7b26\u53f7\u3002\u56fe19.4\u53f3\u8fb9\u7684\u66f2\u7ebf\u8868\u793a\u566a\u58f0\u5bf9\u63a5\u6536\u7684\u5f71\u54cd\u3002\u5982\u679c\u566a\u58f0\u7684\u5178\u578b\u6c34\u5e73 \u7531\u6b64\u8868\u793a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5 \u5728\u9884\u671f/\u4f20\u8f93\u4f4d\u7f6e\u5468\u56f4\u7ed8\u5236\u4e00\u4e2a\u534a\u5f84\u7684\u5706\u3002\u8fd9\u8868\u793a\u7531\u4e8e\u566a\u58f0\u201c\u79fb\u52a8\u201d\u800c\u5bfc\u81f4\u63a5\u6536\u7b26\u53f7\u53ef\u80fd\u51fa\u73b0\u7684\u56fe\u4e0a\u7684\u533a\u57df\u3002\uff08\u8bf7\u6ce8\u610f\uff0c\u5b9e\u9645\u968f\u673a\u566a\u58f0\u7684\u5f71\u54cd\u6bd4\u8fd9\u91cc\u63cf\u8ff0\u7684\u8981\u590d\u6742\u5f97\u591a\u3002\uff09 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u753b\u51fa\u56fe19.5\u6240\u793a\u7684\u4f8b\u5b50\u300219.5\u7684\u5de6\u56fe\u663e\u793a\u4e86\u5f00/\u5173\u8c03\u5236\u7684\u4f8b\u5b50\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd \\(A>2n\\) \u4fdd\u6301\u4e24\u4e2a\u201c\u566a\u97f3\u5708\u201d\u7684\u91cd\u53e0\uff0c\u5e76\u907f\u514d\u63a5\u6536\u65f6\u9519\u8bef\u5730\u89e3\u91ca\u7b26\u53f7\u3002\u5bf9\u4e8e\u5f00/\u5173\u8c03\u5236\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u79cd\u7b26\u53f7\u7684\u5e45\u5ea6\u4e3a\u96f6\uff0c\u53e6\u4e00\u79cd\u7b26\u53f7\u7684\u5e45\u5ea6\u4e3a \\(A\\) ) \u7136\u800c\uff0c\u5bf9\u4e8e\u53cc\u76f8\u8c03\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0e'1'\u76f8\u540c\u5e45\u5ea6\u7684'0'\u7b26\u53f7\u5e45\u5ea6\u3002\u8fd9\u5728\u56fe19.5\u7684\u53f3\u56fe\u4e2d\u8fdb\u884c\u4e86\u8bf4\u660e\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u6301\u7b26\u53f7\u4e4b\u95f4\u7684\u76f8\u540c\u7684\u8ddd\u79bb\u4e0e\u7b26\u53f7\u5e45\u5ea6 \u548c \u3002\u5373BPSK\u53ea\u9700\u8981OOK\u6240\u9700\u7684\u7b26\u53f7\uff08\u4fe1\u53f7\uff09\u5e45\u5ea6\u7684\u4e00\u534a\u6765\u907f\u514d\u7ed3\u679c\u88ab\u566a\u58f0\u5e72\u6270\u3002 \u73b0\u5728\uff0c\u5bf9\u4e8e\u5177\u6709\u5927\u81f4\u76f8\u7b49\u6570\u91cf\u7684\u201c0\u201d\u548c\u201c1\u201d\u7684\u6bd4\u7279\u5e8f\u5217\uff0c\u5f00/\u5173\u8c03\u5236\u5c06\u5177\u6709\u5e45\u5ea6 \uff0c\u56e0\u6b64\u529f\u7387\u4e0e \u65f6\u95f4\u7684\u4e00\u534a\u6210\u6b63\u6bd4\uff0c\u5e45\u5ea6\u548c\u529f\u7387\u4e3a\u96f6\u7684\u4e00\u534a\u3002\u56e0\u6b64\uff0c\u5f00/\u5173\u8c03\u5236\u7684\u65f6\u95f4\u5e73\u5747\u529f\u7387\u5c06\u4e0e\u6210\u6bd4\u4f8b \u3002\u800c\u5728\u53cc\u76f8\u8c03\u5236\u4e2d\uff0c\u6bcf\u4e2a\u7b26\u53f7\u7684\u529f\u7387\u4e0e\u4e4b\u6210\u6b63\u6bd4 \u3002\u5373\u5b83\u9700\u8981\u4e00\u4e2a\u5e73\u5747\u7684\u6743\u529b \u3002\u8fd9\u610f\u5473\u7740\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u53ef\u4ee5\u4f20\u8f93\u76f8\u540c\u7ea7\u522b\u7684\u4fe1\u53f7\uff0c\u4f46\u53cc\u76f8\u7cfb\u7edf\u5e73\u5747\u53ea\u9700\u8981\u4e00\u534a\u7684\u529f\u7387\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5fc5\u786e\u4fdd\u53d1\u5c04\u5668\u548c\u7535\u8def\u80fd\u591f\u5904\u7406\u4e0e\u5f00/\u5173\u7cfb\u7edf\u9700\u8981\u53d1\u9001\u201c1\u201d\u4e00\u6837\u9ad8\u7684\u5cf0\u503c\u529f\u7387\u3002 \u7531\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u53cc\u76f8\u8c03\u5236\u6bd4\u5f00/\u5173\u8c03\u5236\u529f\u7387\u66f4\u9ad8\u3002\uff08\u8fd9\u4e5f\u610f\u5473\u7740\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e0e\u5f00\u5173\u8c03\u5236\u76f8\u540c\u7684\u529f\u7387\uff0cBPSK\u5c06\u63d0\u4f9b\u66f4\u9ad8\u6c34\u5e73\u7684\u566a\u58f0\u4fdd\u62a4\uff09\u3002\u7f3a\u70b9\u662f\u6211\u4eec\u9700\u8981\u66f4\u590d\u6742\u7684\u63a5\u6536\u5668\u6765\u8bc6\u522b\u63a5\u6536\u7684\u76f8\u4f4d\u4fe1\u53f7\u3002 \u4e00\u6b21\u8d85\u8fc7\u4e00\u4e2a \u8003\u8651\u5230\u6211\u4eec\u53ef\u4ee5\u8c03\u5236\u8f7d\u6ce2\u76f8\u4f4d\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u66f4\u590d\u6742\u7684\u8c03\u5236\u5f62\u5f0f\uff0c\u5141\u8bb8\u7cfb\u7edf\u4e3a\u4e0d\u540c\u7684\u7b26\u53f7\u4f7f\u7528\u4e24\u4e2a\u4ee5\u4e0a\u7684\u53ef\u80fd\u8f7d\u6ce2\u76f8\u4f4d - \u4e5f\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u8f7d\u6ce2\u632f\u5e45\u3002 \u56fe19.6\u663e\u793a\u4e86\u4f7f\u7528 \u6b63\u4ea4\u76f8\u79fb\u952e\u63a7 \uff08QPSK\uff09\u8c03\u5236\u3002\u8fd9\u4e0eBPSK\u7684\u76f8\u4f3c\u4e4b\u5904\u5728\u4e8e\u6240\u6709\u7b26\u53f7\u5177\u6709\u76f8\u540c\u7684\u5e45\u5ea6\uff0c\u4f46\u662f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6709\u56db\u4e2a\u8f7d\u6ce2\u76f8\u4f4d\u53ef\u4f9b\u9009\u62e9\u3002\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u6709\u56db\u4e2a\u53ef\u80fd\u7684\u7b26\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u8868\u793a\u6bcf\u4e2a\u7b26\u53f7\u591a\u4e2a\u4f4d\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4e00\u6b21\u4f20\u9001\u591a\u4e2a\u4f4d\u3002\u6bcf\u4e2a\u53ef\u80fd\u7684QPSK\u7b26\u53f7\u53ef\u4ee5\u88ab\u201c\u6807\u8bb0\u201d\u5e76\u7528\u6765\u8868\u793a\u4e24\u4e2a\u6bd4\u7279\u3002 \u770b\u4e00\u4e0b\u56fe19.6\u6240\u793a\u7684QPSK\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u56db\u4e2a\u4e0d\u540c\u7684\u7b26\u53f7\u6a21\u5f0f\u53ef\u4ee5\u88ab\u9694\u5f00\u4e00\u4e2a\u5e45\u5ea6 \uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u6b63\u5728\u4ee5\u4e8c\u7ef4\u7684\u65b9\u5f0f\u8fdb\u884c\u8fd9\u6837\u7684\u5904\u7406\uff0c\u6240\u4ee5\u8f7d\u6ce2\u7684\u5b9e\u9645\u5e45\u5ea6\u5c06\u662f\u76f8\u540c\u7684 \u3002\u8f7d\u6ce2\u76f8\u4f4d\u53ef\u4ee5\u662f\u56db\u4e2a\u503c\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a \u3002 \u53e6\u4e00\u79cd\u63cf\u8ff0\u8fd9\u79cd\u65b9\u5f0f\u7684\u65b9\u6cd5\u662f\u5728\u8868\u5355\u4e2d\u5b9a\u4e49\u4fe1\u53f7 \u5e76\u8bf4\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0b\u9762\u7684\u8868\u683c\u6765\u8868\u793a\u6bcf\u4e2a\u7b26\u53f7\u7684\u6bd4\u7279\u5bf9\u3002 '00''01''10''11' \u9700\u8981\u6ce8\u610f\u7684\u662fQPSK\u63d0\u4f9b\u6bcf\u5468\u4e24\u6b21\u7684\u662fBPSK\u63d0\u4f9b\u7b26\u53f7\u4fe1\u606f\uff0c\u4f46\u5b83\u9700\u8981\u7684\u4fe1\u53f7\u5e45\u5ea6\uff0c \u4ee5\u4ece\u589e\u52a0 \u81f3 \u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u76f8\u540c\u7684 \u7b26\u53f7\u7387 \uff0cQPSK\u7684\u8f7d\u6ce2\u529f\u7387\u5fc5\u987b\u662fBPSK\u7684\u4e24\u500d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u63d0\u4f9b\u53cc\u500d\u7684\u6743\u529b\uff0c\u4e3a\u4fe1\u606f\u80fd\u529b\u7684\u7ffb\u500d\u4ed8\u51fa\u4ee3\u4ef7\u3002 \u5728\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7b26\u53f7\u6765\u4e00\u6b21\u4f20\u9001\u591a\u4e2a\u4f4d\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u632f\u5e45\u548c\u76f8\u4f4d\u6765\u6269\u5c55\u5b83\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u662f \u6b63\u4ea4\u5e45\u5ea6\u8c03\u5236 \uff08QAM\uff09\u3002\u8fd9\u6709\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u5c06\u88ab\u79f0\u4e3a\u201c16QAM\u201d\u6216\u201c64QAM\u201d\uff0c\u5176\u4e2d\u6570\u5b57\u8868\u793a\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u7b26\u53f7\u53ef\u7528\u3002\u56fe19.7\u663e\u793a\u4e86\u4e00\u4e2a\u4f8b\u5b50\u3002\u8bf7\u6ce8\u610f\uff0c\u901a\u5e38\u5c06\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u663e\u793a\u7684\u7b26\u53f7\u9635\u5217\u63cf\u8ff0\u4e3a\u7b26\u53f7\u503c\u7684 \u661f\u5ea7\u56fe \u3002 \u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7b26\u53f7\u4f4d\u7f6e\u7684\u201c\u65b9\u5f62\u201d\u9635\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9884\u671f\u8fd9\u4e9b\u7b26\u53f7\u7684\u6570\u91cf\u662f\u6574\u6570\u7684\u5e73\u65b9 - \u5373\u5177\u6709\u591a\u4e2a\u7b26\u53f71,2,4,9 \u621616\u7b49\uff0c\u5728\u661f\u5ea7\u3002 \u56fe19.7\u4e2d\u7684\u4f8b\u5b50\u662f16QAM\uff0c\u56e0\u6b64\u6709 4 4 = 16\u4e2a\u7b26\u53f7\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u9635\u5217\uff0c\u79bb\u4e2d\u5fc3\u6700\u8fdc\u7684\u4f4d\u7f6e\uff08\u5373\uff0c\u9700\u8981\u6700\u5927\u7b26\u53f7\u5e45\u5ea6\u7684\u7b26\u53f7\uff09\u7684\u5e45\u5ea6\u5c06\u662f \u3002\u4f20\u8f93\u8fd9\u4e9b\u6700\u9ad8\u5e45\u5ea6\u7b26\u53f7\u6240\u9700\u7684\u8f7d\u6ce2\u529f\u7387\u5c06\u662f \u5176\u4e2d\uff0c\u4f55\u65f6 \u76f8\u5f53\u5927\u5c06\u8fd1\u4f3c\u4e8e \u7136\u800c\u6bcf\u7b26\u53f7\u7684\u6bd4\u7279\u6570\uff0c \u4e0e\u7b26\u53f7\u7684\u6570\u91cf\u800c\u53d8\u5316\uff0c \u6839\u636e \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u671f\uff0c\u6240\u8981\u6c42\u7684\u5cf0\u503c\u8f7d\u6ce2\u529f\u7387\u5c06\uff08\u5927\u81f4\uff09\u503e\u5411\u4e8e\u968f\u7740\u6bcf\u4e2a\u7b26\u53f7\u7684\u4f4d\u6570\u800c\u53d8\u5316 \u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0cQAM\u6240\u9700\u7684\u5cf0\u503c\u529f\u7387\u8d8b\u4e8e\u6025\u5267\u4e0a\u5347\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u7b26\u53f7\u4f20\u9001\u66f4\u591a\u7684\u6bd4\u7279\u3002\u56e0\u6b64\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u907f\u514d\u9009\u62e9\u592a\u9ad8\u7684\u4ef7\u503c \uff0c\u56e0\u6b64 \u3002 \u4e3a\u4e86\u80fd\u591f\u6bcf\u4e2a\u7b26\u53f7\u95f4\u9694\u4f20\u9001\u591a\u4e2a\u6bd4\u7279\uff0c\u6211\u4eec\u53ef\u4ee5\u51b3\u5b9a\u4f7f\u7528\u591a\u4e2a\u201c\u5e76\u884c\u201d\u7684\u8f7d\u6ce2\u9891\u7387\u3002\u5b9e\u9645\u4e0a\uff0c\u4f7f\u7528\u591a\u4e2a\u540c\u65f6\u4f20\u8f93\uff0c\u6bcf\u4e2a\u4f20\u8f93\u63d0\u4f9b\u9002\u5ea6\u7684\u4fe1\u606f\u901f\u7387\uff0c\u5176\u7ed3\u5408\u63d0\u4f9b\u66f4\u9ad8\u7684\u6570\u636e\u901f\u7387\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4e00\u8d77\u4f7f\u7528\u7684\u4e00\u7ec4\u8c03\u5236\u8f7d\u6ce2\u88ab\u79f0\u4e3a \u96c6\u5408\uff08Ensemble\uff09 \u3002\u5982\u679c\u6211\u4eec\u8fd9\u6837\u505a\uff0c\u5c31\u4f1a\u6709\u4e00\u4e2a\u5de7\u5999\u7684\u628a\u620f\uff0c\u53ef\u4ee5\u4f7f\u8fd9\u4e2a\u65b9\u6cd5\u7279\u522b\u6709\u6548\u3002\u4e3a\u4e86\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5178\u578b\u7b26\u53f7\u7684\u9891\u8c31\u3002\u4e3a\u4e86\u4fbf\u4e8e\u4e3e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9009\u62e9\u7684\u7b26\u53f7\u95f4\u9694\u671f\u95f4\u9009\u62e932\u4e2a\u8f7d\u6ce2\u5468\u671f\u3002\u5982\u679c\u6211\u4eec\u53ea\u5728\u7b26\u53f7\u95f4\u9694\u671f\u95f4\u8bb0\u5f55\u4fe1\u53f7\u5e76\u8ba1\u7b97\u51fa\u5b83\u7684\u529f\u7387\u9891\u8c31\uff0c\u7ed3\u679c\u5c06\u5982\u56fe19.8\u4e2d\u7684\u5b9e\u7ebf\uff08\u84dd\u7ebf\uff09\u6240\u793a\u3002 \u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u8981\u6c42\u8fde\u7eed\u6b63\u5f26\u66f2\u7ebf\u7684\u9891\u8c31\u5728\u5f88\u957f\u65f6\u95f4\uff08\u5373\u57fa\u672c\u65e0\u9650\uff09\u7684\u65f6\u95f4\u95f4\u9694\u5185\u5ef6\u4f38\uff0c\u90a3\u4e48\u9891\u8c31\u5728\u9002\u5f53\u7684\u9891\u7387\u4e0b\u5c06\u53ea\u6709\u4e00\u4e2a\u975e\u96f6\u5206\u91cf\u3002\u4ece \u4fe1\u606f\u7406\u8bba\u4e2d\uff0c \u6211\u4eec\u53ef\u4ee5\u9884\u671f\uff0c\u5c06\u89c2\u5bdf\u5230\u7684\u6ce2\u5f62\u9650\u5236\u5728\u4e00\u4e2a\u6709\u9650\u7684\u65f6\u95f4\u95f4\u9694\u5185 \uff0c\u4f1a\u5bfc\u81f4\u9891\u8c31\u6269\u5927\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u6b63\u5f26\u5e73\u65b9\uff0c\u5982\u56fe19.8\u6240\u793a\u3002\u8be5\u9891\u8c31\u5728\u8be5\u533a\u95f4\u768432\u4e2a\u5468\u671f\u7684\u9884\u671f\uff08\u8f7d\u6ce2\uff09\u9891\u7387\u5904\u5177\u6709\u5cf0\u503c\u3002\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5176\u4ed6\u9891\u7387\u4e0a\u4e5f\u6709\u96f6\u6216\u96f6\uff0c\u5bf9\u5e94\u4e8e\u95f4\u9694\u4e3a 32\u7684\u6574\u6570\u5468\u671f\u6570\u3002\u8fd9\u79cd\u884c\u4e3a\u6765\u81ea\u4e8e \u6b63\u4ea4\u51fd\u6570 \u3002\u9664\u4e86\u6ce8\u610f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6709\u7528\u7684\u5177\u4f53\u7ed3\u679c\u4e4b\u5916\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8ba8\u8bba\u8fd9\u4e2a\u6570\u5b66\u4e3b\u9898\u7684\u7ec6\u8282\u3002 \u8003\u8651\u4e24\u79cd\u53ef\u80fd\u7684\u5177\u6709\u4e0d\u540c\u8f7d\u6ce2\u9891\u7387\u7684\u6b63\u5f26\u6ce2\u5f62\uff0c \u5728\u54ea\u91cc \uff0c \u662f\u6574\u6570\u3002\u5b83\u53ef\u4ee5\u4ece\u6570\u5b66\u4e0a\uff0c\u5982\u679c \u518d \u8fd9\u662f\u5982\u6b64\uff0c\u65e0\u8bba\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u7684\u9636\u6bb5 \uff0c\u548c \u3002 \u5b9e\u9645\u7ed3\u679c\u5982\u56fe19.8\u6240\u793a\uff0c\u5b83\u53e0\u52a0\u4e86\u53ef\u80fd\u7684\u8f7d\u6ce2\u9891\u7387\u7684\u4e24\u4e2a\u4e0d\u540c\u9009\u62e9\u7684\u529f\u7387\u8c31\uff0c\u6bcf\u4e2a\u9009\u62e9\u5728\u6240\u9009\u7b26\u53f7\u95f4\u9694\u4e2d\u5177\u6709\u6574\u6570\u4e2a\u5468\u671f\u3002\u65ad\u5f00\u7684\uff08\u7ea2\u8272\uff09\u7ebf\u663e\u793a\u7b26\u53f7\u7684\u9891\u8c31\uff0c\u5176\u8f7d\u6ce2\u9891\u7387\u4e3a\u6bcf\u4e2a\u7b26\u53f7\u6301\u7eed\u65f6\u95f434\u4e2a\u5468\u671f\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u9664\u4e8634\u7684\u7b26\u53f7\u5468\u671f\u671f\u95f4\uff0c\u5728\u6240\u6709\u9891\u7387\u4e0a\u5177\u6709\u6574\u6570\u4e2a\u5468\u671f\u7684\u96f6\u3002 \u5982\u679c\u6211\u4eec\u73b0\u5728\u540c\u65f6\u4f7f\u7528\u4e24\u4e2a\u8f7d\u6ce2\u4f5c\u4e3a\u5e76\u884cQAM\u6d41\uff0c\u6211\u4eec\u5728\u6211\u4eec\u7684\u63a5\u6536\u673a/\u89e3\u8c03\u5668\u4e2d\u53d1\u73b0\u8bbe\u8ba1\u7528\u4e8e\u6d4b\u91cf\u4fe1\u53f7\u5e45\u5ea6\u548c\u76f8\u4f4d\u5728\u4e00\u4e2a\u9891\u7387\u4e0a\uff0c \uff0c\u5c06\u4e0d\u4f1a\u53d7\u5230\u53e6\u4e00\u4e2a\u627f\u8fd0\u4eba\u7684\u5b58\u5728\u7684\u5f71\u54cd\uff0c \u56e0\u4e3a\u8fd9\u5728\u6b64\u4e0d\u4ea7\u751f\u4efb\u4f55\u8d21\u732e \u3002\u8fd9\u4e2a\u7ed3\u679c\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u540c\u65f6\u4f20\u8f93\u4e00\u7cfb\u5217\u8f7d\u6ce2\uff0c\u5e76\u7528\u5b83\u4eec\u81ea\u5df1\u7684\u6bd4\u7279\uff08\u4fe1\u606f\uff09\u6a21\u5f0f\u6765\u8c03\u5236\u5b83\u4eec\u4e2d\u7684\u6bcf\u4e00\u4e2a\u3002\u901a\u8fc7\u9009\u62e9\u4e00\u7ec4 \u6b63\u4ea4 \u8f7d\u6ce2\u9891\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u9632\u6b62\u5b83\u4eec\u4e92\u76f8\u5e72\u6270\uff0c\u4ece\u800c\u6062\u590d\u5b83\u4eec\u643a\u5e26\u7684\u6240\u6709\u4fe1\u606f\u3002\u6211\u4eec\u5fc5\u987b\u9075\u5b88\u7684\u8981\u6c42\u662f\uff0c\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u6709\u9650\u7684\u7b26\u53f7\u6301\u7eed\u65f6\u95f4\uff0c \u7136\u540e\u9009\u62e9\u6240\u6709\u7684\u8f7d\u6ce2\u9891\u7387\uff0c\u8fd9\u6837\u5b83\u4eec\u5728\u8fd9\u4e2a\u65f6\u95f4\u5468\u671f\u5185\u6709\u4e0d\u540c\u7684\u6574\u6570\u4e2a\u5468\u671f\u3002 \u8fd9\u4e2a\u80fd\u529b\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4f20\u8f93100\u4e2a\u8f7d\u6ce2\uff0c\u5e76\u4e14\u8c03\u5236\u5b83\u4eec\u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u53d1\u9001\u6bd4\u53d1\u9001\u4e00\u4e2a\u8c03\u5236\u8f7d\u6ce2\u591a100\u500d\u7684\u6bd4\u7279\u3002\u8fd9\u79cd\u6280\u672f\u88ab\u79f0\u4e3a \u6b63\u4ea4\u9891\u5206\u590d\u7528 \uff08OFDM\uff09\u3002\u66f4\u4e3a\u5e38\u89c1\u7684\u662f\uff0c\u60a8\u5c06\u4f1a\u770b\u5230\u8fd9\u79cd\u88ab\u79f0\u4e3aCOFDM\u6216 \u7f16\u7801\u7684\u6b63\u4ea4\u9891\u5206\u590d\u7528\uff08Coded Orthogonal Frequency Division Multiplexing\uff09 \uff0c\u8fd9\u662f\u6307\u7cfb\u7edf\u5728\u5b9e\u8df5\u4e2d\u88ab\u4fee\u6539\u548c\u4f7f\u7528\u7684\u65b9\u5f0f\u3002COFDM\u662f\u76ee\u524d\u5728\u82f1\u56fd\u7528\u4e8e\u201c\u6570\u5b57\u201d\u7535\u89c6\u548c\u58f0\u97f3\u5e7f\u64ad\u7684\u57fa\u672c\u8c03\u5236\u548c\u901a\u4fe1\u65b9\u6cd5\u3002 \u591a\u8def\u5f84 \u65e0\u7ebf\u7535\u901a\u4fe1\u4e2d\u7684\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\u662f \u591a\u8def\u5f84 \u3002\u5982\u540d\u79f0\u6240\u793a\uff0c\u8fd9\u662f\u4fe1\u53f7\u53ef\u80fd\u901a\u8fc7\u591a\u6761\u8def\u5f84\u4ece\u53d1\u5c04\u673a\u4f20\u8f93\u5230\u63a5\u6536\u673a\u7684\u60c5\u51b5\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u53d1\u5c04\u673a\u5230\u63a5\u6536\u673a\u4e4b\u95f4\u83b7\u5f97\u4e00\u6761\u76f4\u7ebf\u7684\u4fe1\u53f7\u8def\u5f84\uff0c\u800c\u901a\u8fc7\u5c71\u4e18\u6216\u9ad8\u5c42\u5efa\u7b51\u7684\u53cd\u5c04\u53ef\u4ee5\u83b7\u5f97\u53e6\u4e00\u6761\u4fe1\u53f7\u8def\u5f84\u3002\u5f53\u8fd9\u4e9b\u8def\u5f84\u5177\u6709\u4e0d\u540c\u7684\u957f\u5ea6\u65f6\uff0c\u5b83\u4eec\u5bf9\u63a5\u6536\u5230\u7684\u7ed3\u679c\u7684\u8d21\u732e\u5c06\u4ee5\u4e0d\u540c\u7684\u4f20\u64ad\u5ef6\u8fdf\u5230\u8fbe\u3002\u8fd9\u79cd\u60c5\u51b5\u5982\u4e0b\u9762\u7684\u56fe19.9\u6240\u793a\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u53ef\u80fd\u4f1a\u6709\u8bb8\u591a\u8fd9\u6837\u7684\u8def\u5f84\uff0c\u4ee5\u5404\u79cd\u65f6\u95f4\u5ef6\u8fdf\u548c\u5e45\u5ea6\u7ed9\u51fa\u8d21\u732e\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ea\u8003\u8651\u4e00\u4e2a\u62d6\u5ef6\u7684\u8d21\u732e\u3002 \u4ece\u56fe19.9\u53ef\u4ee5\u770b\u51fa\uff0c\u901a\u8fc7\u201c\u53cd\u5c04\u201d\u8def\u5f84\u589e\u52a0\u5ef6\u8fdf\u8d21\u732e\u6709\u4e24\u4e2a\u7ed3\u679c\u3002\u8fd9\u4e9b\u7b26\u53f7\u5df2\u7ecf\u88ab\u6269\u5c55\uff0c\u73b0\u5728\u6709\u4e00\u4e2a\u201c\u5c3e\u5df4\u201d\uff0c\u7531\u4e8e\u53cd\u5c04\u7684\u8d21\u732e\u5728\u76f4\u63a5\u7b26\u53f7\u7ed3\u675f\u540e\u7684\u77ed\u65f6\u95f4\u5185\u6301\u7eed\u5230\u8fbe\u3002\u63a5\u6536\u5230\u7684\u7ed3\u679c\u7684\u6709\u6548\u5e45\u5ea6\u548c\u76f8\u4f4d\u7684\u53d8\u5316\u91cf\u53d6\u51b3\u4e8e\u8def\u5f84\u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\u3002 \u4e24\u6761\u8def\u5f84\u7684\u957f\u5ea6\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 \uff08\u76f4\u63a5\uff09\u548c \uff08\u95f4\u63a5\uff09\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5b9a\u4e49\u5b83\u4eec\u7684\u76f8\u5bf9\u5230\u8fbe\u4e4b\u95f4\u7684\u65f6\u95f4\u5ef6\u8fdf \u5149\u7684\u901f\u5ea6 \u5728\u54ea\u91cc\uff1f \u4ee5\u4e0a\u663e\u793a\u4e86 \u5728\u6709\u7528\u7b26\u53f7\u5468\u671f\u4e4b\u95f4\u6709\u4e00\u4e2a\u4fdd\u62a4\u95f4\u9694\u7684\u539f\u56e0 \u3002\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5b89\u6392\u4e86\uff0c \u90a3\u4e48\u6bcf\u4e2a\u7b26\u53f7\u7684\u5ef6\u8fdf\u7248\u672c\u5c06\u5728\u5e8f\u5217\u4e2d\u7684\u4e0b\u4e00\u4e2a\u7b26\u53f7\u5f00\u59cb\u5230\u8fbe\u4e4b\u524d\u5b8c\u6210\u3002\u8fd9\u9632\u6b62\u4e86\u7ed9\u5b9a\u7b26\u53f7\u4f20\u8f93\u7684\u6a21\u5f0f\u5f71\u54cd\u6211\u4eec\u5728\u4e0b\u4e00\u4e2a\u7b26\u53f7\u5468\u671f\u4e2d\u770b\u5230\u7684\u5185\u5bb9\u3002\u5f53\u4e00\u4e2a\u7b26\u53f7\u6a21\u5f0f\u5e72\u6270\u6216\u8005\u65e0\u610f\u4e2d\u6539\u53d8\u6211\u4eec\u5e0c\u671b\u53d1\u9001\u7ed9\u53e6\u4e00\u4e2a\u6a21\u5f0f\u7684\u6a21\u5f0f\u65f6\uff0c\u8fd9\u88ab\u79f0\u4e3a \u7b26\u53f7\u95f4\u5e72\u6270 \uff08ISI\uff09\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u907f\u514dISI\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u63a5\u6536\u673a\u96be\u4ee5\u6b63\u786e\u89e3\u8c03\u7b26\u53f7\u3002 \u56e0\u6b64\uff0c\u4fdd\u62a4\u95f4\u9694\u7684\u9009\u62e9\u503c\u5bf9\u4e8e\u907f\u514d\u6570\u636e\u4e22\u5931\u6216\u591a\u8def\u5f84\u5f15\u8d77\u7684\u9519\u8bef\u975e\u5e38\u91cd\u8981\u3002\u6211\u4eec\u5e0c\u671b\u4e3a\u6b64\u9009\u62e9\u4e00\u4e2a \u8db3\u591f\u5927\u7684\u503c\uff0c\u4ee5\u907f\u514d\u53cd\u5c04\u8d85\u8fc7 - \u6216\u8005\u81f3\u5c11\u6211\u4eec\u5e0c\u671b\u786e\u4fdd\u4efb\u4f55\u8fdf\u5230\u7684\u53cd\u5c04\u5c06\u5177\u6709\u5982\u6b64\u4f4e\u7684\u632f\u5e45\u4ee5\u81f3\u4e8e\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd\u4ee5\u4e0b\u7b26\u53f7\u6a21\u5f0f\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u3002 \u957f\u4fdd\u62a4\u95f4\u9694\u53ef\u4ee5\u907f\u514d\u4e00\u4e2a\u7b26\u53f7\u660e\u663e\u5f71\u54cd\u4e0b\u4e00\u4e2a\u7b26\u53f7\uff0c\u4f46\u591a\u8def\u5f84\u4ecd\u7136\u53ef\u4ee5\u6539\u53d8\u63a5\u6536\u5230\u7684\u7b26\u53f7\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u3002\u4e3a\u4e86\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u63d2\u5165\u4e00\u4e2a\u6240\u8c13\u7684 \u8bd5\u70b9\u7b26\u53f7 \u6216 \u53c2\u8003\u7b26\u53f7 \u7684\u89c4\u5219\u6a21\u5f0f**\u8fdb\u5165\u4f20\u8f93\u7684\u6d41\u3002\u8fd9\u4e9b\u8fd8\u5141\u8bb8\u53d1\u5c04\u673a\u901a\u77e5\u63a5\u6536\u673a\u4ec0\u4e48\u76f8\u4f4d/\u5e45\u5ea6\u5bf9\u5e94\u4e8e\u7ed9\u5b9a\u7684\u7b26\u53f7\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u5bfc\u9891\u6216\u53c2\u8003\u7b26\u53f7\u53ef\u4ee5\u201c\u6821\u51c6\u201d\u63a5\u6536\u673a\uff0c\u5e76\u6709\u52a9\u4e8e\u7ea0\u6b63\u591a\u5f84\u6548\u5e94\u3002 \u6982\u8981 \u60a8\u73b0\u5728\u5e94\u8be5\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u6570\u5b57\u8c03\u5236\u4ee5\u4e00\u7ec4\u9884\u5b9a\u4e49 \u7b26\u53f7\u7684 \u5f62\u5f0f\u4f20\u8f93\u201c\u6bd4\u7279\u201d\u6d41\u7684\u4fe1\u606f\u3002\u6bcf\u4e2a\u7b26\u53f7\u53ef\u4ee5\u4f20\u9001\u7684\u6bd4\u7279\u6570\u53d6\u51b3\u4e8e\u6240\u9009\u8c03\u5236\u65b9\u6848\u4e2d\u53ef\u7528\u7684\u4e0d\u540c\u7b26\u53f7\u7684\u6570\u91cf\uff0c\u5c31\u5176\u660e\u663e\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u800c\u8a00\u3002\u8fd8\u5e94\u8be5\u6e05\u695a\u7684\u662f\uff0c\u8fd9\u4e9b\u5dee\u522b\u8db3\u4ee5\u5728\u53ef\u80fd\u5b58\u5728\u7684\u566a\u58f0\u4e0a\u533a\u5206\u5f00\u6765\uff0c\u5e76\u4e14\u6240\u9700\u7684\u529f\u7387\u968f\u7740\u6211\u4eec\u60f3\u8981\u6bcf\u4e2a\u7b26\u53f7\u66f4\u591a\u7684\u6bd4\u7279\u800c\u589e\u52a0\u3002\u60a8\u73b0\u5728\u4e5f\u5e94\u8be5\u660e\u767d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u6b63\u4ea4 \u8f7d\u6ce2\u96c6\u6765\u63d0\u4f9b\u53ef\u4ee5\u88ab\u8c03\u5236\u548c\u68c0\u6d4b\u7684\u201c\u5e76\u884c\u201d\u6d41\uff0c\u800c\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u4fe1\u606f\u4f20\u8f93\u7684\u603b\u901f\u7387\u3002","title":"\u6570\u5b57\u8c03\u5236"},{"location":"ESP32/%E6%95%B0%E5%AD%97%E8%B0%83%E5%88%B6/#_1","text":"\u672c\u8bb2\u5ea7\u5c06\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7\u8c03\u5236\u8f7d\u6ce2\u6ce2\u5f62\u6765\u4ee5\u6570\u5b57\u5f62\u5f0f\u4f20\u8f93\u4fe1\u606f\u3002\u6570\u5b57\u8c03\u5236\u65b9\u6cd5\u4e0e\u6a21\u62df\u4f20\u8f93\u76f8\u6bd4\u5177\u6709\u591a\u4e2a\u4f18\u70b9\uff0c\u4f7f\u9ad8\u7ea7\u4fe1\u53f7\u5904\u7406\u6210\u4e3a\u53ef\u80fd\uff08\u5982\u7ea0\u9519\u7f16\u7801\uff0c\u52a0\u5bc6\u548c\u591a\u6837\u6027\uff09\u3002 \u5e38\u7528\u7684\u7a84\u5e26\u6570\u5b57\u8c03\u5236\u6709\uff1a \u4e8c\u8fdb\u5236\u76f8\u79fb\u952e\u63a7\uff08BPSK\uff09 BPSK\u4e0e\u8109\u51b2\u6574\u5f62 BPSK\u5728\u79fb\u52a8\u8702\u7a9d\u4fe1\u9053\u4e2d\u7684\u8bef\u7801\u7387 \u6b63\u4ea4\u76f8\u79fb\u952e\u63a7\uff08QPSK\uff09 QAM\uff08PDF\u5e7b\u706f\u7247\u5b9e\u65bd\uff09 \u8fde\u7eed\u76f8\u79fb\u952e\u63a7 G-MSK\uff0c\u4f8b\u5982\u5728GSM\u4e2d\u5e94\u7528 \u5176\u4ed6\u65b9\u6cd5\u662f \u591a\u8f7d\u6ce2\u4f20\u8f93\uff0c\u7279\u522b\u662fOFDM\u548c\u591a\u8f7d\u6ce2CDMA \u76f4\u63a5\u5e8f\u5217CDMA \u591a\u5f84\u8870\u843d Multipath Fading \u591a\u5f84\u4f20\u64ad Multipath propagation Inter Symbol Interference (ISI) \u867d\u7136\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a \u6570\u5b57\u8c03\u5236 \uff08DM\uff09\uff0c\u4f46\u5b83\u901a\u5e38\u6d89\u53ca\u67d0\u79cd\u5f62\u5f0f\u7684AM\u548c/\u6216FM\u6216PM\u3002\u56e0\u6b64\uff0c\u6570\u5b57\u8c03\u5236\u5e94\u88ab\u89c6\u4e3a\u63cf\u8ff0AM / FM / PM\u53ef\u7528\u4e8e\u4ee5\u4fe1\u606f\u7684\u201c\u6bd4\u7279\u201d\u6a21\u5f0f\u4f20\u9001\u4fe1\u606f\u7684\u65b9\u5f0f\u3002\u539f\u5219\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u5f62\u5f0f\u7684\u8c03\u5236\u5668\u6216\u89e3\u8c03\u5668\uff0c\u56e0\u4e3a\u5f53\u4f7f\u7528AM / FM / PM\u53d1\u9001\u201c\u6a21\u62df\u201d\u6a21\u5f0f\u65f6\u3002\u4fe1\u606f\u7684\u6570\u5b57\u8868\u793a\u7684\u4f7f\u7528\u610f\u5473\u7740\u6211\u4eec\u73b0\u5728\u5fc5\u987b\u5904\u7406\u6709\u9650\u7684\u4e00\u7ec4\u5b9a\u4e49\u7684\u4fe1\u53f7\u5e45\u5ea6\u6216\u76f8\u4f4d\u6216\u9891\u7387\uff0c\u800c\u4e0d\u662f\u5728\u6a21\u62df\u8868\u793a\u4e2d\u51fa\u73b0\u7684\u5e73\u6ed1\u53d8\u91cf\u503c\u3002","title":"\u6570\u5b57\u8c03\u5236"},{"location":"ESP32/%E6%95%B0%E5%AD%97%E8%B0%83%E5%88%B6/#-","text":"\u6570\u5b57\u8c03\u5236\u7684\u6700\u7b80\u5355\u7684\u5f62\u5f0f\u901a\u8fc7\u6253\u5f00\u548c\u5173\u95ed\u7535\u8def\uff0c\u8868\u793a\u4e00\u7cfb\u5217\u903b\u8f91\u201c1\u201d\u548c\u201c0\u201d\u3002\u56e0\u6b64\uff0c\u5b83\u901a\u5e38\u88ab\u79f0\u4e3a \u5f00\u5173\u952e\u63a7 \uff08OOK\uff09\u3002 \uff08Key\u7ffb\u8bd1\u4e3a\u952e\u63a7\uff0c\u8fd9\u4e2a\u672f\u8bed\u53ef\u4ee5\u8ffd\u6eaf\u5230\u201c\u83ab\u5c14\u65af\u7535\u7801\u201d\u7684\u65f6\u4ee3\uff0c\u5f53\u65f6\u4f7f\u7528\u79f0\u4e3aKey\u201c\u94a5\u5319\u201d\u7684\u5f00\u5173\u624b\u52a8\u6253\u5f00\u548c\u5173\u95ed\u4f20\u8f93\uff09\u3002 \u4f8b\u5982\u56fe1\u6240\u793a\u3002\u5728\u8fd9\u91cc\uff0c\u901a\u8fc7\u4f7f\u8f7d\u6ce2\u201c\u5173\u95ed\u201d\uff08\u5373\uff0c\u5c06\u5176\u5e45\u5ea6\u51cf\u5c0f\u5230\u96f6\uff09\u6765\u8868\u793a\u201c0\u201d\uff0c\u5e76\u4e14\u901a\u8fc7\u4f7f\u8f7d\u6ce2\u201c\u5f00\u542f\u201d\uff08\u5373\u8f7d\u6ce2\u5e45\u5ea6 \\(A\\) \uff09\u6765\u8868\u793a\u201c1\u201d \u3002 \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5c06\u4f20\u8f93\u7684\u4fe1\u53f7\u5206\u6210\u4e00\u7cfb\u5217\u5b9a\u65f6\u7684\u201c\u5757\u201d\uff0c\u5e76\u7528\u5b83\u4eec\u4f9d\u6b21\u6307\u793a\u6bcf\u4e2a\u6bd4\u7279\u3002\u56e0\u6b64\uff0c\u56fe1\u6240\u793a\u7684\u4f8b\u5b50\u663e\u793a\u4e86\u5982\u679c\u6211\u4eec\u4f7f\u7528\u8fd9\u79cd\u7b80\u5355\u7684\u5f00/\u5173\u4e8c\u8fdb\u5236\u65b9\u6cd5\u53d1\u9001\u4e00\u7cfb\u5217\u4f4d\u201c01011010\u201d\u6211\u4eec\u53ef\u80fd\u4f1a\u5f97\u5230\u4ec0\u4e48\u3002\u5728\u6bcf\u4e2a\u65f6\u95f4\u5757\u4e2d\u4f7f\u7528\u7684\u4fe1\u53f7\u6a21\u5f0f\u88ab\u79f0\u4e3a \u7b26\u53f7\uff0c \u5e76\u4e14\u8868\u793a\u901a\u8fc7\u9002\u5f53\u5730\u6253\u5f00\u6216\u5173\u95ed\u4fe1\u53f7\u6765\u4f20\u8fbe\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 \u56fe2\u653e\u5927\u4e86\u4e0a\u8ff0\u4fe1\u53f7\u6a21\u5f0f\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u66f4\u6e05\u695a\u5730\u770b\u5230\u4e00\u4e9b\u7ec6\u8282\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u5b83\u4e0d\u662f\u96f6\u65f6\uff0c\u6bcf\u4e2a\u7b26\u53f7\u90fd\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a4\uff09\u6240\u9009\u8f7d\u9891\u7684\u5468\u671f\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4f8b\u598210MHz\u7684\u8f7d\u6ce2\u9891\u7387\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6bcf\u4e2a\u7b26\u53f7\u5c06\u5177\u6709 \\(4/10^7 = 0.4\\mu s\\) \u7684\u6301\u7eed\u65f6\u95f4\u3002 \u6bcf\u4e2a\u7b26\u53f7\u7684\u957f\u5ea6\u88ab\u79f0\u4e3a \u6709\u6548\u7b26\u53f7\u5bbd\u5ea6 \uff0c \\(T_s\\) \u3002\u5728\u8fde\u7eed\u7b26\u53f7\u4e4b\u95f4\u6211\u4eec\u4e5f\u53ef\u5177\u6709\u77ed\u7684\u201c\u95f4\u9694\u201d\u671f\u95f4\u79f0\u4e3a \u4fdd\u62a4\u95f4\u9694 \uff0c \\(T_G\\) \uff0c\u8fd9\u66f4\u6e05\u695a\u5730\u4ece\u4e0b\u4e00\u4e2a\u5206\u9694\u4e00\u4e2a\u7801\u5143 \u6211\u4eec\u53ef\u4ee5\u7528\u4ee3\u6570\u672f\u8bed\u6765\u8868\u793a\u6ce2\u5f62\u5305\u542b\u4fe1\u53f7\u7684\u5f00/\u5173\u8c03\u5236 $$ S{t}=a\\sin(2\\pi f t +\\varphi) $$ \u5f53 \\(a=A, \\varphi=0\\) \u65f6\u53d1\u9001\u7684\u662f\u201c1\u201d \uff0c \\(a=0, \\varphi=0\\) \u65f6\u53d1\u9001\u7684\u662f\u201c0\u201d\u3002 \u5f00/\u5173\u8c03\u5236\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u66ff\u4ee3\u65b9\u6cd5\u662f\u5728\u6bcf\u4e2a\u7b26\u53f7\u5468\u671f\u5185\u5177\u6709\u8f7d\u6ce2\u529f\u7387\u7684\u7a81\u53d1\uff0c\u4f46\u6539\u53d8\u8f7d\u6ce2\u7684\u76f8\u4f4d\u4ee5\u533a\u5206\u201c1\u201d\u548c\u201c0\u201d\u3002\u56fe19.3\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\u3002\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a \u4e8c\u8fdb\u5236\u76f8\u79fb\u952e\u63a7 \uff08BPSK\uff09\u8c03\u5236\uff0c\u5e76\u4e14\u901a\u5e38\u4f18\u9009\u7b80\u5355\u7684\u5f00/\u5173\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u8868\u793a\u3002\u6211\u4eec\u53ef\u4ee5 \u6216\u8005 \u8bf4\u662f\u4e00\u4e2a\u201c0\u201d\uff0c\u6211\u4eec\u73b0\u5728\u5df2\u7ecf \u548c\u201c1\u201d\uff0c\u6211\u4eec\u6709 \uff0c \u6216\u8005 \u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u4e00\u4e2a\u201c0\u201d\u6211\u4eec \u548c\u201c1\u201d\uff0c\u6211\u4eec\u6709 \u3002\u5373\u6211\u4eec\u53ef\u4ee5\u628a\u8c03\u5236\u770b\u4f5c\u662f\u8f7d\u4f53\u7684\u5012\u7f6e\uff0c\u6216\u8005\u662f\u76f8\u4f4d\u7684\u53d8\u5316\u3002\u51fa\u4e8e\u540e\u9762\u5e94\u8be5\u6e05\u695a\u7684\u539f\u56e0\uff0c\u5c06\u6b64\u89c6\u4e3a\u8f7d\u4f53\u9636\u6bb5\u7684\u53d8\u5316\u662f\u65b9\u4fbf\u7684\u3002 \u8d77\u521d\uff0c\u770b\u8d77\u6765\u5947\u602a\u7684\u662f\u66f4\u559c\u6b22\u8fd9\u79cd\u66f4\u590d\u6742\u7684\u8c03\u5236\u65b9\u6cd5\u3002\u7b80\u5355\u7684\u5f00/\u5173\u8c03\u5236\u53ef\u4ee5\u901a\u8fc7\u50cf\u5305\u7edc\u68c0\u6d4b\u5668\u8fd9\u6837\u7684\u5ec9\u4ef7\u7535\u8def\u6765\u5bb9\u6613\u5730\u89e3\u8c03\uff0c\u4f46\u662f\u4e3a\u4e86\u89e3\u8c03BPSK\uff0c\u6211\u4eec\u8981\u6c42\u63a5\u6536\u673a\u68c0\u6d4b\u4fe1\u53f7\u76f8\u4f4d\u7684\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u632f\u5e45\u3002\u504f\u597d\u7684\u539f\u56e0\u53ef\u4ee5\u901a\u8fc7\u8003\u8651\u6211\u4eec\u4f20\u9012\u4fe1\u606f\u6a21\u5f0f\u9700\u8981\u591a\u5c11\u529b\u91cf\u6765\u7406\u89e3\u3002 \u5f53\u4fe1\u53f7\u88ab\u63a5\u6536\u5e76\u63d0\u4f9b\u7ed9\u89e3\u8c03\u5668\u65f6\uff0c\u6240\u5e0c\u671b\u7684\u4fe1\u53f7\u5c06\u603b\u662f\u4f34\u6709\u4e00\u4e9b\u968f\u673a\u566a\u58f0\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u201c0\u201d\u4fe1\u53f7\u4e0e\u201c1\u201d\u4fe1\u53f7\u4e4b\u95f4\u7684\u5dee\u5f02\u8db3\u591f\u5927\uff0c\u4ee5\u4fbf\u5728\u566a\u58f0\u4e4b\u4e0a\u53ef\u8bc6\u522b\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u56fe19.4\u6240\u793a\u7684\u7c7b\u578b\u56fe\u3002 \u56fe19.4\u5de6\u8fb9\u7684\u56fe\u663e\u793a\u4e86\u6211\u4eec\u5982\u4f55\u8868\u793a\u7528\u6765\u8868\u793a\u7ed9\u5b9a\u4fe1\u606f\u5757\u7684\u7b26\u53f7\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u3002\u6211\u4eec\u53ef\u4ee5\u7ed8\u5236\u8f7d\u6ce2\u7684\u5e45\u5ea6\uff0c \u76f8\u4f4d \uff0c\u4ee5\u56fe\u5f62\u4e0a\u7684\u4e00\u4e2a\u70b9\u8868\u793a\u4e00\u4e2a\u7b26\u53f7\u3002\u56fe19.4\u53f3\u8fb9\u7684\u66f2\u7ebf\u8868\u793a\u566a\u58f0\u5bf9\u63a5\u6536\u7684\u5f71\u54cd\u3002\u5982\u679c\u566a\u58f0\u7684\u5178\u578b\u6c34\u5e73 \u7531\u6b64\u8868\u793a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5 \u5728\u9884\u671f/\u4f20\u8f93\u4f4d\u7f6e\u5468\u56f4\u7ed8\u5236\u4e00\u4e2a\u534a\u5f84\u7684\u5706\u3002\u8fd9\u8868\u793a\u7531\u4e8e\u566a\u58f0\u201c\u79fb\u52a8\u201d\u800c\u5bfc\u81f4\u63a5\u6536\u7b26\u53f7\u53ef\u80fd\u51fa\u73b0\u7684\u56fe\u4e0a\u7684\u533a\u57df\u3002\uff08\u8bf7\u6ce8\u610f\uff0c\u5b9e\u9645\u968f\u673a\u566a\u58f0\u7684\u5f71\u54cd\u6bd4\u8fd9\u91cc\u63cf\u8ff0\u7684\u8981\u590d\u6742\u5f97\u591a\u3002\uff09 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u753b\u51fa\u56fe19.5\u6240\u793a\u7684\u4f8b\u5b50\u300219.5\u7684\u5de6\u56fe\u663e\u793a\u4e86\u5f00/\u5173\u8c03\u5236\u7684\u4f8b\u5b50\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd \\(A>2n\\) \u4fdd\u6301\u4e24\u4e2a\u201c\u566a\u97f3\u5708\u201d\u7684\u91cd\u53e0\uff0c\u5e76\u907f\u514d\u63a5\u6536\u65f6\u9519\u8bef\u5730\u89e3\u91ca\u7b26\u53f7\u3002\u5bf9\u4e8e\u5f00/\u5173\u8c03\u5236\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u79cd\u7b26\u53f7\u7684\u5e45\u5ea6\u4e3a\u96f6\uff0c\u53e6\u4e00\u79cd\u7b26\u53f7\u7684\u5e45\u5ea6\u4e3a \\(A\\) ) \u7136\u800c\uff0c\u5bf9\u4e8e\u53cc\u76f8\u8c03\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0e'1'\u76f8\u540c\u5e45\u5ea6\u7684'0'\u7b26\u53f7\u5e45\u5ea6\u3002\u8fd9\u5728\u56fe19.5\u7684\u53f3\u56fe\u4e2d\u8fdb\u884c\u4e86\u8bf4\u660e\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u6301\u7b26\u53f7\u4e4b\u95f4\u7684\u76f8\u540c\u7684\u8ddd\u79bb\u4e0e\u7b26\u53f7\u5e45\u5ea6 \u548c \u3002\u5373BPSK\u53ea\u9700\u8981OOK\u6240\u9700\u7684\u7b26\u53f7\uff08\u4fe1\u53f7\uff09\u5e45\u5ea6\u7684\u4e00\u534a\u6765\u907f\u514d\u7ed3\u679c\u88ab\u566a\u58f0\u5e72\u6270\u3002 \u73b0\u5728\uff0c\u5bf9\u4e8e\u5177\u6709\u5927\u81f4\u76f8\u7b49\u6570\u91cf\u7684\u201c0\u201d\u548c\u201c1\u201d\u7684\u6bd4\u7279\u5e8f\u5217\uff0c\u5f00/\u5173\u8c03\u5236\u5c06\u5177\u6709\u5e45\u5ea6 \uff0c\u56e0\u6b64\u529f\u7387\u4e0e \u65f6\u95f4\u7684\u4e00\u534a\u6210\u6b63\u6bd4\uff0c\u5e45\u5ea6\u548c\u529f\u7387\u4e3a\u96f6\u7684\u4e00\u534a\u3002\u56e0\u6b64\uff0c\u5f00/\u5173\u8c03\u5236\u7684\u65f6\u95f4\u5e73\u5747\u529f\u7387\u5c06\u4e0e\u6210\u6bd4\u4f8b \u3002\u800c\u5728\u53cc\u76f8\u8c03\u5236\u4e2d\uff0c\u6bcf\u4e2a\u7b26\u53f7\u7684\u529f\u7387\u4e0e\u4e4b\u6210\u6b63\u6bd4 \u3002\u5373\u5b83\u9700\u8981\u4e00\u4e2a\u5e73\u5747\u7684\u6743\u529b \u3002\u8fd9\u610f\u5473\u7740\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u53ef\u4ee5\u4f20\u8f93\u76f8\u540c\u7ea7\u522b\u7684\u4fe1\u53f7\uff0c\u4f46\u53cc\u76f8\u7cfb\u7edf\u5e73\u5747\u53ea\u9700\u8981\u4e00\u534a\u7684\u529f\u7387\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5fc5\u786e\u4fdd\u53d1\u5c04\u5668\u548c\u7535\u8def\u80fd\u591f\u5904\u7406\u4e0e\u5f00/\u5173\u7cfb\u7edf\u9700\u8981\u53d1\u9001\u201c1\u201d\u4e00\u6837\u9ad8\u7684\u5cf0\u503c\u529f\u7387\u3002 \u7531\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u53cc\u76f8\u8c03\u5236\u6bd4\u5f00/\u5173\u8c03\u5236\u529f\u7387\u66f4\u9ad8\u3002\uff08\u8fd9\u4e5f\u610f\u5473\u7740\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e0e\u5f00\u5173\u8c03\u5236\u76f8\u540c\u7684\u529f\u7387\uff0cBPSK\u5c06\u63d0\u4f9b\u66f4\u9ad8\u6c34\u5e73\u7684\u566a\u58f0\u4fdd\u62a4\uff09\u3002\u7f3a\u70b9\u662f\u6211\u4eec\u9700\u8981\u66f4\u590d\u6742\u7684\u63a5\u6536\u5668\u6765\u8bc6\u522b\u63a5\u6536\u7684\u76f8\u4f4d\u4fe1\u53f7\u3002 \u4e00\u6b21\u8d85\u8fc7\u4e00\u4e2a \u8003\u8651\u5230\u6211\u4eec\u53ef\u4ee5\u8c03\u5236\u8f7d\u6ce2\u76f8\u4f4d\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u66f4\u590d\u6742\u7684\u8c03\u5236\u5f62\u5f0f\uff0c\u5141\u8bb8\u7cfb\u7edf\u4e3a\u4e0d\u540c\u7684\u7b26\u53f7\u4f7f\u7528\u4e24\u4e2a\u4ee5\u4e0a\u7684\u53ef\u80fd\u8f7d\u6ce2\u76f8\u4f4d - \u4e5f\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u8f7d\u6ce2\u632f\u5e45\u3002 \u56fe19.6\u663e\u793a\u4e86\u4f7f\u7528 \u6b63\u4ea4\u76f8\u79fb\u952e\u63a7 \uff08QPSK\uff09\u8c03\u5236\u3002\u8fd9\u4e0eBPSK\u7684\u76f8\u4f3c\u4e4b\u5904\u5728\u4e8e\u6240\u6709\u7b26\u53f7\u5177\u6709\u76f8\u540c\u7684\u5e45\u5ea6\uff0c\u4f46\u662f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6709\u56db\u4e2a\u8f7d\u6ce2\u76f8\u4f4d\u53ef\u4f9b\u9009\u62e9\u3002\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u6709\u56db\u4e2a\u53ef\u80fd\u7684\u7b26\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u8868\u793a\u6bcf\u4e2a\u7b26\u53f7\u591a\u4e2a\u4f4d\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4e00\u6b21\u4f20\u9001\u591a\u4e2a\u4f4d\u3002\u6bcf\u4e2a\u53ef\u80fd\u7684QPSK\u7b26\u53f7\u53ef\u4ee5\u88ab\u201c\u6807\u8bb0\u201d\u5e76\u7528\u6765\u8868\u793a\u4e24\u4e2a\u6bd4\u7279\u3002 \u770b\u4e00\u4e0b\u56fe19.6\u6240\u793a\u7684QPSK\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u56db\u4e2a\u4e0d\u540c\u7684\u7b26\u53f7\u6a21\u5f0f\u53ef\u4ee5\u88ab\u9694\u5f00\u4e00\u4e2a\u5e45\u5ea6 \uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u6b63\u5728\u4ee5\u4e8c\u7ef4\u7684\u65b9\u5f0f\u8fdb\u884c\u8fd9\u6837\u7684\u5904\u7406\uff0c\u6240\u4ee5\u8f7d\u6ce2\u7684\u5b9e\u9645\u5e45\u5ea6\u5c06\u662f\u76f8\u540c\u7684 \u3002\u8f7d\u6ce2\u76f8\u4f4d\u53ef\u4ee5\u662f\u56db\u4e2a\u503c\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a \u3002 \u53e6\u4e00\u79cd\u63cf\u8ff0\u8fd9\u79cd\u65b9\u5f0f\u7684\u65b9\u6cd5\u662f\u5728\u8868\u5355\u4e2d\u5b9a\u4e49\u4fe1\u53f7 \u5e76\u8bf4\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0b\u9762\u7684\u8868\u683c\u6765\u8868\u793a\u6bcf\u4e2a\u7b26\u53f7\u7684\u6bd4\u7279\u5bf9\u3002 '00''01''10''11' \u9700\u8981\u6ce8\u610f\u7684\u662fQPSK\u63d0\u4f9b\u6bcf\u5468\u4e24\u6b21\u7684\u662fBPSK\u63d0\u4f9b\u7b26\u53f7\u4fe1\u606f\uff0c\u4f46\u5b83\u9700\u8981\u7684\u4fe1\u53f7\u5e45\u5ea6\uff0c \u4ee5\u4ece\u589e\u52a0 \u81f3 \u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u76f8\u540c\u7684 \u7b26\u53f7\u7387 \uff0cQPSK\u7684\u8f7d\u6ce2\u529f\u7387\u5fc5\u987b\u662fBPSK\u7684\u4e24\u500d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u63d0\u4f9b\u53cc\u500d\u7684\u6743\u529b\uff0c\u4e3a\u4fe1\u606f\u80fd\u529b\u7684\u7ffb\u500d\u4ed8\u51fa\u4ee3\u4ef7\u3002 \u5728\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7b26\u53f7\u6765\u4e00\u6b21\u4f20\u9001\u591a\u4e2a\u4f4d\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u632f\u5e45\u548c\u76f8\u4f4d\u6765\u6269\u5c55\u5b83\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u662f \u6b63\u4ea4\u5e45\u5ea6\u8c03\u5236 \uff08QAM\uff09\u3002\u8fd9\u6709\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u5c06\u88ab\u79f0\u4e3a\u201c16QAM\u201d\u6216\u201c64QAM\u201d\uff0c\u5176\u4e2d\u6570\u5b57\u8868\u793a\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u7b26\u53f7\u53ef\u7528\u3002\u56fe19.7\u663e\u793a\u4e86\u4e00\u4e2a\u4f8b\u5b50\u3002\u8bf7\u6ce8\u610f\uff0c\u901a\u5e38\u5c06\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u663e\u793a\u7684\u7b26\u53f7\u9635\u5217\u63cf\u8ff0\u4e3a\u7b26\u53f7\u503c\u7684 \u661f\u5ea7\u56fe \u3002 \u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7b26\u53f7\u4f4d\u7f6e\u7684\u201c\u65b9\u5f62\u201d\u9635\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9884\u671f\u8fd9\u4e9b\u7b26\u53f7\u7684\u6570\u91cf\u662f\u6574\u6570\u7684\u5e73\u65b9 - \u5373\u5177\u6709\u591a\u4e2a\u7b26\u53f71,2,4,9 \u621616\u7b49\uff0c\u5728\u661f\u5ea7\u3002 \u56fe19.7\u4e2d\u7684\u4f8b\u5b50\u662f16QAM\uff0c\u56e0\u6b64\u6709 4 4 = 16\u4e2a\u7b26\u53f7\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u9635\u5217\uff0c\u79bb\u4e2d\u5fc3\u6700\u8fdc\u7684\u4f4d\u7f6e\uff08\u5373\uff0c\u9700\u8981\u6700\u5927\u7b26\u53f7\u5e45\u5ea6\u7684\u7b26\u53f7\uff09\u7684\u5e45\u5ea6\u5c06\u662f \u3002\u4f20\u8f93\u8fd9\u4e9b\u6700\u9ad8\u5e45\u5ea6\u7b26\u53f7\u6240\u9700\u7684\u8f7d\u6ce2\u529f\u7387\u5c06\u662f \u5176\u4e2d\uff0c\u4f55\u65f6 \u76f8\u5f53\u5927\u5c06\u8fd1\u4f3c\u4e8e \u7136\u800c\u6bcf\u7b26\u53f7\u7684\u6bd4\u7279\u6570\uff0c \u4e0e\u7b26\u53f7\u7684\u6570\u91cf\u800c\u53d8\u5316\uff0c \u6839\u636e \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u671f\uff0c\u6240\u8981\u6c42\u7684\u5cf0\u503c\u8f7d\u6ce2\u529f\u7387\u5c06\uff08\u5927\u81f4\uff09\u503e\u5411\u4e8e\u968f\u7740\u6bcf\u4e2a\u7b26\u53f7\u7684\u4f4d\u6570\u800c\u53d8\u5316 \u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0cQAM\u6240\u9700\u7684\u5cf0\u503c\u529f\u7387\u8d8b\u4e8e\u6025\u5267\u4e0a\u5347\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u7b26\u53f7\u4f20\u9001\u66f4\u591a\u7684\u6bd4\u7279\u3002\u56e0\u6b64\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u907f\u514d\u9009\u62e9\u592a\u9ad8\u7684\u4ef7\u503c \uff0c\u56e0\u6b64 \u3002 \u4e3a\u4e86\u80fd\u591f\u6bcf\u4e2a\u7b26\u53f7\u95f4\u9694\u4f20\u9001\u591a\u4e2a\u6bd4\u7279\uff0c\u6211\u4eec\u53ef\u4ee5\u51b3\u5b9a\u4f7f\u7528\u591a\u4e2a\u201c\u5e76\u884c\u201d\u7684\u8f7d\u6ce2\u9891\u7387\u3002\u5b9e\u9645\u4e0a\uff0c\u4f7f\u7528\u591a\u4e2a\u540c\u65f6\u4f20\u8f93\uff0c\u6bcf\u4e2a\u4f20\u8f93\u63d0\u4f9b\u9002\u5ea6\u7684\u4fe1\u606f\u901f\u7387\uff0c\u5176\u7ed3\u5408\u63d0\u4f9b\u66f4\u9ad8\u7684\u6570\u636e\u901f\u7387\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4e00\u8d77\u4f7f\u7528\u7684\u4e00\u7ec4\u8c03\u5236\u8f7d\u6ce2\u88ab\u79f0\u4e3a \u96c6\u5408\uff08Ensemble\uff09 \u3002\u5982\u679c\u6211\u4eec\u8fd9\u6837\u505a\uff0c\u5c31\u4f1a\u6709\u4e00\u4e2a\u5de7\u5999\u7684\u628a\u620f\uff0c\u53ef\u4ee5\u4f7f\u8fd9\u4e2a\u65b9\u6cd5\u7279\u522b\u6709\u6548\u3002\u4e3a\u4e86\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5178\u578b\u7b26\u53f7\u7684\u9891\u8c31\u3002\u4e3a\u4e86\u4fbf\u4e8e\u4e3e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9009\u62e9\u7684\u7b26\u53f7\u95f4\u9694\u671f\u95f4\u9009\u62e932\u4e2a\u8f7d\u6ce2\u5468\u671f\u3002\u5982\u679c\u6211\u4eec\u53ea\u5728\u7b26\u53f7\u95f4\u9694\u671f\u95f4\u8bb0\u5f55\u4fe1\u53f7\u5e76\u8ba1\u7b97\u51fa\u5b83\u7684\u529f\u7387\u9891\u8c31\uff0c\u7ed3\u679c\u5c06\u5982\u56fe19.8\u4e2d\u7684\u5b9e\u7ebf\uff08\u84dd\u7ebf\uff09\u6240\u793a\u3002 \u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u8981\u6c42\u8fde\u7eed\u6b63\u5f26\u66f2\u7ebf\u7684\u9891\u8c31\u5728\u5f88\u957f\u65f6\u95f4\uff08\u5373\u57fa\u672c\u65e0\u9650\uff09\u7684\u65f6\u95f4\u95f4\u9694\u5185\u5ef6\u4f38\uff0c\u90a3\u4e48\u9891\u8c31\u5728\u9002\u5f53\u7684\u9891\u7387\u4e0b\u5c06\u53ea\u6709\u4e00\u4e2a\u975e\u96f6\u5206\u91cf\u3002\u4ece \u4fe1\u606f\u7406\u8bba\u4e2d\uff0c \u6211\u4eec\u53ef\u4ee5\u9884\u671f\uff0c\u5c06\u89c2\u5bdf\u5230\u7684\u6ce2\u5f62\u9650\u5236\u5728\u4e00\u4e2a\u6709\u9650\u7684\u65f6\u95f4\u95f4\u9694\u5185 \uff0c\u4f1a\u5bfc\u81f4\u9891\u8c31\u6269\u5927\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u6b63\u5f26\u5e73\u65b9\uff0c\u5982\u56fe19.8\u6240\u793a\u3002\u8be5\u9891\u8c31\u5728\u8be5\u533a\u95f4\u768432\u4e2a\u5468\u671f\u7684\u9884\u671f\uff08\u8f7d\u6ce2\uff09\u9891\u7387\u5904\u5177\u6709\u5cf0\u503c\u3002\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5176\u4ed6\u9891\u7387\u4e0a\u4e5f\u6709\u96f6\u6216\u96f6\uff0c\u5bf9\u5e94\u4e8e\u95f4\u9694\u4e3a 32\u7684\u6574\u6570\u5468\u671f\u6570\u3002\u8fd9\u79cd\u884c\u4e3a\u6765\u81ea\u4e8e \u6b63\u4ea4\u51fd\u6570 \u3002\u9664\u4e86\u6ce8\u610f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6709\u7528\u7684\u5177\u4f53\u7ed3\u679c\u4e4b\u5916\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8ba8\u8bba\u8fd9\u4e2a\u6570\u5b66\u4e3b\u9898\u7684\u7ec6\u8282\u3002 \u8003\u8651\u4e24\u79cd\u53ef\u80fd\u7684\u5177\u6709\u4e0d\u540c\u8f7d\u6ce2\u9891\u7387\u7684\u6b63\u5f26\u6ce2\u5f62\uff0c \u5728\u54ea\u91cc \uff0c \u662f\u6574\u6570\u3002\u5b83\u53ef\u4ee5\u4ece\u6570\u5b66\u4e0a\uff0c\u5982\u679c \u518d \u8fd9\u662f\u5982\u6b64\uff0c\u65e0\u8bba\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u7684\u9636\u6bb5 \uff0c\u548c \u3002 \u5b9e\u9645\u7ed3\u679c\u5982\u56fe19.8\u6240\u793a\uff0c\u5b83\u53e0\u52a0\u4e86\u53ef\u80fd\u7684\u8f7d\u6ce2\u9891\u7387\u7684\u4e24\u4e2a\u4e0d\u540c\u9009\u62e9\u7684\u529f\u7387\u8c31\uff0c\u6bcf\u4e2a\u9009\u62e9\u5728\u6240\u9009\u7b26\u53f7\u95f4\u9694\u4e2d\u5177\u6709\u6574\u6570\u4e2a\u5468\u671f\u3002\u65ad\u5f00\u7684\uff08\u7ea2\u8272\uff09\u7ebf\u663e\u793a\u7b26\u53f7\u7684\u9891\u8c31\uff0c\u5176\u8f7d\u6ce2\u9891\u7387\u4e3a\u6bcf\u4e2a\u7b26\u53f7\u6301\u7eed\u65f6\u95f434\u4e2a\u5468\u671f\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u9664\u4e8634\u7684\u7b26\u53f7\u5468\u671f\u671f\u95f4\uff0c\u5728\u6240\u6709\u9891\u7387\u4e0a\u5177\u6709\u6574\u6570\u4e2a\u5468\u671f\u7684\u96f6\u3002 \u5982\u679c\u6211\u4eec\u73b0\u5728\u540c\u65f6\u4f7f\u7528\u4e24\u4e2a\u8f7d\u6ce2\u4f5c\u4e3a\u5e76\u884cQAM\u6d41\uff0c\u6211\u4eec\u5728\u6211\u4eec\u7684\u63a5\u6536\u673a/\u89e3\u8c03\u5668\u4e2d\u53d1\u73b0\u8bbe\u8ba1\u7528\u4e8e\u6d4b\u91cf\u4fe1\u53f7\u5e45\u5ea6\u548c\u76f8\u4f4d\u5728\u4e00\u4e2a\u9891\u7387\u4e0a\uff0c \uff0c\u5c06\u4e0d\u4f1a\u53d7\u5230\u53e6\u4e00\u4e2a\u627f\u8fd0\u4eba\u7684\u5b58\u5728\u7684\u5f71\u54cd\uff0c \u56e0\u4e3a\u8fd9\u5728\u6b64\u4e0d\u4ea7\u751f\u4efb\u4f55\u8d21\u732e \u3002\u8fd9\u4e2a\u7ed3\u679c\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u540c\u65f6\u4f20\u8f93\u4e00\u7cfb\u5217\u8f7d\u6ce2\uff0c\u5e76\u7528\u5b83\u4eec\u81ea\u5df1\u7684\u6bd4\u7279\uff08\u4fe1\u606f\uff09\u6a21\u5f0f\u6765\u8c03\u5236\u5b83\u4eec\u4e2d\u7684\u6bcf\u4e00\u4e2a\u3002\u901a\u8fc7\u9009\u62e9\u4e00\u7ec4 \u6b63\u4ea4 \u8f7d\u6ce2\u9891\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u9632\u6b62\u5b83\u4eec\u4e92\u76f8\u5e72\u6270\uff0c\u4ece\u800c\u6062\u590d\u5b83\u4eec\u643a\u5e26\u7684\u6240\u6709\u4fe1\u606f\u3002\u6211\u4eec\u5fc5\u987b\u9075\u5b88\u7684\u8981\u6c42\u662f\uff0c\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u6709\u9650\u7684\u7b26\u53f7\u6301\u7eed\u65f6\u95f4\uff0c \u7136\u540e\u9009\u62e9\u6240\u6709\u7684\u8f7d\u6ce2\u9891\u7387\uff0c\u8fd9\u6837\u5b83\u4eec\u5728\u8fd9\u4e2a\u65f6\u95f4\u5468\u671f\u5185\u6709\u4e0d\u540c\u7684\u6574\u6570\u4e2a\u5468\u671f\u3002 \u8fd9\u4e2a\u80fd\u529b\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4f20\u8f93100\u4e2a\u8f7d\u6ce2\uff0c\u5e76\u4e14\u8c03\u5236\u5b83\u4eec\u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u53d1\u9001\u6bd4\u53d1\u9001\u4e00\u4e2a\u8c03\u5236\u8f7d\u6ce2\u591a100\u500d\u7684\u6bd4\u7279\u3002\u8fd9\u79cd\u6280\u672f\u88ab\u79f0\u4e3a \u6b63\u4ea4\u9891\u5206\u590d\u7528 \uff08OFDM\uff09\u3002\u66f4\u4e3a\u5e38\u89c1\u7684\u662f\uff0c\u60a8\u5c06\u4f1a\u770b\u5230\u8fd9\u79cd\u88ab\u79f0\u4e3aCOFDM\u6216 \u7f16\u7801\u7684\u6b63\u4ea4\u9891\u5206\u590d\u7528\uff08Coded Orthogonal Frequency Division Multiplexing\uff09 \uff0c\u8fd9\u662f\u6307\u7cfb\u7edf\u5728\u5b9e\u8df5\u4e2d\u88ab\u4fee\u6539\u548c\u4f7f\u7528\u7684\u65b9\u5f0f\u3002COFDM\u662f\u76ee\u524d\u5728\u82f1\u56fd\u7528\u4e8e\u201c\u6570\u5b57\u201d\u7535\u89c6\u548c\u58f0\u97f3\u5e7f\u64ad\u7684\u57fa\u672c\u8c03\u5236\u548c\u901a\u4fe1\u65b9\u6cd5\u3002 \u591a\u8def\u5f84 \u65e0\u7ebf\u7535\u901a\u4fe1\u4e2d\u7684\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\u662f \u591a\u8def\u5f84 \u3002\u5982\u540d\u79f0\u6240\u793a\uff0c\u8fd9\u662f\u4fe1\u53f7\u53ef\u80fd\u901a\u8fc7\u591a\u6761\u8def\u5f84\u4ece\u53d1\u5c04\u673a\u4f20\u8f93\u5230\u63a5\u6536\u673a\u7684\u60c5\u51b5\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u53d1\u5c04\u673a\u5230\u63a5\u6536\u673a\u4e4b\u95f4\u83b7\u5f97\u4e00\u6761\u76f4\u7ebf\u7684\u4fe1\u53f7\u8def\u5f84\uff0c\u800c\u901a\u8fc7\u5c71\u4e18\u6216\u9ad8\u5c42\u5efa\u7b51\u7684\u53cd\u5c04\u53ef\u4ee5\u83b7\u5f97\u53e6\u4e00\u6761\u4fe1\u53f7\u8def\u5f84\u3002\u5f53\u8fd9\u4e9b\u8def\u5f84\u5177\u6709\u4e0d\u540c\u7684\u957f\u5ea6\u65f6\uff0c\u5b83\u4eec\u5bf9\u63a5\u6536\u5230\u7684\u7ed3\u679c\u7684\u8d21\u732e\u5c06\u4ee5\u4e0d\u540c\u7684\u4f20\u64ad\u5ef6\u8fdf\u5230\u8fbe\u3002\u8fd9\u79cd\u60c5\u51b5\u5982\u4e0b\u9762\u7684\u56fe19.9\u6240\u793a\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u53ef\u80fd\u4f1a\u6709\u8bb8\u591a\u8fd9\u6837\u7684\u8def\u5f84\uff0c\u4ee5\u5404\u79cd\u65f6\u95f4\u5ef6\u8fdf\u548c\u5e45\u5ea6\u7ed9\u51fa\u8d21\u732e\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ea\u8003\u8651\u4e00\u4e2a\u62d6\u5ef6\u7684\u8d21\u732e\u3002 \u4ece\u56fe19.9\u53ef\u4ee5\u770b\u51fa\uff0c\u901a\u8fc7\u201c\u53cd\u5c04\u201d\u8def\u5f84\u589e\u52a0\u5ef6\u8fdf\u8d21\u732e\u6709\u4e24\u4e2a\u7ed3\u679c\u3002\u8fd9\u4e9b\u7b26\u53f7\u5df2\u7ecf\u88ab\u6269\u5c55\uff0c\u73b0\u5728\u6709\u4e00\u4e2a\u201c\u5c3e\u5df4\u201d\uff0c\u7531\u4e8e\u53cd\u5c04\u7684\u8d21\u732e\u5728\u76f4\u63a5\u7b26\u53f7\u7ed3\u675f\u540e\u7684\u77ed\u65f6\u95f4\u5185\u6301\u7eed\u5230\u8fbe\u3002\u63a5\u6536\u5230\u7684\u7ed3\u679c\u7684\u6709\u6548\u5e45\u5ea6\u548c\u76f8\u4f4d\u7684\u53d8\u5316\u91cf\u53d6\u51b3\u4e8e\u8def\u5f84\u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\u3002 \u4e24\u6761\u8def\u5f84\u7684\u957f\u5ea6\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 \uff08\u76f4\u63a5\uff09\u548c \uff08\u95f4\u63a5\uff09\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5b9a\u4e49\u5b83\u4eec\u7684\u76f8\u5bf9\u5230\u8fbe\u4e4b\u95f4\u7684\u65f6\u95f4\u5ef6\u8fdf \u5149\u7684\u901f\u5ea6 \u5728\u54ea\u91cc\uff1f \u4ee5\u4e0a\u663e\u793a\u4e86 \u5728\u6709\u7528\u7b26\u53f7\u5468\u671f\u4e4b\u95f4\u6709\u4e00\u4e2a\u4fdd\u62a4\u95f4\u9694\u7684\u539f\u56e0 \u3002\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5b89\u6392\u4e86\uff0c \u90a3\u4e48\u6bcf\u4e2a\u7b26\u53f7\u7684\u5ef6\u8fdf\u7248\u672c\u5c06\u5728\u5e8f\u5217\u4e2d\u7684\u4e0b\u4e00\u4e2a\u7b26\u53f7\u5f00\u59cb\u5230\u8fbe\u4e4b\u524d\u5b8c\u6210\u3002\u8fd9\u9632\u6b62\u4e86\u7ed9\u5b9a\u7b26\u53f7\u4f20\u8f93\u7684\u6a21\u5f0f\u5f71\u54cd\u6211\u4eec\u5728\u4e0b\u4e00\u4e2a\u7b26\u53f7\u5468\u671f\u4e2d\u770b\u5230\u7684\u5185\u5bb9\u3002\u5f53\u4e00\u4e2a\u7b26\u53f7\u6a21\u5f0f\u5e72\u6270\u6216\u8005\u65e0\u610f\u4e2d\u6539\u53d8\u6211\u4eec\u5e0c\u671b\u53d1\u9001\u7ed9\u53e6\u4e00\u4e2a\u6a21\u5f0f\u7684\u6a21\u5f0f\u65f6\uff0c\u8fd9\u88ab\u79f0\u4e3a \u7b26\u53f7\u95f4\u5e72\u6270 \uff08ISI\uff09\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u907f\u514dISI\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u63a5\u6536\u673a\u96be\u4ee5\u6b63\u786e\u89e3\u8c03\u7b26\u53f7\u3002 \u56e0\u6b64\uff0c\u4fdd\u62a4\u95f4\u9694\u7684\u9009\u62e9\u503c\u5bf9\u4e8e\u907f\u514d\u6570\u636e\u4e22\u5931\u6216\u591a\u8def\u5f84\u5f15\u8d77\u7684\u9519\u8bef\u975e\u5e38\u91cd\u8981\u3002\u6211\u4eec\u5e0c\u671b\u4e3a\u6b64\u9009\u62e9\u4e00\u4e2a \u8db3\u591f\u5927\u7684\u503c\uff0c\u4ee5\u907f\u514d\u53cd\u5c04\u8d85\u8fc7 - \u6216\u8005\u81f3\u5c11\u6211\u4eec\u5e0c\u671b\u786e\u4fdd\u4efb\u4f55\u8fdf\u5230\u7684\u53cd\u5c04\u5c06\u5177\u6709\u5982\u6b64\u4f4e\u7684\u632f\u5e45\u4ee5\u81f3\u4e8e\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd\u4ee5\u4e0b\u7b26\u53f7\u6a21\u5f0f\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u3002 \u957f\u4fdd\u62a4\u95f4\u9694\u53ef\u4ee5\u907f\u514d\u4e00\u4e2a\u7b26\u53f7\u660e\u663e\u5f71\u54cd\u4e0b\u4e00\u4e2a\u7b26\u53f7\uff0c\u4f46\u591a\u8def\u5f84\u4ecd\u7136\u53ef\u4ee5\u6539\u53d8\u63a5\u6536\u5230\u7684\u7b26\u53f7\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u3002\u4e3a\u4e86\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u63d2\u5165\u4e00\u4e2a\u6240\u8c13\u7684 \u8bd5\u70b9\u7b26\u53f7 \u6216 \u53c2\u8003\u7b26\u53f7 \u7684\u89c4\u5219\u6a21\u5f0f**\u8fdb\u5165\u4f20\u8f93\u7684\u6d41\u3002\u8fd9\u4e9b\u8fd8\u5141\u8bb8\u53d1\u5c04\u673a\u901a\u77e5\u63a5\u6536\u673a\u4ec0\u4e48\u76f8\u4f4d/\u5e45\u5ea6\u5bf9\u5e94\u4e8e\u7ed9\u5b9a\u7684\u7b26\u53f7\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u5bfc\u9891\u6216\u53c2\u8003\u7b26\u53f7\u53ef\u4ee5\u201c\u6821\u51c6\u201d\u63a5\u6536\u673a\uff0c\u5e76\u6709\u52a9\u4e8e\u7ea0\u6b63\u591a\u5f84\u6548\u5e94\u3002 \u6982\u8981 \u60a8\u73b0\u5728\u5e94\u8be5\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u6570\u5b57\u8c03\u5236\u4ee5\u4e00\u7ec4\u9884\u5b9a\u4e49 \u7b26\u53f7\u7684 \u5f62\u5f0f\u4f20\u8f93\u201c\u6bd4\u7279\u201d\u6d41\u7684\u4fe1\u606f\u3002\u6bcf\u4e2a\u7b26\u53f7\u53ef\u4ee5\u4f20\u9001\u7684\u6bd4\u7279\u6570\u53d6\u51b3\u4e8e\u6240\u9009\u8c03\u5236\u65b9\u6848\u4e2d\u53ef\u7528\u7684\u4e0d\u540c\u7b26\u53f7\u7684\u6570\u91cf\uff0c\u5c31\u5176\u660e\u663e\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u800c\u8a00\u3002\u8fd8\u5e94\u8be5\u6e05\u695a\u7684\u662f\uff0c\u8fd9\u4e9b\u5dee\u522b\u8db3\u4ee5\u5728\u53ef\u80fd\u5b58\u5728\u7684\u566a\u58f0\u4e0a\u533a\u5206\u5f00\u6765\uff0c\u5e76\u4e14\u6240\u9700\u7684\u529f\u7387\u968f\u7740\u6211\u4eec\u60f3\u8981\u6bcf\u4e2a\u7b26\u53f7\u66f4\u591a\u7684\u6bd4\u7279\u800c\u589e\u52a0\u3002\u60a8\u73b0\u5728\u4e5f\u5e94\u8be5\u660e\u767d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u6b63\u4ea4 \u8f7d\u6ce2\u96c6\u6765\u63d0\u4f9b\u53ef\u4ee5\u88ab\u8c03\u5236\u548c\u68c0\u6d4b\u7684\u201c\u5e76\u884c\u201d\u6d41\uff0c\u800c\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u4fe1\u606f\u4f20\u8f93\u7684\u603b\u901f\u7387\u3002","title":"\u7b80\u5355\u7684\u4e8c\u8fdb\u5236\u8c03\u5236 - \u4e00\u6b21\u4e00\u4e2a\u4f4d\uff01"},{"location":"ESP32/%E6%A0%91%E8%8E%93%E6%B4%BE%20Google%20Assistant/","text":"+++ date = \"2017-05-16\" description = \"Magic Mirror\" title = \"Google Assistant\" +++ https://magicmirror.builders/ 1. \u5b89\u88c5 Follow google website to do it: https://developers.google.com/assistant/sdk/prototype/getting-started-pi-python/config-dev-project-and-account go to the Projects page. Select an existing project or create a new project. https://console.cloud.google.com/project Enable the Google Assistant API on the project https://console.developers.google.com/apis/api/embeddedassistant.googleapis.com/overview Create an OAuth Client ID https://console.developers.google.com/apis/credentials/oauthclientdownload the client secret JSON file Copy the download file to raspberry. 2. \u914d\u7f6e 3 \u542f\u52a8\u4e0e\u505c\u6b62 https://github.com/MichMich/MagicMirror/wiki/Auto-Starting-MagicMirror pm2 stop MagicMirror","title":"\u6811\u8393\u6d3e Google Assistant"},{"location":"ESP32/%E6%A0%91%E8%8E%93%E6%B4%BE%20Google%20Assistant/#1","text":"Follow google website to do it: https://developers.google.com/assistant/sdk/prototype/getting-started-pi-python/config-dev-project-and-account go to the Projects page. Select an existing project or create a new project. https://console.cloud.google.com/project Enable the Google Assistant API on the project https://console.developers.google.com/apis/api/embeddedassistant.googleapis.com/overview Create an OAuth Client ID https://console.developers.google.com/apis/credentials/oauthclientdownload the client secret JSON file Copy the download file to raspberry.","title":"1. \u5b89\u88c5"},{"location":"ESP32/%E6%A0%91%E8%8E%93%E6%B4%BE%20Google%20Assistant/#2","text":"","title":"2. \u914d\u7f6e"},{"location":"ESP32/%E6%A0%91%E8%8E%93%E6%B4%BE%20Google%20Assistant/#3","text":"https://github.com/MichMich/MagicMirror/wiki/Auto-Starting-MagicMirror pm2 stop MagicMirror","title":"3 \u542f\u52a8\u4e0e\u505c\u6b62"},{"location":"ESP32/%E6%A0%91%E8%8E%93%E6%B4%BEAI%E5%B7%A5%E5%85%B7/","text":"+++ date = \"2017-06-06\" image = \"pcbpic.jpg\" description = \"AI Tools\" categories = [\"Raspberry\", \"Learning\"] title = \"Raspberry Pi AI Tools\" slug = \"Raspberry AI Tools\" tags = [\"AI\"] +++ Mycroft.AI Mycroft\u662f\u4e16\u754c\u4e0a\u7b2c\u4e00\u4e2a\u5f00\u6e90\u7684\uff0c\u5f00\u653e\u786c\u4ef6\u7684\u4eba\u5de5\u667a\u80fd\u8bed\u97f3\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eRaspberry Pi3\u548cArduino\uff0c\u4e16\u754c\u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u4e24\u4e2a\u5f00\u653e\u5f0f\u786c\u4ef6\u7684\u5f00\u53d1\u5e73\u53f0\u3002\u5b83\u5141\u8bb8\u53d1\u660e\u8005\u3001\u5c0f\u578b\u5f00\u53d1\u5546\u548c\u5236\u9020\u5546\u5145\u5206\u5c55\u793a\u81ea\u5df1\u7684\u521b\u610f\uff0c\u8ba9\u4ed6\u4eec\u6210\u4e3a\u73b0\u5b9e\u3002 https://mycroft.ai/","title":"\u6811\u8393\u6d3eAI\u5de5\u5177"},{"location":"ESP32/%E6%A0%91%E8%8E%93%E6%B4%BEAI%E5%B7%A5%E5%85%B7/#mycroftai","text":"Mycroft\u662f\u4e16\u754c\u4e0a\u7b2c\u4e00\u4e2a\u5f00\u6e90\u7684\uff0c\u5f00\u653e\u786c\u4ef6\u7684\u4eba\u5de5\u667a\u80fd\u8bed\u97f3\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eRaspberry Pi3\u548cArduino\uff0c\u4e16\u754c\u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u4e24\u4e2a\u5f00\u653e\u5f0f\u786c\u4ef6\u7684\u5f00\u53d1\u5e73\u53f0\u3002\u5b83\u5141\u8bb8\u53d1\u660e\u8005\u3001\u5c0f\u578b\u5f00\u53d1\u5546\u548c\u5236\u9020\u5546\u5145\u5206\u5c55\u793a\u81ea\u5df1\u7684\u521b\u610f\uff0c\u8ba9\u4ed6\u4eec\u6210\u4e3a\u73b0\u5b9e\u3002 https://mycroft.ai/","title":"Mycroft.AI"},{"location":"ESP32/%E6%B8%A9%E7%AE%B1%E6%8E%A7%E5%88%B6/","text":"\u65e0\u7ebf\u63a7\u5236\u6e29\u7bb1 RS485\u8f6cUSB\u63a5\u5934 RS485\u8f6cUSB\u63a5\u7ebf\u793a\u610f\u56fe \u5b89\u88c5\u8f6c\u63a5\u7ebf\u9a71\u52a8 \u5230\u8fd9\u91cc\u4e0b\u8f7d\u9a71\u52a8 http://www.ftdichip.com/Drivers/D2XX.htm \u8f6c\u63a5\u7ebf\u53ef\u4ee5\u6620\u5c04\u4e3aPC\u7684USB\u53e3\u6216com\u53e3\uff0c\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u5b89\u88c5\u9a71\u52a8\u5373\u53ef\u3002\u4e0b\u56fe\u663e\u793aCOM6\u4e3a\u8f6c\u63a5\u5668\u3002 \u6e29\u5ea6\u8bbe\u7f6e\u4e0e\u8bfb\u53d6 \u4fee\u6539LW9022.py\u4e2d\u7684COM\u53e3\u8bbe\u7f6e\uff0c\u7136\u540e\u8fd0\u884c\u4e0b\u9762code\u5373\u53ef\u8bfb\u53d6\u8bbe\u7f6e\u6e29\u5ea6\u3002 import LW9022 Dev_9022LC = LW9022 . Device () CV1 = Dev_9022LC . GetValue ( 1 ) print ( CV1 ) SP1 = Dev_9022LC . SetSp ( 1 , 25 ) print ( SP1 ) \u6811\u8393\u6d3e\u8fde\u63a5\u6e29\u7bb1 \u5c06USB\u7ebf\u63d2\u5230\u6811\u8393\u6d3e\u3002 \u67e5\u770bUSB\u8bbe\u5907\u4fe1\u606f ~ # lsusb Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub Bus 001 Device 011: ID 0403:6001 FTDI FT232 USB-Serial (UART) IC \u4e0b\u4e00\u6b65\u67e5\u770bUSB\u8bbe\u5907\u7684\u7aef\u53e3\u53f7 ~ # dmesg | grep tty \u6216\u8005\u5728\u6587\u4ef6/var/log/messages\u4e2d\u53ef\u4ee5\u67e5\u770bUSB\u7684serial number usb 2-4: Product: FT232R USB UART usb 2-4: Manufacturer: FTDI usb 2-4: SerialNumber: A6008isP UART http://www.electronicwings.com/raspberry-pi/raspberry-pi-uart-communication-using-python-and-c USB\u8bbe\u5907\u540d\u79f0\u4fee\u6539 http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/","title":"\u65e0\u7ebf\u63a7\u5236\u6e29\u7bb1"},{"location":"ESP32/%E6%B8%A9%E7%AE%B1%E6%8E%A7%E5%88%B6/#_1","text":"RS485\u8f6cUSB\u63a5\u5934 RS485\u8f6cUSB\u63a5\u7ebf\u793a\u610f\u56fe","title":"\u65e0\u7ebf\u63a7\u5236\u6e29\u7bb1"},{"location":"ESP32/%E6%B8%A9%E7%AE%B1%E6%8E%A7%E5%88%B6/#_2","text":"\u5230\u8fd9\u91cc\u4e0b\u8f7d\u9a71\u52a8 http://www.ftdichip.com/Drivers/D2XX.htm \u8f6c\u63a5\u7ebf\u53ef\u4ee5\u6620\u5c04\u4e3aPC\u7684USB\u53e3\u6216com\u53e3\uff0c\u6253\u5f00\u8bbe\u5907\u7ba1\u7406\u5668\u5b89\u88c5\u9a71\u52a8\u5373\u53ef\u3002\u4e0b\u56fe\u663e\u793aCOM6\u4e3a\u8f6c\u63a5\u5668\u3002","title":"\u5b89\u88c5\u8f6c\u63a5\u7ebf\u9a71\u52a8"},{"location":"ESP32/%E6%B8%A9%E7%AE%B1%E6%8E%A7%E5%88%B6/#_3","text":"\u4fee\u6539LW9022.py\u4e2d\u7684COM\u53e3\u8bbe\u7f6e\uff0c\u7136\u540e\u8fd0\u884c\u4e0b\u9762code\u5373\u53ef\u8bfb\u53d6\u8bbe\u7f6e\u6e29\u5ea6\u3002 import LW9022 Dev_9022LC = LW9022 . Device () CV1 = Dev_9022LC . GetValue ( 1 ) print ( CV1 ) SP1 = Dev_9022LC . SetSp ( 1 , 25 ) print ( SP1 )","title":"\u6e29\u5ea6\u8bbe\u7f6e\u4e0e\u8bfb\u53d6"},{"location":"ESP32/%E6%B8%A9%E7%AE%B1%E6%8E%A7%E5%88%B6/#_4","text":"\u5c06USB\u7ebf\u63d2\u5230\u6811\u8393\u6d3e\u3002 \u67e5\u770bUSB\u8bbe\u5907\u4fe1\u606f ~ # lsusb Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub Bus 001 Device 011: ID 0403:6001 FTDI FT232 USB-Serial (UART) IC \u4e0b\u4e00\u6b65\u67e5\u770bUSB\u8bbe\u5907\u7684\u7aef\u53e3\u53f7 ~ # dmesg | grep tty \u6216\u8005\u5728\u6587\u4ef6/var/log/messages\u4e2d\u53ef\u4ee5\u67e5\u770bUSB\u7684serial number usb 2-4: Product: FT232R USB UART usb 2-4: Manufacturer: FTDI usb 2-4: SerialNumber: A6008isP UART http://www.electronicwings.com/raspberry-pi/raspberry-pi-uart-communication-using-python-and-c USB\u8bbe\u5907\u540d\u79f0\u4fee\u6539 http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/","title":"\u6811\u8393\u6d3e\u8fde\u63a5\u6e29\u7bb1"},{"location":"ESP32/%E7%83%AD%E5%8A%9B%E5%AD%A6%E5%90%8D%E8%AF%8D/","text":"\u70ed\u529b\u5b66\u540d\u8bcd \u6d41\u4f53/\u56fa\u4f53\u754c\u9762 \u6e29\u5ea6\u573a\u548c\u70ed\u901a\u91cf\u5728\u6d41\u4f53/\u56fa\u4f53\u754c\u9762\u8fde\u7eed\uff0c\u7136\u800c\u5728\u8fd0\u52a8\u7684\u6d41\u4f53\u4e2d\uff0c\u6e29\u5ea6\u573a\u4f1a\u5feb\u901f\u53d8\u5316\uff1a\u5728\u9760\u8fd1\u56fa\u4f53\u5904\uff0c\u6d41\u4f53\u7684\u6e29\u5ea6\u4e0e\u56fa\u4f53\u63a5\u8fd1\uff1b\u4f46\u5728\u8fdc\u79bb\u754c\u9762\u7684\u5730\u65b9\uff0c\u6d41\u4f53\u6e29\u5ea6\u5219\u63a5\u8fd1\u4e8e\u5165\u53e3\u6216\u5468\u56f4\u6d41\u4f53\u7684\u6e29\u5ea6\u3002\u6d41\u4f53\u6e29\u5ea6\u4ece\u56fa\u4f53\u6e29\u5ea6\u53d8\u4e3a\u6d41\u4f53\u6574\u4f53\u6e29\u5ea6\u7684\u533a\u57df\u79f0\u4f5c \u70ed\u8fb9\u754c\u5c42 \u3002\u5229\u7528 Prandtl \u6570( \\(P_r=C_p/\\mu k\\) ) \u6765\u8868\u793a\u70ed\u8fb9\u754c\u5c42\u7684\u5927\u5c0f\u4e0e\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u76f8\u5bf9\u5927\u5c0f\uff1a\u5f53 Prandtl \u6570\u7b49\u4e8e 1 \u65f6\uff0c\u70ed\u548c\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u539a\u5ea6\u5e94\u76f8\u540c\uff1b\u5f53Prandtl \u6570\u5927\u4e8e 1 \u65f6\uff0c\u52a8\u91cf\u5c42\u8f83\u539a\uff1b\u4e0e\u4e4b\u76f8\u5bf9\uff0c\u5f53 Prandtl \u6570\u5c0f\u4e8e 1 \u65f6\uff0c \u52a8\u91cf\u8fb9\u754c\u5c42\u8981\u8584\u4e8e\u70ed\u8fb9\u754c\u5c42\u300220\u00b0C \u5927\u6c14\u538b\u4e0b\uff0c\u7a7a\u6c14\u7684 Prandtl \u6570\u4e3a 0.7\uff1b\u8fd9\u662f\u7531\u4e8e\u7a7a\u6c14\u4e2d\u52a8\u91cf\u548c\u70ed\u8fb9\u754c\u5c42\u7684\u5c3a\u5bf8\u7c7b\u4f3c\uff0c\u4f46\u52a8\u91cf\u8fb9\u754c\u5c42\u7565\u8584\u4e8e\u70ed\u8fb9\u754c\u5c42\u300220\u00b0C \u6c34\u7684 Prandtl \u6570\u4e3a 7\uff1b\u56e0\u6b64\uff0c\u6c34\u6e29\u5728\u9760\u8fd1\u58c1\u9762\u5904\u7684\u53d8\u5316\u8981\u6bd4\u901f\u5ea6\u53d8\u5316\u66f4\u5267\u70c8\u3002 \u9760\u8fd1\u8f83\u51b7\u56fa\u4f53\u58c1\u9762\u5904\u7684\u81ea\u7136\u5bf9\u6d41\u7a7a\u6c14\u7684\u5f52\u4e00\u5316\u6e29\u5ea6(\u7ea2\u8272) \u548c\u901f\u5ea6 (\u84dd\u8272) \u66f2\u7ebf \u81ea\u7136\u5bf9\u6d41 \u81ea\u7136\u5bf9\u6d41\u6a21\u5f0f\u5bf9\u5e94\u7531\u6d6e\u529b\u6548\u5e94\u9a71\u52a8\u6d41\u52a8\u7684\u7ed3\u6784\u3002\u57fa\u4e8e\u9884\u671f\u7684\u70ed\u6027\u80fd\uff0c\u81ea\u7136\u5bf9\u6d41\u53ef\u80fd\u6709\u76ca\uff08\u4f8b\u5982\u5728\u51b7\u5374\u5e94\u7528\u4e2d\uff09\uff0c\u4e5f\u53ef\u80fd\u6709\u5bb3\uff08\u5982\u7edd\u70ed\u5c42\u4e2d\u7684\u81ea\u7136\u5bf9\u6d41\uff09\u3002 Rayleigh \u6570 \\(Ra\\) \u7528\u4e8e\u8868\u5f81\u7531\u81ea\u7136\u5bf9\u6d41\u5e26\u6765\u7684\u6d41\u578b\u548c\u4f20\u70ed\u3002Rayleigh \u6570\u7531\u6d41\u4f53\u6750\u6599\u5c5e\u6027\u3001\u7a7a\u8154\u5c3a\u5bf8 \\(L\\) \uff0c\u4ee5\u53ca\u6e29\u5dee \\(\\Delta T\\) \u5b9a\u4e49\uff0c\u800c\u6e29\u5ea6\u5dee\u5219\u6839\u636e\u6d41\u4f53\u5468\u56f4\u7684\u56fa\u4f53\u6765\u8bbe\u5b9a\uff1a $$ Ra=\\frac{\\rho^2g\\alpha_p C_p}{\\mu k}\\Delta T L^3 $$ Grashof \u6570\u662f\u53e6\u4e00\u4e2a\u6d41\u578b\u6307\u6807\uff0c\u5b83\u662f\u6d6e\u529b\u76f8\u5bf9\u7c98\u6027\u529b\u7684\u6bd4\u4f8b\uff1a $$ Gr=\\frac{\\rho^2g\\alpha_p}{\\mu^2}\\Delta T L^3 $$ Rayleigh \u6570\u53ef\u901a\u8fc7 Prandtl \u548c Grashof \u6570\u7684\u5173\u7cfb\u5f0f\u8868\u793a\uff1a $$ Ra=Pr Gr $$ \u5982\u679c Rayleigh \u6570\u8f83\u5c0f\uff08\u901a\u5e38 \\(<10^3\\) \uff09\uff0c\u5219\u53ef\u4ee5\u5ffd\u7565\u5bf9\u6d41\uff0c\u5927\u90e8\u5206\u4f20\u70ed\u7531\u6d41\u4f53\u4e2d\u7684\u4f20\u5bfc\u9020\u6210\u3002 \u4e8e\u8f83\u5927\u7684 Rayleigh \u6570\uff0c\u5219\u9700\u8981\u8003\u8651\u5bf9\u6d41\u4f20\u70ed\u3002\u6d6e\u529b\u76f8\u5bf9\u4e8e\u7c98\u7c98\u529b\u8f83\u5927\u65f6\uff0c\u6d41\u578b\u4e3a\u6e4d\u6d41\uff0c\u5426\u5219\u4e3a\u5c42\u6d41\u3002\u4e24\u4e2a\u6d41\u578b\u4e4b\u95f4\u7684\u8fc7\u6e21\u7531 Grashof \u6570\u7684\u4e34\u754c\u9636\u6b21\u786e\u5b9a\uff0c\u5373 \\(10^9\\) \u3002\u5f53 \\(Pr\\) \u7684\u91cf\u7ea7\u8fd1\u4f3c\u4e3a 1 \u6216\u66f4\u5927\u65f6\uff0c\u70ed\u8fb9\u754c\u5c42\uff0c\u5373\u56fa\u4f53\u58c1\u9762\u548c\u6d41\u4f53\u6574\u4f53\u4e4b\u95f4\u7684\u5178\u578b\u6e29\u5ea6\u8f6c\u53d8\u8ddd\u79bb\uff0c\u53ef\u8fd1\u4f3c\u4e3a $$ \\delta_\\mathrm{T} \\approx \\frac{L}{\\sqrt[4]{Ra}} $$ \u5f53\u4e0e\u70ed\u8868\u9762\u63a5\u89e6\u65f6\uff0c\u4e00\u676f\u51b7\u6c34\u4e2d\u7684\u81ea\u7136\u5bf9\u6d41\u6240\u5e26\u6765\u7684\u6e29\u5ea6\u5256\u9762\u56fe \u5f3a\u5236\u5bf9\u6d41 \u5f3a\u5236\u5bf9\u6d41\u6a21\u5f0f\u5bf9\u5e94\u4e8e\u8fd9\u4e00\u7ed3\u6784\uff1a\u6d41\u52a8\u7531\u5e26\u6765\u4e3b\u8981\u6d6e\u529b\u6548\u5e94\u7684\u5916\u90e8\u73b0\u8c61\uff08\u4f8b\u5982\u3001\u98ce\uff09\u6216\u5668\u4ef6\uff08\u4f8b\u5982\u3001\u98ce\u6247\u548c\u6cf5\uff09\u9a71\u52a8\u3002 \u6b64\u65f6\uff0c\u6d41\u578b\u53ef\u4f7f\u7528\u96f7\u8bfa\u6570\u4f5c\u4e3a\u6307\u6807\u8fd1\u4f3c\u8868\u5f81\u4e3a\u7b49\u6e29\u6d41\uff1a $$ Re=\\frac{\\rho U L}{\\mu} $$ \u96f7\u8bfa\u6570\u4ee3\u8868\u4e86\u60ef\u6027\u529b\u5bf9\u7c98\u6027\u529b\u7684\u6bd4\u4f8b\u3002\u5f53\u96f7\u8bfa\u6570\u8f83\u4f4e\u65f6\uff0c\u4ee5\u7c98\u6027\u529b\u4e3a\u4e3b\uff0c\u5e76\u80fd\u89c2\u5bdf\u5230\u5c42\u6d41\uff1b\u5f53\u96f7\u8bfa\u6570\u8f83\u9ad8\u65f6\uff0c\u7cfb\u7edf\u963b\u5c3c\u975e\u5e38\u4f4e\uff0c\u4f1a\u5e26\u6765\u8f83\u5c0f\u7684\u6270\u52a8\uff1b\u5982\u679c\u96f7\u8bfa\u6570\u8db3\u591f\u9ad8\uff0c\u6d41\u573a\u6700\u7ec8\u5c06\u6f14\u53d8\u4e3a\u6e4d\u6d41\u7684\u6d41\u578b\u3002 \u53ef\u4ee5\u4f7f\u7528\u96f7\u8bfa\u6570\u8ba1\u7b97\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u539a\u5ea6\uff0c\u5373 $$ \\delta_\\mathrm{M} \\approx \\frac{L}{\\sqrt{Re}} $$ \u7531\u5f3a\u5236\u5bf9\u6d41\u63d0\u4f9b\u51b7\u5374\u7684\u6563\u70ed\u5668\u5468\u56f4\u7684\u6d41\u7ebf\u548c\u6e29\u5ea6\u5256\u9762\u56fe \u8f90\u5c04\u4f20\u70ed \u8f90\u5c04\u4f20\u70ed\u53ef\u4ee5\u4e0e\u4e0a\u6587\u4ecb\u7ecd\u7684\u5bf9\u6d41\u548c\u4f20\u5bfc\u4f20\u70ed\u76f8\u7ed3\u5408\u3002 \u5728\u5927\u90e8\u5206\u5e94\u7528\u4e2d\uff0c\u6d41\u4f53\u76f8\u5bf9\u70ed\u8f90\u5c04\u662f\u900f\u660e\u7684\uff0c\u56fa\u4f53\u5219\u4e3a\u975e\u900f\u660e\u3002\u56e0\u6b64\uff0c\u8f90\u5c04\u4f20\u70ed\u53ef\u8868\u793a\u4e3a\u8868\u9762\u5bf9\u8868\u9762\u8f90\u5c04\uff0c\u5728\u5b9e\u4f53\u58c1\u9762\u4e4b\u95f4\u901a\u8fc7\u900f\u660e\u7684\u7a7a\u8154\u4f20\u9012\u80fd\u91cf\u3002\u7531\u6f2b\u53cd\u5c04\u7070\u4f53\u8868\u9762\u6240\u53d1\u5c04\u7684\u8f90\u5c04\u70ed\u901a\u91cf\u7b49\u4e8e \\(\\varepsilon n^2 \\sigma T^4\\) \u3002\u5f53\u4e00\u4e2a\u8868\u9762\u88ab\u5e26\u6709\u5747\u5300 \\(T_\\mathrm{amb}\\) \u7684\u7269\u4f53\u5305\u56f4\u65f6\uff0c\u51c0\u8f90\u5c04\u901a\u91cf\u4e3a $$ q_\\mathrm{r}=\\varepsilon n^2 \\sigma (T_\\mathrm{amb}^4-T^4) $$ \u5f53\u56f4\u7ed5\u8868\u9762\u7684\u6e29\u5ea6\u4e0d\u540c\u65f6\uff0c\u6bcf\u4e2a\u8868\u9762\u5bf9\u8868\u9762\u7684\u4ea4\u6362\u5219\u7531\u8868\u9762\u7684\u89c6\u89d2\u56e0\u5b50\u786e\u5b9a\u3002 \u4e0d\u8fc7\uff0c\u6d41\u4f53\u548c\u56fa\u4f53\u90fd\u53ef\u4ee5\u662f\u900f\u660e\u6216\u534a\u900f\u660e\u7684\uff1b\u56e0\u6b64\u8f90\u5c04\u53ef\u4ee5\u5728\u6d41\u4f53\u548c\u56fa\u4f53\u4e2d\u53d1\u751f\u3002\u5728\u53c2\u4e0e\uff08\u6216\u534a\u900f\u660e\uff09\u4ecb\u8d28\u4e2d\uff0c\u8f90\u5c04\u7ebf\u5c06\u4e0e\u4ecb\u8d28\uff08\u56fa\u4f53\u6216\u6d41\u4f53\uff09\u76f8\u4e92\u4f5c\u7528\uff0c\u968f\u5373\u5438\u6536\u3001\u91ca\u653e\u548c\u6563\u5c04\u8f90\u5c04\u3002 \u6e29\u5ea6\u5dee\u8f83\u5c0f\u4e14\u53d1\u5c04\u7387\u8f83\u4f4e\u7684\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u5ffd\u7565\u8f90\u5c04\u4f20\u70ed\uff1b\u4f46\u5728\u6e29\u5ea6\u5dee\u8f83\u5927\u4e14\u53d1\u5c04\u7387\u8f83\u9ad8\u7684\u5e94\u7528\u4e2d\uff0c\u8f90\u5c04\u4f20\u70ed\u76f8\u5f53\u91cd\u8981\u3002 \u8868\u9762\u53d1\u5c04\u7387\u5206\u522b\u4e3a \\(\\varepsilon=0\\) \uff08\u5de6\uff09\u548c \\(\\varepsilon=0.9\\) \uff08\u53f3)\u7684\u6563\u70ed\u5668\u6e29\u5ea6\u5256\u9762\u56fe\u5bf9\u6bd4","title":"\u70ed\u529b\u5b66\u540d\u8bcd"},{"location":"ESP32/%E7%83%AD%E5%8A%9B%E5%AD%A6%E5%90%8D%E8%AF%8D/#_1","text":"","title":"\u70ed\u529b\u5b66\u540d\u8bcd"},{"location":"ESP32/%E7%83%AD%E5%8A%9B%E5%AD%A6%E5%90%8D%E8%AF%8D/#_2","text":"\u6e29\u5ea6\u573a\u548c\u70ed\u901a\u91cf\u5728\u6d41\u4f53/\u56fa\u4f53\u754c\u9762\u8fde\u7eed\uff0c\u7136\u800c\u5728\u8fd0\u52a8\u7684\u6d41\u4f53\u4e2d\uff0c\u6e29\u5ea6\u573a\u4f1a\u5feb\u901f\u53d8\u5316\uff1a\u5728\u9760\u8fd1\u56fa\u4f53\u5904\uff0c\u6d41\u4f53\u7684\u6e29\u5ea6\u4e0e\u56fa\u4f53\u63a5\u8fd1\uff1b\u4f46\u5728\u8fdc\u79bb\u754c\u9762\u7684\u5730\u65b9\uff0c\u6d41\u4f53\u6e29\u5ea6\u5219\u63a5\u8fd1\u4e8e\u5165\u53e3\u6216\u5468\u56f4\u6d41\u4f53\u7684\u6e29\u5ea6\u3002\u6d41\u4f53\u6e29\u5ea6\u4ece\u56fa\u4f53\u6e29\u5ea6\u53d8\u4e3a\u6d41\u4f53\u6574\u4f53\u6e29\u5ea6\u7684\u533a\u57df\u79f0\u4f5c \u70ed\u8fb9\u754c\u5c42 \u3002\u5229\u7528 Prandtl \u6570( \\(P_r=C_p/\\mu k\\) ) \u6765\u8868\u793a\u70ed\u8fb9\u754c\u5c42\u7684\u5927\u5c0f\u4e0e\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u76f8\u5bf9\u5927\u5c0f\uff1a\u5f53 Prandtl \u6570\u7b49\u4e8e 1 \u65f6\uff0c\u70ed\u548c\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u539a\u5ea6\u5e94\u76f8\u540c\uff1b\u5f53Prandtl \u6570\u5927\u4e8e 1 \u65f6\uff0c\u52a8\u91cf\u5c42\u8f83\u539a\uff1b\u4e0e\u4e4b\u76f8\u5bf9\uff0c\u5f53 Prandtl \u6570\u5c0f\u4e8e 1 \u65f6\uff0c \u52a8\u91cf\u8fb9\u754c\u5c42\u8981\u8584\u4e8e\u70ed\u8fb9\u754c\u5c42\u300220\u00b0C \u5927\u6c14\u538b\u4e0b\uff0c\u7a7a\u6c14\u7684 Prandtl \u6570\u4e3a 0.7\uff1b\u8fd9\u662f\u7531\u4e8e\u7a7a\u6c14\u4e2d\u52a8\u91cf\u548c\u70ed\u8fb9\u754c\u5c42\u7684\u5c3a\u5bf8\u7c7b\u4f3c\uff0c\u4f46\u52a8\u91cf\u8fb9\u754c\u5c42\u7565\u8584\u4e8e\u70ed\u8fb9\u754c\u5c42\u300220\u00b0C \u6c34\u7684 Prandtl \u6570\u4e3a 7\uff1b\u56e0\u6b64\uff0c\u6c34\u6e29\u5728\u9760\u8fd1\u58c1\u9762\u5904\u7684\u53d8\u5316\u8981\u6bd4\u901f\u5ea6\u53d8\u5316\u66f4\u5267\u70c8\u3002 \u9760\u8fd1\u8f83\u51b7\u56fa\u4f53\u58c1\u9762\u5904\u7684\u81ea\u7136\u5bf9\u6d41\u7a7a\u6c14\u7684\u5f52\u4e00\u5316\u6e29\u5ea6(\u7ea2\u8272) \u548c\u901f\u5ea6 (\u84dd\u8272) \u66f2\u7ebf","title":"\u6d41\u4f53/\u56fa\u4f53\u754c\u9762"},{"location":"ESP32/%E7%83%AD%E5%8A%9B%E5%AD%A6%E5%90%8D%E8%AF%8D/#_3","text":"\u81ea\u7136\u5bf9\u6d41\u6a21\u5f0f\u5bf9\u5e94\u7531\u6d6e\u529b\u6548\u5e94\u9a71\u52a8\u6d41\u52a8\u7684\u7ed3\u6784\u3002\u57fa\u4e8e\u9884\u671f\u7684\u70ed\u6027\u80fd\uff0c\u81ea\u7136\u5bf9\u6d41\u53ef\u80fd\u6709\u76ca\uff08\u4f8b\u5982\u5728\u51b7\u5374\u5e94\u7528\u4e2d\uff09\uff0c\u4e5f\u53ef\u80fd\u6709\u5bb3\uff08\u5982\u7edd\u70ed\u5c42\u4e2d\u7684\u81ea\u7136\u5bf9\u6d41\uff09\u3002 Rayleigh \u6570 \\(Ra\\) \u7528\u4e8e\u8868\u5f81\u7531\u81ea\u7136\u5bf9\u6d41\u5e26\u6765\u7684\u6d41\u578b\u548c\u4f20\u70ed\u3002Rayleigh \u6570\u7531\u6d41\u4f53\u6750\u6599\u5c5e\u6027\u3001\u7a7a\u8154\u5c3a\u5bf8 \\(L\\) \uff0c\u4ee5\u53ca\u6e29\u5dee \\(\\Delta T\\) \u5b9a\u4e49\uff0c\u800c\u6e29\u5ea6\u5dee\u5219\u6839\u636e\u6d41\u4f53\u5468\u56f4\u7684\u56fa\u4f53\u6765\u8bbe\u5b9a\uff1a $$ Ra=\\frac{\\rho^2g\\alpha_p C_p}{\\mu k}\\Delta T L^3 $$ Grashof \u6570\u662f\u53e6\u4e00\u4e2a\u6d41\u578b\u6307\u6807\uff0c\u5b83\u662f\u6d6e\u529b\u76f8\u5bf9\u7c98\u6027\u529b\u7684\u6bd4\u4f8b\uff1a $$ Gr=\\frac{\\rho^2g\\alpha_p}{\\mu^2}\\Delta T L^3 $$ Rayleigh \u6570\u53ef\u901a\u8fc7 Prandtl \u548c Grashof \u6570\u7684\u5173\u7cfb\u5f0f\u8868\u793a\uff1a $$ Ra=Pr Gr $$ \u5982\u679c Rayleigh \u6570\u8f83\u5c0f\uff08\u901a\u5e38 \\(<10^3\\) \uff09\uff0c\u5219\u53ef\u4ee5\u5ffd\u7565\u5bf9\u6d41\uff0c\u5927\u90e8\u5206\u4f20\u70ed\u7531\u6d41\u4f53\u4e2d\u7684\u4f20\u5bfc\u9020\u6210\u3002 \u4e8e\u8f83\u5927\u7684 Rayleigh \u6570\uff0c\u5219\u9700\u8981\u8003\u8651\u5bf9\u6d41\u4f20\u70ed\u3002\u6d6e\u529b\u76f8\u5bf9\u4e8e\u7c98\u7c98\u529b\u8f83\u5927\u65f6\uff0c\u6d41\u578b\u4e3a\u6e4d\u6d41\uff0c\u5426\u5219\u4e3a\u5c42\u6d41\u3002\u4e24\u4e2a\u6d41\u578b\u4e4b\u95f4\u7684\u8fc7\u6e21\u7531 Grashof \u6570\u7684\u4e34\u754c\u9636\u6b21\u786e\u5b9a\uff0c\u5373 \\(10^9\\) \u3002\u5f53 \\(Pr\\) \u7684\u91cf\u7ea7\u8fd1\u4f3c\u4e3a 1 \u6216\u66f4\u5927\u65f6\uff0c\u70ed\u8fb9\u754c\u5c42\uff0c\u5373\u56fa\u4f53\u58c1\u9762\u548c\u6d41\u4f53\u6574\u4f53\u4e4b\u95f4\u7684\u5178\u578b\u6e29\u5ea6\u8f6c\u53d8\u8ddd\u79bb\uff0c\u53ef\u8fd1\u4f3c\u4e3a $$ \\delta_\\mathrm{T} \\approx \\frac{L}{\\sqrt[4]{Ra}} $$ \u5f53\u4e0e\u70ed\u8868\u9762\u63a5\u89e6\u65f6\uff0c\u4e00\u676f\u51b7\u6c34\u4e2d\u7684\u81ea\u7136\u5bf9\u6d41\u6240\u5e26\u6765\u7684\u6e29\u5ea6\u5256\u9762\u56fe","title":"\u81ea\u7136\u5bf9\u6d41"},{"location":"ESP32/%E7%83%AD%E5%8A%9B%E5%AD%A6%E5%90%8D%E8%AF%8D/#_4","text":"\u5f3a\u5236\u5bf9\u6d41\u6a21\u5f0f\u5bf9\u5e94\u4e8e\u8fd9\u4e00\u7ed3\u6784\uff1a\u6d41\u52a8\u7531\u5e26\u6765\u4e3b\u8981\u6d6e\u529b\u6548\u5e94\u7684\u5916\u90e8\u73b0\u8c61\uff08\u4f8b\u5982\u3001\u98ce\uff09\u6216\u5668\u4ef6\uff08\u4f8b\u5982\u3001\u98ce\u6247\u548c\u6cf5\uff09\u9a71\u52a8\u3002 \u6b64\u65f6\uff0c\u6d41\u578b\u53ef\u4f7f\u7528\u96f7\u8bfa\u6570\u4f5c\u4e3a\u6307\u6807\u8fd1\u4f3c\u8868\u5f81\u4e3a\u7b49\u6e29\u6d41\uff1a $$ Re=\\frac{\\rho U L}{\\mu} $$ \u96f7\u8bfa\u6570\u4ee3\u8868\u4e86\u60ef\u6027\u529b\u5bf9\u7c98\u6027\u529b\u7684\u6bd4\u4f8b\u3002\u5f53\u96f7\u8bfa\u6570\u8f83\u4f4e\u65f6\uff0c\u4ee5\u7c98\u6027\u529b\u4e3a\u4e3b\uff0c\u5e76\u80fd\u89c2\u5bdf\u5230\u5c42\u6d41\uff1b\u5f53\u96f7\u8bfa\u6570\u8f83\u9ad8\u65f6\uff0c\u7cfb\u7edf\u963b\u5c3c\u975e\u5e38\u4f4e\uff0c\u4f1a\u5e26\u6765\u8f83\u5c0f\u7684\u6270\u52a8\uff1b\u5982\u679c\u96f7\u8bfa\u6570\u8db3\u591f\u9ad8\uff0c\u6d41\u573a\u6700\u7ec8\u5c06\u6f14\u53d8\u4e3a\u6e4d\u6d41\u7684\u6d41\u578b\u3002 \u53ef\u4ee5\u4f7f\u7528\u96f7\u8bfa\u6570\u8ba1\u7b97\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u539a\u5ea6\uff0c\u5373 $$ \\delta_\\mathrm{M} \\approx \\frac{L}{\\sqrt{Re}} $$ \u7531\u5f3a\u5236\u5bf9\u6d41\u63d0\u4f9b\u51b7\u5374\u7684\u6563\u70ed\u5668\u5468\u56f4\u7684\u6d41\u7ebf\u548c\u6e29\u5ea6\u5256\u9762\u56fe","title":"\u5f3a\u5236\u5bf9\u6d41"},{"location":"ESP32/%E7%83%AD%E5%8A%9B%E5%AD%A6%E5%90%8D%E8%AF%8D/#_5","text":"\u8f90\u5c04\u4f20\u70ed\u53ef\u4ee5\u4e0e\u4e0a\u6587\u4ecb\u7ecd\u7684\u5bf9\u6d41\u548c\u4f20\u5bfc\u4f20\u70ed\u76f8\u7ed3\u5408\u3002 \u5728\u5927\u90e8\u5206\u5e94\u7528\u4e2d\uff0c\u6d41\u4f53\u76f8\u5bf9\u70ed\u8f90\u5c04\u662f\u900f\u660e\u7684\uff0c\u56fa\u4f53\u5219\u4e3a\u975e\u900f\u660e\u3002\u56e0\u6b64\uff0c\u8f90\u5c04\u4f20\u70ed\u53ef\u8868\u793a\u4e3a\u8868\u9762\u5bf9\u8868\u9762\u8f90\u5c04\uff0c\u5728\u5b9e\u4f53\u58c1\u9762\u4e4b\u95f4\u901a\u8fc7\u900f\u660e\u7684\u7a7a\u8154\u4f20\u9012\u80fd\u91cf\u3002\u7531\u6f2b\u53cd\u5c04\u7070\u4f53\u8868\u9762\u6240\u53d1\u5c04\u7684\u8f90\u5c04\u70ed\u901a\u91cf\u7b49\u4e8e \\(\\varepsilon n^2 \\sigma T^4\\) \u3002\u5f53\u4e00\u4e2a\u8868\u9762\u88ab\u5e26\u6709\u5747\u5300 \\(T_\\mathrm{amb}\\) \u7684\u7269\u4f53\u5305\u56f4\u65f6\uff0c\u51c0\u8f90\u5c04\u901a\u91cf\u4e3a $$ q_\\mathrm{r}=\\varepsilon n^2 \\sigma (T_\\mathrm{amb}^4-T^4) $$ \u5f53\u56f4\u7ed5\u8868\u9762\u7684\u6e29\u5ea6\u4e0d\u540c\u65f6\uff0c\u6bcf\u4e2a\u8868\u9762\u5bf9\u8868\u9762\u7684\u4ea4\u6362\u5219\u7531\u8868\u9762\u7684\u89c6\u89d2\u56e0\u5b50\u786e\u5b9a\u3002 \u4e0d\u8fc7\uff0c\u6d41\u4f53\u548c\u56fa\u4f53\u90fd\u53ef\u4ee5\u662f\u900f\u660e\u6216\u534a\u900f\u660e\u7684\uff1b\u56e0\u6b64\u8f90\u5c04\u53ef\u4ee5\u5728\u6d41\u4f53\u548c\u56fa\u4f53\u4e2d\u53d1\u751f\u3002\u5728\u53c2\u4e0e\uff08\u6216\u534a\u900f\u660e\uff09\u4ecb\u8d28\u4e2d\uff0c\u8f90\u5c04\u7ebf\u5c06\u4e0e\u4ecb\u8d28\uff08\u56fa\u4f53\u6216\u6d41\u4f53\uff09\u76f8\u4e92\u4f5c\u7528\uff0c\u968f\u5373\u5438\u6536\u3001\u91ca\u653e\u548c\u6563\u5c04\u8f90\u5c04\u3002 \u6e29\u5ea6\u5dee\u8f83\u5c0f\u4e14\u53d1\u5c04\u7387\u8f83\u4f4e\u7684\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u5ffd\u7565\u8f90\u5c04\u4f20\u70ed\uff1b\u4f46\u5728\u6e29\u5ea6\u5dee\u8f83\u5927\u4e14\u53d1\u5c04\u7387\u8f83\u9ad8\u7684\u5e94\u7528\u4e2d\uff0c\u8f90\u5c04\u4f20\u70ed\u76f8\u5f53\u91cd\u8981\u3002 \u8868\u9762\u53d1\u5c04\u7387\u5206\u522b\u4e3a \\(\\varepsilon=0\\) \uff08\u5de6\uff09\u548c \\(\\varepsilon=0.9\\) \uff08\u53f3)\u7684\u6563\u70ed\u5668\u6e29\u5ea6\u5256\u9762\u56fe\u5bf9\u6bd4","title":"\u8f90\u5c04\u4f20\u70ed"},{"location":"ESP32/%E7%94%B5%E8%A7%A3%E8%B4%A8%E7%94%B5%E5%AE%B9%E5%A4%B1%E6%95%88/","text":"CDE \u7684\u53ef\u9760\u6027\u6a21\u578b: \\[\\lambda =\\frac{4\\times10^5 N V_a^3 C^{0.5} 2^{T_c-T_m/10}}{L_B V_r^2}\\] http://www.cde.com/resources/catalogs/AEappGUIDE.pdf http://www.cde.com/resources/catalogs/cn/reliability.pdf","title":"Tips about using Layer in Creo"},{"location":"ESP32/%E7%AC%A6%E5%8F%B7%E9%97%B4%E5%B9%B2%E6%89%B0%E4%B8%8E%E5%BE%AA%E7%8E%AF%E5%89%8D%E7%BC%80/","text":"\u591a\u5f84\u65f6\u5ef6\u9020\u6210\u7b26\u53f7\u95f4\u5e72\u6270ISI\uff0c\u901a\u8fc7\u52a0\u5165\u4fdd\u62a4\u95f4\u9694\uff0c\u53ef\u4ee5\u6709\u6548\u907f\u514dISI\u3002 \u4ec0\u4e48\u662f\u7b26\u53f7\u95f4\u5e72\u6270\uff08ISI\uff09\uff1f \u5728\u4e00\u4e2a\u7406\u60f3\u7684\u7cfb\u7edf\u4e2d\uff08\u7406\u8bba\u4e0a\uff09\uff0c\u4f20\u8f93\u7684\u7b26\u53f7\u5230\u8fbe\u63a5\u6536\u673a\u65f6\u6ca1\u6709\u4efb\u4f55\u7684\u635f\u5931\u6216\u5e72\u6270\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u4f46\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u7531\u4e8e\u4fe1\u53f7\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u7684\u53cd\u5c04\uff0c\u884d\u5c04\u6216\u591a\u5f84\uff0c\u63a5\u6536\u673a\u53ef\u80fd\u4f1a\u63a5\u6536\u5230\u76f8\u540c\u4fe1\u53f7\u7684\u591a\u4e2a\u5ef6\u8fdf\u7248\u672c\u3002 \u5728\u63a5\u6536\u673a\u4e0a\uff0c\u6240\u6709\u8fd9\u4e9b\u201c\u591a\u5f84\u201d\u5206\u91cf\u76f8\u52a0\u3002\u5bfc\u81f4\u5b9e\u9645\u7684\u7ed3\u679c\u662f\u6211\u4eec\u6709\u591a\u4e2a\u7b26\u53f7\u88ab\u201c\u540c\u65f6\u201d\u63a5\u6536\uff08\u7b26\u53f7\u201c\u91cd\u53e0\u201d\uff09 - \u8fd9\u662f \u7b26\u53f7\u95f4\u5e72\u6270\uff08ISI\uff09\uff01 \u800c\u5f53\u7b26\u53f7\u90e8\u5206\u91cd\u53e0\u65f6\uff0c\u8fb9\u7f18\u4fe1\u606f\u53ef\u80fd\u4f1a\u5931\u771f\u3002 \u7531\u4e8e\u591a\u8def\u5f84\uff0c\u5728\u591a\u4e2a\u65f6\u523b\u63a5\u6536\u5230\u76f8\u540c\u7684\u4fe1\u606f\u3002\u67d0\u4e9b\u4fe1\u606f\u7684\u7b2c\u4e00\u4e2a\u526f\u672c\u548c\u540c\u4e00\u4fe1\u53f7\u7684\u6700\u540e\u4e00\u4e2a\u526f\u672c\u7684\u603b\u5ef6\u8fdf\u79f0\u4e3a\u5ef6\u8fdf\u4f20\u64ad\u3002\u6240\u4ee5\u7b26\u53f7\u4e2d\u7684\u5931\u771f\u8fbe\u5230\u5ef6\u8fdf\u4f20\u64ad\u3002 \u5982\u679c\u7b26\u53f7\u5468\u671f \\(T\\) \u4e0e\u4f20\u64ad\u5ef6\u8fdf \\(t\\) \u76f8\u6bd4\u975e\u5e38\u77ed \\(T << t\\) \uff0c\u5219\u5f71\u54cd\u662f\u663e\u8457\u7684\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u5ef6\u957f\u7b26\u53f7\u957f\u5ea6\u7684\u8bdd \\(T >> t\\) \uff0c\u5927\u591a\u6570\u4e0d\u4f1a\u53d7\u5230ISI\u7684\u5f71\u54cd\u3002\u7b26\u53f7\u7684\u4e00\u5c0f\u90e8\u5206\u5c06\u7ee7\u7eed\u53d7\u5230\u5f71\u54cd\uff0c\u4f46\u5728\u5176\u5927\u90e8\u5206\u65f6\u95f4\u5185\uff0c\u7b26\u53f7\u5c06\u4e0d\u4f1a\u53d7\u5230\u591a\u8def\u5f84\u4e2d\u4f20\u64ad\u7684\u53cd\u5c04\u7684\u5f71\u54cd\u3002 CP\uff08\u5faa\u73af\u524d\u7f00\uff09\u7684\u7269\u7406\u610f\u4e49 \u5faa\u73af\u524d\u7f00\u5145\u5f53\u7f13\u51b2\u533a\u6216\u4fdd\u62a4\u95f4\u9694\u4ee5\u4fdd\u62a4OFDM\u4fe1\u53f7\u514d\u53d7\u7b26\u53f7\u95f4\u5e72\u6270\u3002 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5f53\u6211\u4eec\u4f7f\u7b26\u53f7\u5468\u671f\u66f4\u5927\u65f6\uff0c\u6211\u4eec\u5c06ISI\u7684\u5f71\u54cd\u964d\u5230\u6700\u4f4e\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610fISI\u7684\u5f71\u54cd\u603b\u662f\u5b58\u5728\u7684\u3002 \u4e3a\u4e86\u6c38\u4e45\u6d88\u9664\u8fd9\u4e2a\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6848\u662f\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u201c\u6062\u590d\u201d\u7b26\u53f7\u7684\u201c\u4e22\u5931\u201d\u90e8\u5206\u3002 \u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u590d\u5236\u6216\u590d\u5236\u7b26\u53f7\u7684\u8d77\u59cb\u90e8\u5206\uff0c\u5e76\u63d2\u5165\u7b26\u53f7\u7684\u672b\u5c3e\u3002\u5b83\u5145\u5f53 \u5faa\u73af\u524d\u7f00\u3002 \u6240\u4ee5\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7406\u89e3CP\u5c06\u6bcf\u4e2a\u7b26\u53f7\u7684\u672b\u5c3e\uff08\u56e0\u6b64\u540d\u79f0\u5faa\u73af\uff09\u590d\u5236\u5230\u521d\u59cb\u4fe1\u606f\u7684\u4e00\u5c0f\u90e8\u5206\uff08\u56e0\u6b64\u662f\u540d\u79f0\u524d\u7f00\uff09\u3002 \u56e0\u6b64\uff0c\u63a5\u6536\u673a\u53ef\u4ee5\u8bc6\u522b\u6bcf\u4e2a\u7b26\u53f7\u7684\u7aef\u70b9\u5e76\u6b63\u786e\u5730\u5173\u8054\u4fe1\u606f\uff0c\u4ece\u800c\u6d88\u9664\u5e72\u6270\u95ee\u9898\u3002 \u5728LTE\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e24\u79cd\u7c7b\u578b\u7684CP\u3002\u6b63\u5e38\u548c\u6269\u5c55\u3002 \u6b63\u5e38\u5faa\u73af\u524d\u7f00\u5bf9\u4e8e\u5927\u591a\u6570\u573a\u666f\u662f\u8db3\u591f\u7684\uff0c\u800c\u6269\u5c55\u5faa\u73af\u524d\u7f00\u662f\u9488\u5bf9\u5177\u6709\u7279\u522b\u9ad8\u7684\u5ef6\u8fdf\u6269\u5c55\u7684\u573a\u666f\u3002 \u672c\u6587\u8bd1\u81ea\uff1ahttp://www.techplayon.com/inter-symbol-interference-isi-lte-cyclic-prefix-cp-helps-eliminating-isi-problem/","title":"\u7b26\u53f7\u95f4\u5e72\u6270(ISI)\u4e0e\u5faa\u73af\u524d\u7f00(CP)"},{"location":"ESP32/%E7%AC%A6%E5%8F%B7%E9%97%B4%E5%B9%B2%E6%89%B0%E4%B8%8E%E5%BE%AA%E7%8E%AF%E5%89%8D%E7%BC%80/#isi","text":"\u5728\u4e00\u4e2a\u7406\u60f3\u7684\u7cfb\u7edf\u4e2d\uff08\u7406\u8bba\u4e0a\uff09\uff0c\u4f20\u8f93\u7684\u7b26\u53f7\u5230\u8fbe\u63a5\u6536\u673a\u65f6\u6ca1\u6709\u4efb\u4f55\u7684\u635f\u5931\u6216\u5e72\u6270\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u4f46\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u7531\u4e8e\u4fe1\u53f7\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u7684\u53cd\u5c04\uff0c\u884d\u5c04\u6216\u591a\u5f84\uff0c\u63a5\u6536\u673a\u53ef\u80fd\u4f1a\u63a5\u6536\u5230\u76f8\u540c\u4fe1\u53f7\u7684\u591a\u4e2a\u5ef6\u8fdf\u7248\u672c\u3002 \u5728\u63a5\u6536\u673a\u4e0a\uff0c\u6240\u6709\u8fd9\u4e9b\u201c\u591a\u5f84\u201d\u5206\u91cf\u76f8\u52a0\u3002\u5bfc\u81f4\u5b9e\u9645\u7684\u7ed3\u679c\u662f\u6211\u4eec\u6709\u591a\u4e2a\u7b26\u53f7\u88ab\u201c\u540c\u65f6\u201d\u63a5\u6536\uff08\u7b26\u53f7\u201c\u91cd\u53e0\u201d\uff09 - \u8fd9\u662f \u7b26\u53f7\u95f4\u5e72\u6270\uff08ISI\uff09\uff01 \u800c\u5f53\u7b26\u53f7\u90e8\u5206\u91cd\u53e0\u65f6\uff0c\u8fb9\u7f18\u4fe1\u606f\u53ef\u80fd\u4f1a\u5931\u771f\u3002 \u7531\u4e8e\u591a\u8def\u5f84\uff0c\u5728\u591a\u4e2a\u65f6\u523b\u63a5\u6536\u5230\u76f8\u540c\u7684\u4fe1\u606f\u3002\u67d0\u4e9b\u4fe1\u606f\u7684\u7b2c\u4e00\u4e2a\u526f\u672c\u548c\u540c\u4e00\u4fe1\u53f7\u7684\u6700\u540e\u4e00\u4e2a\u526f\u672c\u7684\u603b\u5ef6\u8fdf\u79f0\u4e3a\u5ef6\u8fdf\u4f20\u64ad\u3002\u6240\u4ee5\u7b26\u53f7\u4e2d\u7684\u5931\u771f\u8fbe\u5230\u5ef6\u8fdf\u4f20\u64ad\u3002 \u5982\u679c\u7b26\u53f7\u5468\u671f \\(T\\) \u4e0e\u4f20\u64ad\u5ef6\u8fdf \\(t\\) \u76f8\u6bd4\u975e\u5e38\u77ed \\(T << t\\) \uff0c\u5219\u5f71\u54cd\u662f\u663e\u8457\u7684\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u5ef6\u957f\u7b26\u53f7\u957f\u5ea6\u7684\u8bdd \\(T >> t\\) \uff0c\u5927\u591a\u6570\u4e0d\u4f1a\u53d7\u5230ISI\u7684\u5f71\u54cd\u3002\u7b26\u53f7\u7684\u4e00\u5c0f\u90e8\u5206\u5c06\u7ee7\u7eed\u53d7\u5230\u5f71\u54cd\uff0c\u4f46\u5728\u5176\u5927\u90e8\u5206\u65f6\u95f4\u5185\uff0c\u7b26\u53f7\u5c06\u4e0d\u4f1a\u53d7\u5230\u591a\u8def\u5f84\u4e2d\u4f20\u64ad\u7684\u53cd\u5c04\u7684\u5f71\u54cd\u3002","title":"\u4ec0\u4e48\u662f\u7b26\u53f7\u95f4\u5e72\u6270\uff08ISI\uff09\uff1f"},{"location":"ESP32/%E7%AC%A6%E5%8F%B7%E9%97%B4%E5%B9%B2%E6%89%B0%E4%B8%8E%E5%BE%AA%E7%8E%AF%E5%89%8D%E7%BC%80/#cp","text":"\u5faa\u73af\u524d\u7f00\u5145\u5f53\u7f13\u51b2\u533a\u6216\u4fdd\u62a4\u95f4\u9694\u4ee5\u4fdd\u62a4OFDM\u4fe1\u53f7\u514d\u53d7\u7b26\u53f7\u95f4\u5e72\u6270\u3002 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5f53\u6211\u4eec\u4f7f\u7b26\u53f7\u5468\u671f\u66f4\u5927\u65f6\uff0c\u6211\u4eec\u5c06ISI\u7684\u5f71\u54cd\u964d\u5230\u6700\u4f4e\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610fISI\u7684\u5f71\u54cd\u603b\u662f\u5b58\u5728\u7684\u3002 \u4e3a\u4e86\u6c38\u4e45\u6d88\u9664\u8fd9\u4e2a\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6848\u662f\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u201c\u6062\u590d\u201d\u7b26\u53f7\u7684\u201c\u4e22\u5931\u201d\u90e8\u5206\u3002 \u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u590d\u5236\u6216\u590d\u5236\u7b26\u53f7\u7684\u8d77\u59cb\u90e8\u5206\uff0c\u5e76\u63d2\u5165\u7b26\u53f7\u7684\u672b\u5c3e\u3002\u5b83\u5145\u5f53 \u5faa\u73af\u524d\u7f00\u3002 \u6240\u4ee5\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7406\u89e3CP\u5c06\u6bcf\u4e2a\u7b26\u53f7\u7684\u672b\u5c3e\uff08\u56e0\u6b64\u540d\u79f0\u5faa\u73af\uff09\u590d\u5236\u5230\u521d\u59cb\u4fe1\u606f\u7684\u4e00\u5c0f\u90e8\u5206\uff08\u56e0\u6b64\u662f\u540d\u79f0\u524d\u7f00\uff09\u3002 \u56e0\u6b64\uff0c\u63a5\u6536\u673a\u53ef\u4ee5\u8bc6\u522b\u6bcf\u4e2a\u7b26\u53f7\u7684\u7aef\u70b9\u5e76\u6b63\u786e\u5730\u5173\u8054\u4fe1\u606f\uff0c\u4ece\u800c\u6d88\u9664\u5e72\u6270\u95ee\u9898\u3002 \u5728LTE\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e24\u79cd\u7c7b\u578b\u7684CP\u3002\u6b63\u5e38\u548c\u6269\u5c55\u3002 \u6b63\u5e38\u5faa\u73af\u524d\u7f00\u5bf9\u4e8e\u5927\u591a\u6570\u573a\u666f\u662f\u8db3\u591f\u7684\uff0c\u800c\u6269\u5c55\u5faa\u73af\u524d\u7f00\u662f\u9488\u5bf9\u5177\u6709\u7279\u522b\u9ad8\u7684\u5ef6\u8fdf\u6269\u5c55\u7684\u573a\u666f\u3002 \u672c\u6587\u8bd1\u81ea\uff1ahttp://www.techplayon.com/inter-symbol-interference-isi-lte-cyclic-prefix-cp-helps-eliminating-isi-problem/","title":"CP\uff08\u5faa\u73af\u524d\u7f00\uff09\u7684\u7269\u7406\u610f\u4e49"},{"location":"ESP32/%E7%BA%A2%E5%A4%96%E7%83%AD%E5%83%8F%E4%BB%AA%E5%8F%91%E5%B0%84%E7%8E%87%E7%A1%AE%E5%AE%9A%E6%96%B9%E6%B3%95/","text":"\u53d1\u5c04\u7387\u7684\u5b9a\u4e49 \u53d1\u5c04\u7387\u662f\u6307\u7269\u4f53\u8868\u9762\u8f90\u5c04\u51fa\u7684\u80fd\u91cf\u4e0e\u76f8\u540c\u6e29\u5ea6\u7684\u9ed1\u4f53\u8f90\u5c04\u80fd\u91cf\u7684\u6bd4\u7387\u3002\uff08\u9ed1\u4f53\u662f\u4e00\u79cd \u7406\u60f3\u5316\u7684\u8f90\u5c04\u4f53\uff0c\u5b83\u5438\u6536\u6240\u6709\u6ce2\u957f\u7684\u8f90\u5c04\u80fd\u91cf\uff0c\u6ca1\u6709\u80fd\u91cf\u7684\u53cd\u5c04\u548c\u900f\u8fc7\uff0c\u5176\u8868\u9762\u7684\u53d1 \u5c04\u7387\u4e3a1\u3002\uff09 \u5404\u79cd\u7269\u8d28\u7684\u53d1\u5c04\u7387\u662f\u7531\u7269\u4f53\u7684\u672c\u8eab\u6750\u8d28\u6240\u51b3\u5b9a\uff0c\u76f8\u540c\u7684\u6e29\u5ea6\u4e0b\uff0c\u7269\u8d28\u4e0d\u540c\uff0c\u5411\u5916\u8f90\u5c04 \u7684\u80fd\u91cf\u4e5f\u4f1a\u4e0d\u540c\u3002\u4f8b\u5982\u4e0b\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c3\u4e2a\u70b9\u540c\u65f6\u662f\u8336\u676f\u7684\u8868\u9762\uff0c\u4f46\u7531\u4e8e\u8868\u9762\u7684 \u7269\u8d28\u4e0d\u540c\uff0c\u8f90\u5c04\u51fa\u7684\u80fd\u91cf\uff0c\u7528\u70ed\u50cf\u4eea\u770b\u5230\u7684\u6e29\u5ea6\u6307\u793a\u6709\u5f88\u5927\u7684\u5dee\u5f02\u3002 \u53d1\u5c04\u7387\u786e\u5b9a\u65b9\u6cd5 \u88ab\u6d4b\u6750\u6599\u7684\u53d1\u5c04\u7387\u6709\u56db\u79cd\u786e\u5b9a\u65b9\u6cd5\uff1a \u65b9\u6cd5\u4e00\uff1a\u67e5\u9605\u5404\u79cd\u6750\u6599\u7684\u53d1\u5c04\u7387\u8868\u786e\u5b9a\uff1b \u65b9\u6cd5\u4e8c\uff1a\u5c06\u4e00\u5757\u7edd\u7f18\u80f6\u5e26\uff08\u5df2\u77e5\u53d1\u5c04\u7387\uff09\u8d34\u4e8e\u88ab\u6d4b\u7269\u4f53\u8868\u9762\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u6574\u7ea2\u5916\u70ed\u50cf\u4eea \u53d1\u5c04\u7387\uff0c\u4f7f\u88ab\u6d4b\u6750\u6599\u8868\u9762\u7684\u6e29\u5ea6\u4e0e\u8d34\u6709\u7edd\u7f18\u80f6\u5e26\u8868\u9762\u6e29\u5ea6\u76f8\u540c\u6216\u63a5\u8fd1\uff0c\u6b64\u65f6\u7684\u53d1 \u5c04\u7387\u5373\u4e3a\u88ab\u6d4b\u6750\u6599\u7269\u4f53\u6b63\u786e\u7684\u53d1\u5c04\u7387\uff1b \u65b9\u6cd5\u4e09\uff1a\u5c06\u55b7\u6f06\uff08\u5df2\u77e5\u53d1\u5c04\u7387\uff09\u5747\u5300\u7684\u55b7\u6d82\u5728\u88ab\u6d4b\u7269\u4f53\u8868\u9762\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u6574\u7ea2\u5916\u70ed\u50cf\u4eea \u53d1\u5c04\u7387\uff0c\u76f4\u5230\u6ca1\u6709\u55b7\u6f06\u7684\u8868\u9762\u6e29\u5ea6\u4e0e\u55b7\u6f06\u8868\u9762\u6e29\u5ea6\u76f8\u540c\u6216\u63a5\u8fd1\uff0c\u6b64\u65f6\u7684\u53d1\u5c04\u7387\u5373 \u4e3a\u76ee\u6807\u7269\u4f53\u6b63\u786e\u7684\u53d1\u5c04\u7387\uff1b \u65b9\u6cd5\u56db\uff1a\u7528\u63a5\u89e6\u5f0f\u6e29\u5ea6\u8ba1\uff0c\u5982\u70ed\u7535\u5076\u3001\u70ed\u7535\u963b\u7b49\u6d4b\u91cf\u7269\u4f53\u8868\u9762\u6e29\u5ea6\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u6574\u7ea2\u5916 \u70ed\u50cf\u4eea\u53d1\u5c04\u7387\uff0c\u76f4\u5230\u70ed\u50cf\u4eea\u6240\u6d4b\u5f97\u7684\u8868\u9762\u6e29\u5ea6\u4e0e\u63a5\u89e6\u5f0f\u63a5\u89e6\u5f0f\u6e29\u5ea6\u8ba1\u6d4b\u5f97\u7684\u8868\u9762 \u6e29\u5ea6\u76f8\u540c\u6216\u63a5\u8fd1\uff0c\u6b64\u65f6\u7684\u53d1\u5c04\u7387\u5373\u4e3a\u76ee\u6807\u7269\u4f53\u6b63\u786e\u7684\u53d1\u5c04\u7387\u3002 \u53d1\u5c04\u7387\u786e\u5b9a\u6240\u4f7f\u7528\u7684\u6750\u6599 \u65b9\u6cd5\u4e00\uff1a\u67e5\u9605\u6750\u6599\u53d1\u5c04\u7387\u8868\uff0c\u5404\u79cd\u6750\u6599\u7684\u53d1\u5c04\u7387\u8868\u5728\u914d\u5957\u7684\u4ea7\u54c1\u624b\u518c\u4e2d\u53ef\u4ee5\u67e5\u8be2\u5230\uff1b \u65b9\u6cd5\u4e8c\uff1a\u8d34\u7edd\u7f18\u80f6\u5e03\uff083M\u7535\u6c14\u7edd\u7f18\u80f6\u5e26\uff0c\u724c\u53f71712\uff0c\u4efb\u610f\u989c\u8272\uff09\uff0c\u8fd9\u79cd\u7edd\u7f18\u80f6\u5e03\u7684 \u53d1\u5c04\u7387\u4e3a\uff1a0.97\uff1b \u65b9\u6cd5\u4e09\uff1a\u55b7\u6d82\u7684\u4e19\u70ef\u9178\u6811\u8102\uff08\u4fdd\u8d50\u5229\u81ea\u52a8\u55b7\u6f06\uff0c\u4efb\u610f\u989c\u8272\uff09\uff0c\u8fd9\u79cd\u55b7\u6f06\u7684\u53d1\u5c04\u7387\u4e3a\uff1a 0.94\uff1b\u5982\u4e0b\u56fe \u65b9\u6cd5\u56db\uff1a\u6240\u7528\u7684\u63a5\u89e6\u5f0f\u6e29\u5ea6\u8ba1\u4e3aFluke 566\uff0c\u6216Fluke17B\u3002 \u89c1\u4e0b\u56fe \u65b9\u6cd5\u7684\u4f7f\u7528\u573a\u5408 \u7b2c\u4e00\u79cd\u65b9\u6cd5\u4ec5\u7528\u4e8e\u53c2\u8003\uff1b \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u88ab\u6d4b\u76ee\u6807\u76f8\u5bf9\u6bd4\u8f83\u5927\uff0c\u6e29\u5ea6\u8f83\u4f4e\uff08\u5c0f\u4e8e80\u2103\uff09\uff0c\u8981\u6c42\u6d4b\u8bd5\u540e\u4e0d\u6539 \u53d8\u539f\u76ee\u6807\u8868\u9762\u72b6\u51b5\u7684\u573a\u5408\uff0c\u4f8b\u5982\u5236\u9020\u4e1a\u4e2d\uff0c\u5982\u5404\u79cd\u6563\u70ed\u6a21\u5757\uff0c\u5149\u6d01\u82af\u7247\uff08\u8f83\u5927\uff09\u8868 \u9762\uff0c\u91d1\u5c5e\u8868\u9762\u7b49\uff1b \u7b2c\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u9002\u7528\u4e8e\u6e29\u5ea6\u8f83\u9ad8\u76ee\u6807\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76ee\u6807\u5c3a\u5bf8\u8f83\u5c0f\u7684\uff0c\u4f46\u53ef\u4ee5\u63a5\u53d7\u88ab \u6d4b\u7269\u4f53\u8868\u9762\u72b6\u51b5\u88ab\u6539\u53d8\u7684\u573a\u5408\uff0c\u4f8b\u5982\u8bbe\u5907\u7ef4\u62a4\u573a\u5408\u4e0b\u7684\u7ba1\u9053\u3001\u9600\u95e8\u7b49\u9759\u8bbe\u5907\uff1b\u5236\u9020 \u4e1a\u4e2d\uff0c\u8f83\u5c0f\u7684\u82af\u7247\u8868\u9762\u3001\u7ba1\u811a\u3001\u4e0d\u89c4\u5219\u7684\u6563\u70ed\u7247\u3001\u7535\u5bb9\u5668\u9876\u7aef\u3001LED\u82af\u7247\uff08\u8868\u9762\u9540 \u94f6\uff09\u7b49\uff1b \u7b2c\u56db\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u88ab\u6d4b\u76ee\u6807\u53ef\u5141\u8bb8\u8fdb\u884c\u8868\u9762\u63a5\u89e6\u6d4b\u6e29\u7684\u573a\u5408\u3002 \u64cd\u4f5c\u6ce8\u610f\u4e8b\u9879 \u7b2c\u4e00\u79cd\u65b9\u6cd5\uff1a\u4ec5\u4f5c\u4e3a\u53c2\u8003\uff0c\u4e0d\u80fd\u51c6\u786e\u6d4b\u6e29\uff1b \u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a\u5e94\u5c3d\u91cf\u4f7f\u80f6\u5e26\u4e0e\u88ab\u6d4b\u76ee\u6807\u7684\u8868\u9762\u63a5\u89e6\u7d27\u5bc6\uff0c\u6ca1\u6709\u6c14\u6ce1\u6216\u8936\u76b1\u7b49\u73b0\u8c61\uff0c \u9700\u8981\u9884\u75595\u5206\u949f\u4ee5\u4e0a\u65f6\u95f4\uff0c\u4f7f\u88ab\u6d4b\u76ee\u6807\u8868\u9762\u4e0e\u80f6\u5e26\u5145\u5206\u8fbe\u5230\u70ed\u5e73\u8861\u72b6\u6001\uff1b \u7b2c\u4e09\u79cd\u65b9\u6cd5\uff1a\u5e94\u5c3d\u91cf\u4f7f\u55b7\u6f06\u9762\u5747\u5300\uff0c\u800c\u4e14\u8584\uff08\u4f46\u8981\u8986\u76d6\u4f4f\u88ab\u6d4b\u76ee\u6807\u8868\u9762\uff09\uff0c\u540c\u65f6\u8981 \u7ed9\u5ba2\u6237\u8bf4\u660e\uff0c\u55b7\u6d82\u540e\u7684\u76ee\u6807\u53ef\u80fd\u4f1a\u7559\u6709\u6b8b\u7559\uff1b\u5efa\u8bae\u4f7f\u7528\u8005\u55b7\u6d823\u5206\u949f\u540e\uff0c\u518d\u8fdb\u884c\u6d4b\u8bd5\uff1b \u7b2c\u56db\u79cd\u65b9\u6cd5\uff1a\u5e94\u4f7f\u70ed\u7535\u5076\u4e0e\u88ab\u6d4b\u76ee\u6807\u8868\u9762\u63a5\u89e6\u826f\u597d\uff0c\u540c\u65f6\u8981\u6c42\u6d4b\u8bd5\u7684\u6570\u636e\u5fc5\u987b\u662f\u6e29 \u5ea6\u7a33\u5b9a\u540e\u7684\u6570\u636e\u3002 \u6587\u7ae0\u6765\u6e90\uff1aFluke \u5173\u4e8e\u70ed\u6210\u50cf\u4eea\u6d4b\u91cf\u6e29\u5ea6\u7684\u66f4\u591a\u5185\u5bb9\u53ef\u4ee5\u4e0b\u8f7d\u300a \u798f\u7984\u514b\u70ed\u50cf\u4eea\u5e38\u89c1\u95ee\u7b54\u53e3\u888b\u4e66 \u300b\u3002","title":"\u7ea2\u5916\u70ed\u50cf\u4eea\u53d1\u5c04\u7387\u786e\u5b9a\u65b9\u6cd5"},{"location":"ESP32/%E7%BA%A2%E5%A4%96%E7%83%AD%E5%83%8F%E4%BB%AA%E5%8F%91%E5%B0%84%E7%8E%87%E7%A1%AE%E5%AE%9A%E6%96%B9%E6%B3%95/#_1","text":"\u53d1\u5c04\u7387\u662f\u6307\u7269\u4f53\u8868\u9762\u8f90\u5c04\u51fa\u7684\u80fd\u91cf\u4e0e\u76f8\u540c\u6e29\u5ea6\u7684\u9ed1\u4f53\u8f90\u5c04\u80fd\u91cf\u7684\u6bd4\u7387\u3002\uff08\u9ed1\u4f53\u662f\u4e00\u79cd \u7406\u60f3\u5316\u7684\u8f90\u5c04\u4f53\uff0c\u5b83\u5438\u6536\u6240\u6709\u6ce2\u957f\u7684\u8f90\u5c04\u80fd\u91cf\uff0c\u6ca1\u6709\u80fd\u91cf\u7684\u53cd\u5c04\u548c\u900f\u8fc7\uff0c\u5176\u8868\u9762\u7684\u53d1 \u5c04\u7387\u4e3a1\u3002\uff09 \u5404\u79cd\u7269\u8d28\u7684\u53d1\u5c04\u7387\u662f\u7531\u7269\u4f53\u7684\u672c\u8eab\u6750\u8d28\u6240\u51b3\u5b9a\uff0c\u76f8\u540c\u7684\u6e29\u5ea6\u4e0b\uff0c\u7269\u8d28\u4e0d\u540c\uff0c\u5411\u5916\u8f90\u5c04 \u7684\u80fd\u91cf\u4e5f\u4f1a\u4e0d\u540c\u3002\u4f8b\u5982\u4e0b\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c3\u4e2a\u70b9\u540c\u65f6\u662f\u8336\u676f\u7684\u8868\u9762\uff0c\u4f46\u7531\u4e8e\u8868\u9762\u7684 \u7269\u8d28\u4e0d\u540c\uff0c\u8f90\u5c04\u51fa\u7684\u80fd\u91cf\uff0c\u7528\u70ed\u50cf\u4eea\u770b\u5230\u7684\u6e29\u5ea6\u6307\u793a\u6709\u5f88\u5927\u7684\u5dee\u5f02\u3002","title":"\u53d1\u5c04\u7387\u7684\u5b9a\u4e49"},{"location":"ESP32/%E7%BA%A2%E5%A4%96%E7%83%AD%E5%83%8F%E4%BB%AA%E5%8F%91%E5%B0%84%E7%8E%87%E7%A1%AE%E5%AE%9A%E6%96%B9%E6%B3%95/#_2","text":"\u88ab\u6d4b\u6750\u6599\u7684\u53d1\u5c04\u7387\u6709\u56db\u79cd\u786e\u5b9a\u65b9\u6cd5\uff1a \u65b9\u6cd5\u4e00\uff1a\u67e5\u9605\u5404\u79cd\u6750\u6599\u7684\u53d1\u5c04\u7387\u8868\u786e\u5b9a\uff1b \u65b9\u6cd5\u4e8c\uff1a\u5c06\u4e00\u5757\u7edd\u7f18\u80f6\u5e26\uff08\u5df2\u77e5\u53d1\u5c04\u7387\uff09\u8d34\u4e8e\u88ab\u6d4b\u7269\u4f53\u8868\u9762\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u6574\u7ea2\u5916\u70ed\u50cf\u4eea \u53d1\u5c04\u7387\uff0c\u4f7f\u88ab\u6d4b\u6750\u6599\u8868\u9762\u7684\u6e29\u5ea6\u4e0e\u8d34\u6709\u7edd\u7f18\u80f6\u5e26\u8868\u9762\u6e29\u5ea6\u76f8\u540c\u6216\u63a5\u8fd1\uff0c\u6b64\u65f6\u7684\u53d1 \u5c04\u7387\u5373\u4e3a\u88ab\u6d4b\u6750\u6599\u7269\u4f53\u6b63\u786e\u7684\u53d1\u5c04\u7387\uff1b \u65b9\u6cd5\u4e09\uff1a\u5c06\u55b7\u6f06\uff08\u5df2\u77e5\u53d1\u5c04\u7387\uff09\u5747\u5300\u7684\u55b7\u6d82\u5728\u88ab\u6d4b\u7269\u4f53\u8868\u9762\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u6574\u7ea2\u5916\u70ed\u50cf\u4eea \u53d1\u5c04\u7387\uff0c\u76f4\u5230\u6ca1\u6709\u55b7\u6f06\u7684\u8868\u9762\u6e29\u5ea6\u4e0e\u55b7\u6f06\u8868\u9762\u6e29\u5ea6\u76f8\u540c\u6216\u63a5\u8fd1\uff0c\u6b64\u65f6\u7684\u53d1\u5c04\u7387\u5373 \u4e3a\u76ee\u6807\u7269\u4f53\u6b63\u786e\u7684\u53d1\u5c04\u7387\uff1b \u65b9\u6cd5\u56db\uff1a\u7528\u63a5\u89e6\u5f0f\u6e29\u5ea6\u8ba1\uff0c\u5982\u70ed\u7535\u5076\u3001\u70ed\u7535\u963b\u7b49\u6d4b\u91cf\u7269\u4f53\u8868\u9762\u6e29\u5ea6\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u6574\u7ea2\u5916 \u70ed\u50cf\u4eea\u53d1\u5c04\u7387\uff0c\u76f4\u5230\u70ed\u50cf\u4eea\u6240\u6d4b\u5f97\u7684\u8868\u9762\u6e29\u5ea6\u4e0e\u63a5\u89e6\u5f0f\u63a5\u89e6\u5f0f\u6e29\u5ea6\u8ba1\u6d4b\u5f97\u7684\u8868\u9762 \u6e29\u5ea6\u76f8\u540c\u6216\u63a5\u8fd1\uff0c\u6b64\u65f6\u7684\u53d1\u5c04\u7387\u5373\u4e3a\u76ee\u6807\u7269\u4f53\u6b63\u786e\u7684\u53d1\u5c04\u7387\u3002","title":"\u53d1\u5c04\u7387\u786e\u5b9a\u65b9\u6cd5"},{"location":"ESP32/%E7%BA%A2%E5%A4%96%E7%83%AD%E5%83%8F%E4%BB%AA%E5%8F%91%E5%B0%84%E7%8E%87%E7%A1%AE%E5%AE%9A%E6%96%B9%E6%B3%95/#_3","text":"\u65b9\u6cd5\u4e00\uff1a\u67e5\u9605\u6750\u6599\u53d1\u5c04\u7387\u8868\uff0c\u5404\u79cd\u6750\u6599\u7684\u53d1\u5c04\u7387\u8868\u5728\u914d\u5957\u7684\u4ea7\u54c1\u624b\u518c\u4e2d\u53ef\u4ee5\u67e5\u8be2\u5230\uff1b \u65b9\u6cd5\u4e8c\uff1a\u8d34\u7edd\u7f18\u80f6\u5e03\uff083M\u7535\u6c14\u7edd\u7f18\u80f6\u5e26\uff0c\u724c\u53f71712\uff0c\u4efb\u610f\u989c\u8272\uff09\uff0c\u8fd9\u79cd\u7edd\u7f18\u80f6\u5e03\u7684 \u53d1\u5c04\u7387\u4e3a\uff1a0.97\uff1b \u65b9\u6cd5\u4e09\uff1a\u55b7\u6d82\u7684\u4e19\u70ef\u9178\u6811\u8102\uff08\u4fdd\u8d50\u5229\u81ea\u52a8\u55b7\u6f06\uff0c\u4efb\u610f\u989c\u8272\uff09\uff0c\u8fd9\u79cd\u55b7\u6f06\u7684\u53d1\u5c04\u7387\u4e3a\uff1a 0.94\uff1b\u5982\u4e0b\u56fe \u65b9\u6cd5\u56db\uff1a\u6240\u7528\u7684\u63a5\u89e6\u5f0f\u6e29\u5ea6\u8ba1\u4e3aFluke 566\uff0c\u6216Fluke17B\u3002 \u89c1\u4e0b\u56fe","title":"\u53d1\u5c04\u7387\u786e\u5b9a\u6240\u4f7f\u7528\u7684\u6750\u6599"},{"location":"ESP32/%E7%BA%A2%E5%A4%96%E7%83%AD%E5%83%8F%E4%BB%AA%E5%8F%91%E5%B0%84%E7%8E%87%E7%A1%AE%E5%AE%9A%E6%96%B9%E6%B3%95/#_4","text":"\u7b2c\u4e00\u79cd\u65b9\u6cd5\u4ec5\u7528\u4e8e\u53c2\u8003\uff1b \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u88ab\u6d4b\u76ee\u6807\u76f8\u5bf9\u6bd4\u8f83\u5927\uff0c\u6e29\u5ea6\u8f83\u4f4e\uff08\u5c0f\u4e8e80\u2103\uff09\uff0c\u8981\u6c42\u6d4b\u8bd5\u540e\u4e0d\u6539 \u53d8\u539f\u76ee\u6807\u8868\u9762\u72b6\u51b5\u7684\u573a\u5408\uff0c\u4f8b\u5982\u5236\u9020\u4e1a\u4e2d\uff0c\u5982\u5404\u79cd\u6563\u70ed\u6a21\u5757\uff0c\u5149\u6d01\u82af\u7247\uff08\u8f83\u5927\uff09\u8868 \u9762\uff0c\u91d1\u5c5e\u8868\u9762\u7b49\uff1b \u7b2c\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u9002\u7528\u4e8e\u6e29\u5ea6\u8f83\u9ad8\u76ee\u6807\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76ee\u6807\u5c3a\u5bf8\u8f83\u5c0f\u7684\uff0c\u4f46\u53ef\u4ee5\u63a5\u53d7\u88ab \u6d4b\u7269\u4f53\u8868\u9762\u72b6\u51b5\u88ab\u6539\u53d8\u7684\u573a\u5408\uff0c\u4f8b\u5982\u8bbe\u5907\u7ef4\u62a4\u573a\u5408\u4e0b\u7684\u7ba1\u9053\u3001\u9600\u95e8\u7b49\u9759\u8bbe\u5907\uff1b\u5236\u9020 \u4e1a\u4e2d\uff0c\u8f83\u5c0f\u7684\u82af\u7247\u8868\u9762\u3001\u7ba1\u811a\u3001\u4e0d\u89c4\u5219\u7684\u6563\u70ed\u7247\u3001\u7535\u5bb9\u5668\u9876\u7aef\u3001LED\u82af\u7247\uff08\u8868\u9762\u9540 \u94f6\uff09\u7b49\uff1b \u7b2c\u56db\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u88ab\u6d4b\u76ee\u6807\u53ef\u5141\u8bb8\u8fdb\u884c\u8868\u9762\u63a5\u89e6\u6d4b\u6e29\u7684\u573a\u5408\u3002","title":"\u65b9\u6cd5\u7684\u4f7f\u7528\u573a\u5408"},{"location":"ESP32/%E7%BA%A2%E5%A4%96%E7%83%AD%E5%83%8F%E4%BB%AA%E5%8F%91%E5%B0%84%E7%8E%87%E7%A1%AE%E5%AE%9A%E6%96%B9%E6%B3%95/#_5","text":"\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff1a\u4ec5\u4f5c\u4e3a\u53c2\u8003\uff0c\u4e0d\u80fd\u51c6\u786e\u6d4b\u6e29\uff1b \u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a\u5e94\u5c3d\u91cf\u4f7f\u80f6\u5e26\u4e0e\u88ab\u6d4b\u76ee\u6807\u7684\u8868\u9762\u63a5\u89e6\u7d27\u5bc6\uff0c\u6ca1\u6709\u6c14\u6ce1\u6216\u8936\u76b1\u7b49\u73b0\u8c61\uff0c \u9700\u8981\u9884\u75595\u5206\u949f\u4ee5\u4e0a\u65f6\u95f4\uff0c\u4f7f\u88ab\u6d4b\u76ee\u6807\u8868\u9762\u4e0e\u80f6\u5e26\u5145\u5206\u8fbe\u5230\u70ed\u5e73\u8861\u72b6\u6001\uff1b \u7b2c\u4e09\u79cd\u65b9\u6cd5\uff1a\u5e94\u5c3d\u91cf\u4f7f\u55b7\u6f06\u9762\u5747\u5300\uff0c\u800c\u4e14\u8584\uff08\u4f46\u8981\u8986\u76d6\u4f4f\u88ab\u6d4b\u76ee\u6807\u8868\u9762\uff09\uff0c\u540c\u65f6\u8981 \u7ed9\u5ba2\u6237\u8bf4\u660e\uff0c\u55b7\u6d82\u540e\u7684\u76ee\u6807\u53ef\u80fd\u4f1a\u7559\u6709\u6b8b\u7559\uff1b\u5efa\u8bae\u4f7f\u7528\u8005\u55b7\u6d823\u5206\u949f\u540e\uff0c\u518d\u8fdb\u884c\u6d4b\u8bd5\uff1b \u7b2c\u56db\u79cd\u65b9\u6cd5\uff1a\u5e94\u4f7f\u70ed\u7535\u5076\u4e0e\u88ab\u6d4b\u76ee\u6807\u8868\u9762\u63a5\u89e6\u826f\u597d\uff0c\u540c\u65f6\u8981\u6c42\u6d4b\u8bd5\u7684\u6570\u636e\u5fc5\u987b\u662f\u6e29 \u5ea6\u7a33\u5b9a\u540e\u7684\u6570\u636e\u3002 \u6587\u7ae0\u6765\u6e90\uff1aFluke \u5173\u4e8e\u70ed\u6210\u50cf\u4eea\u6d4b\u91cf\u6e29\u5ea6\u7684\u66f4\u591a\u5185\u5bb9\u53ef\u4ee5\u4e0b\u8f7d\u300a \u798f\u7984\u514b\u70ed\u50cf\u4eea\u5e38\u89c1\u95ee\u7b54\u53e3\u888b\u4e66 \u300b\u3002","title":"\u64cd\u4f5c\u6ce8\u610f\u4e8b\u9879"},{"location":"ESP32/%E8%88%9E%E5%8F%B0%E5%89%A7%E8%8D%B7%E5%8F%B6%E5%9C%86%E5%9C%86%E8%84%9A%E6%9C%AC/","text":"\u821e\u53f0\u5267\u8377\u53f6\u5706\u5706\u811a\u672c \u821e\u53f0\u4e0a\u968f\u610f\u653e3\u52305\u7247\u8377\u53f6\u4f5c\u886c\u6258\uff0c\u6309\u7167\u89d2\u8272\u8d2d\u4e70\u9053\u5177\u670d\u3002 \u7b2c\u4e00\u573a \u6c5f\u5357 \u89c6\u9891\u64ad\u653e\uff0c\u97f3\u4e50\u54cd\u8d77\u3002\u6f14\u5458\u5165\u573a\u8d70\u5230\u821e\u53f0\u4e2d\uff0c\u4f34\u968f\u7740\u80cc\u666f\u97f3\u4e50\u5171\u540c\u541f\u8bd7\u300a\u6c5f\u5357\u300b \u6c5f\u5357\u53ef\u91c7\u83b2 \u83b2\u53f6\u4f55\u7530\u7530 \u9c7c\u620f\u83b2\u53f6\u95f4 \u9c7c\u620f\u83b2\u53f6\u4e1c \u9c7c\u620f\u83b2\u53f6\u897f \u9c7c\u620f\u83b2\u53f6\u5357 \u9c7c\u620f\u83b2\u53f6\u5317 \u53ef\u4ee5\u541f\u55312\uff5e3\u904d\uff0c\u6839\u636e\u6392\u7ec3\u65f6\u95f4\u957f\u77ed\u5b9a\u3002 \u7b2c\u4e8c\u573a \u8377\u53f6 \u53e4\u7b5d\u4f34\u594f\u300a\u8377\u5858\u6708\u8272\u300b \u5c0f\u6c34\u73e0 \u5c0f\u6c34\u73e0\u5165\u573a\u8eba\u5728\u8377\u53f6\u4e0a\u6eda\u6765\u6eda\u53bb\u3002 \u65c1\u767d\uff1a\u5c0f\u6c34\u73e0\u7728\u7740\u4eae\u6676\u6676\u7684\u773c\u775b\uff0c\u5728\u8377\u53f6\u4e0a\u6eda\u6765\u6eda\u53bb\u3002 \u5c0f\u6c34\u73e0\uff1a\u8ba9\u6211\u5728\u8377\u53f6\u4e0a\u4f11\u606f\u4f1a\u513f\u5427\uff0c\u8377\u53f6\u662f\u6211\u7684\u6447\u7bee\u3002 \u5c0f\u873b\u8713 \u5c0f\u873b\u8713\u5165\u573a\uff0c\u4ed6\u5728\u8377\u53f6\u95f4\u98de\u6765\u98de\u53bb\u3002 \u65c1\u767d\uff1a\u5c0f\u873b\u8713\u5c55\u5f00\u900f\u660e\u7684\u7fc5\u8180\uff0c\u7acb\u5728\u8377\u53f6\u4e0a\u3002 \u5c0f\u873b\u8713\u505c\u5728\u4e00\u7247\u8377\u53f6\u8fb9\uff0c\u8bf4\uff1a\u8377\u53f6\u662f\u6211\u7684\u505c\u673a\u576a\uff0c\u98de\u7d2f\u4e86\u5c31\u5230\u8fd9\u91cc\u6765\u4f11\u606f\u4e00\u4e0b\u3002 \u5c0f\u9752\u86d9 \u5c0f\u9752\u86d9\u5165\u573a\u3002\u53ef\u4ee5\u5531\u4e00\u9996\u513f\u6b4c\u3002 \u65c1\u767d\uff1a\u5c0f\u9752\u86d9\u8e72\u5728\u8377\u53f6\u4e0a\uff0c\u5471\u5471\u7684\u653e\u58f0\u6b4c\u5531\u3002 \u5c0f\u9752\u86d9\u8bf4\uff1a\u8377\u53f6\u662f\u6211\u7684\u6b4c\u53f0\uff0c\u5927\u5bb6\u8bf4\u6211\u5531\u7684\u597d\u4e0d\u597d\u542c\u554a\uff1f \u5c0f\u9c7c \u5c0f\u9c7c\u5165\u573a\u3002\u5c0f\u9c7c\u5728\u8377\u53f6\u95f4\u8d70\u6765\u8d70\u53bb\uff0c\u505a\u6367\u8d77\u6c34\u82b1\u7684\u52a8\u4f5c\u3002 \u65c1\u767d\uff1a\u5c0f\u9c7c\u513f\u5728\u8377\u53f6\u4e0b\u7b11\u563b\u563b\u5730\u6e38\u6765\u6e38\u53bb\uff0c\u6367\u8d77\u4e00\u6735\u6735\u5f88\u7f8e\u5f88\u7f8e\u7684\u6c34\u82b1\u3002 \u5c0f\u9c7c\u513f\u8bf4\uff1a\u4eca\u5929\u7684\u5929\u592a\u9633\u53ef\u771f\u5927\uff0c\u548c\u4e5f\u662f\u6211\u7684\u51c9\u4f1e\uff0c\u6211\u5728\u8377\u53f6\u4e0b\u4f11\u606f\u4e00\u4e0b\u5427\u3002 \u7b2c\u4e09\u573a \u6c60\u4e0a \u5927\u5bb6\u90fd\u56de\u5230\u821e\u8e48\u4e2d\u3002\u4f34\u968f\u97f3\u4e50\u541f\u5531\u300a\u6c60\u4e0a\u300b\uff1a \u5c0f\u5a03\u6491\u5c0f\u8247 \u5077\u91c7\u767d\u83b2\u56de \u4e0d\u89e3\u85cf\u8e2a\u8ff9 \u4e00\u9053\u6d6e\u840d\u5f00 \u53ef\u4ee5\u914d\u7b80\u5355\u821e\u8e48\u52a8\u4f5c\u3002\u793a\u8303\u89c6\u9891\u53d1\u5230\u7fa4\u91cc\u81ea\u5b66\u3002 \u7ed3\u675f\u656c\u793c\u6536\u573a\u3002","title":"\u821e\u53f0\u5267\u8377\u53f6\u5706\u5706\u811a\u672c"},{"location":"ESP32/%E8%88%9E%E5%8F%B0%E5%89%A7%E8%8D%B7%E5%8F%B6%E5%9C%86%E5%9C%86%E8%84%9A%E6%9C%AC/#_1","text":"\u821e\u53f0\u4e0a\u968f\u610f\u653e3\u52305\u7247\u8377\u53f6\u4f5c\u886c\u6258\uff0c\u6309\u7167\u89d2\u8272\u8d2d\u4e70\u9053\u5177\u670d\u3002","title":"\u821e\u53f0\u5267\u8377\u53f6\u5706\u5706\u811a\u672c"},{"location":"ESP32/%E8%88%9E%E5%8F%B0%E5%89%A7%E8%8D%B7%E5%8F%B6%E5%9C%86%E5%9C%86%E8%84%9A%E6%9C%AC/#_2","text":"\u89c6\u9891\u64ad\u653e\uff0c\u97f3\u4e50\u54cd\u8d77\u3002\u6f14\u5458\u5165\u573a\u8d70\u5230\u821e\u53f0\u4e2d\uff0c\u4f34\u968f\u7740\u80cc\u666f\u97f3\u4e50\u5171\u540c\u541f\u8bd7\u300a\u6c5f\u5357\u300b \u6c5f\u5357\u53ef\u91c7\u83b2 \u83b2\u53f6\u4f55\u7530\u7530 \u9c7c\u620f\u83b2\u53f6\u95f4 \u9c7c\u620f\u83b2\u53f6\u4e1c \u9c7c\u620f\u83b2\u53f6\u897f \u9c7c\u620f\u83b2\u53f6\u5357 \u9c7c\u620f\u83b2\u53f6\u5317 \u53ef\u4ee5\u541f\u55312\uff5e3\u904d\uff0c\u6839\u636e\u6392\u7ec3\u65f6\u95f4\u957f\u77ed\u5b9a\u3002","title":"\u7b2c\u4e00\u573a \u6c5f\u5357"},{"location":"ESP32/%E8%88%9E%E5%8F%B0%E5%89%A7%E8%8D%B7%E5%8F%B6%E5%9C%86%E5%9C%86%E8%84%9A%E6%9C%AC/#_3","text":"\u53e4\u7b5d\u4f34\u594f\u300a\u8377\u5858\u6708\u8272\u300b","title":"\u7b2c\u4e8c\u573a \u8377\u53f6"},{"location":"ESP32/%E8%88%9E%E5%8F%B0%E5%89%A7%E8%8D%B7%E5%8F%B6%E5%9C%86%E5%9C%86%E8%84%9A%E6%9C%AC/#_4","text":"\u5c0f\u6c34\u73e0\u5165\u573a\u8eba\u5728\u8377\u53f6\u4e0a\u6eda\u6765\u6eda\u53bb\u3002 \u65c1\u767d\uff1a\u5c0f\u6c34\u73e0\u7728\u7740\u4eae\u6676\u6676\u7684\u773c\u775b\uff0c\u5728\u8377\u53f6\u4e0a\u6eda\u6765\u6eda\u53bb\u3002 \u5c0f\u6c34\u73e0\uff1a\u8ba9\u6211\u5728\u8377\u53f6\u4e0a\u4f11\u606f\u4f1a\u513f\u5427\uff0c\u8377\u53f6\u662f\u6211\u7684\u6447\u7bee\u3002","title":"\u5c0f\u6c34\u73e0"},{"location":"ESP32/%E8%88%9E%E5%8F%B0%E5%89%A7%E8%8D%B7%E5%8F%B6%E5%9C%86%E5%9C%86%E8%84%9A%E6%9C%AC/#_5","text":"\u5c0f\u873b\u8713\u5165\u573a\uff0c\u4ed6\u5728\u8377\u53f6\u95f4\u98de\u6765\u98de\u53bb\u3002 \u65c1\u767d\uff1a\u5c0f\u873b\u8713\u5c55\u5f00\u900f\u660e\u7684\u7fc5\u8180\uff0c\u7acb\u5728\u8377\u53f6\u4e0a\u3002 \u5c0f\u873b\u8713\u505c\u5728\u4e00\u7247\u8377\u53f6\u8fb9\uff0c\u8bf4\uff1a\u8377\u53f6\u662f\u6211\u7684\u505c\u673a\u576a\uff0c\u98de\u7d2f\u4e86\u5c31\u5230\u8fd9\u91cc\u6765\u4f11\u606f\u4e00\u4e0b\u3002","title":"\u5c0f\u873b\u8713"},{"location":"ESP32/%E8%88%9E%E5%8F%B0%E5%89%A7%E8%8D%B7%E5%8F%B6%E5%9C%86%E5%9C%86%E8%84%9A%E6%9C%AC/#_6","text":"\u5c0f\u9752\u86d9\u5165\u573a\u3002\u53ef\u4ee5\u5531\u4e00\u9996\u513f\u6b4c\u3002 \u65c1\u767d\uff1a\u5c0f\u9752\u86d9\u8e72\u5728\u8377\u53f6\u4e0a\uff0c\u5471\u5471\u7684\u653e\u58f0\u6b4c\u5531\u3002 \u5c0f\u9752\u86d9\u8bf4\uff1a\u8377\u53f6\u662f\u6211\u7684\u6b4c\u53f0\uff0c\u5927\u5bb6\u8bf4\u6211\u5531\u7684\u597d\u4e0d\u597d\u542c\u554a\uff1f","title":"\u5c0f\u9752\u86d9"},{"location":"ESP32/%E8%88%9E%E5%8F%B0%E5%89%A7%E8%8D%B7%E5%8F%B6%E5%9C%86%E5%9C%86%E8%84%9A%E6%9C%AC/#_7","text":"\u5c0f\u9c7c\u5165\u573a\u3002\u5c0f\u9c7c\u5728\u8377\u53f6\u95f4\u8d70\u6765\u8d70\u53bb\uff0c\u505a\u6367\u8d77\u6c34\u82b1\u7684\u52a8\u4f5c\u3002 \u65c1\u767d\uff1a\u5c0f\u9c7c\u513f\u5728\u8377\u53f6\u4e0b\u7b11\u563b\u563b\u5730\u6e38\u6765\u6e38\u53bb\uff0c\u6367\u8d77\u4e00\u6735\u6735\u5f88\u7f8e\u5f88\u7f8e\u7684\u6c34\u82b1\u3002 \u5c0f\u9c7c\u513f\u8bf4\uff1a\u4eca\u5929\u7684\u5929\u592a\u9633\u53ef\u771f\u5927\uff0c\u548c\u4e5f\u662f\u6211\u7684\u51c9\u4f1e\uff0c\u6211\u5728\u8377\u53f6\u4e0b\u4f11\u606f\u4e00\u4e0b\u5427\u3002","title":"\u5c0f\u9c7c"},{"location":"ESP32/%E8%88%9E%E5%8F%B0%E5%89%A7%E8%8D%B7%E5%8F%B6%E5%9C%86%E5%9C%86%E8%84%9A%E6%9C%AC/#_8","text":"\u5927\u5bb6\u90fd\u56de\u5230\u821e\u8e48\u4e2d\u3002\u4f34\u968f\u97f3\u4e50\u541f\u5531\u300a\u6c60\u4e0a\u300b\uff1a \u5c0f\u5a03\u6491\u5c0f\u8247 \u5077\u91c7\u767d\u83b2\u56de \u4e0d\u89e3\u85cf\u8e2a\u8ff9 \u4e00\u9053\u6d6e\u840d\u5f00 \u53ef\u4ee5\u914d\u7b80\u5355\u821e\u8e48\u52a8\u4f5c\u3002\u793a\u8303\u89c6\u9891\u53d1\u5230\u7fa4\u91cc\u81ea\u5b66\u3002 \u7ed3\u675f\u656c\u793c\u6536\u573a\u3002","title":"\u7b2c\u4e09\u573a \u6c60\u4e0a"},{"location":"ESP32/%E8%B0%83%E5%88%B6/","text":"\u6c9f\u901a\u662f\u4eba\u7c7b\u53ef\u4ee5\u4ea4\u6362\u4fe1\u606f\u7684\u57fa\u672c\u8d44\u6e90\uff0c\u5b83\u7ed9\u51fa\u4e86\u6211\u4eec\u5bf9\u5468\u56f4\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u60f3\u6cd5\u3002\u6211\u4eec\u5728\u65e5\u5e38\u751f\u6d3b\u4e2d\u4e0e\u5f88\u591a\u4eba\u4ea4\u6d41\u3002\u6211\u4eec\u4e5f\u9700\u8981\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u5a31\u4e50\u5a92\u4f53\uff0c\u5982\u7535\u89c6\uff0c\u5e7f\u64ad\uff0c\u6d4f\u89c8\uff0c\u65b0\u95fb\u7b49\uff0c\u8fd9\u4e5f\u662f\u4ea4\u6d41\u7684\u6e90\u6cc9\u3002 \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5c06\u627f\u8f7d\u4fe1\u606f\u7684\u4fe1\u53f7\u4ece\u4e00\u4e2a\u5730\u65b9\u4f20\u8f93\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\uff0c\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u9700\u8981\u52a0\u5f3a\u4fe1\u53f7\uff0c\u4fe1\u53f7\u624d\u80fd\u4f20\u64ad\u5f88\u8fdc\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8c03\u5236\u3002 \u8c03\u5236 \u9996\u5148\u8bf4\u8bf4\u4ec0\u4e48\u662f\u8c03\u5236\u548c\u4e3a\u4ec0\u4e48\u65e0\u7ebf\u901a\u4fe1\u8981\u8fdb\u884c\u8c03\u5236\u3002 \u8c03\u5236\u7684\u542b\u4e49 \u8c03\u5236\uff08modulation\uff09\uff0c\u662f\u901a\u8fc7\u8c03\u5236\u4fe1\u53f7\u6539\u53d8\u5468\u671f\u6027\u6ce2\u5f62\uff08\u79f0\u4e3a\u8f7d\u6ce2\u4fe1\u53f7\uff09\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u7279\u6027\u7684\u8fc7\u7a0b\u3002\u8be5\u8c03\u5236\u4fe1\u53f7\u901a\u5e38\u5305\u542b\u8981\u4f20\u8f93\u7684\u4fe1\u606f\u3002 \u901a\u4fd7\u70b9\u8bb2\uff0c\u8c03\u5236\u5c31\u662f\u5c06\u5305\u542b\u4fe1\u606f\u7684\u4fe1\u53f7\u8f6c\u6362\u5230\u53e6\u4e00\u79cd\u4fe1\u53f7\u4e0a\u7684\u8fc7\u7a0b\uff0c\u65e0\u7ebf\u901a\u4fe1\u4e2d\u8c03\u5236\u662f\u5c06\u8c03\u5236\u4fe1\u53f7\u7684\u4fe1\u606f\u5185\u5bb9\u53e0\u52a0\u5728\u8f7d\u6ce2\u4fe1\u53f7\uff08\u9ad8\u9891/\u5c04\u9891\u4fe1\u53f7\uff09\u4e0a\u7684\u8fc7\u7a0b\u3002 \u8c03\u5236\u4fe1\u53f7\u901a\u5e38\u662f\u4f4e\u9891\u4fe1\u53f7\uff0c\u79f0\u4e3a\u57fa\u5e26\u4fe1\u53f7\uff0c\u8f7d\u6ce2\u4fe1\u53f7\u662f\u9ad8\u9891\u4fe1\u53f7\u6216\u79f0\u4e3a\u5c04\u9891\u4fe1\u53f7\u3002 \u8c03\u5236\u53ef\u5206\u4e3a\u6a21\u62df\u8c03\u5236\u548c\u6570\u5b57\u8c03\u5236\uff0c\u6a21\u62df\u8c03\u5236\u7684\u57fa\u5e26\u8f93\u5165\u4fe1\u53f7\u662f\u6a21\u62df\u4fe1\u53f7\uff0c\u6570\u5b57\u8c03\u5236\u4fe1\u53f7\u662f\u6570\u5b57\u4fe1\u53f7\u3002 \u8c03\u5236\u7684\u4f5c\u7528 \u5f53\u57fa\u5e26\u4fe1\u53f7\u53ef\u4ee5\u76f4\u63a5\u4f20\u8f93\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u8c03\u5236\uff1f \u7b54\u6848\u662f\u57fa\u5e26\u4f20\u8f93\u6709\u8bb8\u591a\u9650\u5236\uff0c\u53ef\u4ee5\u7528\u8c03\u5236\u6765\u514b\u670d\u3002\u5c06\u4f4e\u9891\u4fe1\u53f7\u8c03\u5236\u5230\u9ad8\u9891\u8f7d\u6ce2\u4fe1\u53f7\u4e0a\uff0c\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u51e0\u65b9\u9762\uff1a \u4f20\u64ad\u66f4\u8fdc\u7684\u8ddd\u79bb \u51cf\u5c0f\u5929\u7ebf\u5c3a\u5bf8 \u9891\u7387\u8d44\u6e90\u7684\u590d\u7528 \u4f20\u64ad\u66f4\u8fdc\u7684\u8ddd\u79bb \u57fa\u5e26\u4fe1\u53f7\u7684\u9891\u7387\u8f83\u4f4e\uff0c\u4f4e\u9891\u4fe1\u53f7\u4f20\u8f93\u65f6\u80fd\u91cf\u635f\u8017\u5f88\u5927\uff0c\u4e0d\u80fd\u957f\u8ddd\u79bb\u4f20\u8f93\u3002\u8981\u5c06\u5b83\u52a0\u5230\u9ad8\u9891\u7684\u8f7d\u6ce2\u4fe1\u53f7\u4e0a\u5236\u6210\u5df2\u8c03\u4fe1\u53f7\uff0c\u4ee5\u8fdb\u884c\u8fdc\u8ddd\u79bb\u7684\u4f20\u8f93\u3002\u8c03\u5236\u8fc7\u7a0b\u589e\u52a0\u4e86\u8981\u53d1\u9001\u7684\u4fe1\u53f7\u7684\u9891\u7387\u3002\u56e0\u6b64\uff0c\u5b83\u589e\u52a0\u4e86\u4f20\u8f93\u7684\u8303\u56f4\u3002 \u51cf\u5c0f\u5929\u7ebf\u5c3a\u5bf8 \u5929\u7ebf\u5c3a\u5bf8\u4e3a\u4fe1\u53f7\u76841/10\u52301/4\uff0c\u4fe1\u53f7\u624d\u80fd\u6709\u6548\u7684\u88ab\u8f90\u5c04\u3002 \u5178\u578b\u6210\u5e74\u7537\u6027\u7684\u4eba\u58f0\u57fa\u672c\u9891\u7387\u4e3a85\u81f3180Hz\uff0c\u5178\u578b\u6210\u5e74\u5973\u6027\u5219\u4e3a165\u81f3255Hz\u3002\u4f46\u662f\uff0c\u8db3\u591f\u7684\u6cdb\u97f3\u5217\u5c06\u4f5c\u4e3a\u6d88\u5931\u7684\u57fa\u9891\u51fa\u73b0\uff0c\u4ece\u800c\u8fbe\u5230\u542c\u5230\u57fa\u672c\u97f3\u8c03\u7684\u611f\u89c9\u3002\u5728\u7535\u8bdd\u6280\u672f\u4e2d\uff0c\u53ef\u7528\u7684\u8bed\u97f3\u9891\u5e26\u8303\u56f4\u7ea6\u4e3a300Hz\u81f33400Hz\u30024KHz\u7535\u78c1\u6ce2\u4fe1\u53f7\u7684\u6ce2\u957f\u4e3a\uff1a $$ \\lambda=\\frac{C}{f}=\\frac{3\\times10^8}{4\\times10^3}=0.75\\times10^5(m) $$ \u56e0\u6b64\u5408\u9002\u7684\u5929\u7ebf\u9700\u89817500m\u957f\u7684\u5929\u7ebf\uff0c\u6bcf\u4e2a\u4eba\u62b1\u7740\u4e00\u4e2a\u8fd9\u4e48\u5927\u5929\u7ebf\u6253\u7535\u8bdd\u660e\u663e\u4e0d\u73b0\u5b9e\u3002\u73b0\u5728\u5e38\u7528\u7684\u65e0\u7ebf\u901a\u4fe1\u9891\u7387\u5728800MHz\uff5e3GHz\u4e4b\u95f4\uff0c\u5929\u7ebf\u5c3a\u5bf8\u5927\u4e8e\u4e3a10\uff5e38mm\u8fd9\u4e2a\u6570\u91cf\u7ea7\u30025G\u901a\u4fe1\u5c06\u4f1a\u5305\u542b\u51e0\u5341G\u7684\u9891\u7387\uff0c\u5929\u7ebf\u5c3a\u5bf8\u5c06\u8fdb\u4e00\u6b65\u7f29\u5c0f\uff0c\u5728\u6709\u9650\u7a7a\u95f4\u5185\u5b89\u653e\u5927\u91cf\u7a7a\u95f4\u6210\u4e3a\u53ef\u80fd\u3002 \u9891\u7387\u8d44\u6e90\u7684\u590d\u7528 \u5982\u679c\u57fa\u5e26\u58f0\u97f3\u4fe1\u53f7\u5728\u4e0d\u4f7f\u7528\u4e00\u4e2a\u4ee5\u4e0a\u53d1\u5c04\u673a\u7684\u8c03\u5236\u7684\u60c5\u51b5\u4e0b\u53d1\u9001\uff0c\u5219\u6240\u6709\u4fe1\u53f7\u5c06\u5904\u4e8e\u76f8\u540c\u7684\u9891\u7387\u8303\u56f4\uff0c\u53730\u81f320kHz\u3002\u56e0\u6b64\uff0c\u6240\u6709\u7684\u4fe1\u53f7\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u800c\u63a5\u6536\u5668\u4e0d\u80fd\u5c06\u5b83\u4eec\u5f7c\u6b64\u5206\u5f00\u3002 \u8c03\u5236\u4f5c\u7528\u7684\u5b9e\u8d28\u5c31\u662f\u4f7f\u76f8\u540c\u9891\u7387\u8303\u56f4\u7684\u4fe1\u53f7\u5206\u522b\u4f9d\u6258\u4e8e\u4e0d\u540c\u9891\u7387\u7684\u8f7d\u6ce2\u4e0a\uff0c\u63a5\u6536\u673a\u5c31\u53ef\u4ee5\u5206\u79bb\u51fa\u6240\u9700\u7684\u9891\u7387\u4fe1\u53f7\uff0c\u4e0d\u81f4\u4e92\u76f8\u5e72\u6270\u3002\u8fd9\u4e5f\u662f\u5728\u540c\u4e00\u4fe1\u9053\u4e2d\u5b9e\u73b0\u591a\u8def\u590d\u7528\u7684\u57fa\u7840\u3002 \u4ee5\u6536\u97f3\u673a\u4e3a\u4f8b\uff0c\u65e0\u7ebf\u7535\u53f0\u4e0a\u6709\u5341\u51e0\u4e2a\u9891\u9053\uff0c\u6bcf\u4e2a\u9891\u9053\u90fd\u6709\u4e00\u4e2a\u7ed9\u5b9a\u7684\u9891\u7387\uff1a100.1 MHz\uff0c102.5 MHz\u7b49...\u6bcf\u4e2a\u9891\u9053\u90fd\u6709\u4e00\u5b9a\u7684\u8303\u56f4\uff08\u901a\u5e38\u7ea6\u4e3a0.22 MHz\uff09\uff0c\u6bcf\u4e2a\u53f0\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u4f20\u8f93\u3002\u8c03\u5236\u4f7f\u5f97\u8fd9\u4e00\u5207\u6210\u4e3a\u53ef\u80fd\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u5e26\u901a\uff08\u6216\u201c\u5bbd\u5e26\u201d\uff09\u4fe1\u9053\u53d1\u9001\u8bed\u97f3\u548c\u97f3\u4e50\uff08\u8fd9\u662f\u57fa\u5e26\u4fe1\u53f7\uff09\u3002 \u8c03\u5236\u8fd8\u80fd\u5e26\u6765\u5176\u4ed6\u597d\u5904\uff0c\u5982\u63d0\u9ad8\u4fe1\u53f7\u4f20\u8f93\u8d28\u91cf\uff0c\u540c\u4e00\u4fe1\u9053\u4e0a\u4f20\u8f93\u591a\u4e2a\u4fe1\u53f7\u4e5f\u6210\u4e3a\u53ef\u80fd\uff0c\u540e\u9762\u4ecb\u7ecd\u8c03\u5236\u65b9\u5f0f\u7684\u65f6\u5019\u4f1a\u5177\u4f53\u4ecb\u7ecd\u3002 \u8c03\u5236\u6307\u6570 \u8c03\u5236\u6307\u6570\uff08modulation index\uff09\u8861\u91cf\u8c03\u5236\u6df1\u5ea6\u7684\u53c2\u6570\u3002\u4e3a\u4e86\u5177\u6709\u9002\u5f53\u7684\u5e45\u5ea6\u8c03\u5236\uff0c\u8c03\u5236\u4fe1\u53f7\u7535\u538b \\(V_m\\) \u5e94\u8be5\u5c0f\u4e8e\u8f7d\u6ce2\u7535\u538b \\(V_c\\) \u3002\u56e0\u6b64\uff0c\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u7684\u5e45\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u8fd9\u79cd\u5173\u7cfb\u4ee5\u8c03\u5236\u6307\u6570 \\(m\\) \u8868\u793a\u3002 \u5e45\u5ea6\u8c03\u5236\u7684\u8c03\u5236\u6307\u6570 \u5728\u8c03\u5e45\u4e2d\uff0c\u8f7d\u6ce2\u5e45\u5ea6\u6839\u636e\u8c03\u5236\u4fe1\u53f7\u5e45\u5ea6\u800c\u53d8\u5316\u3002\u8c03\u5236\u6307\u6570\u662f\u8c03\u5236\u4fe1\u53f7\u7535\u538b\uff08 \\(V_m\\) \uff09\u4e0e\u8f7d\u6ce2\u7535\u538b\uff08 \\(V_c\\) \uff09\u7684\u6bd4\u503c\u3002\u8c03\u5236\u6307\u6570\u65b9\u7a0b\u5982\u4e0b\u3002 \\[ m = V_m / V_c \\] \u8c03\u5236\u6307\u6570 \\(m\\) \u5e94\u8be5\u662f\u4ecb\u4e8e0\u548c1\u4e4b\u95f4\u7684\u6570\u5b57\u3002\u5f53 \\(m\\) \u5927\u4e8e1\u65f6\uff0c\u4e25\u91cd\u5931\u771f\u4f1a\u5bfc\u81f4\u8c03\u5236\u6ce2\u5f62\uff0c\u4e5f\u79f0\u4e3a\u8fc7\u8c03\u5236\u3002 \u7406\u60f3\u60c5\u51b5\u662f \\(m=1\\) ,\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u63a5\u6536\u5668\u5904\u4ea7\u751f\u66f4\u5927\u7684\u8f93\u51fa\uff0c\u800c\u6ca1\u6709\u6216\u5177\u6709\u6700\u5c0f\u7684\u5931\u771f\u3002 \u9891\u7387\u8c03\u5236\u7684\u8c03\u5236\u6307\u6570 \u5bf9\u4e8e\u9891\u7387\u8c03\u5236\uff0c\u8c03\u5236\u6307\u6570\u662f\u9891\u7387\u504f\u5dee\uff08 \\(f_d\\) \uff09\u4e0e\u8c03\u5236\u9891\u7387\uff08 \\(f_m\\) \uff09\u7684\u6bd4\u503c\u3002\u5b83\u8868\u793a\u5982\u4e0b: $$ m = f_d / f_m $$ \u5728\u8ba1\u7b97\u4e2d\uff0c \\(f_d\\) \u548c \\(f_m\\) \u90fd\u4f7f\u7528\u6700\u5927\u503c\u65f6\uff0c\u79f0\u4e3a\u504f\u5dee\u7387\u3002 \u4f8b\u5982\uff1a \u6700\u5927\u8f7d\u6ce2\u9891\u7387\u504f\u5dee \\(f_d= +/- 25\\) KHz \u6700\u5927\u8c03\u5236\u9891\u7387 \\(f_m10\\) = KHz \u8c03\u5236\u6307\u6570 \\(= 25/10 = 2.5\\) \u8c03\u5236\u7c7b\u578b \u6700\u5e38\u7528\u7684\u8f7d\u6ce2\u4fe1\u53f7\u662f\u6b63\u5f26\u6ce2, $$ f(t)= A \\sin(\\omega t + \\phi) $$ \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6b63\u5f26\u66f2\u7ebf\u67093\u4e2a\u53c2\u6570\uff0c\u5e45\u5ea6\uff0c\u9891\u7387\u548c\u76f8\u4f4d\uff0c\u6240\u67093\u4e2a\u53c2\u6570\u90fd\u53ef\u4ee5\u88ab\u6539\u53d8\u6765\u4f20\u8f93\u6570\u636e\u3002\u56e0\u6b64\u6709\u4e09\u79cd\u57fa\u672c\u7684\u8c03\u5236\u7c7b\u578b\uff1a\u5e45\u5ea6\u8c03\u5236\uff0c\u9891\u7387\u8c03\u5236\u548c\u76f8\u4f4d\u8c03\u5236\u3002 \u8c03\u5236\u4fe1\u53f7\u53ef\u4ee5\u662f\u6a21\u62df\u4fe1\u53f7\u6216\u6570\u5b57\u4fe1\u53f7\uff0c\u8c03\u5236\u4fe1\u53f7\u662f\u6a21\u62df\u4fe1\u53f7\u79f0\u4e3a\u6a21\u62df\u8c03\u5236\uff0c\u8c03\u5236\u4fe1\u53f7\u662f\u6570\u5b57\u4fe1\u53f7\u79f0\u4e3a\u6570\u5b57\u8c03\u5236\u3002 \u6a21\u62df\u8c03\u5236\u6280\u672f\u5982\u4e0b AM\uff1a\u8f7d\u6ce2\u5e45\u5ea6\u6839\u636e\u6a21\u62df\u57fa\u5e26\u4fe1\u53f7\u800c\u6539\u53d8\u3002 FM\uff1a\u8f7d\u6ce2\u9891\u7387\u6839\u636e\u6a21\u62df\u57fa\u5e26\u4fe1\u53f7\u800c\u6539\u53d8\u3002 PM\uff1a\u8f7d\u6ce2\u76f8\u4f4d\u6839\u636e\u6a21\u62df\u57fa\u5e26\u4fe1\u53f7\u800c\u6539\u53d8\u3002 \u5e94\u7528\uff1a\u5e7f\u64ad\u7535\u53f0\u548c\u7535\u89c6\u53f0\u4f7f\u7528AM\u548cFM\u8c03\u5236\u5f62\u5f0f\u3002\u6709\u4e9b\u91c7\u7528\u5355\u8fb9\u5e26\u8c03\u5236\u3002 \u51e0\u79cd\u6570\u5b57\u8c03\u5236\u6280\u672f\uff1a ASK-\u5b83\u4f7f\u7528\u6709\u9650\u6570\u91cf\u7684\u5e45\u5ea6\u3002\u5e7f\u6cdb\u7528\u4e8e\u5149\u7ea4\uff0c\u5176\u4e2d\u7528\u4e8eLED\u53d1\u5c04\u5668\u7684\u4e8c\u8fdb\u52361\u662f\u7531\u5149\u8109\u51b2\u548c\u4e8c\u8fdb\u52360\u7531\u4e8e\u6ca1\u6709\u5149\u3002\u5728\u4e00\u4e9b\u5176\u4ed6\u5e94\u7528\u4e2d\uff0c\u4e0d\u540c\u7684\u5e45\u5ea6\uff08\u5373\uff0c\u8f83\u4f4e\u548c\u8f83\u9ad8\u7684\u5e45\u5ea6\uff09\u88ab\u7528\u6765\u8868\u793a\u4e8c\u8fdb\u52361\u548c\u4e8c\u8fdb\u52360\u3002 FSK-\u5b83\u4f7f\u7528\u6709\u9650\u6570\u91cf\u7684\u9891\u7387\u3002F1\u548cF2\u7528\u6765\u8868\u793a\u4e8c\u8fdb\u52361\u548c\u4e8c\u8fdb\u52360. PSK-\u5b83\u4f7f\u7528\u6709\u9650\u4e2a\u9636\u6bb5\u3002P1\u548cP2\u7528\u4e8e\u8868\u793a\u4e8c\u8fdb\u52361\u548c\u4e8c\u8fdb\u52360. \u73b0\u5728\u4f7f\u7528\u7684\u6700\u590d\u6742\u7684\u6570\u5b57\u8c03\u5236\u6280\u672f\u662fBPSK\uff0cQPSK\u548cQAM\uff0c\u5e7f\u6cdb\u7528\u4e8e\u8702\u7a9d\u548c\u536b\u661f\u901a\u4fe1\u7684\u65e0\u7ebf\u7535\u548c\u5fae\u6ce2\u901a\u4fe1\u3002 BPSK\u4e8c\u8fdb\u5236\u76f8\u79fb\u952e\u63a7 \u65f6\u57df\u4e0a\u7684OFDM OFDM\u5373\u6b63\u4ea4\u9891\u5206\u590d\u7528\uff08Orthogonal Frequency Division Multiplexing\uff09\uff0c\u662f\u591a\u8f7d\u6ce2\u8c03\u5236\u7684\u4e00\u79cd\uff0c\u901a\u4fd7\u6765\u8bf4\u5c31\u662f\u901a\u8fc7\u591a\u6761\u4e92\u76f8\u6ca1\u6709\u5173\u7cfb\u7684\u901a\u9053\u4f20\u8f93\u4e0d\u540c\u7684\u4fe1\u606f\u3002OFDM\u73b0\u5728\u4e3b\u8981\u7528\u4e8e4G\u901a\u4fe1\u4e0a\uff0c\u5e76\u4e14\u7531\u4e8e\u5176\u9891\u5e26\u5229\u7528\u7387\u9ad8\uff0c\u6297\u591a\u5f84\u80fd\u529b\u5f3a\uff0c\u80fd\u6709\u6548\u6291\u5236ISI\uff08\u7b26\u53f7\u95f4\u5e72\u6270\uff09\u548cICI\uff08\u4fe1\u9053\u95f4\u5e72\u6270\uff09\u3002 OFDM\u7684\u9891\u5e26\u5229\u7528\u7387\u9ad8\uff0c\u6297\u591a\u5f84\u80fd\u529b\u5f3a\uff0c\u90a3\u4e48\u5bf9\u4e8eOFDM\u7684\u539f\u7406\u5e94\u8be5\u5206\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u8fdb\u884c\u8bf4\u660e\uff1a \u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027 OFDM\u4e0e\u5085\u91cc\u53f6\u53d8\u6362\u7684\u5173\u7cfb \u6297\u591a\u5f84\u3001\u6291\u5236ISI\u548cICI\u7684\u539f\u56e0\u53ca\u5faa\u73af\u524d\u7f00 \u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027 OFDM\u7684\"O\"\u4ee3\u8868\u7740\"\u6b63\u4ea4\"\uff0c\u90a3\u4e48\u5c31\u5148\u8bf4\u8bf4\u6b63\u4ea4\u5427\u3002 \u4ec0\u4e48\u662f\u6b63\u4ea4\uff1f \u4ece\u5411\u91cf\u4e0a\u6765\u770b\u5c31\u662f\u4e24\u4e2a\u4e92\u76f8\u5782\u76f4\u7684\u5411\u91cf\uff0c\u65e0\u8bba\u5176\u6a21\u957f\u662f\u591a\u5c11\uff0c\u76f8\u4e58\u603b\u662f\u7b49\u4e8e0\uff1a \\[\\vec{a}\\times\\vec{b}=0\\] \u4ece\u51fd\u6570\u4e0a\u6765\u770b\u6b63\u4ea4\u6027\u5c31\u662f\u65e0\u8bba\u4e24\u4e2a\u51fd\u6570\u7684\u5e45\u503c\u4e3a\u591a\u5c11\uff0c\u5728\u786e\u5b9a\u7684\u4e00\u4e2a\u65f6\u95f4\u5468\u671f\u5185\u76f8\u4e58\uff0c\u5176\u79ef\u5206\u603b\u662f\u7b49\u4e8e0\uff08\u4e5f\u5c31\u662f\u9762\u79ef\u76f8\u52a0\u4e3a0\uff09\u3002 \u6bd4\u5982\u6700\u7b80\u5355\u7684 \\(sin(t)\\) \u548c \\(sin(2t)\\) \u662f\u6b63\u4ea4\u7684\u3002 \u4e0b\u56fe\u5206\u5e03\u753b\u51fa\u4e86 \\(sin(t)\\) \uff0c \\(sin(2t)\\) \u548c \\(sin(t)sin(2t)\\) \u7684\u66f2\u7ebf\u3002 \\(sin(t)sin(2t)\\) \u5728 \\([0,2\\pi]\\) \u79ef\u5206\uff0c\u4e5f\u662f\u5c31\u6c42\u9634\u5f71\u90e8\u5206\u7684\u9762\u79ef\u3002\u5927\u6982\u80fd\u770b\u51fa \\(x\\) \u8f74\u4e0a\u4e0b\u4e24\u90e8\u5206 Heron\u2019s Fountain syncthing\u540c\u6b65\u672c\u5730\u548c\u670d\u52a1\u5668\u6587\u4ef6 \u5728\u4e0b\u9762\u7684\u56fe\u793a\u4e2d\uff0c\u5728[0,2\u03c0]\u7684\u65f6\u957f\u5185\uff0c\u91c7\u7528\u6700\u6613\u61c2\u7684\u5e45\u5ea6\u8c03\u5236\u65b9\u5f0f\u4f20\u9001\u4fe1\u53f7\uff1asin(t)\u4f20\u9001\u4fe1\u53f7a\uff0c\u56e0\u6b64\u53d1\u9001a\u00b7sin(t)\uff0csin(2t)\u4f20\u9001\u4fe1\u53f7b\uff0c\u56e0\u6b64\u53d1\u9001b\u00b7sin(2t)\u3002\u5176\u4e2d\uff0csin(t)\u548csin(2t)\u7684\u7528\u5904\u662f\u7528\u6765\u627f\u8f7d\u4fe1\u53f7\uff0c\u662f\u6536\u53d1\u7aef\u9884\u5148\u89c4\u5b9a\u597d\u7684\u4fe1\u606f\uff0c\u5728\u672c\u6587\u4e2d\u4e00\u5f8b\u79f0\u4e3a\u5b50\u8f7d\u6ce2\uff1b\u8c03\u5236\u5728\u5b50\u8f7d\u6ce2\u4e0a\u7684\u5e45\u5ea6\u4fe1\u53f7a\u548cb\uff0c\u624d\u662f\u9700\u8981\u53d1\u9001\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u5728\u4fe1\u9053\u4e2d\u4f20\u9001\u7684\u4fe1\u53f7\u4e3aa\u00b7sin(t)+b\u00b7sin(2t)\u3002\u5728\u63a5\u6536\u7aef\uff0c\u5206\u522b\u5bf9\u63a5\u6536\u5230\u7684\u4fe1\u53f7\u4f5c\u5173\u4e8esin(t)\u548csin(2t)\u7684\u79ef\u5206\u68c0\u6d4b\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230a\u548cb\u4e86\u3002 \u56fe\u4e00\uff1a\u53d1\u9001a\u4fe1\u53f7\u7684sin(t) \u56fe\u4e8c\uff1a\u53d1\u9001b\u4fe1\u53f7\u7684sin(2t)\u3010\u6ce8\u610f\uff1a\u5728\u533a\u95f4[0,2\u03c0]\u5185\u53d1\u9001\u4e86 \u4e24\u4e2a \u5b8c\u6574\u6ce2\u5f62\u3011 \u56fe\u4e09\uff1a\u53d1\u9001\u5728\u65e0\u7ebf\u7a7a\u95f4\u7684\u53e0\u52a0\u4fe1\u53f7a\u00b7sin(t)+b\u00b7sin(2t) \u56fe\u56db\uff1a\u63a5\u6536\u4fe1\u53f7\u4e58sin(t)\uff0c\u79ef\u5206\u89e3\u7801\u51faa\u4fe1\u53f7\u3002\u3010\u5982\u524d\u6587\u6240\u8ff0\uff0c\u4f20\u9001b\u4fe1\u53f7\u7684sin(2t)\u9879\uff0c\u5728\u79ef\u5206\u540e\u4e3a0\u3011 \u56fe\u4e94\uff1a\u63a5\u6536\u4fe1\u53f7\u4e58sin(2t)\uff0c\u79ef\u5206\u89e3\u7801\u51fab\u4fe1\u53f7\u3002\u3010\u5982\u524d\u6587\u6240\u8ff0\uff0c\u4f20\u9001a\u4fe1\u53f7\u7684sin(t)\u9879\uff0c\u5728\u79ef\u5206\u540e\u4e3a0\u3011 \u56fe\u516d\uff1a\u6d41\u7a0b\u56fe \u5230\u4e86\u8fd9\u91cc\uff0c\u4e5f\u8bb8\u4f60\u4f1a\u51fa\u73b0\u4e24\u79cd\u72b6\u6001\uff1a \u4e00\u79cd\u662f\uff1a\u554a\uff0c\u539f\u6765\u662f\u8fd9\u6837\uff0c\u6211\u61c2\u4e86\u3002 \u4e00\u79cd\u662f\uff1a\u554a\uff0c\u600e\u4e48\u4f1a\u8fd9\u6837\uff0c\u6211\u5b8c\u5168\u65e0\u6cd5\u60f3\u8c61\u3002\u8fd9\u91cc\u8981\u8bf4\u7684\u662f\uff0c\u4f60\u6839\u672c \u7528\u4e0d\u7740\u53bb\u60f3\u8c61\uff08visualize\uff09 \u3002\u6570\u5b66\u4e2d\u662f\u5982\u6b64\u5b9a\u4e49\u6b63\u4ea4\u7684\uff0c\u6570\u5b66\u8bc1\u660e\u4e86\u5b83\u4eec\u7684\u6b63\u4ea4\u6027\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u662f\u6b63\u4ea4\u7684\uff0c\u3010\u4ed6\u4eec\u5c31\u53ef\u4ee5\u4e92\u4e0d\u5e72\u6270\u7684\u627f\u8f7d\u5404\u81ea\u7684\u4fe1\u606f\u3011\u3002\u9009\u53d6sin(t)\u548csin(2t)\u4f5c\u4e3a\u4f8b\u5b50\uff0c\u6b63\u662f\u56e0\u4e3a\u5b83\u4eec\u662f\u4ecb\u4e8e\u76f4\u89c2\u548c\u62bd\u8c61\u7684\u8fc7\u6e21\u5730\u5e26\uff0c\u8d9f\u8fc7\u53bb\u5427\u3002 \u4e0a\u9762\u7684\u56fe\u793a\u867d\u7136\u7b80\u5355\uff0c\u4f46\u662f\u5374\u662f\u6240\u6709\u590d\u6742\u7684\u57fa\u7840\u3002 1.1 \u4e0b\u4e00\u6b65\uff0c\u5c06sin(t)\u548csin(2t)\u6269\u5c55\u5230\u66f4\u591a\u7684\u5b50\u8f7d\u6ce2\u5e8f\u5217{sin(2\u03c0\u00b7\u0394f\u00b7t)\uff0csin(2\u03c0\u00b7\u0394f\u00b72t)\uff0csin(2\u03c0\u00b7\u0394f\u00b73t),...,sin(2\u03c0\u00b7\u0394f\u00b7kt)} (\u4f8b\u5982k=16\uff0c256\uff0c1024\u7b49)\uff0c\u5e94\u8be5\u662f\u5f88\u597d\u7406\u89e3\u7684\u4e8b\u60c5\u3002\u5176\u4e2d\uff0c2\u03c0\u662f\u5e38\u91cf\uff1b\u0394f\u662f\u4e8b\u5148\u9009\u597d\u7684\u8f7d\u9891\u95f4\u9694\uff0c\u4e5f\u662f\u5e38\u91cf\u30021t,2t,3t,...,kt\u4fdd\u8bc1\u4e86\u6b63\u5f26\u6ce2\u5e8f\u5217\u7684\u6b63\u4ea4\u6027\u3002 1.2 \u518d\u4e0b\u4e00\u6b65\uff0c\u5c06cos(t)\u4e5f\u5f15\u5165\u3002\u5bb9\u6613\u8bc1\u660e\uff0ccos(t)\u4e0esin(t)\u662f\u6b63\u4ea4\u7684\uff0c\u4e5f\u4e0e\u6574\u4e2asin(kt)\u7684\u6b63\u4ea4\u65cf\u76f8\u6b63\u4ea4\u3002\u540c\u6837\uff0ccos(kt)\u4e5f\u4e0e\u6574\u4e2asin(kt)\u7684\u6b63\u4ea4\u65cf\u76f8\u6b63\u4ea4\u3002\u56e0\u6b64\u53d1\u5c04\u5e8f\u5217\u6269\u5c55\u5230{sin(2\u03c0\u00b7\u0394f\u00b7t),sin(2\u03c0\u00b7\u0394f\u00b72t),sin(2\u03c0\u00b7\u0394f\u00b73t),...,sin(2\u03c0\u00b7\u0394f\u00b7kt),cos(2\u03c0\u00b7\u0394f\u00b7t),cos(2\u03c0\u00b7\u0394f\u00b72t),cos(2\u03c0\u00b7\u0394f\u00b73t),...,cos(2\u03c0\u00b7\u0394f\u00b7kt)}\u4e5f\u5c31\u987a\u7406\u6210\u7ae0\u4e86\u3002 1.3 \u7ecf\u8fc7\u524d\u4e24\u6b65\u7684\u6269\u5145\uff0c\u9009\u597d\u4e862\u7ec4\u6b63\u4ea4\u5e8f\u5217sin(kt)\u548ccos(kt)\uff0c\u8fd9\u53ea\u662f\u4f20\u8f93\u7684\"\u4ecb\u8d28\"\u3002\u771f\u6b63\u8981\u4f20\u8f93\u7684\u4fe1\u606f\u8fd8\u9700\u8981\u8c03\u5236\u5728\u8fd9\u4e9b\u8f7d\u6ce2\u4e0a\uff0c\u5373sin(t),sin(2t),...,sin(kt)\u5206\u522b\u5e45\u5ea6\u8c03\u5236a1,a2,...,ak\u4fe1\u53f7,cos(t),cos(2t),...,cos(kt)\u5206\u522b\u5e45\u5ea6\u8c03\u5236b1,b2,...,bk\u4fe1\u53f7\u3002\u8fd92n\u7ec4\u4e92\u76f8\u6b63\u4ea4\u7684\u4fe1\u53f7\u540c\u65f6\u53d1\u9001\u51fa\u53bb\uff0c\u5728\u7a7a\u95f4\u4e0a\u4f1a\u53e0\u52a0\u51fa\u600e\u6837\u7684\u6ce2\u5f62\u5462\uff1f\u505a\u7b80\u5355\u7684\u52a0\u6cd5\u5982\u4e0b\uff1a f(t) = a1\u00b7sin(2\u03c0\u00b7\u0394f\u00b7t) + \u200b a2\u00b7sin(2\u03c0\u00b7\u0394f\u00b72t) + \u200b a3\u00b7sin(2\u03c0\u00b7\u0394f\u00b73t) + \u200b ... \u200b ak\u00b7sin(2\u03c0\u00b7\u0394f\u00b7kt) + \u200b b1\u00b7cos(2\u03c0\u00b7\u0394f\u00b7t) + \u200b b2\u00b7cos(2\u03c0\u00b7\u0394f\u00b72t) + \u200b b3\u00b7cos(2\u03c0\u00b7\u0394f\u00b73t) + \u200b ... \u200b bk\u00b7cos(2\u03c0\u00b7\u0394f\u00b7kt) + \u200b = \u2211ak\u00b7sin(2\u03c0\u00b7\u0394f\u00b7kt) + \u2211bk\u00b7cos(2\u03c0\u00b7\u0394f\u00b7kt) \u3010\u516c\u5f0f1-1\uff1a\u5b9e\u6570\u7684\u8868\u8fbe\u3011 \u4e3a\u4e86\u65b9\u4fbf\u8fdb\u884c\u6570\u5b66\u5904\u7406\uff0c\u4e0a\u5f0f\u6709\u590d\u6570\u8868\u8fbe\u5f62\u5f0f\u5982\u4e0b\uff1a f(t) = \u2211Fk\u00b7e(j\u00b72\u03c0\u00b7\u0394f\u00b7kt) \u3010\u516c\u5f0f1-2\uff1a\u590d\u6570\u7684\u8868\u8fbe\uff0c\u8fd9\u7f16\u8f91\u5668\u627e\u4e0d\u5230\u4e0a\u89d2\u6807...\u4e0d\u8fc7\uff0c\u4f60\u5e94\u8be5\u770b\u5f97\u61c2\u7684\u3011 \u4e0a\u9762\u7684\u516c\u5f0f\u53ef\u4ee5\u8fd9\u6837\u770b\uff1a\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u5e8f\u5217\u90fd\u5728\u53d1\u9001\u81ea\u5df1\u7684\u4fe1\u53f7\uff0c\u4e92\u76f8\u4ea4\u53e0\u5728\u7a7a\u4e2d\uff0c\u6700\u7ec8\u5728\u63a5\u6536\u7aef\u770b\u5230\u7684\u4fe1\u53f7\u5c31\u662ff(t)\u3002\u63a5\u6536\u7aef\u6536\u5230\u6742\u7cc5\u4fe1\u53f7f(t)\u540e\uff0c\u518d\u5728\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u4e0a\u5206\u522b\u4f5c\u76f8\u4e58\u540e\u79ef\u5206\u7684\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u53d6\u51fa\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u5206\u522b\u627f\u8f7d\u7684\u4fe1\u53f7\u4e86\u3002 \u7136\u540e\uff0c\u591a\u770b\u770b\u516c\u5f0f1-1\u548c\u516c\u5f0f1-2\uff01\uff01\uff01\u53d1\u73b0\u54af\uff1f\u8fd9\u5c31\u662f \u5085\u91cc\u53f6\u7ea7\u6570 \u561b\u3002\u5982\u679c\u5c06t\u79bb\u6563\u5316\uff0c\u90a3\u4e48\u5c31\u662f \u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362 \u3002\u6240\u4ee5\u624d\u6709OFDM\u4ee5FFT\u6765\u5b9e\u73b0\u7684\u6545\u4e8b\u3002\u5c06\u5728\u4e0b\u9762\u7684\u7ae0\u8282\u8fdb\u884c\u66f4\u591a\u7684\u63cf\u8ff0\u3002 \u9075\u5faa\u53e4\u8001\u7684\u4f20\u7edf\uff0cF\u8868\u793a\u9891\u57df\uff0cf\u8868\u793a\u65f6\u57df\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ece\u516c\u5f0f1-2\u4e2d\u770b\u51fa\uff0c\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u4e0a\u9762\u8c03\u5236\u7684\u5e45\u5ea6\uff0c\u5c31\u662f\u9891\u57df\u4fe1\u606f\u3002\u7c7b\u4f3c\u7684\u8bf4\u6cd5\u662f\uff1aOFDM\u4f20\u8f93\u7684\u662f\u9891\u57df\u4fe1\u53f7\u3002\u8fd9\u79cd\u8bf4\u6cd5\u6709\u4e9b\u522b\u626d\uff0c\u4f46\u662f\u5f88\u591a\u6559\u7a0b\u6216\u6587\u7ae0\u4f1a\u4f7f\u7528\u8fd9\u6837\u7684\u8bf4\u660e\u65b9\u5f0f\uff0c\u5c31\u770b\u8bfb\u8005\u5982\u4f55\u7406\u89e3\u4e86\u3002\u5982\u679c\u7eaf\u7cb9\u4ece\u516c\u5f0f\u6216\u8005\u5b50\u8f7d\u6ce2\u6765\u770b\uff0c\u8fd9\u79cd\u8bf4\u6cd5\u5176\u5b9e\u4e5f\u662f\u5f88\u76f4\u63a5\u7684\u9610\u8ff0\u4e86\u3002 \u4e0a\u97621.1-1.3\u7684\u6269\u5c55\uff0c\u53ef\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u56fe\u4e03\uff1a\u65f6\u57df\u4e0a\u7684OFDM\u7cfb\u7edf\u56fe \u3000\u30001.4 \u8fd8\u6709\u8fd9\u4e00\u6b65\u5417\uff1f\u5176\u5b9e\u662f\u6709\u7684\u3002\"\u5c0f\u767d\"\u4f60\u53ef\u4ee5\u5148\u60f3\u60f3\uff0c\u60f3\u4e0d\u5230\u7684\u8bdd\u5148\u5f80\u4e0b\u770b\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u5728\u9891\u57df\u4e2d\u8003\u91cf\uff0c\u6240\u4ee5\u6211\u5199\u5728\u540e\u9762\u4e86\u3002\u3010\u4e5f\u53ef\u53c2\u8003[1]\u3011 \u5c06\u4e0a\u8ff0\u7684\u65f6\u57df\u5206\u6790\u914d\u4e0aLTE\u7684\u5b9e\u73b0\uff0c\u6709\u5982\u4e0b\u60c5\u51b5\uff1a \u3000\u3000\u3010\u6ce81\uff1a\u672c\u6bb5\u63cf\u8ff0\u9700\u8981\u6709LTE\u7269\u7406\u5c42\u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u5982\u679c\u770b\u4e0d\u660e\u767d\uff0c\u8bf7\u6682\u65f6\u8df3\u8fc7\uff0c\u770b\u5b8c\u6574\u7bc7\u6587\u7ae0\u540e\u518d\u56de\u770b\u3011 \u3000\u3000\u3010\u6ce82\uff1aLTE\u5e76\u975e\u65f6\u57df\u7684\u5b9e\u73b0\uff0c\u4e0b\u9762\u4ec5\u4ec5\u662f\u5957\u7528LTE\u7684\u53c2\u6570\uff0c\u505a\u4e00\u4e2a\u53c2\u8003\u5206\u6790\u3011 \u5b50\u8f7d\u6ce2\u7684\u95f4\u9694\u0394f=15kHz\uff0c\u4e00\u4e2aOFDM symbol\u7684\u53d1\u9001\u65f6\u95f4\u662f66.7us\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c15kHz*66.67us=1\uff0c\u5373\u57fa\u5e26\u4e0a\u4e00\u4e2aOFDM symbol\u7684\u53d1\u9001\u65f6\u95f4\u6b63\u597d\u53d1\u9001\u4e00\u4e2a\u4e00\u6b21\u8c10\u6ce2\u7684\u5b8c\u6574\u6ce2\u5f62\u3002\u5bf9\u4e8e10M\u7684LTE\u7cfb\u7edf\uff0c\u91c7\u7528\u7684\u662f1024\u4e2a\u5b50\u8f7d\u6ce2\uff0c\u4f46\u662f\u53ea\u6709\u4e2d\u95f4600\u4e2a\uff08\u4e0d\u542b\u6700\u4e2d\u95f4\u7684\u76f4\u6d41\uff09\u5b50\u8f7d\u6ce2\u88ab\u7528\u4e8e\u4f20\u9001\u6570\u636e\u3002\u5728\u4e00\u4e2aOFDM symbol\u7684\u65f6\u95f4\u5185\uff08\u537366.67us)\uff0c\u9760\u8fd1\u4e2d\u95f4\u7684\u4e24\u4e2a\u4e00\u6b21\u8c10\u6ce2\u4f20\u8f93\u4e00\u4e2a\u5b8c\u6574\u6ce2\u5f62\uff0c\u518d\u9760\u5916\u4e00\u70b9\u7684\u4e24\u4e2a\u4e8c\u6b21\u8c10\u6ce2\u4f20\u8f93\u4e24\u4e2a\u5b8c\u6574\u6ce2\u5f62\uff0c\u4ee5\u6b64\u7c7b\u63a8\u81f3\u6700\u5916\u9762\u7684\u4e24\u4e2a300\u6b21\u8c10\u6ce2\u4f20\u8f93\u4e86300\u4e2a\u5b8c\u6574\u7684\u6ce2\u5f62\u3002\u5728\u8fd966.67us\u5185\uff0c600\u4e2a\u5b50\u8f7d\u6ce2\u4e92\u76f8\u6b63\u4ea4\uff0c\u5176\u4e0a\u5206\u522b\u627f\u8f7d\u4e86600\u4e2a\u590d\u6570\u4fe1\u53f7\u3002 \u4e0a\u9762\u7684\u8bf4\u6cd5\u6709\u70b9\u5570\u55e6\uff0c\u4e0d\u5982\u56fe\u793a\u6765\u5f97\u76f4\u89c2\u3002\u672c\u6765\u51c6\u5907\u518d\u753b\u4e00\u56fe\u7684\uff0c\u4e0d\u8fc7\u4e00\u6765\u4e0a\u9762\u5df2\u7ecf\u6709\u4e86\u7c7b\u4f3c\u7684\u56fe\uff0c\u5b9e\u662f\u5927\u540c\u5c0f\u5f02\uff1b\u4e8c\u6765\uff0c600\u4e2a\u5b50\u8f7d\u6ce2\uff0c\u4e5f\u592a\u591a\u4e86\u70b9\u3002\u3002\u3002 OK\uff0c\u8bf4\u5230\u8fd9\u91cc\uff0c\u4ece\u65f6\u57df\u4e0a\u9762\u6765\u770bOFDM\uff0c\u5176\u5b9e\u662f\u76f8\u5f53\u7b80\u6d01\u660e\u5feb\u8ba8\u4eba\u559c\u6b22\u7684\u3002\u4e0d\u8fc7\uff0c\u4e00\u4e2a\u7cfb\u7edf\u82e5\u8981\u4ece\u65f6\u57df\u4e0a\u6765\u5b9e\u73b0OFDM\uff0c\u96be\u5ea6\u592a\u5927\uff0c\u65f6\u5ef6\u548c\u9891\u504f\u90fd\u4f1a\u4e25\u91cd\u7834\u574f\u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027\uff0c\u4ece\u800c\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\u3002\u8fd9\u70b9\u5728\u5404\u79cd\u6559\u6750\u6587\u7ae0\u4e2d\u90fd\u4f1a\u6709\u63d0\u53ca\uff0c\u6211\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002 \u4e0b\u9762\u5c06\u8f6c\u5165\u9891\u57df\u6765\u63cf\u8ff0OFDM\uff0c\u7531\u4e8e\u9891\u57df\u4e0d\u751a\u76f4\u89c2\uff0c\u7684\u786e\u4f1a\u7a0d\u7a0d\u8ba9\u4eba\u8d39\u89e3\u3002\u4e0d\u8fc7\u53ea\u8981\u65f6\u523b\u60f3\u7740\u65f6\u57df\u5b50\u8f7d\u6ce2\u95f4\u7684\u53e0\u52a0\uff0c\u4e00\u5207\u90fd\u4f1a\u597d\u8d77\u6765\u3002 \u7ae0\u8282\u4e8c\uff1a\u9891\u57df\u4e0a\u7684OFDM \u7b2c\u4e00\u7ae0\u8282\u65f6\u57df\u4e0a\u7684\u8ba8\u8bba\u5f00\u59cb\u4e8eOFDM\u4e2d\u7684\"O\"\uff1b\u672c\u7ae0\u8282\u9891\u57df\u4e0a\u6211\u4eec\u4ece\"FDM\"\u5f00\u59cb\u3002 \u3000\u3000\u5148\u56fe\u4f8b\u4e00\u4e2a\u5e38\u89c4FDM\u7684\u7cfb\u7edf\u56fe\uff1a \u56fe11\uff1a\u5e38\u89c4FDM\uff0c\u4e24\u8def\u4fe1\u53f7\u9891\u8c31\u4e4b\u95f4\u6709\u95f4\u9694\uff0c\u4e92\u76f8\u4e0d\u5e72\u6270 \u3000\u3000\u4e3a\u4e86\u66f4\u597d\u7684\u5229\u7528\u7cfb\u7edf\u5e26\u5bbd\uff0c\u5b50\u8f7d\u6ce2\u7684\u95f4\u8ddd\u53ef\u4ee5\u5c3d\u91cf\u9760\u8fd1\u4e9b\u3002 \u56fe12\uff1a\u9760\u5f97\u5f88\u8fd1\u7684FDM\uff0c\u5b9e\u9645\u4e2d\u8003\u8651\u5230\u786c\u4ef6\u5b9e\u73b0\uff0c\u89e3\u8c03\u7b2c\u4e00\u8def\u4fe1\u53f7\u65f6\uff0c\u5df2\u7ecf\u5f88\u96be\u5b8c\u5168\u53bb\u9664\u7b2c\u4e8c\u8def\u4fe1\u53f7\u7684\u5f71\u54cd\u4e86\uff08\u7535\u8def\u7684\u5b9e\u73b0\u6bd5\u7adf\u4e0d\u80fd\u50cf\u526a\u5200\u88c1\u7eb8\u4e00\u6837\u5229\u843d\uff09\uff0c\u4e24\u8def\u4fe1\u53f7\u4e92\u76f8\u4e4b\u95f4\u53ef\u80fd\u5df2\u7ecf\u4ea7\u751f\u5e72\u6270\u4e86 \u3000\u3000\u8fd8\u80fd\u518d\u8fd1\u4e9b\u5417\uff1f\u53ef\u4ee5\u7684\u3002\u8fd9\u5c31\u662fOFDM\u7684\u6765\u5386\u554a\uff0c\u8fd1\u5230\u5b8c\u5168\u7b49\u540c\u4e8e\u5948\u594e\u65af\u7279\u5e26\u5bbd\uff08\u540e\u9762\u6709\u8be6\u8ff0\uff09\uff0c\u4f7f\u9891\u5e26\u7684\u5229\u7528\u7387\u8fbe\u5230\u4e86\u7406\u8bba\u4e0a\u7684\u6700\u5927\u503c\u3002 \u56fe13\uff1a\u7ee7\u7eed\u9760\u8fd1\uff0c\u95f4\u9694\u9891\u7387\u4e92\u76f8\u6b63\u4ea4\uff0c\u56e0\u6b64\u9891\u8c31\u867d\u7136\u6709\u91cd\u53e0\uff0c\u4f46\u662f\u4ecd\u7136\u662f\u6ca1\u6709\u4e92\u76f8\u5e72\u6270\u7684\u3002\u795e\u5947\u7684OFDM \u3000\u3000\u4e0a\u9762\u4e09\u4e2a\u56fe\u7684\u786e\u6709\u70b9\u5c0f\u513f\u79d1\uff0c\u4e0d\u77e5\u9053\"\u5c0f\u767d\"\u662f\u4e0d\u662f\u5df2\u7ecf\u5728\u5fc3\u91cc\u5450\u558a\uff1a\u8fd9\u8c01\u4e0d\u77e5\u9053\u5440\uff01\u4e0d\u8fc7\u6211\u5728\u8fd9\u91cc\u82b1\u65f6\u95f4\u753b\u4e86\u4e09\u5f20\u56fe\uff0c\u603b\u8fd8\u662f\u6709\u6240\u8003\u91cf\u7684\uff1a a. \u4f5c\u4e3a\u4e0a\u4e00\u4e2a\u7ae0\u8282\u548c\u672c\u7ae0\u8282\u4e4b\u95f4\u7684\u8865\u5145\u548c\u8fde\u63a5\uff0c\u8bf4\u660e\u4e00\u4e0bOFDM\u5728\u9891\u57df\u4e0a\u9762\u7684\u8868\u73b0\uff0c\u4ea6\u5373OFDM\u7684\u672c\u6e90\u6765\u5386\u3002 b. \u5f15\u5bfc\u601d\u8003\uff1a\u4fe1\u53f7\u7684\u5e26\u5bbd\u662f\u591a\u5c11\uff1f c. \u5f15\u5bfc\u601d\u8003\uff1aOFDM\u6b63\u4ea4\u9891\u8c31\u53e0\u52a0\u90e8\u5206\u5230\u5e95\u6709\u591a\u5bbd\u5462\uff1f\u7ed3\u54081.4\uff0c\u5148\u60f3\u60f3\uff0c\u518d\u5f80\u4e0b\u770b\uff0c\u4f1a\u66f4\u597d\u3002 \u518d\u6b21\u56de\u5230\u6b63\u8f68\uff0c\u8bf7\u56de\u770b\u7b2c\u4e00\u8282\u4e2d\u7684\u56fe\u4e00\u81f3\u56fe\u516d\u7b49\u65f6\u57df\u6ce2\u5f62\u56fe\uff0c\u56fe\u793a\u4e86\u5728\u65f6\u57df\u4e0a\uff0c\u6ce2\u5f62\u7684\u8c03\u5236\uff0c\u53e0\u52a0\u63a5\u6536\uff0c\u4ee5\u53ca\u6700\u7ec8\u7684\u89e3\u7801\u3002\u8ba9\u6211\u4eec\u770b\u770b\u56fe\u4e00\u81f3\u56fe\u4e09\u4e2d\u7684\u6bcf\u4e2a\u6b65\u9aa4\u5728\u9891\u57df\u4e0a\u662f\u5982\u4f55\u8868\u73b0\u7684\u3002 \u9996\u5148\u6765\u770bsin(t)\u3002\"\u5c0f\u767d\"\u5440\"\u5c0f\u767d\"\uff0c\u4f60\u4e14\u8bf4\u8bf4sin(t)\u7684\u9891\u8c31\u662f\u5565\u5440\uff1f\"\u5c0f\u767d\"\u5f31\u5f31\u7684\u8bf4\uff1a\u662f\u4e00\u4e2a\u51b2\u6fc0\u3002\u662f\u7684\uff0csin(t)\u662f\u4e2a\u5355\u4e00\u7684\u6b63\u5f26\u6ce2\uff0c\u4ee3\u8868\u7740\u5355\u4e00\u7684\u9891\u7387\uff0c\u6240\u4ee5\u5176\u9891\u8c31\u81ea\u7136\u662f\u4e00\u4e2a\u51b2\u6fc0\u3002\u4e0d\u8fc7\u5176\u5b9e\u56fe\u4e00\u4e2d\u6240\u793a\u7684sin(t)\u5e76\u4e0d\u662f\u771f\u6b63\u7684sin(t)\uff0c\u800c\u53ea\u662f\u9650\u5b9a\u5728[0,2\u03c0]\u4e4b\u5185\u7684\u4e00\u5c0f\u6bb5\u3002\u65e0\u9650\u957f\u5ea6\u7684\u4fe1\u53f7\u88ab\u9650\u5236\u5728\u4e00\u5c0f\u622a\u65f6\u95f4\u4e4b\u5185\uff0c\u3010\u5c31\u597d\u6bd4\u4ece\u4e00\u4e2a\u5b8c\u6574\u7684\u4eba\u8eab\u4e0a\u902e\u4e0b\u4e00\u6839\u5934\u53d1\uff0c\u7136\u540e\u628a\u6574\u4e2a\u4eba\u90fd\u4e22\u6389\uff0c\u4ee5\u53d1\u4ee3\u4eba\u3011\u5176\u9891\u8c31\u4e5f\u4e0d\u518d\u662f\u4e00\u4e2a\u51b2\u6fc0\u4e86\u3002 \u5bf9\u9650\u5236\u5728[0,2\u03c0]\u5185\u7684sin(t)\u4fe1\u53f7\uff0c\u76f8\u5f53\u4e8e\u65e0\u9650\u957f\u7684sin(t)\u4fe1\u53f7\u4e58\u4ee5\u4e00\u4e2a[0,2\u03c0]\u4e0a\u7684\u95e8\u4fe1\u53f7\uff08\u77e9\u5f62\u8109\u51b2\uff09\uff0c\u5176\u9891\u8c31\u4e3a\u4e24\u8005\u9891\u8c31\u7684\u5377\u79ef\u3002sin(t)\u7684\u9891\u8c31\u4e3a\u51b2\u6fc0\uff0c\u95e8\u4fe1\u53f7\u7684\u9891\u8c31\u4e3asinc\u4fe1\u53f7\uff08\u5373sin(x)/x\u4fe1\u53f7\uff09\u3002\u51b2\u6fc0\u4fe1\u53f7\u5377\u79efsinc\u4fe1\u53f7\uff0c\u76f8\u5f53\u4e8e\u5bf9sinc\u4fe1\u53f7\u7684\u642c\u79fb\u3002\u6240\u4ee5\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u53ef\u4ee5\u5f97\u51fa\u56fe\u4e00\u7684\u65f6\u57df\u6ce2\u5f62\u5176\u5bf9\u5e94\u7684\u9891\u8c31\u5982\u4e0b\uff1a \u56fe21\uff1a\u9650\u5b9a\u5728[0,2\u03c0]\u5185\u7684a\u00b7sin(t)\u4fe1\u53f7\u7684\u9891\u8c31\uff0c\u5373\u4ee5sin(t)\u4e3a\u8f7d\u6ce2\u7684\u8c03\u5236\u4fe1\u53f7\u7684\u9891\u8c31 \u3000\u3000sin(2t)\u7684\u9891\u8c31\u5206\u6790\u57fa\u672c\u76f8\u540c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u6b63\u4ea4\u533a\u95f4\u4e3a[0,2\u03c0]\uff0c\u56e0\u6b64 sin(2t)\u5728\u76f8\u540c\u7684\u65f6\u95f4\u5185\u53d1\u9001\u4e86\u4e24\u4e2a\u5b8c\u6574\u6ce2\u5f62\u3002\u76f8\u540c\u7684\u95e8\u51fd\u6570\u4fdd\u8bc1\u4e86\u4e24\u4e2a\u51fd\u6570\u7684\u9891\u8c31\u5f62\u72b6\u76f8\u540c\uff0c\u53ea\u662f\u9891\u8c31\u88ab\u642c\u79fb\u7684\u4f4d\u7f6e\u53d8\u4e86 \uff1a \u56fe22\uff1a\u9650\u5b9a\u5728[0,2\u03c0]\u5185\u7684b\u00b7sin(2t)\u4fe1\u53f7\u7684\u9891\u8c31\uff0c\u5373\u4ee5sin(2t)\u4e3a\u8f7d\u6ce2\u7684\u8c03\u5236\u4fe1\u53f7\u7684\u9891\u8c31 \u3000\u3000\u5c06sin(t)\u548csin(2t)\u6240\u4f20\u4fe1\u53f7\u7684\u9891\u8c31\u53e0\u52a0\u5728\u4e00\u8d77\uff0c\u5982\u4e0b\uff1a \u56fe23\uff1aa\u00b7sin(t)+b\u00b7sin(2t)\u4fe1\u53f7\u7684\u9891\u8c31 \u3000\u3000\u56fe23\u548c\u56fe13\uff0c\u5747\u662f\u9891\u57df\u4e0a\u4e24\u4e2a\u6b63\u4ea4\u5b50\u8f7d\u6ce2\u7684\u9891\u8c31\u56fe\u3002\u6bd4\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e86\u5417\uff1f\u4e0d\u592a\u4e00\u6837\uff01 \u662f\u7684\uff0c\u60f3\u5fc5\u4f60\u5df2\u7ecf\u60f3\u8d77\u6765\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u57fa\u5e26\u4fe1\u53f7\u5728\u4f20\u8f93\u524d\uff0c\u4e00\u822c\u4f1a\u901a\u8fc7\u8109\u51b2\u6210\u578b\u6ee4\u6ce2\u5668\u7684\u7ed3\u679c\u3002\u6bd4\u5982\u4f7f\u7528\"\u5347\u4f59\u5f26\u6eda\u964d\u6ee4\u6ce2\u5668\"\u540e\uff0c\u56fe23\u6240\u793a\u7684\u4fe1\u53f7\u5c31\u4f1a\u88ab\u4fee\u7406\u6210\u56fe13\u6240\u793a\u7684\u4fe1\u53f7\u4e86\u3002\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u7684\u9650\u5236\u5e26\u5bbd\u5916\u90e8\u7684\u4fe1\u53f7\uff0c\u5728\u4fdd\u8bc1\u672c\u8def\u4fe1\u53f7\u6ca1\u6709\u7801\u95f4\u4e32\u6270\u7684\u60c5\u51b5\u4e0b\uff0c\u65e2\u80fd\u6700\u5927\u9650\u5ea6\u7684\u5229\u7528\u5e26\u5bbd\uff0c\u53c8\u80fd\u51cf\u5c11\u5b50\u8f7d\u6ce2\u95f4\u7684\u5404\u8def\u4fe1\u53f7\u7684\u76f8\u4e92\u5e72\u6270\u3002\u8fd9\u4e5f\u662f1.4\u4e2d\u6ca1\u6709\u63d0\u53ca\u7684\uff0c\u66f4\u591a\u7684\u53ef\u53c2\u8003[1] \u8d34\u58eb\uff1a\u8109\u51b2\u6210\u578b\u6ee4\u6ce2\u5668\u4f5c\u7528\u4e8e\u9891\u57df\uff0c\u53ef\u4ee5\"\u770b\u4f5c\"\u65f6\u57df\u4e2d\u7684\u6bcf\u4e2a\u7801\u5143\u90fd\u662f\u4ee5\u7c7b\u4f3csinc\u4fe1\u53f7\u53d1\u51fa\u7684\u3002\u6ca1\u5fc5\u8981\u7ea0\u7ed3\u4e8e\u53d1\u9001\u7aef\u7801\u5143\u7684\u65f6\u57df\u6ce2\u5f62\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5728\u63a5\u6536\u7aef\u901a\u8fc7\u5408\u9002\u7684\u91c7\u6837\u5c31\u53ef\u4ee5\u65e0\u5931\u771f\u7684\u6062\u590d\u4fe1\u53f7\u5c31OK\u54af\u3002 \u8fd9\u91cc\u7528\u5230\u7684\u662f \u5948\u594e\u65af\u7279\u7b2c\u4e00\u51c6\u5219 \uff0c\u5728\u4e0b\u9762\u7684\u6846\u6846\u5185\u4f1a\u7a0d\u4f5c\u63cf\u8ff0\uff1a \u4e0a\u9762\u4e13\u95e8\u7528\u6846\u6846\u5217\u51fa\u5948\u594e\u65af\u7279\u7b2c\u4e00\u51c6\u5219\uff0c\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u76ee\u7684\u5c31\u662f\u8bf4\u660e\u4e0b\u9891\u5e26\u5229\u7528\u7387\u7684\u95ee\u9898\u3002 \u9891\u5e26\u5229\u7528\u7387\u662f\u7801\u5143\u901f\u73871/T\u548c\u5e26\u5bbdB(\u6216\u8005W)\u7684\u6bd4\u503c \u3002 \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c \u4f4e\u901a \u4fe1\u9053\u9891\u5e26\u5229\u7528\u7387\u4e3a2Baud/Hz\uff1b \u5e26\u901a \u4fe1\u9053\u9891\u5e26\u5229\u7528\u7387\u5728\u4f20\u8f93\u5b9e\u6570\u4fe1\u53f7\u65f6\u4e3a1Baud/Hz\uff0c\u4f20\u9001\u590d\u6570\u4fe1\u53f7\u65f6\u4e3a2Baud/Hz\uff08\u8d1f\u9891\u7387\u548c\u6b63\u9891\u7387\u90fd\u72ec\u7acb\u643a\u5e26\u4fe1\u53f7\uff09\u3002\u7531\u4e8e\u8ba8\u8bba\u4f4e\u901a\u4fe1\u9053\u65f6\u5f80\u5f80\u8003\u8651\u7684\u662f\u5b9e\u6570\u4fe1\u53f7\uff0c\u800c\u8ba8\u8bba\u5e26\u901a\u4fe1\u9053\u65f6\u901a\u5e38\u8003\u8651\u7684\u662f\u590d\u6570\u4fe1\u53f7\uff0c\u56e0\u6b64 \u53ef\u4ee5\u7b80\u5355\u8ba4\u4e3a\uff1a\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4fe1\u9053\u7684\u9891\u5e26\u5229\u7528\u7387\u4e3a2Baud/Hz \u3002 \u5b9e\u9645\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a\u5b9e\u9645\u5e26\u5bbdB\u8981\u5927\u4e8e\u5948\u594e\u65af\u7279\u5e26\u5bbdW\uff0c\u6240\u4ee5\u5b9e\u9645FDM\u7cfb\u7edf\u7684\u9891\u5e26\u5229\u7528\u7387\u4f1a\u4f4e\u4e8e\u7406\u60f3\u60c5\u51b5\u3002 \u3010 \u8bf4\u5230\u8fd9\u91cc\uff0c\u7ec8\u4e8e\u53ef\u4ee5\u56fe\u7a77\u5315\u89c1\u4e86 \u3011\u800cOFDM\u7684\u5b50\u8f7d\u6ce2\u95f4\u9694\u6700\u4f4e\u80fd\u8fbe\u5230\u5948\u594e\u65af\u7279\u5e26\u5bbd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff08\u5728\u4e0d\u8003\u8651\u6700\u65c1\u8fb9\u7684\u4e24\u4e2a\u5b50\u8f7d\u6ce2\u60c5\u51b5\u4e0b\uff09\uff0c OFDM\u8fbe\u5230\u4e86\u7406\u60f3\u4fe1\u9053\u7684\u9891\u5e26\u5229\u7528\u7387 \u3002 \u56fe32\uff1aOFDM\u6b63\u4ea4\u5b50\u8f7d\u6ce2\uff0c\u8f7d\u9891\u95f4\u8ddd\u4e3a\u5948\u594e\u65af\u7279\u5e26\u5bbd\uff0c\u4fdd\u8bc1\u4e86\u6700\u5927\u7684\u9891\u5e26\u5229\u7528\u7387 \u3000\u3000\u5c06\u4e0a\u8ff0\u7684\u9891\u57df\u5206\u6790\u914d\u4e0aLTE\u7684\u5b9e\u73b0\uff0c\u6709\u5982\u4e0b\u60c5\u51b5\uff1a \u3000\u3000\u3010\u6ce8\uff1a\u672c\u6bb5\u63cf\u8ff0\u9700\u8981\u6709LTE\u7269\u7406\u5c42\u7684\u57fa\u672c\u77e5\u8bc6\u3011 \u5b50\u8f7d\u6ce2\u7684\u95f4\u9694\u0394f=15kHz\uff0c\u4e00\u4e2aOFDM symbol\u7684\u53d1\u9001\u65f6\u95f4\u662f66.7us\u3002\u572810MHz\u4fe1\u9053\u4e0a\uff0c1ms\u7684\u5b50\u5e27\u5171\u4f20\u8f9314\u4e2aOFDM symbol\u3010\u4e0d\u662f15\u4e2a\uff0c\u7559\u7a7a\u7ed9CP\u4e86\u3011\uff0c\u6bcf\u4e00\u4e2aOFDM symbol\u643a\u5e26600\u4e2a\u590d\u6570\u4fe1\u606f\uff0c\u56e0\u6b64\uff1a \u3000\u30001. \u4ece\u6574\u4e2a\u7cfb\u7edf\u6765\u770b\uff0c\u6ce2\u7279\u7387\u4e3a600 14 2/1ms = 16.8MBaud\uff0c\u5360\u636e\u5e26\u5bbd10MHz\uff0c\u56e0\u6b64\u5e26\u5bbd\u5229\u7528\u7387\u4e3a16.8MBaud/10MHz = 1.68Baud/Hz\uff0c\u63a5\u8fd12Baud/Hz\u7684\u7406\u60f3\u60c5\u51b5\u3002\u3010\u6ce8\uff1a\u4e00\u662fCP\u5360\u7528\u4e86\u6bcf\u4e2aOFDM Symbol\u7ea61/15\u7684\u8d44\u6e90\uff0c\u4e8c\u662f10MHz\u7684\u9891\u5e26\u5e76\u4e0d\u662f\u6ee1\u6253\u6ee1\u7b97\u7684\u7528\u4e8e\u4f20\u8f93\u6570\u636e\uff0c\u5176\u8fb9\u754c\u9891\u5e26\u9700\u8981\u7559\u7a7a\u4ee5\u51cf\u5c11\u4e0e\u90bb\u8fd1\u4fe1\u9053\u7684\u5e72\u6270\u3011 \u3000\u30002. \u5355\u4eceOFDM\u4e00\u4e2asymbol\u6765\u770b\uff0c\u6ce2\u7279\u7387\u4e3a600 2/66.7us = 18MBaud\uff0c\u5360\u636e\u5e26\u5bbd600 15kHz=9MHz\u3010\u4e0d\u8003\u8651\u8fb9\u754c\u5b50\u8f7d\u6ce2\u5e26\u5916\u95ee\u9898\u3011\uff0c\u56e0\u6b64\u5176\u5e26\u5bbd\u5229\u7528\u7387\u4e3a18MBaud/9MHz=2Baud/Hz\uff0c\u7b26\u5408\u4e0a\u9762\u7684\u8ba8\u8bba\u3002 \u9644\uff1a5M\u5e26\u5bbd\u7684WCDMA\u7684chip rate = 3.84M/s\uff0c\u5373\u7801\u7387\u4e3a3.84M*2 = 7.68MBaud\uff0c\u5e26\u5bbd5M\uff0c\u6240\u4ee5\u5e26\u5bbd\u5229\u7528\u7387\u4e3a7.68MBaud/5MHz = 1.536Baud/Hz\uff0c\u7565\u900a\u4e8eLTE\u76841.68Baud/Hz\u3010\u6ce8\uff1aWCDMA\u7684\u8109\u51b2\u6210\u578b\u91c7\u7528\u6eda\u964d\u7cfb\u6570\u4e3a0.22\u7684\u5347\u4f59\u5f26\u6ee4\u6ce2\u5668\uff0c\u5948\u594e\u65af\u7279\u5e26\u5bbd\u4e3a3.84M\u3011 \u7ae0\u8282\u4e09\uff1a\u7528IFFT\u5b9e\u73b0OFDM \u5176\u5b9e\u524d\u4e24\u7ae0\uff0c\u6211\u5df2\u7ecf\u5c06\u81ea\u5df1\u7684\u7406\u89e3\u5c3d\u6570\u8868\u8fbe\u4e86\uff1a \u7b2c\u4e00\u8282\u662f\u4ece\u65f6\u57df\u4e0a\u6765\u8bf4\u5b50\u8f7d\u6ce2\u6b63\u4ea4\u7684\u539f\u7406\uff1b\u7b2c\u4e8c\u8282\u662f\u4ece\u9891\u57df\u4e0a\u6765\u89e3\u91ca\u5b50\u8f7d\u6ce2\u6b63\u4ea4\u540e\uff0c\u8fbe\u5230\u7406\u60f3\u9891\u5e26\u5229\u7528\u7387\u7684\u7279\u6027 \u3002\u60f3\u6765\uff0c\u867d\u7136\u524d\u4e24\u7ae0\u5199\u5f97\u8f83\u957f\u3010\u6ca1\u9884\u6599\u5230\u4f1a\u5199\u8fd9\u4e48\u957f\u7684...\u592a\u957f\u4e86\u6ca1\u4eba\u770b...\u3011\uff0c\u4f46\u662f\u5e94\u8be5\u8fd8\u662f\u5f88\u7b80\u5355\u3001\u6e05\u6670\u3001\u6613\u61c2\u7684\u3002 \u3000\u3000\u4e0d\u8fc7\"\u5c0f\u767d\"\u7684\u5361\u58f3\uff0c\u4f3c\u4e4e\u5e76\u4e0d\u5728\u4e8e\u6700\u57fa\u672c\u7684\u6b63\u4ea4\u539f\u7406\u548c\u9891\u5e26\u5229\u7528\u7387\u4e0a\uff0c\u53cd\u800c\u662fIFFT\u53d8\u6362\u4e2d\uff0c\u5145\u65a5\u7684\u5404\u79cd\u65f6\u57df\u9891\u57df\u89d2\u8272\u53d8\u6362\u8ba9\u5176\u773c\u82b1\u7f2d\u4e71\u3002 \u4e2a\u4eba\u89c9\u5f97\u8981\u7406\u89e3IFFT\u5b9e\u73b0OFDM\uff0c\u6700\u597d\u7684\u529e\u6cd5\u8fd8\u662f\u770b\u516c\u5f0f\u3002\u6bd4\u5982\u7b2c\u4e00\u7ae0\u8282\u4e2d\u7684\u516c\u5f0f1-1\u548c\u516c\u5f0f1-2\uff0c\u914d\u4e0a\u65f6\u57df\u6ce2\u5f62\u56fe\u7684\u53e0\u52a0\uff0c\u4e0d\u8981\u592a\u597d\u7406\u89e3\u54df\u3002\u5f53\u7136\uff0c\u8fd9\u91cc\u7684IFFT\u9700\u8981\u5c06\u65f6\u57df\u79bb\u6563\u5316\uff0c\u56e0\u6b64\u516c\u5f0fIFFT \u2248 IDFT --> fn = 1/N\u00b7\u2211Fk\u00b7e(j\u00b72\u03c0\u00b7k\u00b7n/N) \u3010\u516c\u5f0f3-1\uff0cn\u4e3a\u65f6\u57df\u79bb\u6563\u540e\u7684\u5e8f\u53f7\uff0cN\u4e3a\u603b\u7684IFFT\u4e2a\u6570\uff0cn\u2208[1,N]\u3011 \u5173\u4e8e\u516c\u5f0f3-1\u7684\u7406\u89e3\u65b9\u6cd5\uff0c\u53ef\u4ee5\u662f\u8fd9\u6837\u7684\u3002 \u5176\u4e2d\u4e00\u79cd\u7406\u89e3\u65b9\u5f0f \u662f\u8054\u7cfb\u7b2c\u4e00\u7ae0\u8282\u7684\u516c\u5f0f1-2\uff1a\u53ef\u4ee5\u53d1\u73b0\u516c\u5f0f3-1\u7b49\u53f7\u53f3\u4fa7\u6240\u8868\u8fbe\u7684\u7269\u7406\u610f\u4e49\u548c\u516c\u5f0f1-2\u662f\u76f8\u540c\u7684\uff0c\u5747\u4ee3\u8868\u4e86\u4e0d\u540c\u5b50\u8f7d\u6ce2e(j\u00b72\u03c0\u00b7k\u00b7n/N)\u53d1\u9001\u5404\u81ea\u7684\u4fe1\u53f7Fk\uff0c\u7136\u540e\u5728\u65f6\u57df\u4e0a\u7684\u53e0\u52a0\u5f62\u6210fn\uff0c\u53ea\u4e0d\u8fc7\u73b0\u5728\u53e0\u52a0\u51fa\u6765\u7684\u65f6\u57df\u4e0d\u662f\u8fde\u7eed\u6ce2\u5f62\uff0c\u800c\u662f\u79bb\u6563\u7684\u65f6\u5e8f\u62bd\u6837\u70b9\u3002 \u53e6\u4e00\u79cd\u66f4\u5bb9\u6613\uff0c\u66f4\u53ef\u7231\u7684\u7406\u89e3\u65b9\u5f0f\u662f \uff1a\u5728\u4e00\u4e2aOFDM symbol\u7684\u65f6\u957fT\u5185\uff0c\u7528N\u4e2a\u5b50\u8f7d\u6ce2\u5404\u81ea\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7F(k)\uff08k\u2208[1,N]\uff09\uff0c\u7b49\u6548\u4e8e\u76f4\u63a5\u5728\u65f6\u57df\u4e0a\u8fde\u7eed\u53d1\u9001fn\uff08n\u2208[1,N]\uff09N\u4e2a\u4fe1\u53f7\uff0c\u6bcf\u4e2a\u4fe1\u53f7\u53d1\u9001T/N\u7684\u65f6\u957f\u3002 \u5728IFFT\u5b9e\u73b0OFDM\u4e2d\uff0c\u53d1\u9001\u7aef\u6dfb\u52a0\u4e86IFFT\u6a21\u5757\u3001\u63a5\u6536\u7aef\u6dfb\u52a0\u4e86FFT\u6a21\u5757\u3002 IFFT\u6a21\u5757\u7684\u529f\u80fd\u76f8\u5f53\u4e8e\u8bf4\uff1a\u522b\u9ebb\u70e6\u53d1\u9001N\u4e2a\u5b50\u8f7d\u6ce2\u4fe1\u53f7\u4e86\uff0c\u6211\u76f4\u63a5\u7b97\u51fa\u4f60\u4eec\u5728\u7a7a\u4e2d\u4f1a\u53e0\u52a0\u6210\u5565\u6837\u5b50\u5427 \uff1b FFT\u6a21\u5757\u7684\u529f\u80fd\u76f8\u5f53\u4e8e\u8bf4\uff1a\u522b\u7528\u8001\u5f0f\u7684\u79ef\u5206\u65b9\u6cd5\u6765\u53bb\u9664\u5176\u4f59\u7684\u6b63\u4ea4\u5b50\u8f7d\u6ce2\u4e86\uff0c\u6211\u5e2e\u4f60\u4e00\u6b21\u628aN\u4e2a\u643a\u5e26\u4fe1\u53f7\u5168\u7b97\u51fa\u6765\u5427 \u3002\u5c31\u662f\u8fd9\u6837\uff0cIFFT\u5b9e\u73b0OFDM\u7684\u7cfb\u7edf\u7528\" \u6570\u5b66\u7684\u65b9\u6cd5 \"\uff0c\u5728\u53d1\u9001\u7aef\u8ba1\u7b97\u4fe1\u53f7\u7684\u53e0\u52a0\u6ce2\u5f62\uff0c\u5728\u63a5\u6536\u7aef\u53bb\u9664\u6b63\u4ea4\u5b50\u8f7d\u6ce2\uff0c\u4ece\u800c\u5927\u5927\u7b80\u5316\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002 \u56fe\u516b\uff1a\u7528IFFT\u5b9e\u73b0OFDM\u3002\u8bf7\u81ea\u884c\u5bf9\u6bd4\u56fe\u4e03 \u3000\u3000\u6700\u540e\u8bf4\u4e00\u53e5\uff1a\"\u5c0f\u767d\"\u4e43\"\u767d\u5bcc\u7f8e\"\u4e4b\"\u767d\"\uff0c\u975e\"\u4e00\u7a77\u4e8c\u767d\"\u4e4b\"\u767d\"\u4e5f\u3002 \u3000\u3000\u597d\u5427\uff0c\u8be5\u7ed3\u675f\u4e86\u3002\u518d\u5199\u5f97\u957f\u4e86\u66f4\u6ca1\u4eba\u770b\u4e86\u3002 \u8865\u5145\u7ae0\u8282\uff1a\u4ece\u9891\u8c31\u4e0a\u6765\u770b\u6b63\u4ea4\u6027 \u672c\u6587\u6700\u5f00\u59cb\u53d1\u8868\u65f6\u662f\u6ca1\u6709\u8fd9\u4e00\u6bb5\u7684\uff0c\u56e0\u4e3a\u539f\u6587\u5df2\u7136\u5341\u5206\u81ea\u6070\uff0c\u5df2\u5c06OFDM\u7684\u539f\u7406\u8bf4\u7684\u975e\u5e38\u6e05\u695a\u5230\u4f4d\u4e86\u3002\u7136\u800c\uff0c\u8fd9\u4e00\u6bb5\u7684\u5185\u5bb9\u5374\u662f\u522b\u7684\u6587\u7ae0\u4e2d\u8bb2\u89e3OFDM\u65f6\u7ecf\u5e38\u51fa\u73b0\u7684\u6865\u6bb5\uff0c\u56e0\u6b64\u89c9\u5f97\u8fd8\u662f\u6709\u5fc5\u8981\u8865\u5145\u9648\u8ff0\u4e00\u4e0b\u81ea\u5df1\u7684\u89c2\u70b9\u3002 \u3010\u6ce8\uff1a\u672c\u5c0f\u8282\u4e3a\u8865\u5145\u7ae0\u8282\uff0c\u4e0e\u672c\u6587\u903b\u8f91\u6ca1\u6709\u5fc5\u7136\u8054\u7cfb\uff0c\u53ef\u76f4\u63a5\u7565\u8fc7\u3002\u3011 \u4ece\u6b63\u6587\u7ae0\u8282\u4e2d\uff0c\u53ef\u4ee5\u53d1\u73b0 \u4f5c\u8005\u7684\u601d\u8def\uff1a\u4ece\u65f6\u57df\u89d2\u5ea6\u8bb2\u89e3\u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027\uff1b\u4ece\u9891\u57df\u89d2\u5ea6\u8bb2\u89e3OFDM\u7684\u9891\u5e26\u5229\u7528\u7387 \u3002\u4f5c\u8005\u89c9\u5f97\u8fd9\u662f\u6700\u5bb9\u6613\u7406\u89e3OFDM\u539f\u7406\u7684\u65b9\u5f0f\u3002\u4f46\u662f\u6559\u6750\u4e2d\u3001\u7f51\u7edc\u4e0a\uff0c\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u4e3b\u6d41\u7684\u8bb2\u89e3\u65b9\u5f0f\uff1a \u4ece\u9891\u57df\u4e0a\u201c\u76f4\u89c2\u7684\u201d\u770b\u5f85\u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027 \u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff1a \u56fe51\uff1a\u4eceOFDM\u9891\u8c31\u770b\u5f85\u6b63\u4ea4\u6027\uff08 \u672c\u56fe\u6765\u81ea\u7f51\u7edc \uff0c\u6bd4\u6211\u753b\u7684\u56fe\u597d\u4e9b\uff0c\u8fd8\u6709\u6587\u5b57\u8bf4\u660e\uff09 \u8fd9\u79cd\u89c2\u70b9\u7684\u8bf4\u6cd5\u662f\uff1a \u5728\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u7684\u62bd\u6837\u70b9\u4e0a\uff0c\u5176\u5b83\u7684\u5b50\u8f7d\u6ce2\u4fe1\u53f7\u62bd\u6837\u503c\u5747\u4e3a0 \uff08\u5373\u4e0a\u56fe\u4e2d\u7684subcarrier Nulls\u5bf9\u5e94\u67d0\u4e2a\u5b50\u8f7d\u6ce2\u7684Subcarrier Peak\uff09\u3002\u8fd9\u79cd\u8bf4\u6cd5\u5728\u56fe\u793a\u4e0a\u6709\u975e\u5e38\u9192\u76ee\u7684\u76f4\u89c2\u6548\u679c\uff0c\u6240\u4ee5\u662f\u5404\u6559\u6750\u8bb2\u4e49\u4e2d\u7684\u5e38\u5ba2\uff0c\u4f46\u662f\u81f3\u5c11\u4ece\u4f5c\u8005\u7684\u89d2\u5ea6\u6765\u770b\uff0c \u8fd9\u79cd\u8bf4\u6cd5\u5728\u6d89\u53ca\u5230\u540e\u9762\u7684\u89e3\u8c03\u4fe1\u53f7\u65f6\uff0c\u5c06\u53d8\u5f97\u975e\u5e38\u96be\u4ee5\u7406\u89e3\u548c\u8bf4\u660e \u3002\u6240\u4ee5\u672c\u6587\u6700\u5f00\u59cb\u7684\u7248\u672c\u4e2d\u662f\u6ca1\u6253\u7b97\u5199\u672c\u5c0f\u8282\u7684\u3002 \u5982\u679c\u4f60\u770b\u5230\u8fd9\u91cc\uff0c\u89c9\u5f97\u8fd9\u79cd\u8bf4\u6cd5\u6b63\u4e2d\u4e0b\u6000\uff0c\u90a3\u4e48\u606d\u559c\u4f60\u3002 \u5982\u679c\u4f60\u770b\u5230\u8fd9\u91cc\uff0c\u89c9\u5f97\u8fd9\u79cd\u8bf4\u6cd5\u5df2\u7ecf\u8ba9\u4f60\u7684\u8111\u888b\u6210\u4e86\u6d46\u7cca\uff0c\u90a3\u4e48\u53ef\u4ee5\u56de\u987e\u7b2c\u4e00\u7ae0\u8282\uff1a\u65f6\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\uff0c\u7136\u540e\u7ee7\u7eed\u9605\u8bfb\u4e0b\u9762\u90e8\u5206\u4ee5\u89e3\u6bd2\u3002 \u65f6\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u548c\u9891\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\u8be5\u5982\u4f55\u8054\u7cfb\u8d77\u6765\u5462\uff1f\u56de\u987e\u524d\u9762\u63d0\u5230sin(t)\u548csin(2t)\u662f\u6b63\u4ea4\u7684\u3010\u8bc1\u660e\uff1asin(t)\u00b7sin(2t)\u5728\u533a\u95f4[0,2\u03c0]\u4e0a\u7684\u79ef\u5206\u4e3a0\u3011\uff0c\u63a8\u5e7f\u5230\u66f4\u4e00\u822c\u7684\u60c5\u51b5\u662f\uff1a{sin(2\u03c0\u00b7\u0394f\u00b7t)\uff0csin(2\u03c0\u00b7\u0394f\u00b72t)\uff0csin(2\u03c0\u00b7\u0394f\u00b73t),...,sin(2\u03c0\u00b7\u0394f\u00b7kt)}\u5728\u533a\u95f4[0, 1/\u0394f]\u4e0a\u6b63\u4ea4\uff08\u6ce8\uff1a\u6559\u6750\u4e0a\u4e00\u822c\u5199\u4e3au(t)\u5728[-T/2,T/2]\u533a\u95f4\u4e0a\u600e\u4e48\u600e\u4e48\u7740\uff0c\u672c\u6587\u5c31\u7528\u4e0d\u7740\u90a3\u4e48\u5b66\u672f\u4e86\uff09\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5173\u952e\u7684\u53c2\u6570\u0394f\uff1a\u5b83\u65e2\u662f\u9891\u57df\u4e0a\u5b50\u8f7d\u6ce2\u7684\u95f4\u8ddd\uff0c\u53c8\u786e\u5b9a\u4e86\u65f6\u57df\u4e0a\u7684\u4fe1\u53f7\u4f20\u8f93\u65f6\u95f4\u3002\u56de\u987e\u65f6\u57df\u9891\u57df\u8f6c\u6362\u56fe\uff1a \u56fe52\uff1a\u540c\u524d\u9762\u7684\u56fe21\uff0c\u65f6\u57df\u6ce2\u5f62\u548c\u9891\u57df\u7684\u8f6c\u6362 \u8054\u7cfb\u4e0a\u56fe\u7684\u65f6\u9891\u8f6c\u6362\uff0c\u53ef\u4ee5\u53d1\u73b0 \u0394f\u65e2\u786e\u5b9a\u4e86\u5b50\u8f7d\u6ce2\u672c\u8eab(\u5373\u4e0a\u56fe\u4e2d\u7b2c\u4e00\u6392\u7684\u4e24\u4e2a\u56fe)\uff0c\u53c8\u786e\u5b9a\u4e86\u5f85\u53d1\u4fe1\u53f7\u7684\u4f20\u8f93\u65f6\u95f4(\u5373\u4e0a\u56fe\u4e2d\u7b2c\u4e8c\u6392\u7684\u4e24\u4e2a\u56fe\u4e2d\u4fe1\u53f7\u7684\u5bbd\u5ea6)\uff0c\u4ece\u800c\u51b3\u5b9a\u4e86\u4fe1\u53f7\u9891\u8c31\u7684\u4e3b\u74e3\u5bbd\u5ea6\u4ee5\u53ca\u65c1\u74e3\u4e3a0\u7684\u4f4d\u7f6e \u3002\u8fd9\u4e5f\u610f\u5473\u7740\uff0cOFDM\u7cfb\u7edf\u4e2d\u4e00\u65e6\u9009\u5b9a\u4e86\u5b50\u8f7d\u6ce2\u95f4\u9694\uff0c\u65f6\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u4ee5\u53ca\u9891\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u4e5f\u5c31\u987a\u7406\u6210\u7ae0\u7684\u8054\u7cfb\u8d77\u6765\u4e86\u3002\u5982\u4e0b\u56fe\uff1a \u56fe53\uff1a\u540c\u524d\u9762\u7684\u56fe23\uff0c\u4e24\u8def\u4fe1\u53f7\u7684\u95f4\u9694\u0394f\uff0c\u4fdd\u8bc1\u4e86\u65f6\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u3001\u786e\u5b9a\u4e86\u9891\u57df\u4e0a\u7684\u65c1\u74e30\u70b9\u4f4d\u7f6e \u5176\u5b9e\u5bf9\u672c\u4f5c\u8005\u800c\u8a00\uff0c\u4ece\u9891\u8c31\u4e0a\u6765\u770b\u5f85OFDM\u7684\u6b63\u4ea4\u6027\u6709\u70b9\u98a0\u5012\u56e0\u679c\u7684\u5acc\u7591\u3002\u6309\u6211\u7684\u7406\u89e3\uff1aOFDM\u9009\u7528\u7684\u6b63\u4ea4\u5b50\u8f7d\u6ce2\u662f\u56e0\uff0c\u9891\u8c31\u4e2d\u51fa\u73b0\u201c\u5176\u4f59\u5b50\u8f7d\u6ce2\u643a\u5e26\u4fe1\u53f7\u7684\u65c1\u74e30\u70b9\u5904\u4e8e\u5f53\u524d\u5b50\u8f7d\u6ce2\u643a\u5e26\u4fe1\u53f7\u4e3b\u74e3\u5cf0\u503c\u5904\u201d\u7684 \u73b0\u8c61 \u662f\u679c\u3002\u4ee5\u679c\u63a8\u56e0\uff0c\u8c2c\u77e3\u3002 \u7ee7\u7eed\u8bf4\u660e\uff1a\u5173\u4e8e\u7269\u7406\u5c42\u7684\u4fe1\u53f7 \u56de\u590d\u7559\u8a00\u65f6\u4e00\u76f4\u51fa\u9519\uff0c\u5e78\u597d\u4fdd\u5b58\u4e86\uff0c\u5c31\u76f4\u63a5\u5199\u5728\u8fd9\u91cc\u4e86\u3002 \u8981\u5f04\u6e05\u695a\u4fe1\u53f7\u7684\u542b\u4e49\uff0c\u53ef\u4ee5\u5c06\u6574\u4e2a\u7269\u7406\u5c42\u4fe1\u53f7\u4f20\u8f93\u7684\u8fc7\u7a0b\u7ed9\u5206\u89e3\u5f00\u6765\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u4e0d\u540c\u7684\u6b65\u9aa4\u5bf9\u4fe1\u53f7\u7684\u5904\u7406\u662f\u4e0d\u540c\u7684\u3002 \u4fe1\u6e90\u7f16\u7801 \u7740\u91cd\u4e8e\u5bf9\u4fe1\u53f7\u7684\u5bb9\u91cf\u8fdb\u884c\u538b\u7f29\uff0c\u63d0\u9ad8\u4f20\u8f93\u6548\u7387\uff08\u6bd4\u7279\u6d41\uff09\uff1b \u4fe1\u9053\u7f16\u7801 \u9488\u5bf9\u591a\u53d8\u7684\u4fe1\u9053\u63d2\u5165\u5197\u4f59\u4fe1\u606f\uff0c\u589e\u52a0\u4f20\u8f93\u7684\u7a33\u5b9a\u6027\uff08\u6bd4\u7279\u6d41\uff09\uff1b \u4fe1\u53f7\u8c03\u5236 \u5219\u662f\u5c06\u6bd4\u7279\u6d41\u8f6c\u6210\u4e86\u7279\u5b9a\u7684\u6ce2\u5f62\u8fdb\u884c\u4f20\u8f93\uff0c\u6839\u636e\u8c03\u5236\u65b9\u5f0f\u7684\u4e0d\u540c\uff0c\u5373\u53ef\u80fd\u662f\u4e00\u4e2a\u6bd4\u7279\u5bf9\u5e94\u4e00\u4e2a\u6ce2\u5f62\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6570\u4e2a\u6bd4\u7279\u5bf9\u5e94\u4e00\u4e2a\u6ce2\u5f62\uff08\u9ad8\u9636\u8c03\u5236\uff09\u3002\u6240\u4ee5\u6709\u4e2a\u95ee\u9898\u8bf4\u4e0d\u77e5\u90530\u5bf9\u5e94\u4ec0\u4e48\u6ce2\u5f62\uff0c1\u5bf9\u5e94\u4ec0\u4e48\u6ce2\u5f62\uff0c\u662f\u56e0\u4e3a\u6ca1\u5f04\u6e05\u8c03\u5236\u8fc7\u7a0b\u3002 \u5728\u91c7\u7528\u6bd4\u5982QAM64\u8c03\u5236\u540e\uff0c\u51fa\u6765\u7684symbol\u5c31\u662f\u590d\u6570\u4e86 \uff0c\u8fd9\u4e5f\u662f\u590d\u6570\u4fe1\u53f7\u7684\u6765\u5386\u3002\u4e00\u822c\u7684\u6587\u7ae0\u4f1a\u5c06\u4e00\u4e2asymbol\u770b\u4f5c\u4e00\u4e2a\u8f93\u5165\u6765\u770b\u5f85\u548c\u8ba8\u8bba\u4e0b\u9762\u7684\u6b65\u9aa4\uff0c\u800c\u6211\u8fd9\u7bc7\u6587\u7ae0\u56e0\u4e3a\u662f\u4ecesin\u548ccos\u5165\u624b\u6765\u8ba8\u8bba\u6b63\u4ea4\u6027\u7684\uff0c\u56e0\u6b64\u6211\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u5c06\u4e00\u4e2asymbol\u770b\u6210\u4e86\u4e24\u4e2a\u5b9e\u6570\uff0c\u6545\u800c\u5728\u8ba8\u8bba\u4fe1\u9053\u5229\u7528\u7387\u65f6\u548c\u4e3b\u6d41\u201c\u7ed3\u8bba\u201d\u6709\u70b9\u51fa\u5165\uff0c\u4f46\u5176\u5b9e\u662f\u5404\u81ea\u7684\u5047\u8bbe\u4e0d\u540c\u800c\u5df2\u3002 \u5728\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\uff0cQAM symbol \u8fdb\u884c\u4e86\u9488\u5bf9\u5929\u7ebf\u9635\u5217\u7684precoding\u548c\u8d44\u6e90\u5206\u914d\u7684mapping\u540e\uff0c\u5c31\u4f1a\u8fdb\u5165OFDM\u8c03\u5236\u4e86\uff08\u5c31\u662f\u4e0a\u9762\u56fe\u516b\u7684\u4e00\u7ad9\u5f0fIFFT\u8ba1\u7b97\uff09 \u7ee7\u7eed\u8865\u5145\uff1a\u5173\u4e8e\u8d1f\u9891\u7387 \u7559\u8a00\u4e2d\u4e0d\u5c11\u5173\u4e8e \u8d1f\u9891\u7387 \u7684\u7591\u95ee\uff0c\u5df2\u53e6\u4f5c\u4e00\u6587\u4e8e\u6b64\uff1a \u300a\u5173\u4e8e\u8d1f\u9891\u7387\u7684\u7269\u7406\u610f\u4e49\u300b ( http://www.jianshu.com/p/5872553401f9 ) \u53c2\u8003[1]: Wireless Communications, Andrea Goldsmith - 12.2 Multicarrier Modulation with Overlapping Subchannels \u53c2\u8003[2]: Principles of Digital Communication - Gallager - 6.4.1 Double-sideband amplitude modulation \u5173\u4e8eOFDM \u8c03\u5236 N \u5e74\u524d\u5728\u5927\u5b66\u8bfe\u5802\u4e0a\u5b66\u7684\u4e1c\u897f\u4eca\u5929\u4e00\u6b21\u673a\u4f1a\u53c8\u8981\u62ff\u51fa\u6765\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u4e86\u3002 OFDM \u5dee\u4e0d\u591a\u662f\u6211\u4e86\u89e3\u5230\u7684\u6700\u590d\u6742\u7684\u8c03\u5236\u65b9\u6cd5\u4e86\uff08\u636e\u8bf4CDMA \u66f4\u590d\u6742\uff09 \u5148\u8bf4\u4e00\u4e0b\u5085\u7acb\u53f6\u53d8\u6362\uff0c\u6211\u53ea\u80fd\u7528\u4e00\u53e5\u4e66\u5230\u7528\u65f6\u65b9\u6068\u5c11\u6765\u5f62\u5bb9\uff0c\u5f53\u5e74\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u662f\u4e00\u7247\u6d6e\u4e91\uff08\u770b\u4e0d\u61c2\u7684\u79ef\u5206\u8fd0\u7b97\uff09\uff0c\u8c01\u77e5\u4ed6\u662f\u795e\u5668\uff0c\u57fa\u672c\u4f60\u80fd\u60f3\u5230\u7684\u81ea\u7136\u5b66\u79d1\u4e2d\u90fd\u80fd\u770b\u5230\u4ed6\u7684\u8fd0\u7528\u3002 \u5085\u91cc\u53f6\u53d8\u6362\uff08Transform\u00e9e de Fourier\uff09\u5728\u7269\u7406\u5b66\u3001\u6570\u8bba\u3001\u7ec4\u5408\u6570\u5b66\u3001\u4fe1\u53f7\u5904\u7406\u3001\u6982\u7387\u8bba\u3001\u7edf\u8ba1\u5b66\u3001\u5bc6\u7801\u5b66\u3001\u58f0\u5b66\u3001\u5149\u5b66\u3001\u6d77\u6d0b\u5b66\u3001\u7ed3\u6784\u52a8\u529b\u5b66\u7b49\u9886\u57df\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u5085\u91cc\u53f6\u53d8\u6362\u80fd\u5c06\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u67d0\u4e2a\u51fd\u6570\u8868\u793a\u6210\u4e09\u89d2\u51fd\u6570\uff08\u6b63\u5f26\u548c/\u6216\u4f59\u5f26\u51fd\u6570\uff09\u6216\u8005\u5b83\u4eec\u7684\u79ef\u5206\u7684\u7ebf\u6027\u7ec4\u5408\u3002\u5728\u4e0d\u540c\u7684\u7814\u7a76\u9886\u57df\uff0c\u5085\u91cc\u53f6\u53d8\u6362\u5177\u6709\u591a\u79cd\u4e0d\u540c\u7684\u53d8\u4f53\u5f62\u5f0f\uff0c\u5982\u8fde\u7eed\u5085\u91cc\u53f6\u53d8\u6362\u548c\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\u3002 \u5085\u91cc\u53f6\u53d8\u6362\u662f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u4e00\u79cd\u5de5\u5177\uff0c\u4e00\u79cd\u770b\u5f85\u95ee\u9898\u7684\u89d2\u5ea6\u3002\u7406\u89e3\u7684\u5173\u952e\u662f\uff1a\u4e00\u4e2a\u8fde\u7eed\u7684\u4fe1\u53f7\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u4e2a\u5c0f\u4fe1\u53f7\u7684\u53e0\u52a0\uff0c\u4ece\u65f6\u57df\u53e0\u52a0\u4e0e\u4ece\u9891\u57df\u53e0\u52a0\u90fd\u53ef\u4ee5\u7ec4\u6210\u539f\u6765\u7684\u4fe1\u53f7\uff0c\u5c06\u4fe1\u53f7\u8fd9\u4e48\u5206\u89e3\u540e\u6709\u52a9\u4e8e\u5904\u7406\u3002 \u6211\u4eec\u539f\u6765\u5bf9\u4e00\u4e2a\u4fe1\u53f7\u5176\u5b9e\u662f\u4ece\u65f6\u95f4\u7684\u89d2\u5ea6\u53bb\u7406\u89e3\u7684\uff0c\u4e0d\u77e5\u4e0d\u89c9\u4e2d\uff0c\u5176\u5b9e\u662f\u6309\u7167\u65f6\u95f4\u628a\u4fe1\u53f7\u8fdb\u884c\u5206\u5272\uff0c\u6bcf\u4e00\u90e8\u5206\u53ea\u662f\u4e00\u4e2a\u65f6\u95f4\u70b9\u5bf9\u5e94\u4e00\u4e2a\u4fe1\u53f7\u503c\uff0c\u4e00\u4e2a\u4fe1\u53f7\u662f\u4e00\u7ec4\u8fd9\u6837\u7684\u5206\u91cf\u7684\u53e0\u52a0\u3002\u5085\u91cc\u53f6\u53d8\u6362\u540e\uff0c\u5176\u5b9e\u8fd8\u662f\u4e2a\u53e0\u52a0\u95ee\u9898\uff0c\u53ea\u4e0d\u8fc7\u662f\u4ece\u9891\u7387\u7684\u89d2\u5ea6\u53bb\u53e0\u52a0\uff0c\u53ea\u4e0d\u8fc7\u6bcf\u4e2a\u5c0f\u4fe1\u53f7\u662f\u4e00\u4e2a\u65f6\u95f4\u57df\u4e0a\u8986\u76d6\u6574\u4e2a\u533a\u95f4\u7684\u4fe1\u53f7\uff0c\u4f46\u4ed6\u786e\u6709\u56fa\u5b9a\u7684\u5468\u671f\uff0c\u6216\u8005\u8bf4\uff0c\u7ed9\u4e86\u4e00\u4e2a\u5468\u671f\uff0c\u6211\u4eec\u5c31\u80fd\u753b\u51fa\u4e00\u4e2a\u6574\u4e2a\u533a\u95f4\u4e0a\u7684\u5206\u4fe1\u53f7\uff0c\u90a3\u4e48\u7ed9\u5b9a\u4e00\u7ec4\u5468\u671f\u503c\uff08\u6216\u9891\u7387\u503c\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u753b\u51fa\u5176\u5bf9\u5e94\u7684\u66f2\u7ebf\uff0c\u5c31\u50cf\u7ed9\u51fa\u65f6\u57df\u4e0a\u6bcf\u4e00\u70b9\u7684\u4fe1\u53f7\u503c\u4e00\u6837\uff0c\u4e0d\u8fc7\u5982\u679c\u4fe1\u53f7\u662f\u5468\u671f\u7684\u8bdd \uff0c\u9891\u57df\u7684\u66f4\u7b80\u5355\uff0c\u53ea\u9700\u8981\u51e0\u4e2a\u751a\u81f3\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u57df\u5219\u9700\u8981\u6574\u4e2a\u65f6\u95f4\u8f74\u4e0a\u6bcf\u4e00\u70b9\u90fd\u6620\u5c04\u51fa\u4e00\u4e2a\u51fd\u6570\u503c\u3002 \u5085\u91cc\u53f6\u53d8\u6362\u5c31\u662f\u5c06\u4e00\u4e2a\u4fe1\u53f7\u7684\u65f6\u57df\u8868\u793a\u5f62\u5f0f\u6620\u5c04\u5230\u4e00\u4e2a\u9891\u57df\u8868\u793a\u5f62\u5f0f\uff1b\u9006\u5085\u91cc\u53f6\u53d8\u6362\u6070\u597d\u76f8\u53cd\u3002\u8fd9\u90fd\u662f\u4e00\u4e2a\u4fe1\u53f7\u7684\u4e0d\u540c\u8868\u793a\u5f62\u5f0f\u3002\u5b83\u7684\u516c\u5f0f\u4f1a\u7528\u5c31\u53ef\u4ee5\uff0c\u5f53\u7136\u628a\u8bc1\u660e\u770b\u61c2\u4e86\u66f4\u597d\u3002 \u5bf9\u4e00\u4e2a\u4fe1\u53f7\u505a\u5085\u7acb\u53f6\u53d8\u6362\uff0c\u53ef\u4ee5\u5f97\u5230\u5176\u9891\u57df\u7279\u6027\uff0c\u5305\u62ec\u5e45\u5ea6\u548c\u76f8\u4f4d\u4e24\u4e2a\u65b9\u9762\u3002\u5e45\u5ea6\u662f\u8868\u793a\u8fd9\u4e2a\u9891\u7387\u5206\u91cf\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u76f8\u4f4d\u5462\uff0c\u5b83\u6709\u4ec0\u4e48\u7269\u7406\u610f\u4e49\uff1f\u9891\u57df\u7684\u76f8\u4f4d\u4e0e\u65f6\u57df\u7684\u76f8\u4f4d\u6709\u5173\u7cfb\u5417\uff1f\u4fe1\u53f7\u524d\u4e00\u6bb5\u7684\u76f8\u4f4d\uff08\u9891\u57df\uff09\u4e0e\u540e\u4e00\u6bb5\u7684\u76f8\u4f4d\u7684\u53d8\u5316\u662f\u5426\u4e0e\u4fe1\u53f7\u7684\u9891\u7387\u6210\u6b63\u6bd4\u5173\u7cfb\u3002 \u5085\u7acb\u53f6\u53d8\u6362\u5c31\u662f\u628a\u4e00\u4e2a\u4fe1\u53f7\uff0c\u5206\u89e3\u6210\u65e0\u6570\u7684\u6b63\u5f26\u6ce2\uff08\u6216\u8005\u4f59\u5f26\u6ce2\uff09\u4fe1\u53f7\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7528\u65e0\u6570\u7684\u6b63\u5f26\u6ce2\uff0c\u53ef\u4ee5\u5408\u6210\u4efb\u4f55\u4f60\u6240\u9700\u8981\u7684\u4fe1\u53f7\u3002 \u60f3\u4e00\u60f3\u8fd9\u4e2a\u95ee\u9898\uff1a\u7ed9\u4f60\u5f88\u591a\u6b63\u5f26\u4fe1\u53f7\uff0c\u4f60\u600e\u6837\u624d\u80fd\u5408\u6210\u4f60\u9700\u8981\u7684\u4fe1\u53f7\u5462\uff1f\u7b54\u6848\u662f\u8981\u4e24\u4e2a\u6761\u4ef6\uff0c\u4e00\u4e2a\u662f\u6bcf\u4e2a\u6b63\u5f26\u6ce2\u7684\u5e45\u5ea6\uff0c\u53e6\u4e00\u4e2a\u5c31\u662f\u6bcf\u4e2a\u6b63\u5f26\u6ce2\u4e4b\u95f4\u7684\u76f8\u4f4d\u5dee\u3002\u6240\u4ee5\u73b0\u5728\u5e94\u8be5\u660e\u767d\u4e86\u5427\uff0c\u9891\u57df\u4e0a\u7684\u76f8\u4f4d\uff0c\u5c31\u662f\u6bcf\u4e2a\u6b63\u5f26\u6ce2\u4e4b\u95f4\u7684\u76f8\u4f4d\u3002 \u5085\u7acb\u53f6\u53d8\u6362\u7528\u4e8e\u4fe1\u53f7\u7684\u9891\u7387\u57df\u5206\u6790\uff0c\u4e00\u822c\u6211\u4eec\u628a\u7535\u4fe1\u53f7\u63cf\u8ff0\u6210\u65f6\u95f4\u57df\u7684\u6570\u5b66\u6a21\u578b\uff0c\u800c\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5bf9\u4fe1\u53f7\u7684\u9891\u7387\u7279\u6027\u66f4\u611f\u5174\u8da3\uff0c\u800c\u901a\u8fc7\u5085\u7acb\u53f6\u53d8\u6362\u5f88\u5bb9\u6613\u5f97\u5230\u4fe1\u53f7\u7684\u9891\u7387\u57df\u7279\u6027 \u5085\u91cc\u53f6\u53d8\u6362\u7b80\u5355\u901a\u4fd7\u7406\u89e3\u5c31\u662f\u628a\u770b\u4f3c\u6742\u4e71\u65e0\u7ae0\u7684\u4fe1\u53f7\u8003\u8651\u6210\u7531\u4e00\u5b9a\u632f\u5e45\u3001\u76f8\u4f4d\u3001\u9891\u7387\u7684\u57fa\u672c\u6b63\u5f26\uff08\u4f59\u5f26\uff09\u4fe1\u53f7\u7ec4\u5408\u800c\u6210\uff0c\u5085\u91cc\u53f6\u53d8\u6362\u7684\u76ee\u7684\u5c31\u662f\u627e\u51fa\u8fd9\u4e9b\u57fa\u672c\u6b63\u5f26\uff08\u4f59\u5f26\uff09\u4fe1\u53f7\u4e2d\u632f\u5e45\u8f83\u5927\uff08\u80fd\u91cf\u8f83\u9ad8\uff09\u4fe1\u53f7\u5bf9\u5e94\u7684\u9891\u7387\uff0c\u4ece\u800c\u627e\u51fa\u6742\u4e71\u65e0\u7ae0\u7684\u4fe1\u53f7\u4e2d\u7684\u4e3b\u8981\u632f\u52a8\u9891\u7387\u7279\u70b9\u3002\u5982\u51cf\u901f\u673a\u6545\u969c\u65f6\uff0c\u901a\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u505a\u9891\u8c31\u5206\u6790\uff0c\u6839\u636e\u5404\u7ea7\u9f7f\u8f6e\u8f6c\u901f\u3001\u9f7f\u6570\u4e0e\u6742\u97f3\u9891\u8c31\u4e2d\u632f\u5e45\u5927\u7684\u5bf9\u6bd4\uff0c\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u54ea\u7ea7\u9f7f\u8f6e\u635f\u4f24\u3002 \u7136\u540e\u518d\u770b\u770b\u4ec0\u4e48\u53eb\u6b63\u4ea4\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u6b63\u4ea4\u662f\u6307\u7684\u9891\u57df\u66f2\u7ebf\u7684\u6b63\u4ea4\uff0c\u8981\u548cQAM\u8c03\u5236\u4e2d\u7684\u6b63\u4ea4\u533a\u5206\u54e6\uff09\uff0c\u56fea \u4e2d\u4e00\u5171\u67095\u4e2a\u9891\u7387\u7684\u6b63\u5f26\u6ce2\uff0c\u4ece\u7eff\u8272\u5230\u84dd\u8272\u5468\u671f\u5206\u522b\u662f1\uff0c2\uff0c3\uff0c4\uff0c5\u3002\u6ce8\u610f\u5230\u76f8\u90bb\u4e24\u4e2a\u9891\u7387\u7684\u6ce2\u76f8\u5dee\u4e00\u4e2a\u5468\u671f\u3002\u8fd9\u6837\u7684\u4e00\u4e9b\u6ce2\u5206\u522b\u8fdb\u884c\u5085\u7acb\u53f6\u53d8\u6362\uff08\u5373\u65f6\u57df\u53d8\u9891\u57df\uff09\u5c31\u53ef\u4ee5\u5f97\u5230\u56feb\u3002\u6ce8\u610f\u52305\u4e2a\u9891\u7387\u7684\u6ce2\u90fd\u5404\u81ea\u6709\u4e00\u4e2a\u5cf0\u503c\uff0c\u800c\u5404\u81ea\u7684\u5cf0\u503c\u76f8\u5bf9\u4e8e\u53e6\u5916\u51e0\u4e2a\u9891\u7387\u7684\u6ce2\u5728\u6b64\u9891\u7387\u7684\u5206\u91cf\u90fd\u4e3a0\uff01\uff01 \u8fd9\u5c31\u662f\u6240\u8c13\u7684\u6b63\u4ea4\uff0c\u7528\u79ef\u5206\u8868\u8fbe\u5c31\u662f\uff1a \u8bf4\u5b8c\u6b63\u4ea4\u548c\u5085\u91cc\u53f6\u53d8\u6362 \uff0c\u518d\u6765\u770b\u770bODFM\u7cfb\u7edf\u7684\u5de5\u4f5c\u8fc7\u7a0b\u3002 1.\u5c06\u4fe1\u6e90\u8fdb\u884c\u5206\u7ec4\uff08\u4e32\u5e76\u8f6c\u6362\uff09\u5e76\u9001\u5165QAM \u8fdb\u884c\u661f\u5ea7\u56fe\u6620\u5c04\uff0c\u8fdb\u884cDA\u83b7\u5f97\u57fa\u5e26\u4fe1\u53f7\u3002 2.\u5c06\u7b2c\u4e00\u6b65\u5df2\u7ecf\u6620\u5c04\u8fc7\u7684\u4fe1\u6e90\u7801\u5206\u7ec4\u4f20\u5165IFFT\u8c03\u5236\uff08\u9700\u8981\u7b49\u5f85\u53e6\u5916\u51e0\u4e2a\u4fe1\u6e90\u7801\u5206\u7ec4\u5230\u8fbe\uff09\uff0c\u83b7\u5f97\u5e76\u884c\u7684\u51e0\u7ec4\u65f6\u57df\u4fe1\u53f7\u3002\u5c06\u8fd9\u4e9b\u5e76\u884c\u7684\u65f6\u57df\u4fe1\u53f7\u53e0\u52a0\uff08\u5e76\u4e32\u8f6c\u6362\uff09\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4fe1\u6e90\u6570\u636e\u7531\u9891\u8c31\u91c7\u6837\u5230\u65f6\u57df\u91c7\u6837\u7684\u8f6c\u6362\u3002 3.\u5c06\u7b2c\u4e09\u6b65\u7684\u65f6\u57df\u91c7\u6837\u518d\u6b21\u8fdb\u884cDA\uff0c\u901a\u8fc7RF\u53d1\u5c04\u51fa\u53bb\u3002 \u63a5\u6536\u7aef\u6309\u7167\u4e0a\u8ff0\u8fc7\u7a0b\u53cd\u8fc7\u6765\u5c31\u80fd\u5b9e\u73b0ODFM\u89e3\u8c03\u3002 IFFT\u5b9e\u9645\u4e0a\u662f\u628a\u8c03\u5236\u7684\u6570\u636e\u53d8\u6362\u5230\u65f6\u95f4\u57df\uff0c\u5f85\u4f20\u8f93\u7684\u6570\u636e\u5b9e\u9645\u4e0a\u662f\u88ab\u770b\u505a\u5404\u5b50\u8f7d\u6ce2\u7684\u5e45\u5ea6\u56e0\u5b50\uff0c\u5982\u679c\u662fBPSK\uff0c\u52191bit\u5bf9\u5e94\u4e00\u4e2a\u5e45\u5ea6\u56e0\u5b50\uff0c\u4e5f\u5c31\u662f\u5bf9\u5e94\u4e00\u4e2a\u5b50\u8f7d\u6ce2\u3002\u5982\u679cQPSK\u5219\uff0c2bit\u5bf9\u5e94\u4e00\u4e2a\u5e45\u5ea6\u56e0\u5b50\uff0c\u5982\u679c\u662fQAM\u5219\u7f16\u7801\u7387\u66f4\u9ad8\u3002\u8fd9\u4e9b\u590d\u6570\u90fd\u53ef\u4ee5\u770b\u505a\u662f\u5728\u9891\u8c31\u4e0a\u5728\u5404\u4e2a\u5b50\u8f7d\u6ce2\u5cf0\u503c\u5904\u5bf9\u5404\u5b50\u8f7d\u6ce2\u8fdb\u884c\u91c7\u6837\u3002\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u590d\u6570\u5b9e\u9645\u4e0a\u8868\u793a\u7684\u662f\u5bf9OFDM\u4fe1\u53f7\u9891\u8c31\u7684\u91c7\u6837\uff0c\u5bf9\u5176\u8fdb\u884cIFFT\u53d8\u6362\u5f97\u5230\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u5f53\u7136\u5c31\u662fOFDM\u4fe1\u53f7\u65f6\u95f4\u7684\u91c7\u6837\u503c\u3002\u518d\u5bf9\u8be5\u65f6\u57df\u4fe1\u53f7\u8fdb\u884cDA\u53d8\u6362\uff0c\u53d8\u4e3a\u6a21\u62df\u4fe1\u53f7\u3002","title":"\u65e0\u7ebf\u901a\u4fe1\u57fa\u7840\u4e4b\uff1a\u8c03\u5236"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_1","text":"\u9996\u5148\u8bf4\u8bf4\u4ec0\u4e48\u662f\u8c03\u5236\u548c\u4e3a\u4ec0\u4e48\u65e0\u7ebf\u901a\u4fe1\u8981\u8fdb\u884c\u8c03\u5236\u3002","title":"\u8c03\u5236"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_2","text":"\u8c03\u5236\uff08modulation\uff09\uff0c\u662f\u901a\u8fc7\u8c03\u5236\u4fe1\u53f7\u6539\u53d8\u5468\u671f\u6027\u6ce2\u5f62\uff08\u79f0\u4e3a\u8f7d\u6ce2\u4fe1\u53f7\uff09\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u7279\u6027\u7684\u8fc7\u7a0b\u3002\u8be5\u8c03\u5236\u4fe1\u53f7\u901a\u5e38\u5305\u542b\u8981\u4f20\u8f93\u7684\u4fe1\u606f\u3002 \u901a\u4fd7\u70b9\u8bb2\uff0c\u8c03\u5236\u5c31\u662f\u5c06\u5305\u542b\u4fe1\u606f\u7684\u4fe1\u53f7\u8f6c\u6362\u5230\u53e6\u4e00\u79cd\u4fe1\u53f7\u4e0a\u7684\u8fc7\u7a0b\uff0c\u65e0\u7ebf\u901a\u4fe1\u4e2d\u8c03\u5236\u662f\u5c06\u8c03\u5236\u4fe1\u53f7\u7684\u4fe1\u606f\u5185\u5bb9\u53e0\u52a0\u5728\u8f7d\u6ce2\u4fe1\u53f7\uff08\u9ad8\u9891/\u5c04\u9891\u4fe1\u53f7\uff09\u4e0a\u7684\u8fc7\u7a0b\u3002 \u8c03\u5236\u4fe1\u53f7\u901a\u5e38\u662f\u4f4e\u9891\u4fe1\u53f7\uff0c\u79f0\u4e3a\u57fa\u5e26\u4fe1\u53f7\uff0c\u8f7d\u6ce2\u4fe1\u53f7\u662f\u9ad8\u9891\u4fe1\u53f7\u6216\u79f0\u4e3a\u5c04\u9891\u4fe1\u53f7\u3002 \u8c03\u5236\u53ef\u5206\u4e3a\u6a21\u62df\u8c03\u5236\u548c\u6570\u5b57\u8c03\u5236\uff0c\u6a21\u62df\u8c03\u5236\u7684\u57fa\u5e26\u8f93\u5165\u4fe1\u53f7\u662f\u6a21\u62df\u4fe1\u53f7\uff0c\u6570\u5b57\u8c03\u5236\u4fe1\u53f7\u662f\u6570\u5b57\u4fe1\u53f7\u3002","title":"\u8c03\u5236\u7684\u542b\u4e49"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_3","text":"\u5f53\u57fa\u5e26\u4fe1\u53f7\u53ef\u4ee5\u76f4\u63a5\u4f20\u8f93\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u8c03\u5236\uff1f \u7b54\u6848\u662f\u57fa\u5e26\u4f20\u8f93\u6709\u8bb8\u591a\u9650\u5236\uff0c\u53ef\u4ee5\u7528\u8c03\u5236\u6765\u514b\u670d\u3002\u5c06\u4f4e\u9891\u4fe1\u53f7\u8c03\u5236\u5230\u9ad8\u9891\u8f7d\u6ce2\u4fe1\u53f7\u4e0a\uff0c\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u51e0\u65b9\u9762\uff1a \u4f20\u64ad\u66f4\u8fdc\u7684\u8ddd\u79bb \u51cf\u5c0f\u5929\u7ebf\u5c3a\u5bf8 \u9891\u7387\u8d44\u6e90\u7684\u590d\u7528","title":"\u8c03\u5236\u7684\u4f5c\u7528"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_4","text":"\u57fa\u5e26\u4fe1\u53f7\u7684\u9891\u7387\u8f83\u4f4e\uff0c\u4f4e\u9891\u4fe1\u53f7\u4f20\u8f93\u65f6\u80fd\u91cf\u635f\u8017\u5f88\u5927\uff0c\u4e0d\u80fd\u957f\u8ddd\u79bb\u4f20\u8f93\u3002\u8981\u5c06\u5b83\u52a0\u5230\u9ad8\u9891\u7684\u8f7d\u6ce2\u4fe1\u53f7\u4e0a\u5236\u6210\u5df2\u8c03\u4fe1\u53f7\uff0c\u4ee5\u8fdb\u884c\u8fdc\u8ddd\u79bb\u7684\u4f20\u8f93\u3002\u8c03\u5236\u8fc7\u7a0b\u589e\u52a0\u4e86\u8981\u53d1\u9001\u7684\u4fe1\u53f7\u7684\u9891\u7387\u3002\u56e0\u6b64\uff0c\u5b83\u589e\u52a0\u4e86\u4f20\u8f93\u7684\u8303\u56f4\u3002","title":"\u4f20\u64ad\u66f4\u8fdc\u7684\u8ddd\u79bb"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_5","text":"\u5929\u7ebf\u5c3a\u5bf8\u4e3a\u4fe1\u53f7\u76841/10\u52301/4\uff0c\u4fe1\u53f7\u624d\u80fd\u6709\u6548\u7684\u88ab\u8f90\u5c04\u3002 \u5178\u578b\u6210\u5e74\u7537\u6027\u7684\u4eba\u58f0\u57fa\u672c\u9891\u7387\u4e3a85\u81f3180Hz\uff0c\u5178\u578b\u6210\u5e74\u5973\u6027\u5219\u4e3a165\u81f3255Hz\u3002\u4f46\u662f\uff0c\u8db3\u591f\u7684\u6cdb\u97f3\u5217\u5c06\u4f5c\u4e3a\u6d88\u5931\u7684\u57fa\u9891\u51fa\u73b0\uff0c\u4ece\u800c\u8fbe\u5230\u542c\u5230\u57fa\u672c\u97f3\u8c03\u7684\u611f\u89c9\u3002\u5728\u7535\u8bdd\u6280\u672f\u4e2d\uff0c\u53ef\u7528\u7684\u8bed\u97f3\u9891\u5e26\u8303\u56f4\u7ea6\u4e3a300Hz\u81f33400Hz\u30024KHz\u7535\u78c1\u6ce2\u4fe1\u53f7\u7684\u6ce2\u957f\u4e3a\uff1a $$ \\lambda=\\frac{C}{f}=\\frac{3\\times10^8}{4\\times10^3}=0.75\\times10^5(m) $$ \u56e0\u6b64\u5408\u9002\u7684\u5929\u7ebf\u9700\u89817500m\u957f\u7684\u5929\u7ebf\uff0c\u6bcf\u4e2a\u4eba\u62b1\u7740\u4e00\u4e2a\u8fd9\u4e48\u5927\u5929\u7ebf\u6253\u7535\u8bdd\u660e\u663e\u4e0d\u73b0\u5b9e\u3002\u73b0\u5728\u5e38\u7528\u7684\u65e0\u7ebf\u901a\u4fe1\u9891\u7387\u5728800MHz\uff5e3GHz\u4e4b\u95f4\uff0c\u5929\u7ebf\u5c3a\u5bf8\u5927\u4e8e\u4e3a10\uff5e38mm\u8fd9\u4e2a\u6570\u91cf\u7ea7\u30025G\u901a\u4fe1\u5c06\u4f1a\u5305\u542b\u51e0\u5341G\u7684\u9891\u7387\uff0c\u5929\u7ebf\u5c3a\u5bf8\u5c06\u8fdb\u4e00\u6b65\u7f29\u5c0f\uff0c\u5728\u6709\u9650\u7a7a\u95f4\u5185\u5b89\u653e\u5927\u91cf\u7a7a\u95f4\u6210\u4e3a\u53ef\u80fd\u3002","title":"\u51cf\u5c0f\u5929\u7ebf\u5c3a\u5bf8"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_6","text":"\u5982\u679c\u57fa\u5e26\u58f0\u97f3\u4fe1\u53f7\u5728\u4e0d\u4f7f\u7528\u4e00\u4e2a\u4ee5\u4e0a\u53d1\u5c04\u673a\u7684\u8c03\u5236\u7684\u60c5\u51b5\u4e0b\u53d1\u9001\uff0c\u5219\u6240\u6709\u4fe1\u53f7\u5c06\u5904\u4e8e\u76f8\u540c\u7684\u9891\u7387\u8303\u56f4\uff0c\u53730\u81f320kHz\u3002\u56e0\u6b64\uff0c\u6240\u6709\u7684\u4fe1\u53f7\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u800c\u63a5\u6536\u5668\u4e0d\u80fd\u5c06\u5b83\u4eec\u5f7c\u6b64\u5206\u5f00\u3002 \u8c03\u5236\u4f5c\u7528\u7684\u5b9e\u8d28\u5c31\u662f\u4f7f\u76f8\u540c\u9891\u7387\u8303\u56f4\u7684\u4fe1\u53f7\u5206\u522b\u4f9d\u6258\u4e8e\u4e0d\u540c\u9891\u7387\u7684\u8f7d\u6ce2\u4e0a\uff0c\u63a5\u6536\u673a\u5c31\u53ef\u4ee5\u5206\u79bb\u51fa\u6240\u9700\u7684\u9891\u7387\u4fe1\u53f7\uff0c\u4e0d\u81f4\u4e92\u76f8\u5e72\u6270\u3002\u8fd9\u4e5f\u662f\u5728\u540c\u4e00\u4fe1\u9053\u4e2d\u5b9e\u73b0\u591a\u8def\u590d\u7528\u7684\u57fa\u7840\u3002 \u4ee5\u6536\u97f3\u673a\u4e3a\u4f8b\uff0c\u65e0\u7ebf\u7535\u53f0\u4e0a\u6709\u5341\u51e0\u4e2a\u9891\u9053\uff0c\u6bcf\u4e2a\u9891\u9053\u90fd\u6709\u4e00\u4e2a\u7ed9\u5b9a\u7684\u9891\u7387\uff1a100.1 MHz\uff0c102.5 MHz\u7b49...\u6bcf\u4e2a\u9891\u9053\u90fd\u6709\u4e00\u5b9a\u7684\u8303\u56f4\uff08\u901a\u5e38\u7ea6\u4e3a0.22 MHz\uff09\uff0c\u6bcf\u4e2a\u53f0\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u4f20\u8f93\u3002\u8c03\u5236\u4f7f\u5f97\u8fd9\u4e00\u5207\u6210\u4e3a\u53ef\u80fd\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u5e26\u901a\uff08\u6216\u201c\u5bbd\u5e26\u201d\uff09\u4fe1\u9053\u53d1\u9001\u8bed\u97f3\u548c\u97f3\u4e50\uff08\u8fd9\u662f\u57fa\u5e26\u4fe1\u53f7\uff09\u3002 \u8c03\u5236\u8fd8\u80fd\u5e26\u6765\u5176\u4ed6\u597d\u5904\uff0c\u5982\u63d0\u9ad8\u4fe1\u53f7\u4f20\u8f93\u8d28\u91cf\uff0c\u540c\u4e00\u4fe1\u9053\u4e0a\u4f20\u8f93\u591a\u4e2a\u4fe1\u53f7\u4e5f\u6210\u4e3a\u53ef\u80fd\uff0c\u540e\u9762\u4ecb\u7ecd\u8c03\u5236\u65b9\u5f0f\u7684\u65f6\u5019\u4f1a\u5177\u4f53\u4ecb\u7ecd\u3002","title":"\u9891\u7387\u8d44\u6e90\u7684\u590d\u7528"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_7","text":"\u8c03\u5236\u6307\u6570\uff08modulation index\uff09\u8861\u91cf\u8c03\u5236\u6df1\u5ea6\u7684\u53c2\u6570\u3002\u4e3a\u4e86\u5177\u6709\u9002\u5f53\u7684\u5e45\u5ea6\u8c03\u5236\uff0c\u8c03\u5236\u4fe1\u53f7\u7535\u538b \\(V_m\\) \u5e94\u8be5\u5c0f\u4e8e\u8f7d\u6ce2\u7535\u538b \\(V_c\\) \u3002\u56e0\u6b64\uff0c\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u7684\u5e45\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u8fd9\u79cd\u5173\u7cfb\u4ee5\u8c03\u5236\u6307\u6570 \\(m\\) \u8868\u793a\u3002","title":"\u8c03\u5236\u6307\u6570"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_8","text":"\u5728\u8c03\u5e45\u4e2d\uff0c\u8f7d\u6ce2\u5e45\u5ea6\u6839\u636e\u8c03\u5236\u4fe1\u53f7\u5e45\u5ea6\u800c\u53d8\u5316\u3002\u8c03\u5236\u6307\u6570\u662f\u8c03\u5236\u4fe1\u53f7\u7535\u538b\uff08 \\(V_m\\) \uff09\u4e0e\u8f7d\u6ce2\u7535\u538b\uff08 \\(V_c\\) \uff09\u7684\u6bd4\u503c\u3002\u8c03\u5236\u6307\u6570\u65b9\u7a0b\u5982\u4e0b\u3002 \\[ m = V_m / V_c \\] \u8c03\u5236\u6307\u6570 \\(m\\) \u5e94\u8be5\u662f\u4ecb\u4e8e0\u548c1\u4e4b\u95f4\u7684\u6570\u5b57\u3002\u5f53 \\(m\\) \u5927\u4e8e1\u65f6\uff0c\u4e25\u91cd\u5931\u771f\u4f1a\u5bfc\u81f4\u8c03\u5236\u6ce2\u5f62\uff0c\u4e5f\u79f0\u4e3a\u8fc7\u8c03\u5236\u3002 \u7406\u60f3\u60c5\u51b5\u662f \\(m=1\\) ,\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u63a5\u6536\u5668\u5904\u4ea7\u751f\u66f4\u5927\u7684\u8f93\u51fa\uff0c\u800c\u6ca1\u6709\u6216\u5177\u6709\u6700\u5c0f\u7684\u5931\u771f\u3002","title":"\u5e45\u5ea6\u8c03\u5236\u7684\u8c03\u5236\u6307\u6570"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_9","text":"\u5bf9\u4e8e\u9891\u7387\u8c03\u5236\uff0c\u8c03\u5236\u6307\u6570\u662f\u9891\u7387\u504f\u5dee\uff08 \\(f_d\\) \uff09\u4e0e\u8c03\u5236\u9891\u7387\uff08 \\(f_m\\) \uff09\u7684\u6bd4\u503c\u3002\u5b83\u8868\u793a\u5982\u4e0b: $$ m = f_d / f_m $$ \u5728\u8ba1\u7b97\u4e2d\uff0c \\(f_d\\) \u548c \\(f_m\\) \u90fd\u4f7f\u7528\u6700\u5927\u503c\u65f6\uff0c\u79f0\u4e3a\u504f\u5dee\u7387\u3002 \u4f8b\u5982\uff1a \u6700\u5927\u8f7d\u6ce2\u9891\u7387\u504f\u5dee \\(f_d= +/- 25\\) KHz \u6700\u5927\u8c03\u5236\u9891\u7387 \\(f_m10\\) = KHz \u8c03\u5236\u6307\u6570 \\(= 25/10 = 2.5\\)","title":"\u9891\u7387\u8c03\u5236\u7684\u8c03\u5236\u6307\u6570"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_10","text":"\u6700\u5e38\u7528\u7684\u8f7d\u6ce2\u4fe1\u53f7\u662f\u6b63\u5f26\u6ce2, $$ f(t)= A \\sin(\\omega t + \\phi) $$ \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6b63\u5f26\u66f2\u7ebf\u67093\u4e2a\u53c2\u6570\uff0c\u5e45\u5ea6\uff0c\u9891\u7387\u548c\u76f8\u4f4d\uff0c\u6240\u67093\u4e2a\u53c2\u6570\u90fd\u53ef\u4ee5\u88ab\u6539\u53d8\u6765\u4f20\u8f93\u6570\u636e\u3002\u56e0\u6b64\u6709\u4e09\u79cd\u57fa\u672c\u7684\u8c03\u5236\u7c7b\u578b\uff1a\u5e45\u5ea6\u8c03\u5236\uff0c\u9891\u7387\u8c03\u5236\u548c\u76f8\u4f4d\u8c03\u5236\u3002 \u8c03\u5236\u4fe1\u53f7\u53ef\u4ee5\u662f\u6a21\u62df\u4fe1\u53f7\u6216\u6570\u5b57\u4fe1\u53f7\uff0c\u8c03\u5236\u4fe1\u53f7\u662f\u6a21\u62df\u4fe1\u53f7\u79f0\u4e3a\u6a21\u62df\u8c03\u5236\uff0c\u8c03\u5236\u4fe1\u53f7\u662f\u6570\u5b57\u4fe1\u53f7\u79f0\u4e3a\u6570\u5b57\u8c03\u5236\u3002 \u6a21\u62df\u8c03\u5236\u6280\u672f\u5982\u4e0b AM\uff1a\u8f7d\u6ce2\u5e45\u5ea6\u6839\u636e\u6a21\u62df\u57fa\u5e26\u4fe1\u53f7\u800c\u6539\u53d8\u3002 FM\uff1a\u8f7d\u6ce2\u9891\u7387\u6839\u636e\u6a21\u62df\u57fa\u5e26\u4fe1\u53f7\u800c\u6539\u53d8\u3002 PM\uff1a\u8f7d\u6ce2\u76f8\u4f4d\u6839\u636e\u6a21\u62df\u57fa\u5e26\u4fe1\u53f7\u800c\u6539\u53d8\u3002 \u5e94\u7528\uff1a\u5e7f\u64ad\u7535\u53f0\u548c\u7535\u89c6\u53f0\u4f7f\u7528AM\u548cFM\u8c03\u5236\u5f62\u5f0f\u3002\u6709\u4e9b\u91c7\u7528\u5355\u8fb9\u5e26\u8c03\u5236\u3002 \u51e0\u79cd\u6570\u5b57\u8c03\u5236\u6280\u672f\uff1a ASK-\u5b83\u4f7f\u7528\u6709\u9650\u6570\u91cf\u7684\u5e45\u5ea6\u3002\u5e7f\u6cdb\u7528\u4e8e\u5149\u7ea4\uff0c\u5176\u4e2d\u7528\u4e8eLED\u53d1\u5c04\u5668\u7684\u4e8c\u8fdb\u52361\u662f\u7531\u5149\u8109\u51b2\u548c\u4e8c\u8fdb\u52360\u7531\u4e8e\u6ca1\u6709\u5149\u3002\u5728\u4e00\u4e9b\u5176\u4ed6\u5e94\u7528\u4e2d\uff0c\u4e0d\u540c\u7684\u5e45\u5ea6\uff08\u5373\uff0c\u8f83\u4f4e\u548c\u8f83\u9ad8\u7684\u5e45\u5ea6\uff09\u88ab\u7528\u6765\u8868\u793a\u4e8c\u8fdb\u52361\u548c\u4e8c\u8fdb\u52360\u3002 FSK-\u5b83\u4f7f\u7528\u6709\u9650\u6570\u91cf\u7684\u9891\u7387\u3002F1\u548cF2\u7528\u6765\u8868\u793a\u4e8c\u8fdb\u52361\u548c\u4e8c\u8fdb\u52360. PSK-\u5b83\u4f7f\u7528\u6709\u9650\u4e2a\u9636\u6bb5\u3002P1\u548cP2\u7528\u4e8e\u8868\u793a\u4e8c\u8fdb\u52361\u548c\u4e8c\u8fdb\u52360. \u73b0\u5728\u4f7f\u7528\u7684\u6700\u590d\u6742\u7684\u6570\u5b57\u8c03\u5236\u6280\u672f\u662fBPSK\uff0cQPSK\u548cQAM\uff0c\u5e7f\u6cdb\u7528\u4e8e\u8702\u7a9d\u548c\u536b\u661f\u901a\u4fe1\u7684\u65e0\u7ebf\u7535\u548c\u5fae\u6ce2\u901a\u4fe1\u3002","title":"\u8c03\u5236\u7c7b\u578b"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#bpsk","text":"","title":"BPSK\u4e8c\u8fdb\u5236\u76f8\u79fb\u952e\u63a7"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#ofdm","text":"OFDM\u5373\u6b63\u4ea4\u9891\u5206\u590d\u7528\uff08Orthogonal Frequency Division Multiplexing\uff09\uff0c\u662f\u591a\u8f7d\u6ce2\u8c03\u5236\u7684\u4e00\u79cd\uff0c\u901a\u4fd7\u6765\u8bf4\u5c31\u662f\u901a\u8fc7\u591a\u6761\u4e92\u76f8\u6ca1\u6709\u5173\u7cfb\u7684\u901a\u9053\u4f20\u8f93\u4e0d\u540c\u7684\u4fe1\u606f\u3002OFDM\u73b0\u5728\u4e3b\u8981\u7528\u4e8e4G\u901a\u4fe1\u4e0a\uff0c\u5e76\u4e14\u7531\u4e8e\u5176\u9891\u5e26\u5229\u7528\u7387\u9ad8\uff0c\u6297\u591a\u5f84\u80fd\u529b\u5f3a\uff0c\u80fd\u6709\u6548\u6291\u5236ISI\uff08\u7b26\u53f7\u95f4\u5e72\u6270\uff09\u548cICI\uff08\u4fe1\u9053\u95f4\u5e72\u6270\uff09\u3002 OFDM\u7684\u9891\u5e26\u5229\u7528\u7387\u9ad8\uff0c\u6297\u591a\u5f84\u80fd\u529b\u5f3a\uff0c\u90a3\u4e48\u5bf9\u4e8eOFDM\u7684\u539f\u7406\u5e94\u8be5\u5206\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u8fdb\u884c\u8bf4\u660e\uff1a \u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027 OFDM\u4e0e\u5085\u91cc\u53f6\u53d8\u6362\u7684\u5173\u7cfb \u6297\u591a\u5f84\u3001\u6291\u5236ISI\u548cICI\u7684\u539f\u56e0\u53ca\u5faa\u73af\u524d\u7f00","title":"\u65f6\u57df\u4e0a\u7684OFDM"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_11","text":"OFDM\u7684\"O\"\u4ee3\u8868\u7740\"\u6b63\u4ea4\"\uff0c\u90a3\u4e48\u5c31\u5148\u8bf4\u8bf4\u6b63\u4ea4\u5427\u3002","title":"\u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_12","text":"\u4ece\u5411\u91cf\u4e0a\u6765\u770b\u5c31\u662f\u4e24\u4e2a\u4e92\u76f8\u5782\u76f4\u7684\u5411\u91cf\uff0c\u65e0\u8bba\u5176\u6a21\u957f\u662f\u591a\u5c11\uff0c\u76f8\u4e58\u603b\u662f\u7b49\u4e8e0\uff1a \\[\\vec{a}\\times\\vec{b}=0\\] \u4ece\u51fd\u6570\u4e0a\u6765\u770b\u6b63\u4ea4\u6027\u5c31\u662f\u65e0\u8bba\u4e24\u4e2a\u51fd\u6570\u7684\u5e45\u503c\u4e3a\u591a\u5c11\uff0c\u5728\u786e\u5b9a\u7684\u4e00\u4e2a\u65f6\u95f4\u5468\u671f\u5185\u76f8\u4e58\uff0c\u5176\u79ef\u5206\u603b\u662f\u7b49\u4e8e0\uff08\u4e5f\u5c31\u662f\u9762\u79ef\u76f8\u52a0\u4e3a0\uff09\u3002 \u6bd4\u5982\u6700\u7b80\u5355\u7684 \\(sin(t)\\) \u548c \\(sin(2t)\\) \u662f\u6b63\u4ea4\u7684\u3002 \u4e0b\u56fe\u5206\u5e03\u753b\u51fa\u4e86 \\(sin(t)\\) \uff0c \\(sin(2t)\\) \u548c \\(sin(t)sin(2t)\\) \u7684\u66f2\u7ebf\u3002 \\(sin(t)sin(2t)\\) \u5728 \\([0,2\\pi]\\) \u79ef\u5206\uff0c\u4e5f\u662f\u5c31\u6c42\u9634\u5f71\u90e8\u5206\u7684\u9762\u79ef\u3002\u5927\u6982\u80fd\u770b\u51fa \\(x\\) \u8f74\u4e0a\u4e0b\u4e24\u90e8\u5206 Heron\u2019s Fountain syncthing\u540c\u6b65\u672c\u5730\u548c\u670d\u52a1\u5668\u6587\u4ef6 \u5728\u4e0b\u9762\u7684\u56fe\u793a\u4e2d\uff0c\u5728[0,2\u03c0]\u7684\u65f6\u957f\u5185\uff0c\u91c7\u7528\u6700\u6613\u61c2\u7684\u5e45\u5ea6\u8c03\u5236\u65b9\u5f0f\u4f20\u9001\u4fe1\u53f7\uff1asin(t)\u4f20\u9001\u4fe1\u53f7a\uff0c\u56e0\u6b64\u53d1\u9001a\u00b7sin(t)\uff0csin(2t)\u4f20\u9001\u4fe1\u53f7b\uff0c\u56e0\u6b64\u53d1\u9001b\u00b7sin(2t)\u3002\u5176\u4e2d\uff0csin(t)\u548csin(2t)\u7684\u7528\u5904\u662f\u7528\u6765\u627f\u8f7d\u4fe1\u53f7\uff0c\u662f\u6536\u53d1\u7aef\u9884\u5148\u89c4\u5b9a\u597d\u7684\u4fe1\u606f\uff0c\u5728\u672c\u6587\u4e2d\u4e00\u5f8b\u79f0\u4e3a\u5b50\u8f7d\u6ce2\uff1b\u8c03\u5236\u5728\u5b50\u8f7d\u6ce2\u4e0a\u7684\u5e45\u5ea6\u4fe1\u53f7a\u548cb\uff0c\u624d\u662f\u9700\u8981\u53d1\u9001\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u5728\u4fe1\u9053\u4e2d\u4f20\u9001\u7684\u4fe1\u53f7\u4e3aa\u00b7sin(t)+b\u00b7sin(2t)\u3002\u5728\u63a5\u6536\u7aef\uff0c\u5206\u522b\u5bf9\u63a5\u6536\u5230\u7684\u4fe1\u53f7\u4f5c\u5173\u4e8esin(t)\u548csin(2t)\u7684\u79ef\u5206\u68c0\u6d4b\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230a\u548cb\u4e86\u3002 \u56fe\u4e00\uff1a\u53d1\u9001a\u4fe1\u53f7\u7684sin(t) \u56fe\u4e8c\uff1a\u53d1\u9001b\u4fe1\u53f7\u7684sin(2t)\u3010\u6ce8\u610f\uff1a\u5728\u533a\u95f4[0,2\u03c0]\u5185\u53d1\u9001\u4e86 \u4e24\u4e2a \u5b8c\u6574\u6ce2\u5f62\u3011 \u56fe\u4e09\uff1a\u53d1\u9001\u5728\u65e0\u7ebf\u7a7a\u95f4\u7684\u53e0\u52a0\u4fe1\u53f7a\u00b7sin(t)+b\u00b7sin(2t) \u56fe\u56db\uff1a\u63a5\u6536\u4fe1\u53f7\u4e58sin(t)\uff0c\u79ef\u5206\u89e3\u7801\u51faa\u4fe1\u53f7\u3002\u3010\u5982\u524d\u6587\u6240\u8ff0\uff0c\u4f20\u9001b\u4fe1\u53f7\u7684sin(2t)\u9879\uff0c\u5728\u79ef\u5206\u540e\u4e3a0\u3011 \u56fe\u4e94\uff1a\u63a5\u6536\u4fe1\u53f7\u4e58sin(2t)\uff0c\u79ef\u5206\u89e3\u7801\u51fab\u4fe1\u53f7\u3002\u3010\u5982\u524d\u6587\u6240\u8ff0\uff0c\u4f20\u9001a\u4fe1\u53f7\u7684sin(t)\u9879\uff0c\u5728\u79ef\u5206\u540e\u4e3a0\u3011 \u56fe\u516d\uff1a\u6d41\u7a0b\u56fe \u5230\u4e86\u8fd9\u91cc\uff0c\u4e5f\u8bb8\u4f60\u4f1a\u51fa\u73b0\u4e24\u79cd\u72b6\u6001\uff1a \u4e00\u79cd\u662f\uff1a\u554a\uff0c\u539f\u6765\u662f\u8fd9\u6837\uff0c\u6211\u61c2\u4e86\u3002 \u4e00\u79cd\u662f\uff1a\u554a\uff0c\u600e\u4e48\u4f1a\u8fd9\u6837\uff0c\u6211\u5b8c\u5168\u65e0\u6cd5\u60f3\u8c61\u3002\u8fd9\u91cc\u8981\u8bf4\u7684\u662f\uff0c\u4f60\u6839\u672c \u7528\u4e0d\u7740\u53bb\u60f3\u8c61\uff08visualize\uff09 \u3002\u6570\u5b66\u4e2d\u662f\u5982\u6b64\u5b9a\u4e49\u6b63\u4ea4\u7684\uff0c\u6570\u5b66\u8bc1\u660e\u4e86\u5b83\u4eec\u7684\u6b63\u4ea4\u6027\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u662f\u6b63\u4ea4\u7684\uff0c\u3010\u4ed6\u4eec\u5c31\u53ef\u4ee5\u4e92\u4e0d\u5e72\u6270\u7684\u627f\u8f7d\u5404\u81ea\u7684\u4fe1\u606f\u3011\u3002\u9009\u53d6sin(t)\u548csin(2t)\u4f5c\u4e3a\u4f8b\u5b50\uff0c\u6b63\u662f\u56e0\u4e3a\u5b83\u4eec\u662f\u4ecb\u4e8e\u76f4\u89c2\u548c\u62bd\u8c61\u7684\u8fc7\u6e21\u5730\u5e26\uff0c\u8d9f\u8fc7\u53bb\u5427\u3002 \u4e0a\u9762\u7684\u56fe\u793a\u867d\u7136\u7b80\u5355\uff0c\u4f46\u662f\u5374\u662f\u6240\u6709\u590d\u6742\u7684\u57fa\u7840\u3002 1.1 \u4e0b\u4e00\u6b65\uff0c\u5c06sin(t)\u548csin(2t)\u6269\u5c55\u5230\u66f4\u591a\u7684\u5b50\u8f7d\u6ce2\u5e8f\u5217{sin(2\u03c0\u00b7\u0394f\u00b7t)\uff0csin(2\u03c0\u00b7\u0394f\u00b72t)\uff0csin(2\u03c0\u00b7\u0394f\u00b73t),...,sin(2\u03c0\u00b7\u0394f\u00b7kt)} (\u4f8b\u5982k=16\uff0c256\uff0c1024\u7b49)\uff0c\u5e94\u8be5\u662f\u5f88\u597d\u7406\u89e3\u7684\u4e8b\u60c5\u3002\u5176\u4e2d\uff0c2\u03c0\u662f\u5e38\u91cf\uff1b\u0394f\u662f\u4e8b\u5148\u9009\u597d\u7684\u8f7d\u9891\u95f4\u9694\uff0c\u4e5f\u662f\u5e38\u91cf\u30021t,2t,3t,...,kt\u4fdd\u8bc1\u4e86\u6b63\u5f26\u6ce2\u5e8f\u5217\u7684\u6b63\u4ea4\u6027\u3002 1.2 \u518d\u4e0b\u4e00\u6b65\uff0c\u5c06cos(t)\u4e5f\u5f15\u5165\u3002\u5bb9\u6613\u8bc1\u660e\uff0ccos(t)\u4e0esin(t)\u662f\u6b63\u4ea4\u7684\uff0c\u4e5f\u4e0e\u6574\u4e2asin(kt)\u7684\u6b63\u4ea4\u65cf\u76f8\u6b63\u4ea4\u3002\u540c\u6837\uff0ccos(kt)\u4e5f\u4e0e\u6574\u4e2asin(kt)\u7684\u6b63\u4ea4\u65cf\u76f8\u6b63\u4ea4\u3002\u56e0\u6b64\u53d1\u5c04\u5e8f\u5217\u6269\u5c55\u5230{sin(2\u03c0\u00b7\u0394f\u00b7t),sin(2\u03c0\u00b7\u0394f\u00b72t),sin(2\u03c0\u00b7\u0394f\u00b73t),...,sin(2\u03c0\u00b7\u0394f\u00b7kt),cos(2\u03c0\u00b7\u0394f\u00b7t),cos(2\u03c0\u00b7\u0394f\u00b72t),cos(2\u03c0\u00b7\u0394f\u00b73t),...,cos(2\u03c0\u00b7\u0394f\u00b7kt)}\u4e5f\u5c31\u987a\u7406\u6210\u7ae0\u4e86\u3002 1.3 \u7ecf\u8fc7\u524d\u4e24\u6b65\u7684\u6269\u5145\uff0c\u9009\u597d\u4e862\u7ec4\u6b63\u4ea4\u5e8f\u5217sin(kt)\u548ccos(kt)\uff0c\u8fd9\u53ea\u662f\u4f20\u8f93\u7684\"\u4ecb\u8d28\"\u3002\u771f\u6b63\u8981\u4f20\u8f93\u7684\u4fe1\u606f\u8fd8\u9700\u8981\u8c03\u5236\u5728\u8fd9\u4e9b\u8f7d\u6ce2\u4e0a\uff0c\u5373sin(t),sin(2t),...,sin(kt)\u5206\u522b\u5e45\u5ea6\u8c03\u5236a1,a2,...,ak\u4fe1\u53f7,cos(t),cos(2t),...,cos(kt)\u5206\u522b\u5e45\u5ea6\u8c03\u5236b1,b2,...,bk\u4fe1\u53f7\u3002\u8fd92n\u7ec4\u4e92\u76f8\u6b63\u4ea4\u7684\u4fe1\u53f7\u540c\u65f6\u53d1\u9001\u51fa\u53bb\uff0c\u5728\u7a7a\u95f4\u4e0a\u4f1a\u53e0\u52a0\u51fa\u600e\u6837\u7684\u6ce2\u5f62\u5462\uff1f\u505a\u7b80\u5355\u7684\u52a0\u6cd5\u5982\u4e0b\uff1a f(t) = a1\u00b7sin(2\u03c0\u00b7\u0394f\u00b7t) + \u200b a2\u00b7sin(2\u03c0\u00b7\u0394f\u00b72t) + \u200b a3\u00b7sin(2\u03c0\u00b7\u0394f\u00b73t) + \u200b ... \u200b ak\u00b7sin(2\u03c0\u00b7\u0394f\u00b7kt) + \u200b b1\u00b7cos(2\u03c0\u00b7\u0394f\u00b7t) + \u200b b2\u00b7cos(2\u03c0\u00b7\u0394f\u00b72t) + \u200b b3\u00b7cos(2\u03c0\u00b7\u0394f\u00b73t) + \u200b ... \u200b bk\u00b7cos(2\u03c0\u00b7\u0394f\u00b7kt) + \u200b = \u2211ak\u00b7sin(2\u03c0\u00b7\u0394f\u00b7kt) + \u2211bk\u00b7cos(2\u03c0\u00b7\u0394f\u00b7kt) \u3010\u516c\u5f0f1-1\uff1a\u5b9e\u6570\u7684\u8868\u8fbe\u3011 \u4e3a\u4e86\u65b9\u4fbf\u8fdb\u884c\u6570\u5b66\u5904\u7406\uff0c\u4e0a\u5f0f\u6709\u590d\u6570\u8868\u8fbe\u5f62\u5f0f\u5982\u4e0b\uff1a f(t) = \u2211Fk\u00b7e(j\u00b72\u03c0\u00b7\u0394f\u00b7kt) \u3010\u516c\u5f0f1-2\uff1a\u590d\u6570\u7684\u8868\u8fbe\uff0c\u8fd9\u7f16\u8f91\u5668\u627e\u4e0d\u5230\u4e0a\u89d2\u6807...\u4e0d\u8fc7\uff0c\u4f60\u5e94\u8be5\u770b\u5f97\u61c2\u7684\u3011 \u4e0a\u9762\u7684\u516c\u5f0f\u53ef\u4ee5\u8fd9\u6837\u770b\uff1a\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u5e8f\u5217\u90fd\u5728\u53d1\u9001\u81ea\u5df1\u7684\u4fe1\u53f7\uff0c\u4e92\u76f8\u4ea4\u53e0\u5728\u7a7a\u4e2d\uff0c\u6700\u7ec8\u5728\u63a5\u6536\u7aef\u770b\u5230\u7684\u4fe1\u53f7\u5c31\u662ff(t)\u3002\u63a5\u6536\u7aef\u6536\u5230\u6742\u7cc5\u4fe1\u53f7f(t)\u540e\uff0c\u518d\u5728\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u4e0a\u5206\u522b\u4f5c\u76f8\u4e58\u540e\u79ef\u5206\u7684\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u53d6\u51fa\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u5206\u522b\u627f\u8f7d\u7684\u4fe1\u53f7\u4e86\u3002 \u7136\u540e\uff0c\u591a\u770b\u770b\u516c\u5f0f1-1\u548c\u516c\u5f0f1-2\uff01\uff01\uff01\u53d1\u73b0\u54af\uff1f\u8fd9\u5c31\u662f \u5085\u91cc\u53f6\u7ea7\u6570 \u561b\u3002\u5982\u679c\u5c06t\u79bb\u6563\u5316\uff0c\u90a3\u4e48\u5c31\u662f \u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362 \u3002\u6240\u4ee5\u624d\u6709OFDM\u4ee5FFT\u6765\u5b9e\u73b0\u7684\u6545\u4e8b\u3002\u5c06\u5728\u4e0b\u9762\u7684\u7ae0\u8282\u8fdb\u884c\u66f4\u591a\u7684\u63cf\u8ff0\u3002 \u9075\u5faa\u53e4\u8001\u7684\u4f20\u7edf\uff0cF\u8868\u793a\u9891\u57df\uff0cf\u8868\u793a\u65f6\u57df\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ece\u516c\u5f0f1-2\u4e2d\u770b\u51fa\uff0c\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u4e0a\u9762\u8c03\u5236\u7684\u5e45\u5ea6\uff0c\u5c31\u662f\u9891\u57df\u4fe1\u606f\u3002\u7c7b\u4f3c\u7684\u8bf4\u6cd5\u662f\uff1aOFDM\u4f20\u8f93\u7684\u662f\u9891\u57df\u4fe1\u53f7\u3002\u8fd9\u79cd\u8bf4\u6cd5\u6709\u4e9b\u522b\u626d\uff0c\u4f46\u662f\u5f88\u591a\u6559\u7a0b\u6216\u6587\u7ae0\u4f1a\u4f7f\u7528\u8fd9\u6837\u7684\u8bf4\u660e\u65b9\u5f0f\uff0c\u5c31\u770b\u8bfb\u8005\u5982\u4f55\u7406\u89e3\u4e86\u3002\u5982\u679c\u7eaf\u7cb9\u4ece\u516c\u5f0f\u6216\u8005\u5b50\u8f7d\u6ce2\u6765\u770b\uff0c\u8fd9\u79cd\u8bf4\u6cd5\u5176\u5b9e\u4e5f\u662f\u5f88\u76f4\u63a5\u7684\u9610\u8ff0\u4e86\u3002 \u4e0a\u97621.1-1.3\u7684\u6269\u5c55\uff0c\u53ef\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u56fe\u4e03\uff1a\u65f6\u57df\u4e0a\u7684OFDM\u7cfb\u7edf\u56fe \u3000\u30001.4 \u8fd8\u6709\u8fd9\u4e00\u6b65\u5417\uff1f\u5176\u5b9e\u662f\u6709\u7684\u3002\"\u5c0f\u767d\"\u4f60\u53ef\u4ee5\u5148\u60f3\u60f3\uff0c\u60f3\u4e0d\u5230\u7684\u8bdd\u5148\u5f80\u4e0b\u770b\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u5728\u9891\u57df\u4e2d\u8003\u91cf\uff0c\u6240\u4ee5\u6211\u5199\u5728\u540e\u9762\u4e86\u3002\u3010\u4e5f\u53ef\u53c2\u8003[1]\u3011 \u5c06\u4e0a\u8ff0\u7684\u65f6\u57df\u5206\u6790\u914d\u4e0aLTE\u7684\u5b9e\u73b0\uff0c\u6709\u5982\u4e0b\u60c5\u51b5\uff1a \u3000\u3000\u3010\u6ce81\uff1a\u672c\u6bb5\u63cf\u8ff0\u9700\u8981\u6709LTE\u7269\u7406\u5c42\u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u5982\u679c\u770b\u4e0d\u660e\u767d\uff0c\u8bf7\u6682\u65f6\u8df3\u8fc7\uff0c\u770b\u5b8c\u6574\u7bc7\u6587\u7ae0\u540e\u518d\u56de\u770b\u3011 \u3000\u3000\u3010\u6ce82\uff1aLTE\u5e76\u975e\u65f6\u57df\u7684\u5b9e\u73b0\uff0c\u4e0b\u9762\u4ec5\u4ec5\u662f\u5957\u7528LTE\u7684\u53c2\u6570\uff0c\u505a\u4e00\u4e2a\u53c2\u8003\u5206\u6790\u3011 \u5b50\u8f7d\u6ce2\u7684\u95f4\u9694\u0394f=15kHz\uff0c\u4e00\u4e2aOFDM symbol\u7684\u53d1\u9001\u65f6\u95f4\u662f66.7us\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c15kHz*66.67us=1\uff0c\u5373\u57fa\u5e26\u4e0a\u4e00\u4e2aOFDM symbol\u7684\u53d1\u9001\u65f6\u95f4\u6b63\u597d\u53d1\u9001\u4e00\u4e2a\u4e00\u6b21\u8c10\u6ce2\u7684\u5b8c\u6574\u6ce2\u5f62\u3002\u5bf9\u4e8e10M\u7684LTE\u7cfb\u7edf\uff0c\u91c7\u7528\u7684\u662f1024\u4e2a\u5b50\u8f7d\u6ce2\uff0c\u4f46\u662f\u53ea\u6709\u4e2d\u95f4600\u4e2a\uff08\u4e0d\u542b\u6700\u4e2d\u95f4\u7684\u76f4\u6d41\uff09\u5b50\u8f7d\u6ce2\u88ab\u7528\u4e8e\u4f20\u9001\u6570\u636e\u3002\u5728\u4e00\u4e2aOFDM symbol\u7684\u65f6\u95f4\u5185\uff08\u537366.67us)\uff0c\u9760\u8fd1\u4e2d\u95f4\u7684\u4e24\u4e2a\u4e00\u6b21\u8c10\u6ce2\u4f20\u8f93\u4e00\u4e2a\u5b8c\u6574\u6ce2\u5f62\uff0c\u518d\u9760\u5916\u4e00\u70b9\u7684\u4e24\u4e2a\u4e8c\u6b21\u8c10\u6ce2\u4f20\u8f93\u4e24\u4e2a\u5b8c\u6574\u6ce2\u5f62\uff0c\u4ee5\u6b64\u7c7b\u63a8\u81f3\u6700\u5916\u9762\u7684\u4e24\u4e2a300\u6b21\u8c10\u6ce2\u4f20\u8f93\u4e86300\u4e2a\u5b8c\u6574\u7684\u6ce2\u5f62\u3002\u5728\u8fd966.67us\u5185\uff0c600\u4e2a\u5b50\u8f7d\u6ce2\u4e92\u76f8\u6b63\u4ea4\uff0c\u5176\u4e0a\u5206\u522b\u627f\u8f7d\u4e86600\u4e2a\u590d\u6570\u4fe1\u53f7\u3002 \u4e0a\u9762\u7684\u8bf4\u6cd5\u6709\u70b9\u5570\u55e6\uff0c\u4e0d\u5982\u56fe\u793a\u6765\u5f97\u76f4\u89c2\u3002\u672c\u6765\u51c6\u5907\u518d\u753b\u4e00\u56fe\u7684\uff0c\u4e0d\u8fc7\u4e00\u6765\u4e0a\u9762\u5df2\u7ecf\u6709\u4e86\u7c7b\u4f3c\u7684\u56fe\uff0c\u5b9e\u662f\u5927\u540c\u5c0f\u5f02\uff1b\u4e8c\u6765\uff0c600\u4e2a\u5b50\u8f7d\u6ce2\uff0c\u4e5f\u592a\u591a\u4e86\u70b9\u3002\u3002\u3002 OK\uff0c\u8bf4\u5230\u8fd9\u91cc\uff0c\u4ece\u65f6\u57df\u4e0a\u9762\u6765\u770bOFDM\uff0c\u5176\u5b9e\u662f\u76f8\u5f53\u7b80\u6d01\u660e\u5feb\u8ba8\u4eba\u559c\u6b22\u7684\u3002\u4e0d\u8fc7\uff0c\u4e00\u4e2a\u7cfb\u7edf\u82e5\u8981\u4ece\u65f6\u57df\u4e0a\u6765\u5b9e\u73b0OFDM\uff0c\u96be\u5ea6\u592a\u5927\uff0c\u65f6\u5ef6\u548c\u9891\u504f\u90fd\u4f1a\u4e25\u91cd\u7834\u574f\u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027\uff0c\u4ece\u800c\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\u3002\u8fd9\u70b9\u5728\u5404\u79cd\u6559\u6750\u6587\u7ae0\u4e2d\u90fd\u4f1a\u6709\u63d0\u53ca\uff0c\u6211\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002 \u4e0b\u9762\u5c06\u8f6c\u5165\u9891\u57df\u6765\u63cf\u8ff0OFDM\uff0c\u7531\u4e8e\u9891\u57df\u4e0d\u751a\u76f4\u89c2\uff0c\u7684\u786e\u4f1a\u7a0d\u7a0d\u8ba9\u4eba\u8d39\u89e3\u3002\u4e0d\u8fc7\u53ea\u8981\u65f6\u523b\u60f3\u7740\u65f6\u57df\u5b50\u8f7d\u6ce2\u95f4\u7684\u53e0\u52a0\uff0c\u4e00\u5207\u90fd\u4f1a\u597d\u8d77\u6765\u3002","title":"\u4ec0\u4e48\u662f\u6b63\u4ea4\uff1f"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#ofdm_1","text":"\u7b2c\u4e00\u7ae0\u8282\u65f6\u57df\u4e0a\u7684\u8ba8\u8bba\u5f00\u59cb\u4e8eOFDM\u4e2d\u7684\"O\"\uff1b\u672c\u7ae0\u8282\u9891\u57df\u4e0a\u6211\u4eec\u4ece\"FDM\"\u5f00\u59cb\u3002 \u3000\u3000\u5148\u56fe\u4f8b\u4e00\u4e2a\u5e38\u89c4FDM\u7684\u7cfb\u7edf\u56fe\uff1a \u56fe11\uff1a\u5e38\u89c4FDM\uff0c\u4e24\u8def\u4fe1\u53f7\u9891\u8c31\u4e4b\u95f4\u6709\u95f4\u9694\uff0c\u4e92\u76f8\u4e0d\u5e72\u6270 \u3000\u3000\u4e3a\u4e86\u66f4\u597d\u7684\u5229\u7528\u7cfb\u7edf\u5e26\u5bbd\uff0c\u5b50\u8f7d\u6ce2\u7684\u95f4\u8ddd\u53ef\u4ee5\u5c3d\u91cf\u9760\u8fd1\u4e9b\u3002 \u56fe12\uff1a\u9760\u5f97\u5f88\u8fd1\u7684FDM\uff0c\u5b9e\u9645\u4e2d\u8003\u8651\u5230\u786c\u4ef6\u5b9e\u73b0\uff0c\u89e3\u8c03\u7b2c\u4e00\u8def\u4fe1\u53f7\u65f6\uff0c\u5df2\u7ecf\u5f88\u96be\u5b8c\u5168\u53bb\u9664\u7b2c\u4e8c\u8def\u4fe1\u53f7\u7684\u5f71\u54cd\u4e86\uff08\u7535\u8def\u7684\u5b9e\u73b0\u6bd5\u7adf\u4e0d\u80fd\u50cf\u526a\u5200\u88c1\u7eb8\u4e00\u6837\u5229\u843d\uff09\uff0c\u4e24\u8def\u4fe1\u53f7\u4e92\u76f8\u4e4b\u95f4\u53ef\u80fd\u5df2\u7ecf\u4ea7\u751f\u5e72\u6270\u4e86 \u3000\u3000\u8fd8\u80fd\u518d\u8fd1\u4e9b\u5417\uff1f\u53ef\u4ee5\u7684\u3002\u8fd9\u5c31\u662fOFDM\u7684\u6765\u5386\u554a\uff0c\u8fd1\u5230\u5b8c\u5168\u7b49\u540c\u4e8e\u5948\u594e\u65af\u7279\u5e26\u5bbd\uff08\u540e\u9762\u6709\u8be6\u8ff0\uff09\uff0c\u4f7f\u9891\u5e26\u7684\u5229\u7528\u7387\u8fbe\u5230\u4e86\u7406\u8bba\u4e0a\u7684\u6700\u5927\u503c\u3002 \u56fe13\uff1a\u7ee7\u7eed\u9760\u8fd1\uff0c\u95f4\u9694\u9891\u7387\u4e92\u76f8\u6b63\u4ea4\uff0c\u56e0\u6b64\u9891\u8c31\u867d\u7136\u6709\u91cd\u53e0\uff0c\u4f46\u662f\u4ecd\u7136\u662f\u6ca1\u6709\u4e92\u76f8\u5e72\u6270\u7684\u3002\u795e\u5947\u7684OFDM \u3000\u3000\u4e0a\u9762\u4e09\u4e2a\u56fe\u7684\u786e\u6709\u70b9\u5c0f\u513f\u79d1\uff0c\u4e0d\u77e5\u9053\"\u5c0f\u767d\"\u662f\u4e0d\u662f\u5df2\u7ecf\u5728\u5fc3\u91cc\u5450\u558a\uff1a\u8fd9\u8c01\u4e0d\u77e5\u9053\u5440\uff01\u4e0d\u8fc7\u6211\u5728\u8fd9\u91cc\u82b1\u65f6\u95f4\u753b\u4e86\u4e09\u5f20\u56fe\uff0c\u603b\u8fd8\u662f\u6709\u6240\u8003\u91cf\u7684\uff1a a. \u4f5c\u4e3a\u4e0a\u4e00\u4e2a\u7ae0\u8282\u548c\u672c\u7ae0\u8282\u4e4b\u95f4\u7684\u8865\u5145\u548c\u8fde\u63a5\uff0c\u8bf4\u660e\u4e00\u4e0bOFDM\u5728\u9891\u57df\u4e0a\u9762\u7684\u8868\u73b0\uff0c\u4ea6\u5373OFDM\u7684\u672c\u6e90\u6765\u5386\u3002 b. \u5f15\u5bfc\u601d\u8003\uff1a\u4fe1\u53f7\u7684\u5e26\u5bbd\u662f\u591a\u5c11\uff1f c. \u5f15\u5bfc\u601d\u8003\uff1aOFDM\u6b63\u4ea4\u9891\u8c31\u53e0\u52a0\u90e8\u5206\u5230\u5e95\u6709\u591a\u5bbd\u5462\uff1f\u7ed3\u54081.4\uff0c\u5148\u60f3\u60f3\uff0c\u518d\u5f80\u4e0b\u770b\uff0c\u4f1a\u66f4\u597d\u3002 \u518d\u6b21\u56de\u5230\u6b63\u8f68\uff0c\u8bf7\u56de\u770b\u7b2c\u4e00\u8282\u4e2d\u7684\u56fe\u4e00\u81f3\u56fe\u516d\u7b49\u65f6\u57df\u6ce2\u5f62\u56fe\uff0c\u56fe\u793a\u4e86\u5728\u65f6\u57df\u4e0a\uff0c\u6ce2\u5f62\u7684\u8c03\u5236\uff0c\u53e0\u52a0\u63a5\u6536\uff0c\u4ee5\u53ca\u6700\u7ec8\u7684\u89e3\u7801\u3002\u8ba9\u6211\u4eec\u770b\u770b\u56fe\u4e00\u81f3\u56fe\u4e09\u4e2d\u7684\u6bcf\u4e2a\u6b65\u9aa4\u5728\u9891\u57df\u4e0a\u662f\u5982\u4f55\u8868\u73b0\u7684\u3002 \u9996\u5148\u6765\u770bsin(t)\u3002\"\u5c0f\u767d\"\u5440\"\u5c0f\u767d\"\uff0c\u4f60\u4e14\u8bf4\u8bf4sin(t)\u7684\u9891\u8c31\u662f\u5565\u5440\uff1f\"\u5c0f\u767d\"\u5f31\u5f31\u7684\u8bf4\uff1a\u662f\u4e00\u4e2a\u51b2\u6fc0\u3002\u662f\u7684\uff0csin(t)\u662f\u4e2a\u5355\u4e00\u7684\u6b63\u5f26\u6ce2\uff0c\u4ee3\u8868\u7740\u5355\u4e00\u7684\u9891\u7387\uff0c\u6240\u4ee5\u5176\u9891\u8c31\u81ea\u7136\u662f\u4e00\u4e2a\u51b2\u6fc0\u3002\u4e0d\u8fc7\u5176\u5b9e\u56fe\u4e00\u4e2d\u6240\u793a\u7684sin(t)\u5e76\u4e0d\u662f\u771f\u6b63\u7684sin(t)\uff0c\u800c\u53ea\u662f\u9650\u5b9a\u5728[0,2\u03c0]\u4e4b\u5185\u7684\u4e00\u5c0f\u6bb5\u3002\u65e0\u9650\u957f\u5ea6\u7684\u4fe1\u53f7\u88ab\u9650\u5236\u5728\u4e00\u5c0f\u622a\u65f6\u95f4\u4e4b\u5185\uff0c\u3010\u5c31\u597d\u6bd4\u4ece\u4e00\u4e2a\u5b8c\u6574\u7684\u4eba\u8eab\u4e0a\u902e\u4e0b\u4e00\u6839\u5934\u53d1\uff0c\u7136\u540e\u628a\u6574\u4e2a\u4eba\u90fd\u4e22\u6389\uff0c\u4ee5\u53d1\u4ee3\u4eba\u3011\u5176\u9891\u8c31\u4e5f\u4e0d\u518d\u662f\u4e00\u4e2a\u51b2\u6fc0\u4e86\u3002 \u5bf9\u9650\u5236\u5728[0,2\u03c0]\u5185\u7684sin(t)\u4fe1\u53f7\uff0c\u76f8\u5f53\u4e8e\u65e0\u9650\u957f\u7684sin(t)\u4fe1\u53f7\u4e58\u4ee5\u4e00\u4e2a[0,2\u03c0]\u4e0a\u7684\u95e8\u4fe1\u53f7\uff08\u77e9\u5f62\u8109\u51b2\uff09\uff0c\u5176\u9891\u8c31\u4e3a\u4e24\u8005\u9891\u8c31\u7684\u5377\u79ef\u3002sin(t)\u7684\u9891\u8c31\u4e3a\u51b2\u6fc0\uff0c\u95e8\u4fe1\u53f7\u7684\u9891\u8c31\u4e3asinc\u4fe1\u53f7\uff08\u5373sin(x)/x\u4fe1\u53f7\uff09\u3002\u51b2\u6fc0\u4fe1\u53f7\u5377\u79efsinc\u4fe1\u53f7\uff0c\u76f8\u5f53\u4e8e\u5bf9sinc\u4fe1\u53f7\u7684\u642c\u79fb\u3002\u6240\u4ee5\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u53ef\u4ee5\u5f97\u51fa\u56fe\u4e00\u7684\u65f6\u57df\u6ce2\u5f62\u5176\u5bf9\u5e94\u7684\u9891\u8c31\u5982\u4e0b\uff1a \u56fe21\uff1a\u9650\u5b9a\u5728[0,2\u03c0]\u5185\u7684a\u00b7sin(t)\u4fe1\u53f7\u7684\u9891\u8c31\uff0c\u5373\u4ee5sin(t)\u4e3a\u8f7d\u6ce2\u7684\u8c03\u5236\u4fe1\u53f7\u7684\u9891\u8c31 \u3000\u3000sin(2t)\u7684\u9891\u8c31\u5206\u6790\u57fa\u672c\u76f8\u540c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u6b63\u4ea4\u533a\u95f4\u4e3a[0,2\u03c0]\uff0c\u56e0\u6b64 sin(2t)\u5728\u76f8\u540c\u7684\u65f6\u95f4\u5185\u53d1\u9001\u4e86\u4e24\u4e2a\u5b8c\u6574\u6ce2\u5f62\u3002\u76f8\u540c\u7684\u95e8\u51fd\u6570\u4fdd\u8bc1\u4e86\u4e24\u4e2a\u51fd\u6570\u7684\u9891\u8c31\u5f62\u72b6\u76f8\u540c\uff0c\u53ea\u662f\u9891\u8c31\u88ab\u642c\u79fb\u7684\u4f4d\u7f6e\u53d8\u4e86 \uff1a \u56fe22\uff1a\u9650\u5b9a\u5728[0,2\u03c0]\u5185\u7684b\u00b7sin(2t)\u4fe1\u53f7\u7684\u9891\u8c31\uff0c\u5373\u4ee5sin(2t)\u4e3a\u8f7d\u6ce2\u7684\u8c03\u5236\u4fe1\u53f7\u7684\u9891\u8c31 \u3000\u3000\u5c06sin(t)\u548csin(2t)\u6240\u4f20\u4fe1\u53f7\u7684\u9891\u8c31\u53e0\u52a0\u5728\u4e00\u8d77\uff0c\u5982\u4e0b\uff1a \u56fe23\uff1aa\u00b7sin(t)+b\u00b7sin(2t)\u4fe1\u53f7\u7684\u9891\u8c31 \u3000\u3000\u56fe23\u548c\u56fe13\uff0c\u5747\u662f\u9891\u57df\u4e0a\u4e24\u4e2a\u6b63\u4ea4\u5b50\u8f7d\u6ce2\u7684\u9891\u8c31\u56fe\u3002\u6bd4\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e86\u5417\uff1f\u4e0d\u592a\u4e00\u6837\uff01 \u662f\u7684\uff0c\u60f3\u5fc5\u4f60\u5df2\u7ecf\u60f3\u8d77\u6765\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u57fa\u5e26\u4fe1\u53f7\u5728\u4f20\u8f93\u524d\uff0c\u4e00\u822c\u4f1a\u901a\u8fc7\u8109\u51b2\u6210\u578b\u6ee4\u6ce2\u5668\u7684\u7ed3\u679c\u3002\u6bd4\u5982\u4f7f\u7528\"\u5347\u4f59\u5f26\u6eda\u964d\u6ee4\u6ce2\u5668\"\u540e\uff0c\u56fe23\u6240\u793a\u7684\u4fe1\u53f7\u5c31\u4f1a\u88ab\u4fee\u7406\u6210\u56fe13\u6240\u793a\u7684\u4fe1\u53f7\u4e86\u3002\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u7684\u9650\u5236\u5e26\u5bbd\u5916\u90e8\u7684\u4fe1\u53f7\uff0c\u5728\u4fdd\u8bc1\u672c\u8def\u4fe1\u53f7\u6ca1\u6709\u7801\u95f4\u4e32\u6270\u7684\u60c5\u51b5\u4e0b\uff0c\u65e2\u80fd\u6700\u5927\u9650\u5ea6\u7684\u5229\u7528\u5e26\u5bbd\uff0c\u53c8\u80fd\u51cf\u5c11\u5b50\u8f7d\u6ce2\u95f4\u7684\u5404\u8def\u4fe1\u53f7\u7684\u76f8\u4e92\u5e72\u6270\u3002\u8fd9\u4e5f\u662f1.4\u4e2d\u6ca1\u6709\u63d0\u53ca\u7684\uff0c\u66f4\u591a\u7684\u53ef\u53c2\u8003[1] \u8d34\u58eb\uff1a\u8109\u51b2\u6210\u578b\u6ee4\u6ce2\u5668\u4f5c\u7528\u4e8e\u9891\u57df\uff0c\u53ef\u4ee5\"\u770b\u4f5c\"\u65f6\u57df\u4e2d\u7684\u6bcf\u4e2a\u7801\u5143\u90fd\u662f\u4ee5\u7c7b\u4f3csinc\u4fe1\u53f7\u53d1\u51fa\u7684\u3002\u6ca1\u5fc5\u8981\u7ea0\u7ed3\u4e8e\u53d1\u9001\u7aef\u7801\u5143\u7684\u65f6\u57df\u6ce2\u5f62\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5728\u63a5\u6536\u7aef\u901a\u8fc7\u5408\u9002\u7684\u91c7\u6837\u5c31\u53ef\u4ee5\u65e0\u5931\u771f\u7684\u6062\u590d\u4fe1\u53f7\u5c31OK\u54af\u3002 \u8fd9\u91cc\u7528\u5230\u7684\u662f \u5948\u594e\u65af\u7279\u7b2c\u4e00\u51c6\u5219 \uff0c\u5728\u4e0b\u9762\u7684\u6846\u6846\u5185\u4f1a\u7a0d\u4f5c\u63cf\u8ff0\uff1a \u4e0a\u9762\u4e13\u95e8\u7528\u6846\u6846\u5217\u51fa\u5948\u594e\u65af\u7279\u7b2c\u4e00\u51c6\u5219\uff0c\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u76ee\u7684\u5c31\u662f\u8bf4\u660e\u4e0b\u9891\u5e26\u5229\u7528\u7387\u7684\u95ee\u9898\u3002 \u9891\u5e26\u5229\u7528\u7387\u662f\u7801\u5143\u901f\u73871/T\u548c\u5e26\u5bbdB(\u6216\u8005W)\u7684\u6bd4\u503c \u3002 \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c \u4f4e\u901a \u4fe1\u9053\u9891\u5e26\u5229\u7528\u7387\u4e3a2Baud/Hz\uff1b \u5e26\u901a \u4fe1\u9053\u9891\u5e26\u5229\u7528\u7387\u5728\u4f20\u8f93\u5b9e\u6570\u4fe1\u53f7\u65f6\u4e3a1Baud/Hz\uff0c\u4f20\u9001\u590d\u6570\u4fe1\u53f7\u65f6\u4e3a2Baud/Hz\uff08\u8d1f\u9891\u7387\u548c\u6b63\u9891\u7387\u90fd\u72ec\u7acb\u643a\u5e26\u4fe1\u53f7\uff09\u3002\u7531\u4e8e\u8ba8\u8bba\u4f4e\u901a\u4fe1\u9053\u65f6\u5f80\u5f80\u8003\u8651\u7684\u662f\u5b9e\u6570\u4fe1\u53f7\uff0c\u800c\u8ba8\u8bba\u5e26\u901a\u4fe1\u9053\u65f6\u901a\u5e38\u8003\u8651\u7684\u662f\u590d\u6570\u4fe1\u53f7\uff0c\u56e0\u6b64 \u53ef\u4ee5\u7b80\u5355\u8ba4\u4e3a\uff1a\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4fe1\u9053\u7684\u9891\u5e26\u5229\u7528\u7387\u4e3a2Baud/Hz \u3002 \u5b9e\u9645\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a\u5b9e\u9645\u5e26\u5bbdB\u8981\u5927\u4e8e\u5948\u594e\u65af\u7279\u5e26\u5bbdW\uff0c\u6240\u4ee5\u5b9e\u9645FDM\u7cfb\u7edf\u7684\u9891\u5e26\u5229\u7528\u7387\u4f1a\u4f4e\u4e8e\u7406\u60f3\u60c5\u51b5\u3002 \u3010 \u8bf4\u5230\u8fd9\u91cc\uff0c\u7ec8\u4e8e\u53ef\u4ee5\u56fe\u7a77\u5315\u89c1\u4e86 \u3011\u800cOFDM\u7684\u5b50\u8f7d\u6ce2\u95f4\u9694\u6700\u4f4e\u80fd\u8fbe\u5230\u5948\u594e\u65af\u7279\u5e26\u5bbd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff08\u5728\u4e0d\u8003\u8651\u6700\u65c1\u8fb9\u7684\u4e24\u4e2a\u5b50\u8f7d\u6ce2\u60c5\u51b5\u4e0b\uff09\uff0c OFDM\u8fbe\u5230\u4e86\u7406\u60f3\u4fe1\u9053\u7684\u9891\u5e26\u5229\u7528\u7387 \u3002 \u56fe32\uff1aOFDM\u6b63\u4ea4\u5b50\u8f7d\u6ce2\uff0c\u8f7d\u9891\u95f4\u8ddd\u4e3a\u5948\u594e\u65af\u7279\u5e26\u5bbd\uff0c\u4fdd\u8bc1\u4e86\u6700\u5927\u7684\u9891\u5e26\u5229\u7528\u7387 \u3000\u3000\u5c06\u4e0a\u8ff0\u7684\u9891\u57df\u5206\u6790\u914d\u4e0aLTE\u7684\u5b9e\u73b0\uff0c\u6709\u5982\u4e0b\u60c5\u51b5\uff1a \u3000\u3000\u3010\u6ce8\uff1a\u672c\u6bb5\u63cf\u8ff0\u9700\u8981\u6709LTE\u7269\u7406\u5c42\u7684\u57fa\u672c\u77e5\u8bc6\u3011 \u5b50\u8f7d\u6ce2\u7684\u95f4\u9694\u0394f=15kHz\uff0c\u4e00\u4e2aOFDM symbol\u7684\u53d1\u9001\u65f6\u95f4\u662f66.7us\u3002\u572810MHz\u4fe1\u9053\u4e0a\uff0c1ms\u7684\u5b50\u5e27\u5171\u4f20\u8f9314\u4e2aOFDM symbol\u3010\u4e0d\u662f15\u4e2a\uff0c\u7559\u7a7a\u7ed9CP\u4e86\u3011\uff0c\u6bcf\u4e00\u4e2aOFDM symbol\u643a\u5e26600\u4e2a\u590d\u6570\u4fe1\u606f\uff0c\u56e0\u6b64\uff1a \u3000\u30001. \u4ece\u6574\u4e2a\u7cfb\u7edf\u6765\u770b\uff0c\u6ce2\u7279\u7387\u4e3a600 14 2/1ms = 16.8MBaud\uff0c\u5360\u636e\u5e26\u5bbd10MHz\uff0c\u56e0\u6b64\u5e26\u5bbd\u5229\u7528\u7387\u4e3a16.8MBaud/10MHz = 1.68Baud/Hz\uff0c\u63a5\u8fd12Baud/Hz\u7684\u7406\u60f3\u60c5\u51b5\u3002\u3010\u6ce8\uff1a\u4e00\u662fCP\u5360\u7528\u4e86\u6bcf\u4e2aOFDM Symbol\u7ea61/15\u7684\u8d44\u6e90\uff0c\u4e8c\u662f10MHz\u7684\u9891\u5e26\u5e76\u4e0d\u662f\u6ee1\u6253\u6ee1\u7b97\u7684\u7528\u4e8e\u4f20\u8f93\u6570\u636e\uff0c\u5176\u8fb9\u754c\u9891\u5e26\u9700\u8981\u7559\u7a7a\u4ee5\u51cf\u5c11\u4e0e\u90bb\u8fd1\u4fe1\u9053\u7684\u5e72\u6270\u3011 \u3000\u30002. \u5355\u4eceOFDM\u4e00\u4e2asymbol\u6765\u770b\uff0c\u6ce2\u7279\u7387\u4e3a600 2/66.7us = 18MBaud\uff0c\u5360\u636e\u5e26\u5bbd600 15kHz=9MHz\u3010\u4e0d\u8003\u8651\u8fb9\u754c\u5b50\u8f7d\u6ce2\u5e26\u5916\u95ee\u9898\u3011\uff0c\u56e0\u6b64\u5176\u5e26\u5bbd\u5229\u7528\u7387\u4e3a18MBaud/9MHz=2Baud/Hz\uff0c\u7b26\u5408\u4e0a\u9762\u7684\u8ba8\u8bba\u3002 \u9644\uff1a5M\u5e26\u5bbd\u7684WCDMA\u7684chip rate = 3.84M/s\uff0c\u5373\u7801\u7387\u4e3a3.84M*2 = 7.68MBaud\uff0c\u5e26\u5bbd5M\uff0c\u6240\u4ee5\u5e26\u5bbd\u5229\u7528\u7387\u4e3a7.68MBaud/5MHz = 1.536Baud/Hz\uff0c\u7565\u900a\u4e8eLTE\u76841.68Baud/Hz\u3010\u6ce8\uff1aWCDMA\u7684\u8109\u51b2\u6210\u578b\u91c7\u7528\u6eda\u964d\u7cfb\u6570\u4e3a0.22\u7684\u5347\u4f59\u5f26\u6ee4\u6ce2\u5668\uff0c\u5948\u594e\u65af\u7279\u5e26\u5bbd\u4e3a3.84M\u3011","title":"\u7ae0\u8282\u4e8c\uff1a\u9891\u57df\u4e0a\u7684OFDM"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#ifftofdm","text":"\u5176\u5b9e\u524d\u4e24\u7ae0\uff0c\u6211\u5df2\u7ecf\u5c06\u81ea\u5df1\u7684\u7406\u89e3\u5c3d\u6570\u8868\u8fbe\u4e86\uff1a \u7b2c\u4e00\u8282\u662f\u4ece\u65f6\u57df\u4e0a\u6765\u8bf4\u5b50\u8f7d\u6ce2\u6b63\u4ea4\u7684\u539f\u7406\uff1b\u7b2c\u4e8c\u8282\u662f\u4ece\u9891\u57df\u4e0a\u6765\u89e3\u91ca\u5b50\u8f7d\u6ce2\u6b63\u4ea4\u540e\uff0c\u8fbe\u5230\u7406\u60f3\u9891\u5e26\u5229\u7528\u7387\u7684\u7279\u6027 \u3002\u60f3\u6765\uff0c\u867d\u7136\u524d\u4e24\u7ae0\u5199\u5f97\u8f83\u957f\u3010\u6ca1\u9884\u6599\u5230\u4f1a\u5199\u8fd9\u4e48\u957f\u7684...\u592a\u957f\u4e86\u6ca1\u4eba\u770b...\u3011\uff0c\u4f46\u662f\u5e94\u8be5\u8fd8\u662f\u5f88\u7b80\u5355\u3001\u6e05\u6670\u3001\u6613\u61c2\u7684\u3002 \u3000\u3000\u4e0d\u8fc7\"\u5c0f\u767d\"\u7684\u5361\u58f3\uff0c\u4f3c\u4e4e\u5e76\u4e0d\u5728\u4e8e\u6700\u57fa\u672c\u7684\u6b63\u4ea4\u539f\u7406\u548c\u9891\u5e26\u5229\u7528\u7387\u4e0a\uff0c\u53cd\u800c\u662fIFFT\u53d8\u6362\u4e2d\uff0c\u5145\u65a5\u7684\u5404\u79cd\u65f6\u57df\u9891\u57df\u89d2\u8272\u53d8\u6362\u8ba9\u5176\u773c\u82b1\u7f2d\u4e71\u3002 \u4e2a\u4eba\u89c9\u5f97\u8981\u7406\u89e3IFFT\u5b9e\u73b0OFDM\uff0c\u6700\u597d\u7684\u529e\u6cd5\u8fd8\u662f\u770b\u516c\u5f0f\u3002\u6bd4\u5982\u7b2c\u4e00\u7ae0\u8282\u4e2d\u7684\u516c\u5f0f1-1\u548c\u516c\u5f0f1-2\uff0c\u914d\u4e0a\u65f6\u57df\u6ce2\u5f62\u56fe\u7684\u53e0\u52a0\uff0c\u4e0d\u8981\u592a\u597d\u7406\u89e3\u54df\u3002\u5f53\u7136\uff0c\u8fd9\u91cc\u7684IFFT\u9700\u8981\u5c06\u65f6\u57df\u79bb\u6563\u5316\uff0c\u56e0\u6b64\u516c\u5f0fIFFT \u2248 IDFT --> fn = 1/N\u00b7\u2211Fk\u00b7e(j\u00b72\u03c0\u00b7k\u00b7n/N) \u3010\u516c\u5f0f3-1\uff0cn\u4e3a\u65f6\u57df\u79bb\u6563\u540e\u7684\u5e8f\u53f7\uff0cN\u4e3a\u603b\u7684IFFT\u4e2a\u6570\uff0cn\u2208[1,N]\u3011 \u5173\u4e8e\u516c\u5f0f3-1\u7684\u7406\u89e3\u65b9\u6cd5\uff0c\u53ef\u4ee5\u662f\u8fd9\u6837\u7684\u3002 \u5176\u4e2d\u4e00\u79cd\u7406\u89e3\u65b9\u5f0f \u662f\u8054\u7cfb\u7b2c\u4e00\u7ae0\u8282\u7684\u516c\u5f0f1-2\uff1a\u53ef\u4ee5\u53d1\u73b0\u516c\u5f0f3-1\u7b49\u53f7\u53f3\u4fa7\u6240\u8868\u8fbe\u7684\u7269\u7406\u610f\u4e49\u548c\u516c\u5f0f1-2\u662f\u76f8\u540c\u7684\uff0c\u5747\u4ee3\u8868\u4e86\u4e0d\u540c\u5b50\u8f7d\u6ce2e(j\u00b72\u03c0\u00b7k\u00b7n/N)\u53d1\u9001\u5404\u81ea\u7684\u4fe1\u53f7Fk\uff0c\u7136\u540e\u5728\u65f6\u57df\u4e0a\u7684\u53e0\u52a0\u5f62\u6210fn\uff0c\u53ea\u4e0d\u8fc7\u73b0\u5728\u53e0\u52a0\u51fa\u6765\u7684\u65f6\u57df\u4e0d\u662f\u8fde\u7eed\u6ce2\u5f62\uff0c\u800c\u662f\u79bb\u6563\u7684\u65f6\u5e8f\u62bd\u6837\u70b9\u3002 \u53e6\u4e00\u79cd\u66f4\u5bb9\u6613\uff0c\u66f4\u53ef\u7231\u7684\u7406\u89e3\u65b9\u5f0f\u662f \uff1a\u5728\u4e00\u4e2aOFDM symbol\u7684\u65f6\u957fT\u5185\uff0c\u7528N\u4e2a\u5b50\u8f7d\u6ce2\u5404\u81ea\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7F(k)\uff08k\u2208[1,N]\uff09\uff0c\u7b49\u6548\u4e8e\u76f4\u63a5\u5728\u65f6\u57df\u4e0a\u8fde\u7eed\u53d1\u9001fn\uff08n\u2208[1,N]\uff09N\u4e2a\u4fe1\u53f7\uff0c\u6bcf\u4e2a\u4fe1\u53f7\u53d1\u9001T/N\u7684\u65f6\u957f\u3002 \u5728IFFT\u5b9e\u73b0OFDM\u4e2d\uff0c\u53d1\u9001\u7aef\u6dfb\u52a0\u4e86IFFT\u6a21\u5757\u3001\u63a5\u6536\u7aef\u6dfb\u52a0\u4e86FFT\u6a21\u5757\u3002 IFFT\u6a21\u5757\u7684\u529f\u80fd\u76f8\u5f53\u4e8e\u8bf4\uff1a\u522b\u9ebb\u70e6\u53d1\u9001N\u4e2a\u5b50\u8f7d\u6ce2\u4fe1\u53f7\u4e86\uff0c\u6211\u76f4\u63a5\u7b97\u51fa\u4f60\u4eec\u5728\u7a7a\u4e2d\u4f1a\u53e0\u52a0\u6210\u5565\u6837\u5b50\u5427 \uff1b FFT\u6a21\u5757\u7684\u529f\u80fd\u76f8\u5f53\u4e8e\u8bf4\uff1a\u522b\u7528\u8001\u5f0f\u7684\u79ef\u5206\u65b9\u6cd5\u6765\u53bb\u9664\u5176\u4f59\u7684\u6b63\u4ea4\u5b50\u8f7d\u6ce2\u4e86\uff0c\u6211\u5e2e\u4f60\u4e00\u6b21\u628aN\u4e2a\u643a\u5e26\u4fe1\u53f7\u5168\u7b97\u51fa\u6765\u5427 \u3002\u5c31\u662f\u8fd9\u6837\uff0cIFFT\u5b9e\u73b0OFDM\u7684\u7cfb\u7edf\u7528\" \u6570\u5b66\u7684\u65b9\u6cd5 \"\uff0c\u5728\u53d1\u9001\u7aef\u8ba1\u7b97\u4fe1\u53f7\u7684\u53e0\u52a0\u6ce2\u5f62\uff0c\u5728\u63a5\u6536\u7aef\u53bb\u9664\u6b63\u4ea4\u5b50\u8f7d\u6ce2\uff0c\u4ece\u800c\u5927\u5927\u7b80\u5316\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002 \u56fe\u516b\uff1a\u7528IFFT\u5b9e\u73b0OFDM\u3002\u8bf7\u81ea\u884c\u5bf9\u6bd4\u56fe\u4e03 \u3000\u3000\u6700\u540e\u8bf4\u4e00\u53e5\uff1a\"\u5c0f\u767d\"\u4e43\"\u767d\u5bcc\u7f8e\"\u4e4b\"\u767d\"\uff0c\u975e\"\u4e00\u7a77\u4e8c\u767d\"\u4e4b\"\u767d\"\u4e5f\u3002 \u3000\u3000\u597d\u5427\uff0c\u8be5\u7ed3\u675f\u4e86\u3002\u518d\u5199\u5f97\u957f\u4e86\u66f4\u6ca1\u4eba\u770b\u4e86\u3002","title":"\u7ae0\u8282\u4e09\uff1a\u7528IFFT\u5b9e\u73b0OFDM"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_13","text":"\u672c\u6587\u6700\u5f00\u59cb\u53d1\u8868\u65f6\u662f\u6ca1\u6709\u8fd9\u4e00\u6bb5\u7684\uff0c\u56e0\u4e3a\u539f\u6587\u5df2\u7136\u5341\u5206\u81ea\u6070\uff0c\u5df2\u5c06OFDM\u7684\u539f\u7406\u8bf4\u7684\u975e\u5e38\u6e05\u695a\u5230\u4f4d\u4e86\u3002\u7136\u800c\uff0c\u8fd9\u4e00\u6bb5\u7684\u5185\u5bb9\u5374\u662f\u522b\u7684\u6587\u7ae0\u4e2d\u8bb2\u89e3OFDM\u65f6\u7ecf\u5e38\u51fa\u73b0\u7684\u6865\u6bb5\uff0c\u56e0\u6b64\u89c9\u5f97\u8fd8\u662f\u6709\u5fc5\u8981\u8865\u5145\u9648\u8ff0\u4e00\u4e0b\u81ea\u5df1\u7684\u89c2\u70b9\u3002 \u3010\u6ce8\uff1a\u672c\u5c0f\u8282\u4e3a\u8865\u5145\u7ae0\u8282\uff0c\u4e0e\u672c\u6587\u903b\u8f91\u6ca1\u6709\u5fc5\u7136\u8054\u7cfb\uff0c\u53ef\u76f4\u63a5\u7565\u8fc7\u3002\u3011 \u4ece\u6b63\u6587\u7ae0\u8282\u4e2d\uff0c\u53ef\u4ee5\u53d1\u73b0 \u4f5c\u8005\u7684\u601d\u8def\uff1a\u4ece\u65f6\u57df\u89d2\u5ea6\u8bb2\u89e3\u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027\uff1b\u4ece\u9891\u57df\u89d2\u5ea6\u8bb2\u89e3OFDM\u7684\u9891\u5e26\u5229\u7528\u7387 \u3002\u4f5c\u8005\u89c9\u5f97\u8fd9\u662f\u6700\u5bb9\u6613\u7406\u89e3OFDM\u539f\u7406\u7684\u65b9\u5f0f\u3002\u4f46\u662f\u6559\u6750\u4e2d\u3001\u7f51\u7edc\u4e0a\uff0c\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u4e3b\u6d41\u7684\u8bb2\u89e3\u65b9\u5f0f\uff1a \u4ece\u9891\u57df\u4e0a\u201c\u76f4\u89c2\u7684\u201d\u770b\u5f85\u5b50\u8f7d\u6ce2\u7684\u6b63\u4ea4\u6027 \u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff1a \u56fe51\uff1a\u4eceOFDM\u9891\u8c31\u770b\u5f85\u6b63\u4ea4\u6027\uff08 \u672c\u56fe\u6765\u81ea\u7f51\u7edc \uff0c\u6bd4\u6211\u753b\u7684\u56fe\u597d\u4e9b\uff0c\u8fd8\u6709\u6587\u5b57\u8bf4\u660e\uff09 \u8fd9\u79cd\u89c2\u70b9\u7684\u8bf4\u6cd5\u662f\uff1a \u5728\u6bcf\u4e2a\u5b50\u8f7d\u6ce2\u7684\u62bd\u6837\u70b9\u4e0a\uff0c\u5176\u5b83\u7684\u5b50\u8f7d\u6ce2\u4fe1\u53f7\u62bd\u6837\u503c\u5747\u4e3a0 \uff08\u5373\u4e0a\u56fe\u4e2d\u7684subcarrier Nulls\u5bf9\u5e94\u67d0\u4e2a\u5b50\u8f7d\u6ce2\u7684Subcarrier Peak\uff09\u3002\u8fd9\u79cd\u8bf4\u6cd5\u5728\u56fe\u793a\u4e0a\u6709\u975e\u5e38\u9192\u76ee\u7684\u76f4\u89c2\u6548\u679c\uff0c\u6240\u4ee5\u662f\u5404\u6559\u6750\u8bb2\u4e49\u4e2d\u7684\u5e38\u5ba2\uff0c\u4f46\u662f\u81f3\u5c11\u4ece\u4f5c\u8005\u7684\u89d2\u5ea6\u6765\u770b\uff0c \u8fd9\u79cd\u8bf4\u6cd5\u5728\u6d89\u53ca\u5230\u540e\u9762\u7684\u89e3\u8c03\u4fe1\u53f7\u65f6\uff0c\u5c06\u53d8\u5f97\u975e\u5e38\u96be\u4ee5\u7406\u89e3\u548c\u8bf4\u660e \u3002\u6240\u4ee5\u672c\u6587\u6700\u5f00\u59cb\u7684\u7248\u672c\u4e2d\u662f\u6ca1\u6253\u7b97\u5199\u672c\u5c0f\u8282\u7684\u3002 \u5982\u679c\u4f60\u770b\u5230\u8fd9\u91cc\uff0c\u89c9\u5f97\u8fd9\u79cd\u8bf4\u6cd5\u6b63\u4e2d\u4e0b\u6000\uff0c\u90a3\u4e48\u606d\u559c\u4f60\u3002 \u5982\u679c\u4f60\u770b\u5230\u8fd9\u91cc\uff0c\u89c9\u5f97\u8fd9\u79cd\u8bf4\u6cd5\u5df2\u7ecf\u8ba9\u4f60\u7684\u8111\u888b\u6210\u4e86\u6d46\u7cca\uff0c\u90a3\u4e48\u53ef\u4ee5\u56de\u987e\u7b2c\u4e00\u7ae0\u8282\uff1a\u65f6\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\uff0c\u7136\u540e\u7ee7\u7eed\u9605\u8bfb\u4e0b\u9762\u90e8\u5206\u4ee5\u89e3\u6bd2\u3002 \u65f6\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u548c\u9891\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\u8be5\u5982\u4f55\u8054\u7cfb\u8d77\u6765\u5462\uff1f\u56de\u987e\u524d\u9762\u63d0\u5230sin(t)\u548csin(2t)\u662f\u6b63\u4ea4\u7684\u3010\u8bc1\u660e\uff1asin(t)\u00b7sin(2t)\u5728\u533a\u95f4[0,2\u03c0]\u4e0a\u7684\u79ef\u5206\u4e3a0\u3011\uff0c\u63a8\u5e7f\u5230\u66f4\u4e00\u822c\u7684\u60c5\u51b5\u662f\uff1a{sin(2\u03c0\u00b7\u0394f\u00b7t)\uff0csin(2\u03c0\u00b7\u0394f\u00b72t)\uff0csin(2\u03c0\u00b7\u0394f\u00b73t),...,sin(2\u03c0\u00b7\u0394f\u00b7kt)}\u5728\u533a\u95f4[0, 1/\u0394f]\u4e0a\u6b63\u4ea4\uff08\u6ce8\uff1a\u6559\u6750\u4e0a\u4e00\u822c\u5199\u4e3au(t)\u5728[-T/2,T/2]\u533a\u95f4\u4e0a\u600e\u4e48\u600e\u4e48\u7740\uff0c\u672c\u6587\u5c31\u7528\u4e0d\u7740\u90a3\u4e48\u5b66\u672f\u4e86\uff09\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5173\u952e\u7684\u53c2\u6570\u0394f\uff1a\u5b83\u65e2\u662f\u9891\u57df\u4e0a\u5b50\u8f7d\u6ce2\u7684\u95f4\u8ddd\uff0c\u53c8\u786e\u5b9a\u4e86\u65f6\u57df\u4e0a\u7684\u4fe1\u53f7\u4f20\u8f93\u65f6\u95f4\u3002\u56de\u987e\u65f6\u57df\u9891\u57df\u8f6c\u6362\u56fe\uff1a \u56fe52\uff1a\u540c\u524d\u9762\u7684\u56fe21\uff0c\u65f6\u57df\u6ce2\u5f62\u548c\u9891\u57df\u7684\u8f6c\u6362 \u8054\u7cfb\u4e0a\u56fe\u7684\u65f6\u9891\u8f6c\u6362\uff0c\u53ef\u4ee5\u53d1\u73b0 \u0394f\u65e2\u786e\u5b9a\u4e86\u5b50\u8f7d\u6ce2\u672c\u8eab(\u5373\u4e0a\u56fe\u4e2d\u7b2c\u4e00\u6392\u7684\u4e24\u4e2a\u56fe)\uff0c\u53c8\u786e\u5b9a\u4e86\u5f85\u53d1\u4fe1\u53f7\u7684\u4f20\u8f93\u65f6\u95f4(\u5373\u4e0a\u56fe\u4e2d\u7b2c\u4e8c\u6392\u7684\u4e24\u4e2a\u56fe\u4e2d\u4fe1\u53f7\u7684\u5bbd\u5ea6)\uff0c\u4ece\u800c\u51b3\u5b9a\u4e86\u4fe1\u53f7\u9891\u8c31\u7684\u4e3b\u74e3\u5bbd\u5ea6\u4ee5\u53ca\u65c1\u74e3\u4e3a0\u7684\u4f4d\u7f6e \u3002\u8fd9\u4e5f\u610f\u5473\u7740\uff0cOFDM\u7cfb\u7edf\u4e2d\u4e00\u65e6\u9009\u5b9a\u4e86\u5b50\u8f7d\u6ce2\u95f4\u9694\uff0c\u65f6\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u4ee5\u53ca\u9891\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u4e5f\u5c31\u987a\u7406\u6210\u7ae0\u7684\u8054\u7cfb\u8d77\u6765\u4e86\u3002\u5982\u4e0b\u56fe\uff1a \u56fe53\uff1a\u540c\u524d\u9762\u7684\u56fe23\uff0c\u4e24\u8def\u4fe1\u53f7\u7684\u95f4\u9694\u0394f\uff0c\u4fdd\u8bc1\u4e86\u65f6\u57df\u4e0a\u7684\u6b63\u4ea4\u6027\u3001\u786e\u5b9a\u4e86\u9891\u57df\u4e0a\u7684\u65c1\u74e30\u70b9\u4f4d\u7f6e \u5176\u5b9e\u5bf9\u672c\u4f5c\u8005\u800c\u8a00\uff0c\u4ece\u9891\u8c31\u4e0a\u6765\u770b\u5f85OFDM\u7684\u6b63\u4ea4\u6027\u6709\u70b9\u98a0\u5012\u56e0\u679c\u7684\u5acc\u7591\u3002\u6309\u6211\u7684\u7406\u89e3\uff1aOFDM\u9009\u7528\u7684\u6b63\u4ea4\u5b50\u8f7d\u6ce2\u662f\u56e0\uff0c\u9891\u8c31\u4e2d\u51fa\u73b0\u201c\u5176\u4f59\u5b50\u8f7d\u6ce2\u643a\u5e26\u4fe1\u53f7\u7684\u65c1\u74e30\u70b9\u5904\u4e8e\u5f53\u524d\u5b50\u8f7d\u6ce2\u643a\u5e26\u4fe1\u53f7\u4e3b\u74e3\u5cf0\u503c\u5904\u201d\u7684 \u73b0\u8c61 \u662f\u679c\u3002\u4ee5\u679c\u63a8\u56e0\uff0c\u8c2c\u77e3\u3002","title":"\u8865\u5145\u7ae0\u8282\uff1a\u4ece\u9891\u8c31\u4e0a\u6765\u770b\u6b63\u4ea4\u6027"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_14","text":"\u56de\u590d\u7559\u8a00\u65f6\u4e00\u76f4\u51fa\u9519\uff0c\u5e78\u597d\u4fdd\u5b58\u4e86\uff0c\u5c31\u76f4\u63a5\u5199\u5728\u8fd9\u91cc\u4e86\u3002 \u8981\u5f04\u6e05\u695a\u4fe1\u53f7\u7684\u542b\u4e49\uff0c\u53ef\u4ee5\u5c06\u6574\u4e2a\u7269\u7406\u5c42\u4fe1\u53f7\u4f20\u8f93\u7684\u8fc7\u7a0b\u7ed9\u5206\u89e3\u5f00\u6765\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u4e0d\u540c\u7684\u6b65\u9aa4\u5bf9\u4fe1\u53f7\u7684\u5904\u7406\u662f\u4e0d\u540c\u7684\u3002 \u4fe1\u6e90\u7f16\u7801 \u7740\u91cd\u4e8e\u5bf9\u4fe1\u53f7\u7684\u5bb9\u91cf\u8fdb\u884c\u538b\u7f29\uff0c\u63d0\u9ad8\u4f20\u8f93\u6548\u7387\uff08\u6bd4\u7279\u6d41\uff09\uff1b \u4fe1\u9053\u7f16\u7801 \u9488\u5bf9\u591a\u53d8\u7684\u4fe1\u9053\u63d2\u5165\u5197\u4f59\u4fe1\u606f\uff0c\u589e\u52a0\u4f20\u8f93\u7684\u7a33\u5b9a\u6027\uff08\u6bd4\u7279\u6d41\uff09\uff1b \u4fe1\u53f7\u8c03\u5236 \u5219\u662f\u5c06\u6bd4\u7279\u6d41\u8f6c\u6210\u4e86\u7279\u5b9a\u7684\u6ce2\u5f62\u8fdb\u884c\u4f20\u8f93\uff0c\u6839\u636e\u8c03\u5236\u65b9\u5f0f\u7684\u4e0d\u540c\uff0c\u5373\u53ef\u80fd\u662f\u4e00\u4e2a\u6bd4\u7279\u5bf9\u5e94\u4e00\u4e2a\u6ce2\u5f62\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6570\u4e2a\u6bd4\u7279\u5bf9\u5e94\u4e00\u4e2a\u6ce2\u5f62\uff08\u9ad8\u9636\u8c03\u5236\uff09\u3002\u6240\u4ee5\u6709\u4e2a\u95ee\u9898\u8bf4\u4e0d\u77e5\u90530\u5bf9\u5e94\u4ec0\u4e48\u6ce2\u5f62\uff0c1\u5bf9\u5e94\u4ec0\u4e48\u6ce2\u5f62\uff0c\u662f\u56e0\u4e3a\u6ca1\u5f04\u6e05\u8c03\u5236\u8fc7\u7a0b\u3002 \u5728\u91c7\u7528\u6bd4\u5982QAM64\u8c03\u5236\u540e\uff0c\u51fa\u6765\u7684symbol\u5c31\u662f\u590d\u6570\u4e86 \uff0c\u8fd9\u4e5f\u662f\u590d\u6570\u4fe1\u53f7\u7684\u6765\u5386\u3002\u4e00\u822c\u7684\u6587\u7ae0\u4f1a\u5c06\u4e00\u4e2asymbol\u770b\u4f5c\u4e00\u4e2a\u8f93\u5165\u6765\u770b\u5f85\u548c\u8ba8\u8bba\u4e0b\u9762\u7684\u6b65\u9aa4\uff0c\u800c\u6211\u8fd9\u7bc7\u6587\u7ae0\u56e0\u4e3a\u662f\u4ecesin\u548ccos\u5165\u624b\u6765\u8ba8\u8bba\u6b63\u4ea4\u6027\u7684\uff0c\u56e0\u6b64\u6211\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u5c06\u4e00\u4e2asymbol\u770b\u6210\u4e86\u4e24\u4e2a\u5b9e\u6570\uff0c\u6545\u800c\u5728\u8ba8\u8bba\u4fe1\u9053\u5229\u7528\u7387\u65f6\u548c\u4e3b\u6d41\u201c\u7ed3\u8bba\u201d\u6709\u70b9\u51fa\u5165\uff0c\u4f46\u5176\u5b9e\u662f\u5404\u81ea\u7684\u5047\u8bbe\u4e0d\u540c\u800c\u5df2\u3002 \u5728\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\uff0cQAM symbol \u8fdb\u884c\u4e86\u9488\u5bf9\u5929\u7ebf\u9635\u5217\u7684precoding\u548c\u8d44\u6e90\u5206\u914d\u7684mapping\u540e\uff0c\u5c31\u4f1a\u8fdb\u5165OFDM\u8c03\u5236\u4e86\uff08\u5c31\u662f\u4e0a\u9762\u56fe\u516b\u7684\u4e00\u7ad9\u5f0fIFFT\u8ba1\u7b97\uff09","title":"\u7ee7\u7eed\u8bf4\u660e\uff1a\u5173\u4e8e\u7269\u7406\u5c42\u7684\u4fe1\u53f7"},{"location":"ESP32/%E8%B0%83%E5%88%B6/#_15","text":"\u7559\u8a00\u4e2d\u4e0d\u5c11\u5173\u4e8e \u8d1f\u9891\u7387 \u7684\u7591\u95ee\uff0c\u5df2\u53e6\u4f5c\u4e00\u6587\u4e8e\u6b64\uff1a \u300a\u5173\u4e8e\u8d1f\u9891\u7387\u7684\u7269\u7406\u610f\u4e49\u300b ( http://www.jianshu.com/p/5872553401f9 ) \u53c2\u8003[1]: Wireless Communications, Andrea Goldsmith - 12.2 Multicarrier Modulation with Overlapping Subchannels \u53c2\u8003[2]: Principles of Digital Communication - Gallager - 6.4.1 Double-sideband amplitude modulation \u5173\u4e8eOFDM \u8c03\u5236 N \u5e74\u524d\u5728\u5927\u5b66\u8bfe\u5802\u4e0a\u5b66\u7684\u4e1c\u897f\u4eca\u5929\u4e00\u6b21\u673a\u4f1a\u53c8\u8981\u62ff\u51fa\u6765\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u4e86\u3002 OFDM \u5dee\u4e0d\u591a\u662f\u6211\u4e86\u89e3\u5230\u7684\u6700\u590d\u6742\u7684\u8c03\u5236\u65b9\u6cd5\u4e86\uff08\u636e\u8bf4CDMA \u66f4\u590d\u6742\uff09 \u5148\u8bf4\u4e00\u4e0b\u5085\u7acb\u53f6\u53d8\u6362\uff0c\u6211\u53ea\u80fd\u7528\u4e00\u53e5\u4e66\u5230\u7528\u65f6\u65b9\u6068\u5c11\u6765\u5f62\u5bb9\uff0c\u5f53\u5e74\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u662f\u4e00\u7247\u6d6e\u4e91\uff08\u770b\u4e0d\u61c2\u7684\u79ef\u5206\u8fd0\u7b97\uff09\uff0c\u8c01\u77e5\u4ed6\u662f\u795e\u5668\uff0c\u57fa\u672c\u4f60\u80fd\u60f3\u5230\u7684\u81ea\u7136\u5b66\u79d1\u4e2d\u90fd\u80fd\u770b\u5230\u4ed6\u7684\u8fd0\u7528\u3002 \u5085\u91cc\u53f6\u53d8\u6362\uff08Transform\u00e9e de Fourier\uff09\u5728\u7269\u7406\u5b66\u3001\u6570\u8bba\u3001\u7ec4\u5408\u6570\u5b66\u3001\u4fe1\u53f7\u5904\u7406\u3001\u6982\u7387\u8bba\u3001\u7edf\u8ba1\u5b66\u3001\u5bc6\u7801\u5b66\u3001\u58f0\u5b66\u3001\u5149\u5b66\u3001\u6d77\u6d0b\u5b66\u3001\u7ed3\u6784\u52a8\u529b\u5b66\u7b49\u9886\u57df\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u5085\u91cc\u53f6\u53d8\u6362\u80fd\u5c06\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u67d0\u4e2a\u51fd\u6570\u8868\u793a\u6210\u4e09\u89d2\u51fd\u6570\uff08\u6b63\u5f26\u548c/\u6216\u4f59\u5f26\u51fd\u6570\uff09\u6216\u8005\u5b83\u4eec\u7684\u79ef\u5206\u7684\u7ebf\u6027\u7ec4\u5408\u3002\u5728\u4e0d\u540c\u7684\u7814\u7a76\u9886\u57df\uff0c\u5085\u91cc\u53f6\u53d8\u6362\u5177\u6709\u591a\u79cd\u4e0d\u540c\u7684\u53d8\u4f53\u5f62\u5f0f\uff0c\u5982\u8fde\u7eed\u5085\u91cc\u53f6\u53d8\u6362\u548c\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\u3002 \u5085\u91cc\u53f6\u53d8\u6362\u662f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u4e00\u79cd\u5de5\u5177\uff0c\u4e00\u79cd\u770b\u5f85\u95ee\u9898\u7684\u89d2\u5ea6\u3002\u7406\u89e3\u7684\u5173\u952e\u662f\uff1a\u4e00\u4e2a\u8fde\u7eed\u7684\u4fe1\u53f7\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u4e2a\u5c0f\u4fe1\u53f7\u7684\u53e0\u52a0\uff0c\u4ece\u65f6\u57df\u53e0\u52a0\u4e0e\u4ece\u9891\u57df\u53e0\u52a0\u90fd\u53ef\u4ee5\u7ec4\u6210\u539f\u6765\u7684\u4fe1\u53f7\uff0c\u5c06\u4fe1\u53f7\u8fd9\u4e48\u5206\u89e3\u540e\u6709\u52a9\u4e8e\u5904\u7406\u3002 \u6211\u4eec\u539f\u6765\u5bf9\u4e00\u4e2a\u4fe1\u53f7\u5176\u5b9e\u662f\u4ece\u65f6\u95f4\u7684\u89d2\u5ea6\u53bb\u7406\u89e3\u7684\uff0c\u4e0d\u77e5\u4e0d\u89c9\u4e2d\uff0c\u5176\u5b9e\u662f\u6309\u7167\u65f6\u95f4\u628a\u4fe1\u53f7\u8fdb\u884c\u5206\u5272\uff0c\u6bcf\u4e00\u90e8\u5206\u53ea\u662f\u4e00\u4e2a\u65f6\u95f4\u70b9\u5bf9\u5e94\u4e00\u4e2a\u4fe1\u53f7\u503c\uff0c\u4e00\u4e2a\u4fe1\u53f7\u662f\u4e00\u7ec4\u8fd9\u6837\u7684\u5206\u91cf\u7684\u53e0\u52a0\u3002\u5085\u91cc\u53f6\u53d8\u6362\u540e\uff0c\u5176\u5b9e\u8fd8\u662f\u4e2a\u53e0\u52a0\u95ee\u9898\uff0c\u53ea\u4e0d\u8fc7\u662f\u4ece\u9891\u7387\u7684\u89d2\u5ea6\u53bb\u53e0\u52a0\uff0c\u53ea\u4e0d\u8fc7\u6bcf\u4e2a\u5c0f\u4fe1\u53f7\u662f\u4e00\u4e2a\u65f6\u95f4\u57df\u4e0a\u8986\u76d6\u6574\u4e2a\u533a\u95f4\u7684\u4fe1\u53f7\uff0c\u4f46\u4ed6\u786e\u6709\u56fa\u5b9a\u7684\u5468\u671f\uff0c\u6216\u8005\u8bf4\uff0c\u7ed9\u4e86\u4e00\u4e2a\u5468\u671f\uff0c\u6211\u4eec\u5c31\u80fd\u753b\u51fa\u4e00\u4e2a\u6574\u4e2a\u533a\u95f4\u4e0a\u7684\u5206\u4fe1\u53f7\uff0c\u90a3\u4e48\u7ed9\u5b9a\u4e00\u7ec4\u5468\u671f\u503c\uff08\u6216\u9891\u7387\u503c\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u753b\u51fa\u5176\u5bf9\u5e94\u7684\u66f2\u7ebf\uff0c\u5c31\u50cf\u7ed9\u51fa\u65f6\u57df\u4e0a\u6bcf\u4e00\u70b9\u7684\u4fe1\u53f7\u503c\u4e00\u6837\uff0c\u4e0d\u8fc7\u5982\u679c\u4fe1\u53f7\u662f\u5468\u671f\u7684\u8bdd \uff0c\u9891\u57df\u7684\u66f4\u7b80\u5355\uff0c\u53ea\u9700\u8981\u51e0\u4e2a\u751a\u81f3\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u57df\u5219\u9700\u8981\u6574\u4e2a\u65f6\u95f4\u8f74\u4e0a\u6bcf\u4e00\u70b9\u90fd\u6620\u5c04\u51fa\u4e00\u4e2a\u51fd\u6570\u503c\u3002 \u5085\u91cc\u53f6\u53d8\u6362\u5c31\u662f\u5c06\u4e00\u4e2a\u4fe1\u53f7\u7684\u65f6\u57df\u8868\u793a\u5f62\u5f0f\u6620\u5c04\u5230\u4e00\u4e2a\u9891\u57df\u8868\u793a\u5f62\u5f0f\uff1b\u9006\u5085\u91cc\u53f6\u53d8\u6362\u6070\u597d\u76f8\u53cd\u3002\u8fd9\u90fd\u662f\u4e00\u4e2a\u4fe1\u53f7\u7684\u4e0d\u540c\u8868\u793a\u5f62\u5f0f\u3002\u5b83\u7684\u516c\u5f0f\u4f1a\u7528\u5c31\u53ef\u4ee5\uff0c\u5f53\u7136\u628a\u8bc1\u660e\u770b\u61c2\u4e86\u66f4\u597d\u3002 \u5bf9\u4e00\u4e2a\u4fe1\u53f7\u505a\u5085\u7acb\u53f6\u53d8\u6362\uff0c\u53ef\u4ee5\u5f97\u5230\u5176\u9891\u57df\u7279\u6027\uff0c\u5305\u62ec\u5e45\u5ea6\u548c\u76f8\u4f4d\u4e24\u4e2a\u65b9\u9762\u3002\u5e45\u5ea6\u662f\u8868\u793a\u8fd9\u4e2a\u9891\u7387\u5206\u91cf\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u76f8\u4f4d\u5462\uff0c\u5b83\u6709\u4ec0\u4e48\u7269\u7406\u610f\u4e49\uff1f\u9891\u57df\u7684\u76f8\u4f4d\u4e0e\u65f6\u57df\u7684\u76f8\u4f4d\u6709\u5173\u7cfb\u5417\uff1f\u4fe1\u53f7\u524d\u4e00\u6bb5\u7684\u76f8\u4f4d\uff08\u9891\u57df\uff09\u4e0e\u540e\u4e00\u6bb5\u7684\u76f8\u4f4d\u7684\u53d8\u5316\u662f\u5426\u4e0e\u4fe1\u53f7\u7684\u9891\u7387\u6210\u6b63\u6bd4\u5173\u7cfb\u3002 \u5085\u7acb\u53f6\u53d8\u6362\u5c31\u662f\u628a\u4e00\u4e2a\u4fe1\u53f7\uff0c\u5206\u89e3\u6210\u65e0\u6570\u7684\u6b63\u5f26\u6ce2\uff08\u6216\u8005\u4f59\u5f26\u6ce2\uff09\u4fe1\u53f7\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7528\u65e0\u6570\u7684\u6b63\u5f26\u6ce2\uff0c\u53ef\u4ee5\u5408\u6210\u4efb\u4f55\u4f60\u6240\u9700\u8981\u7684\u4fe1\u53f7\u3002 \u60f3\u4e00\u60f3\u8fd9\u4e2a\u95ee\u9898\uff1a\u7ed9\u4f60\u5f88\u591a\u6b63\u5f26\u4fe1\u53f7\uff0c\u4f60\u600e\u6837\u624d\u80fd\u5408\u6210\u4f60\u9700\u8981\u7684\u4fe1\u53f7\u5462\uff1f\u7b54\u6848\u662f\u8981\u4e24\u4e2a\u6761\u4ef6\uff0c\u4e00\u4e2a\u662f\u6bcf\u4e2a\u6b63\u5f26\u6ce2\u7684\u5e45\u5ea6\uff0c\u53e6\u4e00\u4e2a\u5c31\u662f\u6bcf\u4e2a\u6b63\u5f26\u6ce2\u4e4b\u95f4\u7684\u76f8\u4f4d\u5dee\u3002\u6240\u4ee5\u73b0\u5728\u5e94\u8be5\u660e\u767d\u4e86\u5427\uff0c\u9891\u57df\u4e0a\u7684\u76f8\u4f4d\uff0c\u5c31\u662f\u6bcf\u4e2a\u6b63\u5f26\u6ce2\u4e4b\u95f4\u7684\u76f8\u4f4d\u3002 \u5085\u7acb\u53f6\u53d8\u6362\u7528\u4e8e\u4fe1\u53f7\u7684\u9891\u7387\u57df\u5206\u6790\uff0c\u4e00\u822c\u6211\u4eec\u628a\u7535\u4fe1\u53f7\u63cf\u8ff0\u6210\u65f6\u95f4\u57df\u7684\u6570\u5b66\u6a21\u578b\uff0c\u800c\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5bf9\u4fe1\u53f7\u7684\u9891\u7387\u7279\u6027\u66f4\u611f\u5174\u8da3\uff0c\u800c\u901a\u8fc7\u5085\u7acb\u53f6\u53d8\u6362\u5f88\u5bb9\u6613\u5f97\u5230\u4fe1\u53f7\u7684\u9891\u7387\u57df\u7279\u6027 \u5085\u91cc\u53f6\u53d8\u6362\u7b80\u5355\u901a\u4fd7\u7406\u89e3\u5c31\u662f\u628a\u770b\u4f3c\u6742\u4e71\u65e0\u7ae0\u7684\u4fe1\u53f7\u8003\u8651\u6210\u7531\u4e00\u5b9a\u632f\u5e45\u3001\u76f8\u4f4d\u3001\u9891\u7387\u7684\u57fa\u672c\u6b63\u5f26\uff08\u4f59\u5f26\uff09\u4fe1\u53f7\u7ec4\u5408\u800c\u6210\uff0c\u5085\u91cc\u53f6\u53d8\u6362\u7684\u76ee\u7684\u5c31\u662f\u627e\u51fa\u8fd9\u4e9b\u57fa\u672c\u6b63\u5f26\uff08\u4f59\u5f26\uff09\u4fe1\u53f7\u4e2d\u632f\u5e45\u8f83\u5927\uff08\u80fd\u91cf\u8f83\u9ad8\uff09\u4fe1\u53f7\u5bf9\u5e94\u7684\u9891\u7387\uff0c\u4ece\u800c\u627e\u51fa\u6742\u4e71\u65e0\u7ae0\u7684\u4fe1\u53f7\u4e2d\u7684\u4e3b\u8981\u632f\u52a8\u9891\u7387\u7279\u70b9\u3002\u5982\u51cf\u901f\u673a\u6545\u969c\u65f6\uff0c\u901a\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u505a\u9891\u8c31\u5206\u6790\uff0c\u6839\u636e\u5404\u7ea7\u9f7f\u8f6e\u8f6c\u901f\u3001\u9f7f\u6570\u4e0e\u6742\u97f3\u9891\u8c31\u4e2d\u632f\u5e45\u5927\u7684\u5bf9\u6bd4\uff0c\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u54ea\u7ea7\u9f7f\u8f6e\u635f\u4f24\u3002 \u7136\u540e\u518d\u770b\u770b\u4ec0\u4e48\u53eb\u6b63\u4ea4\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u6b63\u4ea4\u662f\u6307\u7684\u9891\u57df\u66f2\u7ebf\u7684\u6b63\u4ea4\uff0c\u8981\u548cQAM\u8c03\u5236\u4e2d\u7684\u6b63\u4ea4\u533a\u5206\u54e6\uff09\uff0c\u56fea \u4e2d\u4e00\u5171\u67095\u4e2a\u9891\u7387\u7684\u6b63\u5f26\u6ce2\uff0c\u4ece\u7eff\u8272\u5230\u84dd\u8272\u5468\u671f\u5206\u522b\u662f1\uff0c2\uff0c3\uff0c4\uff0c5\u3002\u6ce8\u610f\u5230\u76f8\u90bb\u4e24\u4e2a\u9891\u7387\u7684\u6ce2\u76f8\u5dee\u4e00\u4e2a\u5468\u671f\u3002\u8fd9\u6837\u7684\u4e00\u4e9b\u6ce2\u5206\u522b\u8fdb\u884c\u5085\u7acb\u53f6\u53d8\u6362\uff08\u5373\u65f6\u57df\u53d8\u9891\u57df\uff09\u5c31\u53ef\u4ee5\u5f97\u5230\u56feb\u3002\u6ce8\u610f\u52305\u4e2a\u9891\u7387\u7684\u6ce2\u90fd\u5404\u81ea\u6709\u4e00\u4e2a\u5cf0\u503c\uff0c\u800c\u5404\u81ea\u7684\u5cf0\u503c\u76f8\u5bf9\u4e8e\u53e6\u5916\u51e0\u4e2a\u9891\u7387\u7684\u6ce2\u5728\u6b64\u9891\u7387\u7684\u5206\u91cf\u90fd\u4e3a0\uff01\uff01 \u8fd9\u5c31\u662f\u6240\u8c13\u7684\u6b63\u4ea4\uff0c\u7528\u79ef\u5206\u8868\u8fbe\u5c31\u662f\uff1a \u8bf4\u5b8c\u6b63\u4ea4\u548c\u5085\u91cc\u53f6\u53d8\u6362 \uff0c\u518d\u6765\u770b\u770bODFM\u7cfb\u7edf\u7684\u5de5\u4f5c\u8fc7\u7a0b\u3002 1.\u5c06\u4fe1\u6e90\u8fdb\u884c\u5206\u7ec4\uff08\u4e32\u5e76\u8f6c\u6362\uff09\u5e76\u9001\u5165QAM \u8fdb\u884c\u661f\u5ea7\u56fe\u6620\u5c04\uff0c\u8fdb\u884cDA\u83b7\u5f97\u57fa\u5e26\u4fe1\u53f7\u3002 2.\u5c06\u7b2c\u4e00\u6b65\u5df2\u7ecf\u6620\u5c04\u8fc7\u7684\u4fe1\u6e90\u7801\u5206\u7ec4\u4f20\u5165IFFT\u8c03\u5236\uff08\u9700\u8981\u7b49\u5f85\u53e6\u5916\u51e0\u4e2a\u4fe1\u6e90\u7801\u5206\u7ec4\u5230\u8fbe\uff09\uff0c\u83b7\u5f97\u5e76\u884c\u7684\u51e0\u7ec4\u65f6\u57df\u4fe1\u53f7\u3002\u5c06\u8fd9\u4e9b\u5e76\u884c\u7684\u65f6\u57df\u4fe1\u53f7\u53e0\u52a0\uff08\u5e76\u4e32\u8f6c\u6362\uff09\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4fe1\u6e90\u6570\u636e\u7531\u9891\u8c31\u91c7\u6837\u5230\u65f6\u57df\u91c7\u6837\u7684\u8f6c\u6362\u3002 3.\u5c06\u7b2c\u4e09\u6b65\u7684\u65f6\u57df\u91c7\u6837\u518d\u6b21\u8fdb\u884cDA\uff0c\u901a\u8fc7RF\u53d1\u5c04\u51fa\u53bb\u3002 \u63a5\u6536\u7aef\u6309\u7167\u4e0a\u8ff0\u8fc7\u7a0b\u53cd\u8fc7\u6765\u5c31\u80fd\u5b9e\u73b0ODFM\u89e3\u8c03\u3002 IFFT\u5b9e\u9645\u4e0a\u662f\u628a\u8c03\u5236\u7684\u6570\u636e\u53d8\u6362\u5230\u65f6\u95f4\u57df\uff0c\u5f85\u4f20\u8f93\u7684\u6570\u636e\u5b9e\u9645\u4e0a\u662f\u88ab\u770b\u505a\u5404\u5b50\u8f7d\u6ce2\u7684\u5e45\u5ea6\u56e0\u5b50\uff0c\u5982\u679c\u662fBPSK\uff0c\u52191bit\u5bf9\u5e94\u4e00\u4e2a\u5e45\u5ea6\u56e0\u5b50\uff0c\u4e5f\u5c31\u662f\u5bf9\u5e94\u4e00\u4e2a\u5b50\u8f7d\u6ce2\u3002\u5982\u679cQPSK\u5219\uff0c2bit\u5bf9\u5e94\u4e00\u4e2a\u5e45\u5ea6\u56e0\u5b50\uff0c\u5982\u679c\u662fQAM\u5219\u7f16\u7801\u7387\u66f4\u9ad8\u3002\u8fd9\u4e9b\u590d\u6570\u90fd\u53ef\u4ee5\u770b\u505a\u662f\u5728\u9891\u8c31\u4e0a\u5728\u5404\u4e2a\u5b50\u8f7d\u6ce2\u5cf0\u503c\u5904\u5bf9\u5404\u5b50\u8f7d\u6ce2\u8fdb\u884c\u91c7\u6837\u3002\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u590d\u6570\u5b9e\u9645\u4e0a\u8868\u793a\u7684\u662f\u5bf9OFDM\u4fe1\u53f7\u9891\u8c31\u7684\u91c7\u6837\uff0c\u5bf9\u5176\u8fdb\u884cIFFT\u53d8\u6362\u5f97\u5230\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u5f53\u7136\u5c31\u662fOFDM\u4fe1\u53f7\u65f6\u95f4\u7684\u91c7\u6837\u503c\u3002\u518d\u5bf9\u8be5\u65f6\u57df\u4fe1\u53f7\u8fdb\u884cDA\u53d8\u6362\uff0c\u53d8\u4e3a\u6a21\u62df\u4fe1\u53f7\u3002","title":"\u7ee7\u7eed\u8865\u5145\uff1a\u5173\u4e8e\u8d1f\u9891\u7387"},{"location":"ESP32/%E9%95%BF%E5%B9%B3%E4%B9%8B%E6%88%98/","text":"85km","title":"\u957f\u5e73\u4e4b\u6218"},{"location":"ESP32/sensor/sensor%E6%BB%A4%E6%B3%A2/","text":"Kalman\u6ee4\u6ce2 \u5e93 SimpleKalmanFilter SimpleKalmanFilter kf = SimpleKalmanFilter ( e_mea , e_est , q ); while ( 1 ) { float x = analogRead ( A0 ); float estimated_x = kf . updateEstimate ( x ); // ... } \u5b9e\u4f8b #include <SimpleKalmanFilter.h> //the ADC pin of esp32 #define ADC_PIN 34 // update Serial Ploter every 100ms #define UPDATE_TIME 100 long current ; //init Kalman with params, you can modify params to make better result SimpleKalmanFilter kalman ( 2 , 2 , 0.01 ); void setup () { Serial . begin ( 115200 ); Serial . print ( 0 ); // To freeze the lower limit Serial . print ( \" \" ); Serial . print ( 3.3 ); // To freeze the upper limit Serial . print ( \" \" ); } void loop () { //to make demo interesting we add random noise to measurement float rand_noise = random ( -100 , 100 ) / 100.0 ; // Reading LDR value, ADC of esp32 0-4095 according to 0-3.3V float measured_value = analogRead ( ADC_PIN ) / 4095.0 * 3.3 + rand_noise ; //Kalman update estimate float estimated_value = kalman . updateEstimate ( measured_value ); //update plotter if ( millis () > current ) { Serial . print ( measured_value ); Serial . print ( \",\" ); Serial . print ( estimated_value ); Serial . println (); current = millis () + UPDATE_TIME ; } }","title":"Sensor\u6ee4\u6ce2"},{"location":"ESP32/sensor/sensor%E6%BB%A4%E6%B3%A2/#kalman","text":"","title":"Kalman\u6ee4\u6ce2"},{"location":"ESP32/sensor/sensor%E6%BB%A4%E6%B3%A2/#_1","text":"SimpleKalmanFilter SimpleKalmanFilter kf = SimpleKalmanFilter ( e_mea , e_est , q ); while ( 1 ) { float x = analogRead ( A0 ); float estimated_x = kf . updateEstimate ( x ); // ... }","title":"\u5e93"},{"location":"ESP32/sensor/sensor%E6%BB%A4%E6%B3%A2/#_2","text":"#include <SimpleKalmanFilter.h> //the ADC pin of esp32 #define ADC_PIN 34 // update Serial Ploter every 100ms #define UPDATE_TIME 100 long current ; //init Kalman with params, you can modify params to make better result SimpleKalmanFilter kalman ( 2 , 2 , 0.01 ); void setup () { Serial . begin ( 115200 ); Serial . print ( 0 ); // To freeze the lower limit Serial . print ( \" \" ); Serial . print ( 3.3 ); // To freeze the upper limit Serial . print ( \" \" ); } void loop () { //to make demo interesting we add random noise to measurement float rand_noise = random ( -100 , 100 ) / 100.0 ; // Reading LDR value, ADC of esp32 0-4095 according to 0-3.3V float measured_value = analogRead ( ADC_PIN ) / 4095.0 * 3.3 + rand_noise ; //Kalman update estimate float estimated_value = kalman . updateEstimate ( measured_value ); //update plotter if ( millis () > current ) { Serial . print ( measured_value ); Serial . print ( \",\" ); Serial . print ( estimated_value ); Serial . println (); current = millis () + UPDATE_TIME ; } }","title":"\u5b9e\u4f8b"},{"location":"ESP32/sensor/%E6%8C%89%E9%94%AE%E6%B6%88%E6%8A%96/","text":"\u6309\u952e\u6d88\u6296 \u901a\u8fc7\u65f6\u95f4\u5ef6\u65f6\u5224\u65ad \u4ee5\u4e0b\u5b9e\u4f8b\u4ee3\u7801\u6765\u81ea www.arduino.cc /* Debounce Each time the input pin goes from LOW to HIGH (e.g. because of a push-button press), the output pin is toggled from LOW to HIGH or HIGH to LOW. There's a minimum delay between toggles to debounce the circuit (i.e. to ignore noise). The circuit: - LED attached from pin 13 to ground through 220 ohm resistor - pushbutton attached from pin 2 to +5V - 10 kilohm resistor attached from pin 2 to ground - Note: On most Arduino boards, there is already an LED on the board connected to pin 13, so you don't need any extra components for this example. created 21 Nov 2006 by David A. Mellis modified 30 Aug 2011 by Limor Fried modified 28 Dec 2012 by Mike Walters modified 30 Aug 2016 by Arturo Guadalupi This example code is in the public domain. https://www.arduino.cc/en/Tutorial/BuiltInExamples/Debounce */ // constants won't change. They're used here to set pin numbers: const int buttonPin = 2 ; // the number of the pushbutton pin const int ledPin = 13 ; // the number of the LED pin // Variables will change: int ledState = HIGH ; // the current state of the output pin int buttonState ; // the current reading from the input pin int lastButtonState = LOW ; // the previous reading from the input pin // the following variables are unsigned longs because the time, measured in // milliseconds, will quickly become a bigger number than can be stored in an int. unsigned long lastDebounceTime = 0 ; // the last time the output pin was toggled unsigned long debounceDelay = 50 ; // the debounce time; increase if the output flickers void setup () { pinMode ( buttonPin , INPUT ); pinMode ( ledPin , OUTPUT ); // set initial LED state digitalWrite ( ledPin , ledState ); } void loop () { // read the state of the switch into a local variable: int reading = digitalRead ( buttonPin ); // check to see if you just pressed the button // (i.e. the input went from LOW to HIGH), and you've waited long enough // since the last press to ignore any noise: // If the switch changed, due to noise or pressing: if ( reading != lastButtonState ) { // reset the debouncing timer lastDebounceTime = millis (); } if (( millis () - lastDebounceTime ) > debounceDelay ) { // whatever the reading is at, it's been there for longer than the debounce // delay, so take it as the actual current state: // if the button state has changed: if ( reading != buttonState ) { buttonState = reading ; // only toggle the LED if the new button state is HIGH if ( buttonState == HIGH ) { ledState = ! ledState ; } } } // set the LED: digitalWrite ( ledPin , ledState ); // save the reading. Next time through the loop, it'll be the lastButtonState: lastButtonState = reading ; } \u4f7f\u7528Bounce2\u5e93\u51fd\u6570 GitHub - thomasfredericks/Bounce2: Debouncing library for Arduino and Wiring // This example toggles the debug LED (pin 13) on or off when a button on pin 2 is pressed. // Include the Bounce2 library found here : // https://github.com/thomasfredericks/Bounce2 #include <Bounce2.h> #define BUTTON_PIN 2 #define LED_PIN 13 int ledState = LOW ; Bounce b = Bounce (); // Instantiate a Bounce object void setup () { b . attach ( BUTTON_PIN , INPUT_PULLUP ); // Attach the debouncer to a pin with INPUT_PULLUP mode b . interval ( 25 ); // Use a debounce interval of 25 milliseconds pinMode ( LED_PIN , OUTPUT ); // Setup the LED digitalWrite ( LED_PIN , ledState ); // Turn off the LED } void loop () { b . update (); // Update the Bounce instance if ( b . fell () ) { // Call code if button transitions from HIGH to LOW ledState = ! ledState ; // Toggle LED state digitalWrite ( LED_PIN , ledState ); // Apply new LED state } }","title":"\u6309\u952e\u6d88\u6296"},{"location":"ESP32/sensor/%E6%8C%89%E9%94%AE%E6%B6%88%E6%8A%96/#_1","text":"","title":"\u6309\u952e\u6d88\u6296"},{"location":"ESP32/sensor/%E6%8C%89%E9%94%AE%E6%B6%88%E6%8A%96/#_2","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u4ee3\u7801\u6765\u81ea www.arduino.cc /* Debounce Each time the input pin goes from LOW to HIGH (e.g. because of a push-button press), the output pin is toggled from LOW to HIGH or HIGH to LOW. There's a minimum delay between toggles to debounce the circuit (i.e. to ignore noise). The circuit: - LED attached from pin 13 to ground through 220 ohm resistor - pushbutton attached from pin 2 to +5V - 10 kilohm resistor attached from pin 2 to ground - Note: On most Arduino boards, there is already an LED on the board connected to pin 13, so you don't need any extra components for this example. created 21 Nov 2006 by David A. Mellis modified 30 Aug 2011 by Limor Fried modified 28 Dec 2012 by Mike Walters modified 30 Aug 2016 by Arturo Guadalupi This example code is in the public domain. https://www.arduino.cc/en/Tutorial/BuiltInExamples/Debounce */ // constants won't change. They're used here to set pin numbers: const int buttonPin = 2 ; // the number of the pushbutton pin const int ledPin = 13 ; // the number of the LED pin // Variables will change: int ledState = HIGH ; // the current state of the output pin int buttonState ; // the current reading from the input pin int lastButtonState = LOW ; // the previous reading from the input pin // the following variables are unsigned longs because the time, measured in // milliseconds, will quickly become a bigger number than can be stored in an int. unsigned long lastDebounceTime = 0 ; // the last time the output pin was toggled unsigned long debounceDelay = 50 ; // the debounce time; increase if the output flickers void setup () { pinMode ( buttonPin , INPUT ); pinMode ( ledPin , OUTPUT ); // set initial LED state digitalWrite ( ledPin , ledState ); } void loop () { // read the state of the switch into a local variable: int reading = digitalRead ( buttonPin ); // check to see if you just pressed the button // (i.e. the input went from LOW to HIGH), and you've waited long enough // since the last press to ignore any noise: // If the switch changed, due to noise or pressing: if ( reading != lastButtonState ) { // reset the debouncing timer lastDebounceTime = millis (); } if (( millis () - lastDebounceTime ) > debounceDelay ) { // whatever the reading is at, it's been there for longer than the debounce // delay, so take it as the actual current state: // if the button state has changed: if ( reading != buttonState ) { buttonState = reading ; // only toggle the LED if the new button state is HIGH if ( buttonState == HIGH ) { ledState = ! ledState ; } } } // set the LED: digitalWrite ( ledPin , ledState ); // save the reading. Next time through the loop, it'll be the lastButtonState: lastButtonState = reading ; }","title":"\u901a\u8fc7\u65f6\u95f4\u5ef6\u65f6\u5224\u65ad"},{"location":"ESP32/sensor/%E6%8C%89%E9%94%AE%E6%B6%88%E6%8A%96/#bounce2","text":"GitHub - thomasfredericks/Bounce2: Debouncing library for Arduino and Wiring // This example toggles the debug LED (pin 13) on or off when a button on pin 2 is pressed. // Include the Bounce2 library found here : // https://github.com/thomasfredericks/Bounce2 #include <Bounce2.h> #define BUTTON_PIN 2 #define LED_PIN 13 int ledState = LOW ; Bounce b = Bounce (); // Instantiate a Bounce object void setup () { b . attach ( BUTTON_PIN , INPUT_PULLUP ); // Attach the debouncer to a pin with INPUT_PULLUP mode b . interval ( 25 ); // Use a debounce interval of 25 milliseconds pinMode ( LED_PIN , OUTPUT ); // Setup the LED digitalWrite ( LED_PIN , ledState ); // Turn off the LED } void loop () { b . update (); // Update the Bounce instance if ( b . fell () ) { // Call code if button transitions from HIGH to LOW ledState = ! ledState ; // Toggle LED state digitalWrite ( LED_PIN , ledState ); // Apply new LED state } }","title":"\u4f7f\u7528Bounce2\u5e93\u51fd\u6570"},{"location":"ESP32/tools/01abc/","text":"+++ title = \"Home Assistant Installation\" date = \"2017-03-25T13:05:26+08:00\" image = \"pcbpic.jpg\" +++ Home Assistant\u7684\u5b89\u88c5\u4e0e\u4f7f\u7528 :hp-alt-title: :hp-tags: Home Assistant, IOT, Open Source, Windows \u4e0b\u5b89\u88c5Python 3.5 \u5b89\u88c5pip python -m pip install -U pip \u5b89\u88c5homeassistant pip3 install homeassistant \u542f\u52a8homeassistant hass --open-ui \u6211\u78b0\u5230\u95ee\u9898\uff0c\u5c1d\u8bd5\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u53ef\u4ee5\uff1a python -m homeassistant \u6253\u5f00 http://localhost:8123 image:: http://full_path_to_image []","title":"01abc"},{"location":"ESP32/tools/01abc/#home-assistant","text":":hp-alt-title: :hp-tags: Home Assistant, IOT, Open Source, Windows \u4e0b\u5b89\u88c5Python 3.5 \u5b89\u88c5pip python -m pip install -U pip \u5b89\u88c5homeassistant pip3 install homeassistant \u542f\u52a8homeassistant hass --open-ui \u6211\u78b0\u5230\u95ee\u9898\uff0c\u5c1d\u8bd5\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u53ef\u4ee5\uff1a python -m homeassistant \u6253\u5f00 http://localhost:8123 image:: http://full_path_to_image []","title":"Home Assistant\u7684\u5b89\u88c5\u4e0e\u4f7f\u7528"},{"location":"Flotherm/Bn%20and%20Sn/","text":"Flotherm \u7684Bn\u548cSn\u662f\u4ec0\u4e48\u610f\u601d $$ B_n = \\abs{H} \\times \\abs{T} \\times |\\cos(\u03b8)| $$ \u4ece \\(B_n\\) \u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u5b83\u662f\u70ed\u6d41\u77e2\u91cf\u548c\u6e29\u5ea6\u68af\u5ea6\u77e2\u91cf\u7684\u70b9\u4e58\u6709\u70b9\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\uff0c\u5b83\u628a\u4f59\u5f26\u9879\u53d6\u7edd\u5bf9\u503c\u3002 $$ B_n = \\abs{\\vec{H}} \\times \\abs{\\vec{T}} \\times |\\cos(\u03b8)|=\\abs{\\vec{H} \\cdot \\vec{T}} $$ \u8fd9\u6837\u5c31\u6ca1\u6709\u8d1f\u503c\u4e86\u3002\u7406\u8bba\u4e0a\u8bb2\u5e94\u8be5\u4e5f\u4e0d\u4f1a\u5b58\u5728\u8d1f\u503c\u3002 \u53ef\u4ee5\u8ba4\u4e3a\u662f\u70ed\u91cf\u77e2\u91cf\u5728\u6e29\u5ea6\u68af\u5ea6\u77e2\u91cf\u65b9\u5411\u4e0a\u7684\u6295\u5f71\uff0c\u5b9e\u9645\u610f\u4e49\u662f\u8868\u5f81\u8fd9\u4e24\u4e2a\u77e2\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u3002 \u4e24\u8005\u65b9\u5411\u4e00\u81f4\uff0c \\(B_n\\) \u8d8a\u5927 \u4e24\u8005\u5e45\u503c\u8d8a\u5927\uff0c \\(B_n\\) \u8d8a\u5927 \u60f3\u8c61\u4e00\u4e0b\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b \\(B_n\\) \u4f1a\u6bd4\u8f83\u5927\u3002\u9996\u5148\uff0c\u4e24\u8005\u7684\u5e45\u503c\u90fd\u5927\uff0c\u5176\u6b21\u4e24\u8005\u65b9\u5411\u4e00\u81f4\uff1a \u6e29\u5ea6\u68af\u5ea6\u7684\u5e45\u503c\u5927\uff0c\u8bf4\u660e\u6e29\u5ea6\u53d8\u5316\u660e\u663e\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u65b9\u5411\u4e0a\u70ed\u963b\u5927\u3002 \u70ed\u6d41\u91cf\u7684\u5e45\u503c\u5927\uff0c\u8bf4\u660e\u8fd9\u4e2a\u65b9\u5411\u4e0a\u8981\u6563\u8d70\u7684\u70ed\u91cf\u591a\u3002 \u4e24\u8005\u65b9\u5411\u4e00\u81f4\uff0c\u8bf4\u660e\u8fd9\u4e2a\u65b9\u5411\u662f\u552f\u4e00\u76f8\u5bf9\u8f83\u5c0f\u7684\u70ed\u6d41\u901a\u8def\u3002 \u7136\u540e\uff0c\u8f6f\u4ef6\u5bf9\u6240\u6709 \\(B_n\\) \u503c\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u6837 \\(B_n\\) \u503c\u8f83\u5927\u7684\u5730\u65b9\u5c31\u662f\u76f8\u5bf9\u6765\u8bf4\u7684\u6563\u70ed\u74f6\u9888\u533a\u57df\u3002 \u7c7b\u4f3c\u5730\uff0c \\(S_n\\) \u7684\u5b9a\u4e49\u4e3a\uff1a $$ S_n = \\abs{H} \\times \\abs{T} \\times |\\sin(\u03b8)| $$ \u4e24\u8005\u65b9\u5411\u4e0d\u4e00\u81f4\uff0c \\(S_n\\) \u8d8a\u5927 \u4e24\u8005\u5e45\u503c\u8d8a\u5927\uff0c \\(S_n\\) \u8d8a\u5927 \\(S_n\\) \u503c\u8f83\u5927\uff0c\u8bf4\u660e\u70ed\u91cf\u4e0d\u662f\u4ece\u8fd9\u4e2a\u6e29\u5ea6\u68af\u5ea6\u65b9\u5411\u4e0a\u8d70\u7684\uff0c\u901a\u8fc7\u67e5\u770b\u8f83\u5927 \\(S_n\\) \u503c\u7684\u533a\u57df\u53ef\u4ee5\u53d1\u73b0\u54ea\u4e9b\u65b9\u5411\u4e0a\u662f\u53ef\u4ee5\u5efa\u7acb\u65b0\u7684\u6563\u70ed\u9014\u5f84\u3002","title":"Bn and Sn"},{"location":"Flotherm/Bn%20and%20Sn/#flotherm-bnsn","text":"$$ B_n = \\abs{H} \\times \\abs{T} \\times |\\cos(\u03b8)| $$ \u4ece \\(B_n\\) \u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u5b83\u662f\u70ed\u6d41\u77e2\u91cf\u548c\u6e29\u5ea6\u68af\u5ea6\u77e2\u91cf\u7684\u70b9\u4e58\u6709\u70b9\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\uff0c\u5b83\u628a\u4f59\u5f26\u9879\u53d6\u7edd\u5bf9\u503c\u3002 $$ B_n = \\abs{\\vec{H}} \\times \\abs{\\vec{T}} \\times |\\cos(\u03b8)|=\\abs{\\vec{H} \\cdot \\vec{T}} $$ \u8fd9\u6837\u5c31\u6ca1\u6709\u8d1f\u503c\u4e86\u3002\u7406\u8bba\u4e0a\u8bb2\u5e94\u8be5\u4e5f\u4e0d\u4f1a\u5b58\u5728\u8d1f\u503c\u3002 \u53ef\u4ee5\u8ba4\u4e3a\u662f\u70ed\u91cf\u77e2\u91cf\u5728\u6e29\u5ea6\u68af\u5ea6\u77e2\u91cf\u65b9\u5411\u4e0a\u7684\u6295\u5f71\uff0c\u5b9e\u9645\u610f\u4e49\u662f\u8868\u5f81\u8fd9\u4e24\u4e2a\u77e2\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u3002 \u4e24\u8005\u65b9\u5411\u4e00\u81f4\uff0c \\(B_n\\) \u8d8a\u5927 \u4e24\u8005\u5e45\u503c\u8d8a\u5927\uff0c \\(B_n\\) \u8d8a\u5927 \u60f3\u8c61\u4e00\u4e0b\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b \\(B_n\\) \u4f1a\u6bd4\u8f83\u5927\u3002\u9996\u5148\uff0c\u4e24\u8005\u7684\u5e45\u503c\u90fd\u5927\uff0c\u5176\u6b21\u4e24\u8005\u65b9\u5411\u4e00\u81f4\uff1a \u6e29\u5ea6\u68af\u5ea6\u7684\u5e45\u503c\u5927\uff0c\u8bf4\u660e\u6e29\u5ea6\u53d8\u5316\u660e\u663e\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u65b9\u5411\u4e0a\u70ed\u963b\u5927\u3002 \u70ed\u6d41\u91cf\u7684\u5e45\u503c\u5927\uff0c\u8bf4\u660e\u8fd9\u4e2a\u65b9\u5411\u4e0a\u8981\u6563\u8d70\u7684\u70ed\u91cf\u591a\u3002 \u4e24\u8005\u65b9\u5411\u4e00\u81f4\uff0c\u8bf4\u660e\u8fd9\u4e2a\u65b9\u5411\u662f\u552f\u4e00\u76f8\u5bf9\u8f83\u5c0f\u7684\u70ed\u6d41\u901a\u8def\u3002 \u7136\u540e\uff0c\u8f6f\u4ef6\u5bf9\u6240\u6709 \\(B_n\\) \u503c\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u6837 \\(B_n\\) \u503c\u8f83\u5927\u7684\u5730\u65b9\u5c31\u662f\u76f8\u5bf9\u6765\u8bf4\u7684\u6563\u70ed\u74f6\u9888\u533a\u57df\u3002 \u7c7b\u4f3c\u5730\uff0c \\(S_n\\) \u7684\u5b9a\u4e49\u4e3a\uff1a $$ S_n = \\abs{H} \\times \\abs{T} \\times |\\sin(\u03b8)| $$ \u4e24\u8005\u65b9\u5411\u4e0d\u4e00\u81f4\uff0c \\(S_n\\) \u8d8a\u5927 \u4e24\u8005\u5e45\u503c\u8d8a\u5927\uff0c \\(S_n\\) \u8d8a\u5927 \\(S_n\\) \u503c\u8f83\u5927\uff0c\u8bf4\u660e\u70ed\u91cf\u4e0d\u662f\u4ece\u8fd9\u4e2a\u6e29\u5ea6\u68af\u5ea6\u65b9\u5411\u4e0a\u8d70\u7684\uff0c\u901a\u8fc7\u67e5\u770b\u8f83\u5927 \\(S_n\\) \u503c\u7684\u533a\u57df\u53ef\u4ee5\u53d1\u73b0\u54ea\u4e9b\u65b9\u5411\u4e0a\u662f\u53ef\u4ee5\u5efa\u7acb\u65b0\u7684\u6563\u70ed\u9014\u5f84\u3002","title":"Flotherm \u7684Bn\u548cSn\u662f\u4ec0\u4e48\u610f\u601d"},{"location":"Flotherm/Fan/","text":"\u5173\u4e8e\u98ce\u6247 \u98ce\u6247\u88ab\u6321\u4f4f\u6709\u4ec0\u4e48\u5f71\u54cd \u98ce\u6247\u5982\u679c\u88ab\u6321\u4f4f\u5c06\u5f71\u54cd\u5c06\u4f7f\u901a\u8fc7\u98ce\u6247\u7684\u7a7a\u6c14\u6d41\u91cf\u51cf\u5c0f\u3002 \u5bf9\u4e8e\u8f74\u6d41\u98ce\u6247\uff1a \u98ce\u6247\u7684\u51fa\u98ce\u53e3\u88ab\u6321\u4f4f\uff0c\u4f1a\u51cf\u5c0f\u6d41\u91cf\uff0c\u4f46\u98ce\u6247\u538b\u529b\u4e0d\u4f1a\u663e\u8457\u589e\u52a0\u3002 \u98ce\u6247\u7684\u5165\u98ce\u53e3\u88ab\u6321\u4f4f\uff0c\u98ce\u6247\u4ea7\u751f\u7684\u6d41\u91cf\u548c\u538b\u529b\u5747\u4f1a\u4e0b\u964d\u3002 \u5982\u679c\u7cfb\u7edf\u538b\u529b\u975e\u5e38\u5927\uff0c\u63a5\u8fd1\u98ce\u6247\u7684\u6700\u5927\u9759\u538b\u529b\uff0c\u5c06\u589e\u52a0\u98ce\u6247\u7684\u8d1f\u62c5\uff0c\u5f71\u54cd\u4f7f\u7528\u5bff\u547d\u3002 \u5982\u4f55\u6a21\u62df\u98ce\u6247\u5931\u6548 \u5728\u98ce\u6247\u8bbe\u7f6e\u9762\u677f\u4e2d\u8bb2\u98ce\u6247\u8bbe\u7f6e\u4e3aFailed \u98ce\u6247\u7ed3\u679cTable\u4e2d\u98ce\u6247\u7684\u529f\u7387\u4e0e\u8f93\u5165\u529f\u7387\u4e0d\u7b49 \u9996\u5148\u9700\u660e\u767d\u5728\u98ce\u6247\u53c2\u6570\u5b9a\u4e49\u4e2d\u5b9a\u4e49\u7684\u529f\u7387\u4e3a\u98ce\u6247\u7684\u7535\u529f\u7387 \\(P_{fan}\\) \u3002 \u7b2c\u4e00\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u98ce\u6247\u7684Derating factor\uff0c\u98ce\u6247\u7684\u529f\u7387\u4f1a\u964d\u989d\uff1a \\[ P_{fan~Derating}=P_{fan}\\times (Derating~factor)^3 \\] \u7b2c\u4e8c\uff0c\u98ce\u6247\u7684\u7535\u529f\u7387\u4e00\u90e8\u5206\u8f6c\u6362\u4e3a\u673a\u68b0\u80fd\uff0c\u5176\u5b83\u90e8\u5206\u624d\u8f6c\u6362\u4e3a\u70ed\u91cf\u3002FloTHERM\u4f1a\u6839\u636ePQ\u66f2\u7ebf\u8ba1\u7b97\u98ce\u6247\u7684\u673a\u68b0\u6548\u7387 \\(\\eta\\) \uff0c\u98ce\u6247\u7684\u70ed\u8017 \\(Q_{fan}\\) \u4e3a \\[ Q_{fan}=P_{fan~Derating}\\times \\eta \\] \u8fd9\u6837\u5c31\u4e0d\u96be\u7406\u89e3\u7ed3\u679cTable\u4e2d\u5404\u9879\u7684\u542b\u4e49\u4e86 \u98ce\u6247\u7684\u673a\u68b0\u80fd \\(E\\) \u662f\u901a\u8fc7\u8ba1\u7b97\u98ce\u6247\u51fa\u53e3\u5165\u53e3\u7684\u7a7a\u6c14\u603b\u538b\u529b\u5dee\u5f97\u5230\u7684\uff1a \\[ E = (P_{total,outlet} - P_{total,inlet} ) \\] \u5176\u4e2d\uff0c\u603b\u538b\u529b \\(P_{total}\\) \u7684\u8ba1\u7b97\u65b9\u5f0f\uff1a \\[ P_{total}= P_{static}+ 0.5(\\rho v^2) \\] \u5176\u4e2d \\(v\\) \u4e3a\u98ce\u6247\u51fa\u53e3\u5904\u7684\u5e73\u5747\u98ce\u901f\u3002 \u98ce\u6247\u7ed3\u679cTable\u4e2d\u7684\u6e29\u5ea6\u4ee3\u8868\u4ec0\u4e48\u542b\u4e49 \u4ee3\u8868\u7684\u662f\u98ce\u6247\u5165\u53e3\u5904\u7684\u5e73\u5747\u6e29\u5ea6\u3002 \u98ce\u6247\u7684\u5de5\u4f5c\u6e29\u5ea6\u4f1a\u5f71\u54cd\u98ce\u6247\u7684\u4f7f\u7528\u5bff\u547d\uff0c\u901a\u5e38\u98ce\u6247\u5382\u5bb6\u4f1a\u89c4\u5b9a\u98ce\u6247\u7684\u5de5\u4f5c\u6e29\u5ea6\u3002 \u6709\u65f6\u5019\u5982\u679c\u98ce\u6247\u81ea\u8eab\u7684\u529f\u7387\u6bd4\u8f83\u5927\uff0c\u53ef\u80fd\u5165\u53e3\u5904\u7684\u6e29\u5ea6\u4e0d\u80fd\u4ee3\u8868\u98ce\u6247hub\u7684\u6e29\u5ea6\uff0c\u8fd9\u65f6\u53ef\u4ee5\u901a\u8fc7\u622a\u9762\u56fe\uff0c\u6216\u6dfb\u52a0\u6e29\u5ea6\u76d1\u63a7\u70b9\uff0c\u68c0\u67e5\u98ce\u6247hub\u7684\u6e29\u5ea6\u3002 \u5e26\u98ce\u6247\u7684\u6a21\u578b\u6c42\u89e3\u540e\u53d1\u6563 \u98ce\u6247\u53d1\u6563\u6709\u51e0\u4e2a\u6f5c\u5728\u7684\u539f\u56e0\uff1a \u521d\u59cb\u6d41\u91cf\u8fc7\u9ad8\u3002 \u98ce\u6247\u5468\u56f4\u7684\u7f51\u683c\u592a\u7c97\u7cd9\u3002 \u6247\u5f62\u66f2\u7ebf\u5305\u542b\u7684\u70b9\u6570\u4e0d\u8db3\uff0c\u53d8\u5316\u8fc7\u4e8e\u6025\u5267\uff0c\u6c34\u5e73\u7ebf\u3002\u5982\u4e0b\u56fe\u98ce\u6247\u7684PQ\u66f2\u7ebf\u6709\u6bd4\u8f83\u5e73\u5766\u7684\u533a\u57df\uff0c\u5982\u679c\u98ce\u6247\u521a\u597d\u5de5\u4f5c\u5728\u6b64\u533a\u57df\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6c42\u89e3\u632f\u8361\u7684\u95ee\u9898\uff0c\u5982\u4e0b\u56fe \u800c\u4e14\u89c2\u5bdf\u98ce\u6247\u9644\u8fd1\u76d1\u63a7\u70b9\u4e5f\u4f1a\u6709\u632f\u8361\u7684\u95ee\u9898\u3002 \u53ef\u4ee5\u5c1d\u8bd5\u51cf\u5c0fSolver Control\u4e2d\u7684Fan Relaxation\uff0c\u9ed8\u8ba4\u503c\u4e3a1.0\uff0c\u51cf\u5c0f\u52300.7\u62160.5\u8bd5\u8bd5\u3002\u51cf\u5c0fFan Relaxation\u4f1a\u8ba9\u6c42\u89e3\u5668\u6cbf\u7740\u98ce\u6247\u66f2\u7ebf\u91c7\u53d6\u66f4\u5c0f\u7684\u6b65\u957f\u79fb\u52a8\u3002\u5982\u4e0b\u56fe\uff0c\u5c06\u98ce\u6247\u7684Relaxation\u7cfb\u6570\u4ece1.0\u8c03\u6574\u4e3a0.7\u540e\u6c42\u89e3\u5f00\u59cb\u6536\u655b\u3002 \u98ce\u6247\u66f2\u7ebf\u4e2d\u4f7f\u7528\u4e86\u9519\u8bef\u7684\u5355\u4f4d\u3002 \u98ce\u6247\u51fa\u53e3\uff0c\u5165\u53e3\u88ab\u6321\u4f4f \u68c0\u67e5\u539f\u56e0\uff1a \u6682\u505c\u6c42\u89e3\uff0c\u67e5\u770b\u98ce\u6247\u7684\u5de5\u4f5c\u70b9\uff0c\u5982\u679c\u98ce\u6247\u5de5\u4f5c\u7684\u4e0d\u5728PQ\u66f2\u7ebf\u4e0a\uff0c\u8bf4\u660e\u98ce\u6247\u4e0d\u6536\u655b\u3002 \u521b\u5efa\u663e\u793a\u538b\u529b/\u901f\u5ea6\u7684\u5e73\u9762\u56fe\uff0c\u68c0\u67e5\u538b\u529b/\u901f\u5ea6\u68af\u5ea6\u3002 \u5c06\u5e73\u9762\u7684\u586b\u5145\u7c7b\u578b\u4ece\u201c\u63d2\u503c\u201d\u66f4\u6539\u4e3a\u201c\u5355\u5143\u683c\u586b\u5145\u201d\u3002 \u68c0\u67e5\u98ce\u6247\u5468\u56f4\u7684\u6807\u91cf\u573a \u5c1d\u8bd5\u201c\u653e\u677e\u201d\u98ce\u6247\uff1a\u5728 [Solver Control] \u4e2d\uff0c\u5c06\u98ce\u6247\u677e\u5f1b\u8bbe\u7f6e\u4e3a 0.7\u3002\u91cd\u65b0\u521d\u59cb\u5316\u5e76\u91cd\u65b0\u8fd0\u884c\u3002\u5982\u679c\u89e3\u4ecd\u7136\u53d1\u6563\uff08\u53ef\u80fd\u8fed\u4ee3\u6b21\u6570\u8f83\u591a\uff09\uff0c\u5c06\u5176\u964d\u4f4e\u5230 0.5\uff0c\u6700\u5927\u4e3a 0.3\u3002\u4e0d\u5efa\u8bae\u4f7f\u7528\u5c0f\u4e8e0.3\u3002 swirl https://support.sw.siemens.com/kbassets/external/MG575744/files/10443.pdf https://support.sw.siemens.com/kbassets/external/MG575828/files/10539.pdf","title":"\u5173\u4e8e\u98ce\u6247"},{"location":"Flotherm/Fan/#_1","text":"","title":"\u5173\u4e8e\u98ce\u6247"},{"location":"Flotherm/Fan/#_2","text":"\u98ce\u6247\u5982\u679c\u88ab\u6321\u4f4f\u5c06\u5f71\u54cd\u5c06\u4f7f\u901a\u8fc7\u98ce\u6247\u7684\u7a7a\u6c14\u6d41\u91cf\u51cf\u5c0f\u3002 \u5bf9\u4e8e\u8f74\u6d41\u98ce\u6247\uff1a \u98ce\u6247\u7684\u51fa\u98ce\u53e3\u88ab\u6321\u4f4f\uff0c\u4f1a\u51cf\u5c0f\u6d41\u91cf\uff0c\u4f46\u98ce\u6247\u538b\u529b\u4e0d\u4f1a\u663e\u8457\u589e\u52a0\u3002 \u98ce\u6247\u7684\u5165\u98ce\u53e3\u88ab\u6321\u4f4f\uff0c\u98ce\u6247\u4ea7\u751f\u7684\u6d41\u91cf\u548c\u538b\u529b\u5747\u4f1a\u4e0b\u964d\u3002 \u5982\u679c\u7cfb\u7edf\u538b\u529b\u975e\u5e38\u5927\uff0c\u63a5\u8fd1\u98ce\u6247\u7684\u6700\u5927\u9759\u538b\u529b\uff0c\u5c06\u589e\u52a0\u98ce\u6247\u7684\u8d1f\u62c5\uff0c\u5f71\u54cd\u4f7f\u7528\u5bff\u547d\u3002","title":"\u98ce\u6247\u88ab\u6321\u4f4f\u6709\u4ec0\u4e48\u5f71\u54cd"},{"location":"Flotherm/Fan/#_3","text":"\u5728\u98ce\u6247\u8bbe\u7f6e\u9762\u677f\u4e2d\u8bb2\u98ce\u6247\u8bbe\u7f6e\u4e3aFailed","title":"\u5982\u4f55\u6a21\u62df\u98ce\u6247\u5931\u6548"},{"location":"Flotherm/Fan/#table","text":"\u9996\u5148\u9700\u660e\u767d\u5728\u98ce\u6247\u53c2\u6570\u5b9a\u4e49\u4e2d\u5b9a\u4e49\u7684\u529f\u7387\u4e3a\u98ce\u6247\u7684\u7535\u529f\u7387 \\(P_{fan}\\) \u3002 \u7b2c\u4e00\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u98ce\u6247\u7684Derating factor\uff0c\u98ce\u6247\u7684\u529f\u7387\u4f1a\u964d\u989d\uff1a \\[ P_{fan~Derating}=P_{fan}\\times (Derating~factor)^3 \\] \u7b2c\u4e8c\uff0c\u98ce\u6247\u7684\u7535\u529f\u7387\u4e00\u90e8\u5206\u8f6c\u6362\u4e3a\u673a\u68b0\u80fd\uff0c\u5176\u5b83\u90e8\u5206\u624d\u8f6c\u6362\u4e3a\u70ed\u91cf\u3002FloTHERM\u4f1a\u6839\u636ePQ\u66f2\u7ebf\u8ba1\u7b97\u98ce\u6247\u7684\u673a\u68b0\u6548\u7387 \\(\\eta\\) \uff0c\u98ce\u6247\u7684\u70ed\u8017 \\(Q_{fan}\\) \u4e3a \\[ Q_{fan}=P_{fan~Derating}\\times \\eta \\] \u8fd9\u6837\u5c31\u4e0d\u96be\u7406\u89e3\u7ed3\u679cTable\u4e2d\u5404\u9879\u7684\u542b\u4e49\u4e86 \u98ce\u6247\u7684\u673a\u68b0\u80fd \\(E\\) \u662f\u901a\u8fc7\u8ba1\u7b97\u98ce\u6247\u51fa\u53e3\u5165\u53e3\u7684\u7a7a\u6c14\u603b\u538b\u529b\u5dee\u5f97\u5230\u7684\uff1a \\[ E = (P_{total,outlet} - P_{total,inlet} ) \\] \u5176\u4e2d\uff0c\u603b\u538b\u529b \\(P_{total}\\) \u7684\u8ba1\u7b97\u65b9\u5f0f\uff1a \\[ P_{total}= P_{static}+ 0.5(\\rho v^2) \\] \u5176\u4e2d \\(v\\) \u4e3a\u98ce\u6247\u51fa\u53e3\u5904\u7684\u5e73\u5747\u98ce\u901f\u3002","title":"\u98ce\u6247\u7ed3\u679cTable\u4e2d\u98ce\u6247\u7684\u529f\u7387\u4e0e\u8f93\u5165\u529f\u7387\u4e0d\u7b49"},{"location":"Flotherm/Fan/#table_1","text":"\u4ee3\u8868\u7684\u662f\u98ce\u6247\u5165\u53e3\u5904\u7684\u5e73\u5747\u6e29\u5ea6\u3002 \u98ce\u6247\u7684\u5de5\u4f5c\u6e29\u5ea6\u4f1a\u5f71\u54cd\u98ce\u6247\u7684\u4f7f\u7528\u5bff\u547d\uff0c\u901a\u5e38\u98ce\u6247\u5382\u5bb6\u4f1a\u89c4\u5b9a\u98ce\u6247\u7684\u5de5\u4f5c\u6e29\u5ea6\u3002 \u6709\u65f6\u5019\u5982\u679c\u98ce\u6247\u81ea\u8eab\u7684\u529f\u7387\u6bd4\u8f83\u5927\uff0c\u53ef\u80fd\u5165\u53e3\u5904\u7684\u6e29\u5ea6\u4e0d\u80fd\u4ee3\u8868\u98ce\u6247hub\u7684\u6e29\u5ea6\uff0c\u8fd9\u65f6\u53ef\u4ee5\u901a\u8fc7\u622a\u9762\u56fe\uff0c\u6216\u6dfb\u52a0\u6e29\u5ea6\u76d1\u63a7\u70b9\uff0c\u68c0\u67e5\u98ce\u6247hub\u7684\u6e29\u5ea6\u3002","title":"\u98ce\u6247\u7ed3\u679cTable\u4e2d\u7684\u6e29\u5ea6\u4ee3\u8868\u4ec0\u4e48\u542b\u4e49"},{"location":"Flotherm/Fan/#_4","text":"\u98ce\u6247\u53d1\u6563\u6709\u51e0\u4e2a\u6f5c\u5728\u7684\u539f\u56e0\uff1a \u521d\u59cb\u6d41\u91cf\u8fc7\u9ad8\u3002 \u98ce\u6247\u5468\u56f4\u7684\u7f51\u683c\u592a\u7c97\u7cd9\u3002 \u6247\u5f62\u66f2\u7ebf\u5305\u542b\u7684\u70b9\u6570\u4e0d\u8db3\uff0c\u53d8\u5316\u8fc7\u4e8e\u6025\u5267\uff0c\u6c34\u5e73\u7ebf\u3002\u5982\u4e0b\u56fe\u98ce\u6247\u7684PQ\u66f2\u7ebf\u6709\u6bd4\u8f83\u5e73\u5766\u7684\u533a\u57df\uff0c\u5982\u679c\u98ce\u6247\u521a\u597d\u5de5\u4f5c\u5728\u6b64\u533a\u57df\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6c42\u89e3\u632f\u8361\u7684\u95ee\u9898\uff0c\u5982\u4e0b\u56fe \u800c\u4e14\u89c2\u5bdf\u98ce\u6247\u9644\u8fd1\u76d1\u63a7\u70b9\u4e5f\u4f1a\u6709\u632f\u8361\u7684\u95ee\u9898\u3002 \u53ef\u4ee5\u5c1d\u8bd5\u51cf\u5c0fSolver Control\u4e2d\u7684Fan Relaxation\uff0c\u9ed8\u8ba4\u503c\u4e3a1.0\uff0c\u51cf\u5c0f\u52300.7\u62160.5\u8bd5\u8bd5\u3002\u51cf\u5c0fFan Relaxation\u4f1a\u8ba9\u6c42\u89e3\u5668\u6cbf\u7740\u98ce\u6247\u66f2\u7ebf\u91c7\u53d6\u66f4\u5c0f\u7684\u6b65\u957f\u79fb\u52a8\u3002\u5982\u4e0b\u56fe\uff0c\u5c06\u98ce\u6247\u7684Relaxation\u7cfb\u6570\u4ece1.0\u8c03\u6574\u4e3a0.7\u540e\u6c42\u89e3\u5f00\u59cb\u6536\u655b\u3002 \u98ce\u6247\u66f2\u7ebf\u4e2d\u4f7f\u7528\u4e86\u9519\u8bef\u7684\u5355\u4f4d\u3002 \u98ce\u6247\u51fa\u53e3\uff0c\u5165\u53e3\u88ab\u6321\u4f4f \u68c0\u67e5\u539f\u56e0\uff1a \u6682\u505c\u6c42\u89e3\uff0c\u67e5\u770b\u98ce\u6247\u7684\u5de5\u4f5c\u70b9\uff0c\u5982\u679c\u98ce\u6247\u5de5\u4f5c\u7684\u4e0d\u5728PQ\u66f2\u7ebf\u4e0a\uff0c\u8bf4\u660e\u98ce\u6247\u4e0d\u6536\u655b\u3002 \u521b\u5efa\u663e\u793a\u538b\u529b/\u901f\u5ea6\u7684\u5e73\u9762\u56fe\uff0c\u68c0\u67e5\u538b\u529b/\u901f\u5ea6\u68af\u5ea6\u3002 \u5c06\u5e73\u9762\u7684\u586b\u5145\u7c7b\u578b\u4ece\u201c\u63d2\u503c\u201d\u66f4\u6539\u4e3a\u201c\u5355\u5143\u683c\u586b\u5145\u201d\u3002 \u68c0\u67e5\u98ce\u6247\u5468\u56f4\u7684\u6807\u91cf\u573a \u5c1d\u8bd5\u201c\u653e\u677e\u201d\u98ce\u6247\uff1a\u5728 [Solver Control] \u4e2d\uff0c\u5c06\u98ce\u6247\u677e\u5f1b\u8bbe\u7f6e\u4e3a 0.7\u3002\u91cd\u65b0\u521d\u59cb\u5316\u5e76\u91cd\u65b0\u8fd0\u884c\u3002\u5982\u679c\u89e3\u4ecd\u7136\u53d1\u6563\uff08\u53ef\u80fd\u8fed\u4ee3\u6b21\u6570\u8f83\u591a\uff09\uff0c\u5c06\u5176\u964d\u4f4e\u5230 0.5\uff0c\u6700\u5927\u4e3a 0.3\u3002\u4e0d\u5efa\u8bae\u4f7f\u7528\u5c0f\u4e8e0.3\u3002","title":"\u5e26\u98ce\u6247\u7684\u6a21\u578b\u6c42\u89e3\u540e\u53d1\u6563"},{"location":"Flotherm/Fan/#swirl","text":"https://support.sw.siemens.com/kbassets/external/MG575744/files/10443.pdf https://support.sw.siemens.com/kbassets/external/MG575828/files/10539.pdf","title":"swirl"},{"location":"Flotherm/FloSCRIPT%E4%BD%BF%E7%94%A8/","text":"\u7528\u6237\u5728Project Manager, Drawing Board \u548c FloMCAD Bridge\u7684\u6240\u6709\u52a8\u4f5c\u90fd\u81ea\u52a8\u8bb0\u5f55\u4e3aFloSCRIPT log \u6587\u4ef6\uff0c\u4f4d\u4e8e\uff1a .\\flosuite_v12\\flotherm\\WinXP\\bin\\LogFiles\\ \u53ef\u4ee5\u6253\u5f00XML\u6587\u4ef6\u4e86\u89e3\u6587\u4ef6\u7ed3\u6784\u3002 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <xml_log_file version= \"1.0\" > <!--Copyright 2017 Mentor Graphics Corporation--> <!--All Rights Reserved--> <select_geometry> <selected_geometry_name> <geometry name= \"Root Assembly\" /> </selected_geometry_name> </select_geometry> <create_geometry geometry_type= \"cuboid\" > <source_geometry> <geometry name= \"Root Assembly\" /> </source_geometry> </create_geometry> <select_geometry> <selected_geometry_name> <geometry name= \"Root Assembly\" > <geometry name= \"Cuboid\" position_in_parent= \"0\" /> </geometry> </selected_geometry_name> <deselected_geometry_name> <geometry name= \"Root Assembly\" /> </deselected_geometry_name> </select_geometry> <modify_geometry new_value= \"440\" property_name= \"sizeX\" > <geometry_name> <geometry name= \"Root Assembly\" > <geometry name= \"Cuboid\" position_in_parent= \"0\" /> </geometry> </geometry_name> </modify_geometry> <modify_geometry new_value= \"Mentor\" property_name= \"name\" > <geometry_name> <geometry name= \"Root Assembly\" > <geometry name= \"Cuboid\" position_in_parent= \"0\" /> </geometry> </geometry_name> </modify_geometry> \u8fd0\u884cFloSCRIPT log\u6587\u4ef6 \u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4eceFloterm\u91cc\u8fd0\u884c\u6216\u4f7f\u7528\u547d\u4ee4\u884c\u65b9\u5f0f\u8fd0\u884c\u3002 \u4eceFloterm\u91cc\u8fd0\u884c\u3002 Macro -- Play FloSCRIPT. \u547d\u4ee4\u884c\u65b9\u5f0f\u3002 flotherm.bat \u2013f [FloSCRIPT File]","title":"FloSCRIPT\u4f7f\u7528"},{"location":"Flotherm/FloSCRIPT%E4%BD%BF%E7%94%A8/#floscript-log","text":"\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4eceFloterm\u91cc\u8fd0\u884c\u6216\u4f7f\u7528\u547d\u4ee4\u884c\u65b9\u5f0f\u8fd0\u884c\u3002 \u4eceFloterm\u91cc\u8fd0\u884c\u3002 Macro -- Play FloSCRIPT. \u547d\u4ee4\u884c\u65b9\u5f0f\u3002 flotherm.bat \u2013f [FloSCRIPT File]","title":"\u8fd0\u884cFloSCRIPT log\u6587\u4ef6"},{"location":"Flotherm/FloScript/","text":"","title":"FloScript"},{"location":"Flotherm/Floterm-PCB-Vias-%E6%A8%A1%E6%8B%9F/","text":"## \u4eceGerber\u6570\u636e\u521b\u5efa\u56fe\u5c42\u56fe\u50cf \u9ed1\u767d\u56fe\u5c42\u56fe\u50cf\u53ef\u4ee5\u624b\u52a8\u9644\u52a0\u5230FloTHERM PCB\u6216FloEDA\u4e2d\u7684\u56fe\u5c42\u3002 \u5f53\u6570\u636e\u672a\u5305\u542b\u5728IDF\u8f93\u5165\u4e2d\u6216\u9700\u8981\u5efa\u6a21\u76f2\u5b54\u6216\u57cb\u5b54\u65f6\uff0c\u8fd9\u975e\u5e38\u6709\u7528\u3002 \u7ec6\u8282 Pentalogix ViewMate\u53ef\u7528\u4e8e\u5bfc\u51faPCB\u5c42\u7684\u4f4d\u56fe\u56fe\u50cf\uff0c\u4ee5\u4fbf\u5728FloTHERM PCB\u548cFloEDA\u4e2d\u4f7f\u7528\u3002\u53ef\u4ee5\u4ece\u4e2d\u4e0b\u8f7d\u514d\u8d39\u8f6f\u4ef6 http://www.pentalogix.com/Products/ViewMate/register.cfm \u8fc7\u7a0b\u662f\uff1a \u4eceEDA\u5de5\u5177\u5bfc\u51faGerber\u6570\u636e \u5c06Gerber\u6570\u636e\u5bfc\u5165ViewMate \u5bfc\u51fa\u56fe\u5c42\u7684\u4f4d\u56fe\u56fe\u50cf \u5c06\u4f4d\u56fe\u56fe\u50cf\u5bfc\u5165FloTHERM PCB\u6216FloEDA \u542f\u52a8ViewMate\u3002\u5de6\u4fa7\u662f\u56fe\u5c42\u5de5\u5177\u680f - \u5982\u679c\u4e0d\u53ef\u89c1\uff0c\u8bf7\u4f7f\u7528\u201cCtrl + Shift + L\u201d\u663e\u793a \u7a81\u51fa\u663e\u793a\u7b2c\u4e00\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u8f6c\u5230\u6587\u4ef6>\u5bfc\u5165> Gerber\u3002\u9009\u62e9\u8981\u5bfc\u5165\u7684Gerber\u6587\u4ef6\u3002\u91cd\u590d\u6b64\u8fc7\u7a0b\u9010\u4e2a\u5bfc\u5165\u6bcf\u4e2a\u56fe\u5c42\u3002\u4eceEDA\u5de5\u5177\u5bfc\u51faPCB\u8f6e\u5ed3\u5e76\u5c06\u5176\u5bfc\u5165\u56fe\u5c42\u4e5f\u5f88\u6709\u7528\u3002 \u5bfc\u5165Gerber\u6587\u4ef6 FloTHERM PCB\u548cFloEDA\u8981\u6c42\u5c42\u56fe\u50cf\u5177\u6709\u4e0ePCB\u672c\u8eab\u76f8\u540c\u7684\u7eb5\u6a2a\u6bd4\u3002\u56e0\u6b64\uff0c\u5728ViewMate\u4e2d\u4f7f\u7528\u201c\u73af\u7ed5\u6240\u6709\u6570\u636e\u201d\u9009\u9879\u5f88\u6709\u7528\u3002\u5728\u56fe\u5c42\u5de5\u5177\u680f\u4e2d\u7a81\u51fa\u663e\u793a\u5305\u542bPCB\u8f6e\u5ed3\u7684\u56fe\u5c42\u3002\u8f6c\u5230\u8bbe\u7f6e>\u6846\u67b6>\u73af\u7ed5\u6240\u6709\u6570\u636e\u3002 \u73af\u7ed5\u6240\u6709\u6570\u636e \u8981\u5c06\u56fe\u5c42\u5bfc\u51fa\u5230\u4f4d\u56fe\u56fe\u50cf\uff0c\u8bf7\u8f6c\u5230\u6587\u4ef6>\u6253\u5370\u5230.bmp\u6587\u4ef6>\u9010\u5e27\u6253\u5370\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u9009\u62e9\u4e00\u6b21\u6253\u5370\u6240\u6709\u56fe\u5c42\u3002 \u6253\u5370\u5230bmp \u4f7f\u7528\u9009\u9879\u5bf9\u8bdd\u6846\u6307\u5b9a\u6e32\u67d3\u6a21\u5f0f\uff08\u767d\u8272\u9ed1\u8272\u7528\u4e8eFloTHERM PCB\u548cFloEDA\uff09\u548c\u5206\u8fa8\u7387\u3002\u4f7f\u7528\u6587\u4ef6\u6309\u94ae\u6307\u5b9a\u56fe\u5c42\u7684\u6587\u4ef6\u540d\u3002\u6309OK\u4ee5\u751f\u6210\u56fe\u50cf\u3002 \u9009\u9879 \u7136\u540e\u53ef\u4ee5\u5c06\u751f\u6210\u7684\u4f4d\u56fe\u56fe\u50cf\u5bfc\u5165FloTHERM PCB\u6216FloEDA\u8fdb\u884c\u5904\u7406\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6280\u672f\u8bf4\u660eMG526406\u3002 \u7531\u8f6f\u4ef6\u521b\u5efa\u7684\u8fc7\u5b54\u4ec5\u662f\u901a\u5b54\u8fc7\u5b54 \u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u8fc7\u7a0b\u521b\u5efa\u57cb\u5b54\u548c\u76f2\u5b54 \u7ec6\u8282 \u5728FloEDA\u548cFloTHERM PCB\u4e2d\u521b\u5efa\u7684\u8fc7\u5b54\u59cb\u7ec8\u662f\u901a\u5b54\u8fc7\u5b54 \u8981\u521b\u5efa\u76f2\u5b54\u548c/\u6216\u63a9\u57cb\u8fc7\u5b54\uff0c\u60a8\u9700\u8981\u5c06\u6a21\u578b\u7684PCB\u5806\u53e0\u4ece\u5047\u8bbe\u7684\u5bfc\u7535\u5c42\u539a\u5ea6\u7535\u4ecb\u8d28\u66f4\u6539\u4e3a\u5206\u522b\u5b9a\u4e49\u6240\u6709\u5c42\u7684\u5806\u53e0 - \u5305\u62ec\u5c06\u5177\u6709\u57cb\u5165/\u76f2\u5b54\u7684\u4ecb\u7535\u5c42\u3002 \u5728PCB\u5806\u53e0\u4e2d\u521b\u5efa\u989d\u5916\u7684\u5c42\uff0c\u4ee5\u4fbfPCB\u7684\u6574\u4e2a\u539a\u5ea6\u7531\u94dc\u5c42\uff08\u4eceEDA\u63a5\u53e3\u5bfc\u5165\u65f6\u81ea\u52a8\u521b\u5efa\uff09\u548c\u4ecb\u7535\u5c42\uff08\u76f2\u5b54\u548c\u57cb\u5b54\u5c06\u4f4d\u4e8e\u5176\u4e0a\u7684\u5c42\uff09\u5b9a\u4e49\u3002 \u5c42\u5806\u53e0\u5c06\u4f7f\u5f97\u5c42\u539a\u5ea6\u7684\u603b\u548c\u5c06\u7b49\u4e8ePCB\u603b\u539a\u5ea6 \u53e0\u52a0\u4e2d\u7684\u989d\u5916\u56fe\u5c42 \u5bf9\u4e8e\u6bcf\u4e2a\u7535\u4ecb\u8d28/\u901a\u5b54\u5c42\uff0c\u5bfc\u5165\u901a\u5b54\u4f4d\u7f6e\u7684\u76f8\u5e94\u56fe\u50cf\u3002\u53ef\u4ee5\u4f7f\u7528ViewMate\u7b49\u8f6f\u4ef6\u4e2d\u7684Gerber\u6587\u4ef6\u83b7\u53d6\u56fe\u50cf\u3002\u8fd9\u5c06\u5141\u8bb8\u5728\u56fe\u5c42\u7684\u767d\u8272\u56fe\u50cf\u4e0a\u5bfc\u51fa\u9ed1\u8272\uff0c\u7136\u540e\u53ef\u4ee5\u5728FloTHERM PCB\u6216FloEDA\u4e2d\u5904\u7406\u3002 \u56fe\u50cf\u5904\u7406 \u5bfc\u51fa\u8fd9\u79cd\u56fe\u50cf\u7684\u6b65\u9aa4\u53ef\u4ee5\u5728\u6280\u672f\u8bf4\u660e\u4e66MG526408\u4e2d\u627e\u5230 \u5c06\u56fe\u50cf\u9644\u52a0\u5230\u56fe\u5c42\u540e\uff0c\u53ef\u4ee5\u6309\u7167\u4e0e\u5904\u7406\u5bfc\u7535\u56fe\u5c42\u76f8\u540c\u7684\u65b9\u5f0f\u5bf9\u56fe\u50cf\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u5c06\u4e3a\u6bcf\u4e2a\u5c42\u751f\u6210\u8bb8\u591a\u5c42\u8d34\u7247\uff0c\u5e76\u5177\u6709\u9002\u5f53\u7684\u6709\u6548\u7535\u5bfc\u7387\u4ee5\u8868\u793a\u5c42\u5185\u7684\u8fc7\u5b54\u3002 \u8865\u4e01 \u56e0\u6b64\uff0c\u5178\u578b\u7684\u8fc7\u7a0b\u53ef\u80fd\u662f\uff1a \u4eceEDA\u8f6f\u4ef6\u5bfc\u5165IDF\u6587\u4ef6\u548c/\u6216FloEDA\u6587\u4ef6 \u521b\u5efa\u7535\u4ecb\u8d28/\u901a\u5b54\u5c42 \u4f7f\u7528ViewMate\u7b49\u5de5\u5177\u4e3aGerber\u6587\u4ef6\u6570\u636e\u521b\u5efa\u56fe\u5c42\u6587\u4ef6 \u9644\u52a0\u76f8\u5e94\u56fe\u5c42\u7684\u56fe\u50cf\u6587\u4ef6\u5e76\u5904\u7406\u8fd9\u4e9b\u56fe\u5c42\u3002 \u4eceGerber\u6570\u636e\u521b\u5efa\u56fe\u5c42\u56fe\u50cf \u9ed1\u767d\u56fe\u5c42\u56fe\u50cf\u53ef\u4ee5\u624b\u52a8\u9644\u52a0\u5230FloTHERM PCB\u6216FloEDA\u4e2d\u7684\u56fe\u5c42\u3002 \u5f53\u6570\u636e\u672a\u5305\u542b\u5728IDF\u8f93\u5165\u4e2d\u6216\u9700\u8981\u5efa\u6a21\u76f2\u5b54\u6216\u57cb\u5b54\u65f6\uff0c\u8fd9\u975e\u5e38\u6709\u7528\u3002 \u7ec6\u8282 Pentalogix ViewMate\u53ef\u7528\u4e8e\u5bfc\u51faPCB\u5c42\u7684\u4f4d\u56fe\u56fe\u50cf\uff0c\u4ee5\u4fbf\u5728FloTHERM PCB\u548cFloEDA\u4e2d\u4f7f\u7528\u3002\u53ef\u4ee5\u4ece\u4e2d\u4e0b\u8f7d\u514d\u8d39\u8f6f\u4ef6 http://www.pentalogix.com/Products/ViewMate/register.cfm \u8fc7\u7a0b\u662f\uff1a \u4eceEDA\u5de5\u5177\u5bfc\u51faGerber\u6570\u636e \u5c06Gerber\u6570\u636e\u5bfc\u5165ViewMate \u5bfc\u51fa\u56fe\u5c42\u7684\u4f4d\u56fe\u56fe\u50cf \u5c06\u4f4d\u56fe\u56fe\u50cf\u5bfc\u5165FloTHERM PCB\u6216FloEDA \u542f\u52a8ViewMate\u3002\u5de6\u4fa7\u662f\u56fe\u5c42\u5de5\u5177\u680f - \u5982\u679c\u4e0d\u53ef\u89c1\uff0c\u8bf7\u4f7f\u7528\u201cCtrl + Shift + L\u201d\u663e\u793a \u7a81\u51fa\u663e\u793a\u7b2c\u4e00\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u8f6c\u5230\u6587\u4ef6>\u5bfc\u5165> Gerber\u3002\u9009\u62e9\u8981\u5bfc\u5165\u7684Gerber\u6587\u4ef6\u3002\u91cd\u590d\u6b64\u8fc7\u7a0b\u9010\u4e2a\u5bfc\u5165\u6bcf\u4e2a\u56fe\u5c42\u3002\u4eceEDA\u5de5\u5177\u5bfc\u51faPCB\u8f6e\u5ed3\u5e76\u5c06\u5176\u5bfc\u5165\u56fe\u5c42\u4e5f\u5f88\u6709\u7528\u3002 \u5bfc\u5165Gerber\u6587\u4ef6 FloTHERM PCB\u548cFloEDA\u8981\u6c42\u5c42\u56fe\u50cf\u5177\u6709\u4e0ePCB\u672c\u8eab\u76f8\u540c\u7684\u7eb5\u6a2a\u6bd4\u3002\u56e0\u6b64\uff0c\u5728ViewMate\u4e2d\u4f7f\u7528\u201c\u73af\u7ed5\u6240\u6709\u6570\u636e\u201d\u9009\u9879\u5f88\u6709\u7528\u3002\u5728\u56fe\u5c42\u5de5\u5177\u680f\u4e2d\u7a81\u51fa\u663e\u793a\u5305\u542bPCB\u8f6e\u5ed3\u7684\u56fe\u5c42\u3002\u8f6c\u5230\u8bbe\u7f6e>\u6846\u67b6>\u73af\u7ed5\u6240\u6709\u6570\u636e\u3002 \u73af\u7ed5\u6240\u6709\u6570\u636e \u8981\u5c06\u56fe\u5c42\u5bfc\u51fa\u5230\u4f4d\u56fe\u56fe\u50cf\uff0c\u8bf7\u8f6c\u5230\u6587\u4ef6>\u6253\u5370\u5230.bmp\u6587\u4ef6>\u9010\u5e27\u6253\u5370\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u9009\u62e9\u4e00\u6b21\u6253\u5370\u6240\u6709\u56fe\u5c42\u3002 \u6253\u5370\u5230bmp \u4f7f\u7528\u9009\u9879\u5bf9\u8bdd\u6846\u6307\u5b9a\u6e32\u67d3\u6a21\u5f0f\uff08\u767d\u8272\u9ed1\u8272\u7528\u4e8eFloTHERM PCB\u548cFloEDA\uff09\u548c\u5206\u8fa8\u7387\u3002\u4f7f\u7528\u6587\u4ef6\u6309\u94ae\u6307\u5b9a\u56fe\u5c42\u7684\u6587\u4ef6\u540d\u3002\u6309OK\u4ee5\u751f\u6210\u56fe\u50cf\u3002 \u9009\u9879 \u7136\u540e\u53ef\u4ee5\u5c06\u751f\u6210\u7684\u4f4d\u56fe\u56fe\u50cf\u5bfc\u5165FloTHERM PCB\u6216FloEDA\u8fdb\u884c\u5904\u7406\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6280\u672f\u8bf4\u660eMG526406\u3002 \u7531\u8f6f\u4ef6\u521b\u5efa\u7684\u8fc7\u5b54\u4ec5\u662f\u901a\u5b54\u8fc7\u5b54 \u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u8fc7\u7a0b\u521b\u5efa\u57cb\u5b54\u548c\u76f2\u5b54 \u7ec6\u8282 \u5728FloEDA\u548cFloTHERM PCB\u4e2d\u521b\u5efa\u7684\u8fc7\u5b54\u59cb\u7ec8\u662f\u901a\u5b54\u8fc7\u5b54 \u8981\u521b\u5efa\u76f2\u5b54\u548c/\u6216\u63a9\u57cb\u8fc7\u5b54\uff0c\u60a8\u9700\u8981\u5c06\u6a21\u578b\u7684PCB\u5806\u53e0\u4ece\u5047\u8bbe\u7684\u5bfc\u7535\u5c42\u539a\u5ea6\u7535\u4ecb\u8d28\u66f4\u6539\u4e3a\u5206\u522b\u5b9a\u4e49\u6240\u6709\u5c42\u7684\u5806\u53e0 - \u5305\u62ec\u5c06\u5177\u6709\u57cb\u5165/\u76f2\u5b54\u7684\u4ecb\u7535\u5c42\u3002 \u5728PCB\u5806\u53e0\u4e2d\u521b\u5efa\u989d\u5916\u7684\u5c42\uff0c\u4ee5\u4fbfPCB\u7684\u6574\u4e2a\u539a\u5ea6\u7531\u94dc\u5c42\uff08\u4eceEDA\u63a5\u53e3\u5bfc\u5165\u65f6\u81ea\u52a8\u521b\u5efa\uff09\u548c\u4ecb\u7535\u5c42\uff08\u76f2\u5b54\u548c\u57cb\u5b54\u5c06\u4f4d\u4e8e\u5176\u4e0a\u7684\u5c42\uff09\u5b9a\u4e49\u3002 \u5c42\u5806\u53e0\u5c06\u4f7f\u5f97\u5c42\u539a\u5ea6\u7684\u603b\u548c\u5c06\u7b49\u4e8ePCB\u603b\u539a\u5ea6 \u53e0\u52a0\u4e2d\u7684\u989d\u5916\u56fe\u5c42 \u5bf9\u4e8e\u6bcf\u4e2a\u7535\u4ecb\u8d28/\u901a\u5b54\u5c42\uff0c\u5bfc\u5165\u901a\u5b54\u4f4d\u7f6e\u7684\u76f8\u5e94\u56fe\u50cf\u3002\u53ef\u4ee5\u4f7f\u7528ViewMate\u7b49\u8f6f\u4ef6\u4e2d\u7684Gerber\u6587\u4ef6\u83b7\u53d6\u56fe\u50cf\u3002\u8fd9\u5c06\u5141\u8bb8\u5728\u56fe\u5c42\u7684\u767d\u8272\u56fe\u50cf\u4e0a\u5bfc\u51fa\u9ed1\u8272\uff0c\u7136\u540e\u53ef\u4ee5\u5728FloTHERM PCB\u6216FloEDA\u4e2d\u5904\u7406\u3002 \u56fe\u50cf\u5904\u7406 \u5bfc\u51fa\u8fd9\u79cd\u56fe\u50cf\u7684\u6b65\u9aa4\u53ef\u4ee5\u5728\u6280\u672f\u8bf4\u660e\u4e66MG526408\u4e2d\u627e\u5230 \u5c06\u56fe\u50cf\u9644\u52a0\u5230\u56fe\u5c42\u540e\uff0c\u53ef\u4ee5\u6309\u7167\u4e0e\u5904\u7406\u5bfc\u7535\u56fe\u5c42\u76f8\u540c\u7684\u65b9\u5f0f\u5bf9\u56fe\u50cf\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u5c06\u4e3a\u6bcf\u4e2a\u5c42\u751f\u6210\u8bb8\u591a\u5c42\u8d34\u7247\uff0c\u5e76\u5177\u6709\u9002\u5f53\u7684\u6709\u6548\u7535\u5bfc\u7387\u4ee5\u8868\u793a\u5c42\u5185\u7684\u8fc7\u5b54\u3002 \u8865\u4e01 \u56e0\u6b64\uff0c\u5178\u578b\u7684\u8fc7\u7a0b\u53ef\u80fd\u662f\uff1a \u4eceEDA\u8f6f\u4ef6\u5bfc\u5165IDF\u6587\u4ef6\u548c/\u6216FloEDA\u6587\u4ef6 \u521b\u5efa\u7535\u4ecb\u8d28/\u901a\u5b54\u5c42 \u4f7f\u7528ViewMate\u7b49\u5de5\u5177\u4e3aGerber\u6587\u4ef6\u6570\u636e\u521b\u5efa\u56fe\u5c42\u6587\u4ef6 \u9644\u52a0\u76f8\u5e94\u56fe\u5c42\u7684\u56fe\u50cf\u6587\u4ef6\u5e76\u5904\u7406\u8fd9\u4e9b\u56fe\u5c42\u3002","title":"Floterm PCB Vias \u6a21\u62df"},{"location":"Flotherm/Floterm-PCB-Vias-%E6%A8%A1%E6%8B%9F/#gerber","text":"\u9ed1\u767d\u56fe\u5c42\u56fe\u50cf\u53ef\u4ee5\u624b\u52a8\u9644\u52a0\u5230FloTHERM PCB\u6216FloEDA\u4e2d\u7684\u56fe\u5c42\u3002 \u5f53\u6570\u636e\u672a\u5305\u542b\u5728IDF\u8f93\u5165\u4e2d\u6216\u9700\u8981\u5efa\u6a21\u76f2\u5b54\u6216\u57cb\u5b54\u65f6\uff0c\u8fd9\u975e\u5e38\u6709\u7528\u3002 \u7ec6\u8282 Pentalogix ViewMate\u53ef\u7528\u4e8e\u5bfc\u51faPCB\u5c42\u7684\u4f4d\u56fe\u56fe\u50cf\uff0c\u4ee5\u4fbf\u5728FloTHERM PCB\u548cFloEDA\u4e2d\u4f7f\u7528\u3002\u53ef\u4ee5\u4ece\u4e2d\u4e0b\u8f7d\u514d\u8d39\u8f6f\u4ef6 http://www.pentalogix.com/Products/ViewMate/register.cfm \u8fc7\u7a0b\u662f\uff1a \u4eceEDA\u5de5\u5177\u5bfc\u51faGerber\u6570\u636e \u5c06Gerber\u6570\u636e\u5bfc\u5165ViewMate \u5bfc\u51fa\u56fe\u5c42\u7684\u4f4d\u56fe\u56fe\u50cf \u5c06\u4f4d\u56fe\u56fe\u50cf\u5bfc\u5165FloTHERM PCB\u6216FloEDA \u542f\u52a8ViewMate\u3002\u5de6\u4fa7\u662f\u56fe\u5c42\u5de5\u5177\u680f - \u5982\u679c\u4e0d\u53ef\u89c1\uff0c\u8bf7\u4f7f\u7528\u201cCtrl + Shift + L\u201d\u663e\u793a \u7a81\u51fa\u663e\u793a\u7b2c\u4e00\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u8f6c\u5230\u6587\u4ef6>\u5bfc\u5165> Gerber\u3002\u9009\u62e9\u8981\u5bfc\u5165\u7684Gerber\u6587\u4ef6\u3002\u91cd\u590d\u6b64\u8fc7\u7a0b\u9010\u4e2a\u5bfc\u5165\u6bcf\u4e2a\u56fe\u5c42\u3002\u4eceEDA\u5de5\u5177\u5bfc\u51faPCB\u8f6e\u5ed3\u5e76\u5c06\u5176\u5bfc\u5165\u56fe\u5c42\u4e5f\u5f88\u6709\u7528\u3002 \u5bfc\u5165Gerber\u6587\u4ef6 FloTHERM PCB\u548cFloEDA\u8981\u6c42\u5c42\u56fe\u50cf\u5177\u6709\u4e0ePCB\u672c\u8eab\u76f8\u540c\u7684\u7eb5\u6a2a\u6bd4\u3002\u56e0\u6b64\uff0c\u5728ViewMate\u4e2d\u4f7f\u7528\u201c\u73af\u7ed5\u6240\u6709\u6570\u636e\u201d\u9009\u9879\u5f88\u6709\u7528\u3002\u5728\u56fe\u5c42\u5de5\u5177\u680f\u4e2d\u7a81\u51fa\u663e\u793a\u5305\u542bPCB\u8f6e\u5ed3\u7684\u56fe\u5c42\u3002\u8f6c\u5230\u8bbe\u7f6e>\u6846\u67b6>\u73af\u7ed5\u6240\u6709\u6570\u636e\u3002 \u73af\u7ed5\u6240\u6709\u6570\u636e \u8981\u5c06\u56fe\u5c42\u5bfc\u51fa\u5230\u4f4d\u56fe\u56fe\u50cf\uff0c\u8bf7\u8f6c\u5230\u6587\u4ef6>\u6253\u5370\u5230.bmp\u6587\u4ef6>\u9010\u5e27\u6253\u5370\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u9009\u62e9\u4e00\u6b21\u6253\u5370\u6240\u6709\u56fe\u5c42\u3002 \u6253\u5370\u5230bmp \u4f7f\u7528\u9009\u9879\u5bf9\u8bdd\u6846\u6307\u5b9a\u6e32\u67d3\u6a21\u5f0f\uff08\u767d\u8272\u9ed1\u8272\u7528\u4e8eFloTHERM PCB\u548cFloEDA\uff09\u548c\u5206\u8fa8\u7387\u3002\u4f7f\u7528\u6587\u4ef6\u6309\u94ae\u6307\u5b9a\u56fe\u5c42\u7684\u6587\u4ef6\u540d\u3002\u6309OK\u4ee5\u751f\u6210\u56fe\u50cf\u3002 \u9009\u9879 \u7136\u540e\u53ef\u4ee5\u5c06\u751f\u6210\u7684\u4f4d\u56fe\u56fe\u50cf\u5bfc\u5165FloTHERM PCB\u6216FloEDA\u8fdb\u884c\u5904\u7406\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6280\u672f\u8bf4\u660eMG526406\u3002 \u7531\u8f6f\u4ef6\u521b\u5efa\u7684\u8fc7\u5b54\u4ec5\u662f\u901a\u5b54\u8fc7\u5b54 \u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u8fc7\u7a0b\u521b\u5efa\u57cb\u5b54\u548c\u76f2\u5b54 \u7ec6\u8282 \u5728FloEDA\u548cFloTHERM PCB\u4e2d\u521b\u5efa\u7684\u8fc7\u5b54\u59cb\u7ec8\u662f\u901a\u5b54\u8fc7\u5b54 \u8981\u521b\u5efa\u76f2\u5b54\u548c/\u6216\u63a9\u57cb\u8fc7\u5b54\uff0c\u60a8\u9700\u8981\u5c06\u6a21\u578b\u7684PCB\u5806\u53e0\u4ece\u5047\u8bbe\u7684\u5bfc\u7535\u5c42\u539a\u5ea6\u7535\u4ecb\u8d28\u66f4\u6539\u4e3a\u5206\u522b\u5b9a\u4e49\u6240\u6709\u5c42\u7684\u5806\u53e0 - \u5305\u62ec\u5c06\u5177\u6709\u57cb\u5165/\u76f2\u5b54\u7684\u4ecb\u7535\u5c42\u3002 \u5728PCB\u5806\u53e0\u4e2d\u521b\u5efa\u989d\u5916\u7684\u5c42\uff0c\u4ee5\u4fbfPCB\u7684\u6574\u4e2a\u539a\u5ea6\u7531\u94dc\u5c42\uff08\u4eceEDA\u63a5\u53e3\u5bfc\u5165\u65f6\u81ea\u52a8\u521b\u5efa\uff09\u548c\u4ecb\u7535\u5c42\uff08\u76f2\u5b54\u548c\u57cb\u5b54\u5c06\u4f4d\u4e8e\u5176\u4e0a\u7684\u5c42\uff09\u5b9a\u4e49\u3002 \u5c42\u5806\u53e0\u5c06\u4f7f\u5f97\u5c42\u539a\u5ea6\u7684\u603b\u548c\u5c06\u7b49\u4e8ePCB\u603b\u539a\u5ea6 \u53e0\u52a0\u4e2d\u7684\u989d\u5916\u56fe\u5c42 \u5bf9\u4e8e\u6bcf\u4e2a\u7535\u4ecb\u8d28/\u901a\u5b54\u5c42\uff0c\u5bfc\u5165\u901a\u5b54\u4f4d\u7f6e\u7684\u76f8\u5e94\u56fe\u50cf\u3002\u53ef\u4ee5\u4f7f\u7528ViewMate\u7b49\u8f6f\u4ef6\u4e2d\u7684Gerber\u6587\u4ef6\u83b7\u53d6\u56fe\u50cf\u3002\u8fd9\u5c06\u5141\u8bb8\u5728\u56fe\u5c42\u7684\u767d\u8272\u56fe\u50cf\u4e0a\u5bfc\u51fa\u9ed1\u8272\uff0c\u7136\u540e\u53ef\u4ee5\u5728FloTHERM PCB\u6216FloEDA\u4e2d\u5904\u7406\u3002 \u56fe\u50cf\u5904\u7406 \u5bfc\u51fa\u8fd9\u79cd\u56fe\u50cf\u7684\u6b65\u9aa4\u53ef\u4ee5\u5728\u6280\u672f\u8bf4\u660e\u4e66MG526408\u4e2d\u627e\u5230 \u5c06\u56fe\u50cf\u9644\u52a0\u5230\u56fe\u5c42\u540e\uff0c\u53ef\u4ee5\u6309\u7167\u4e0e\u5904\u7406\u5bfc\u7535\u56fe\u5c42\u76f8\u540c\u7684\u65b9\u5f0f\u5bf9\u56fe\u50cf\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u5c06\u4e3a\u6bcf\u4e2a\u5c42\u751f\u6210\u8bb8\u591a\u5c42\u8d34\u7247\uff0c\u5e76\u5177\u6709\u9002\u5f53\u7684\u6709\u6548\u7535\u5bfc\u7387\u4ee5\u8868\u793a\u5c42\u5185\u7684\u8fc7\u5b54\u3002 \u8865\u4e01 \u56e0\u6b64\uff0c\u5178\u578b\u7684\u8fc7\u7a0b\u53ef\u80fd\u662f\uff1a \u4eceEDA\u8f6f\u4ef6\u5bfc\u5165IDF\u6587\u4ef6\u548c/\u6216FloEDA\u6587\u4ef6 \u521b\u5efa\u7535\u4ecb\u8d28/\u901a\u5b54\u5c42 \u4f7f\u7528ViewMate\u7b49\u5de5\u5177\u4e3aGerber\u6587\u4ef6\u6570\u636e\u521b\u5efa\u56fe\u5c42\u6587\u4ef6 \u9644\u52a0\u76f8\u5e94\u56fe\u5c42\u7684\u56fe\u50cf\u6587\u4ef6\u5e76\u5904\u7406\u8fd9\u4e9b\u56fe\u5c42\u3002","title":"\u4eceGerber\u6570\u636e\u521b\u5efa\u56fe\u5c42\u56fe\u50cf"},{"location":"Flotherm/Flotherm%20Tips/","text":"Heatsink \u7f51\u683c\u5212\u5206 Heat sink fins are not key-pointed. The fluid flow and heat transfer in the narrow channels between the fins is not modeled accurately. Heat sinks are extruded surfaces which help in spreading the heat over a greater surface area so that the heat can be dissipated more effectively [Q=h A (Ts-Tfluid)]. Modeling the flow within these narrow channels is critical to capture the pressure loss and heat transfer . When performing analysis using CFD software such as FloTHERM, this translates to having a good mesh resolution for the regions between and around the fins. The most efficient way of modeling a heat sink in FloTHERM is to use a heat sink smart part. When you open the Heat sink smart construction dialog box, review the value for number of cells between fins, the default value is 3 cells. If higher accuracy of pressure drop is desired, you may want to increase this number to 5 cells between the fins. Next step is to set grid constraints on the heat sink. Along the length of Heat Sink fins set an inflation to resolve the entry and exit pressure losses. Set a grid constraint to resolve the thickness of the fins. Max size = fin thickness, min size allowed < (1/3)*channel width. Localize the grid on the Heat Sink. You will note that the fine grid is set only for the heat sink region along with the inflated region. Plesae refer to Tech-Note MG576603 : FloTHERM - Gridding Tools and Recommendations. See the attached snapshots illustrating the same. Heat sink smart part allows the user to conveniently set the number of cells between the fins. It is recommended to have atleast 3 cells (which is the default) between the fins to resolve the fluid flow and heat transfer within the narrow channels (refer to MG516365). However there isn't an analogous way to enter the number of cells across fin thickness or heat sink base thickness in the smart part construction dialog box. For most scenarios having a single grid cell across the fin thickness gives reasonably accurate results because the temperature gradient within the thickness is not significant. However there could be some exceptions where the user wants to have more than 1 cell across the fin thickness to resolve the temperature gradient within the fin thickness, especially for the end fins. There is a trick users can use to specify the number of cells within the thickness of individual components of heat sink i.e. fins and heat sink base. Create a default heat sink smart part which already has setting for 3 cells between the fins. Make a copy of the heat sink smart part in the same assembly & same location as original smart part. Select this copy and go to Geometry>Decompose to decompose the smart part into its individual cuboids. You will see a new subassembly 'HeatSink:1' created containing the individual cuboid for all the fins and base. Multiple select all the heat sink fins ( HSInnerFin 1:1 , HSInnerFin 2:1 ....) and attach a grid constraint in the Yo direction ( ie. thickness) with min number = 2. Make sure you activate the Min size under the grid constraint so that this Min size overrides the system grid Min size. If the heat spreading within heat sink base is significant attach a grid constraint to the Zo direction of HSBase cuboid with min number =3 and Min size activated. Rename this newly created sub-assembly to 'Heat Sink: Fin Gridding' for ease of understanding and then deactivate it (please refer to Fig. 2 below). When an assembly/object is deactivated the grid associated with it (grid constraints etc.) is still applied in the model even though the object itself is not active in the simulation. Figure 1 . There is only one grid cell resolving the fin thickness Figure 2. Using deactivated assembly 2 cells were obtained across fin thickness. Enclosure walls \u7f51\u683c\u5212\u5206 When modeling enclosure walls as thick, the wall thickness is usually an order of magnitude smaller than the overall dimension of the enclosure. It is important to review the grid closely to make sure that there is at least one grid cell to resolve the wall thickness. In order to capture heat spreading effects it is recommended to have at least three cells within the wall thickness. When chassis walls are modeled using enclosure smart part a user can specify grid constraints to specify the Max size or Min. no. of cells in any of the specified directions for the enclosure smart part, but this applies to the overall dimensions of the enclosure and does not always ensure that the enclosure walls (when modeled thick) thickness is resolved. If the user is modeling the enclosure walls as thick and wants to capture the heat spreading effects within the walls of the enclosure it is recommended to have at least 3 cells within the thickness of the enclosure walls. In the current version of FloTHERM there isn't an option to specify or constrain the no. of grid cells for the enclosure wall thickness. Below are some modeling/gridding techniques to resolve enclosure walls Create a volume region the size of inner volume of the enclosure and specify a grid inflation same as the wall thickness 't' and min no. = 3 or Max size <= 't'/3 for both the low and high sides. Attach this grid constraint to all the three directions. After attaching this grid constraint localize the mesh on the volume region to truncate this fine mesh, right at the edge of the inflated boundary which in this case is the enclosure smart part itself. Below is an example of setting grid constraint to have a minimum of 3 cells within the enclosure walls which have thickness 't = 6 mm'. Another option is to decompose the enclosure smart part into its individual cuboids and then attach a grid constraint to each of the six cuboids to have at least 3 or more cells to resolve the wall thickness. This modeling option however is more tedious than the former. inflation on a localized grid When an object/geometry touches the boundary of a localized grid, the keypoint grid associated with it bleeds beyond the localized region. When an object/geometry touches the boundary of a localized grid, the fine grid associated with it bleeds beyond the edges of the region being localized. Setting an inflation under the grid constraints, inflates the size of this localized region (prevents the geometry from touching the localized boundary) thus preventing the fine grid from bleeding. This can be best illustrated by Figure 1 shown below. Three identical assemblies of a detailed component with heat sinks mounted on them are placed next to each other. the assembly on the left is not localized the assembly in the center is localized, but you will notice that the keypoint grid from the heat sink fins and detailed component bleeds beyond the localized region. the last assembly on the right has a grid constraint with inflation set in all the three directions. The fine grid in this case truncates right at the edge of inflated grid. \u200b Figure 1: Localizing with inflation prevents keypoint grid from bleeding Sometimes setting an inflation has an added advantage of capturing physics of the problem. For example: Having a fine grid at the entry & exit of heat sinks fins helps capture the pressure losses with greater accuracy (see Fig. 2 below) It is strongly recommended to have grid inflation on boards and high power components to resolve the convective heat transfer close to their external surface. Figure 2: Grid inflation helps resolve the entry/exit losses associated with heat sinks. TIM\u5efa\u6a21 When two solid surfaces are in contact there are small air gaps at interface due to imperfections on the surface smoothness. A thermal interface material (TIM) is placed between the two solid surfaces to fill in the air gaps and enable better heat transfer across this interface. Hence modeling the effect of TIM is critical. In FloTHERM when modeling TIMs there are two approaches the user can take. Create a collapsed cuboid of thickness 't' between the two surfaces in contact and assign a material property (conductivity k ) to this collapsed cuboid. FloTHERM calculates the through plane resistance of this collapsed cuboid R_th_throughPlane = (t/k), then it takes into account this R_th for heat transfer (1D) normal to the contact surface. The in-plane conductivity (heat spreading) of the TIM cuboid is ignored. Assign a surface attribute to one of the surfaces in contact and specify a value of Rsurf-solid ( SI units Km^2/W). The advantage of this approach over approach 1 is that project tree is simpler. When using this approach to model TIM between component and heat sink it is best to attach the surface property to the component surface. This is assuming the entire component surface is in contact with the heat sink. When using option #1 above it is important to make sure that the TIM collapsed cuboid is placed lower in the hierarchy below the two objects in contact to make sure it is not overwritten by one of the non-collapsed cuboids in contact. In order to model contact resistance between two solid surfaces the modeling approach is to attach a surface attribute to one of the surfaces in contact and specify a value of Rsurf-solid resistance value ( units = K m^2/W or C in^2/W). In order to do this - select one of the two objects (cuboid or smart part) Right Click>Surface =>Rsurf-solid ; you can attach this surface resistance to the appropriate surface of the object. One practical application of this is when modeling the thermal interface material (TIM) between a component top surface and heat sink base.A surface resistance Rsurf-solid can be attached to either of the surfaces to model the thermal resistance of the TIM when heat moves from the component into the heat sink base. The advantage of this approach is that typically the TIM thickness is very very small when compared with the other objects. If TIM was to be modeled discretely as a cuboid it can lead to very thin grid cells leading to high aspect ratios. Using the Rsurf-solid approach this can be avoided. Compact\u6a21\u578b\u7684\u8868\u9762\u6e29\u5ea6 When a package is modeled as 2 Resistor or Delphi compact component smart part and if its top surface (Zo high) was tocuhing a solid object for example a heat sink base then a surface temperature plot of the compact component does not show the top surface of compact component. A workaround for this is to place a collapsed cuboid between the compact component top surface and the solid object say heat sink base. You can attach a really high conductivity (k = 1000 W/m-K) to the collapsed cuboid so that its through plane resistance is negligibly small. Below is an example comparing two identical 2 resistor components. Component 2 has a solid heat sink base touching its top surface- when surface temperature is generated on both the components the top surface of component 2 becomes invisible (Fig.1). Figure 1: Component 2 top surface is invisible In order to avoid above, create a collapsed cuboid sandwiched between Comp 2 top surface and Heat sink base. After the simulation is re-run, generate the surface temperarure on the compact component and also on the collapsed cuboid we created. Since the collapsed cuboid has high conductivity material attached to it, its surface temperature is almost same as Tcase of component 2 as seen in the Fig.2 below. Note : Please make sure that the collapsed cuboid is placed lower in the project tree than both the compact component and the Heat sink base. This ensures that the collapsed cuboid is not overwritten by the two solid objects in contact. Figure 2: Component 2 top surface has a collapsed cuboid ( high k) on its top surface Tables Results for the model can be seen below. System grid settings No \"minimum size\" has been defined on the local mesh. Make it simple to guarantee a success in the mesh strategy: Always add a \"grid constraint\" to each localized region to ensure grid quality in all three direction Xo, Yo and Zo. Always define a \"minimum size\" and \"maximum size\" for the system grid and each local grid: \"maximum size\" guarantees to obtain a regular mesh on the local region. The minimum size guaranties the minimum solid grid and minimum fluid grid in channel in the area that is needed in this area. - \"minimum size\" on the local grid guarantees to be independent from the system grid. Try to adjust the parameters as closest to the needs to gain some grid cells and to improve the grid ratios. The \"minimum size\" of the grid constraint will have only an effect if it is smaller than the system minimum size, but as local grid is used to get smaller mesh than the system, then always specify this local \"minimum size\" parameter. Modeling FAQs Answers to frequently asked questions (FAQs) about modeling. Q: What is the difference between global and ambient? A: The external ambient temperature settings made in the Model Setup Tab - Global System Settings Section is used for the following: As a reference temperature for buoyancy calculations As the initial condition at the start of a solution As a default temperature of air convected into the model The external radiant temperature is used as a default external temperature that is radiated to, from any object within the solution domain that is part of the radiation calculation and can \u2018see through\u2019 to the outside of the solution domain. Ambient attributes attached to the sides of the solution domain or a solution domain cutout can be used to override the Global temperature values. Q: When do I have to use a source? A: A source attribute attached to a source primitive, as opposed to a thermal attribute attached to a cuboid, is useful for the following reasons: Definition of a source of heat in a portion of a cuboid. Ability to define heat dissipation in terms of W/m3 (for an uncollapsed source), W/m2 (for a collapsed source) or as a linear function of the temperature. In addition to this, a source can be placed in air and values of pressure, velocity, and so on, defined for that portion of air space. flotherm\u5982\u4f55\u53d6\u6d88\u5168\u90e8\u9690\u85cf\uff1f flotherm\u9690\u85cf\u548c\u53d6\u6d88\u9690\u85cf\u7684\u5feb\u6377\u952e\u5206\u522b\u662fF12\u548cShit+F12\u3002 \u6709\u65f6\u5019\u5e0c\u671b\u663e\u793a\u5168\u90e8\u9690\u85cf\u5bf9\u8c61\uff0c\u5728Project Manager\u754c\u9762\u4e0b\u6ca1\u6709\u8fd9\u79cd\u64cd\u4f5c\u3002\u4e0d\u8fc7\u53ef\u4ee5\u6253\u5f00Visual Editor\uff0c\u6309Ctrl+F12\u53d6\u6d88\u9690\u85cf\uff0c\u518d\u8fd4\u56deProject Manager\u754c\u9762\u5c31\u884c\u4e86\u3002 \u4fee\u6539\u6a21\u578b\u65f6\u52a0\u8f7d\u5f88\u6162 \u5bf9\u4e8e\u6709\u5927\u91cf\u7f51\u683c\u6a21\u578b\u9700\u8981\u65f6\u95f4\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\uff0c\u4f1a\u6709\u505c\u6ede\u611f\u3002 \u4e0b\u5217\u4efb\u4f55\u5f62\u5f0f\u663e\u793a\u7f51\u683c\u65f6\u5c31\u4f1a\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\uff1a \u5728\u7ed8\u56fe\u677f\u4e2d\u663e\u793a\u7f51\u683c \u663e\u793a\u201c\u7f51\u683c\u6458\u8981\u201d\u5bf9\u8bdd\u6846 \u7cfb\u7edf\u7f51\u683c\u5c5e\u6027\u8868\u663e\u793a \u663e\u793a de-keypointed \u6458\u8981\u5217 \u6240\u4ee5\uff0c\u5982\u679c\u9700\u8981\u8fdb\u884c\u591a\u9879\u4fee\u6539\uff0c\u5efa\u8bae\u5173\u95ed\u4ee5\u4e0a\u9009\u9879\uff0c\u4f7f\u5f97\u4e0d\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\u3002 Batch Mode \u6253\u5f00\u9879\u76ee\u6587\u4ef6\uff0csanity check \u5e76 re-initialize \u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0a\u7ea7\u76ee\u5f55\u521b\u5efa\u6279\u5904\u7406\u6587\u4ef6xxx.bat \u5185\u5bb9 @echo off call \"C:\\Program Files\\MentorMA\\flosuite_v12\\flotherm\\WinXP\\bin\\flotherm\" -b \\\"ProjectA\\\" call \"C:\\Program Files\\MentorMA\\flosuite_v12\\flotherm\\WinXP\\bin\\flotherm\" -b \\\"ProjectB\\\" :end \u53cc\u51fb\u8fd0\u884c\u6b64\u6279\u5904\u7406\u6587\u4ef6xxx.bat\u5373\u53ef\u5f00\u59cb\u6c42\u89e3\u3002 \u8fd0\u884c\u540e\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e00\u4e2a floerror.log \u6587\u4ef6\uff0c\u91cc\u9762\u6709\u7b80\u5355\u6458\u8981\u4fe1\u606f\u3002 \u8ba1\u7b97\u70ed\u8f90\u5c04 \u9700\u8981\u8fdb\u884c\u9879\u76ee\u8bbe\u7f6e\u548c\u9762\u5c5e\u6027\u8bbe\u7f6e\u3002 [Model/Modeling] \u9009\u4e2d \u201c Radiation On \u201d \u6307\u5b9a\u5bf9\u8c61 \u9762\u5c5e\u6027 \u4e2d\u7684\u8f90\u5c04\u7387 \u6307\u5b9a \u8f90\u5c04 \u5c5e\u6027\uff0c\u5b9a\u4e49\u8f90\u5c04\u79bb\u6563\u5316\u7684\u50cf\u7d20\u5927\u5c0f\u3002 Specify [ Radiation ] attribute (to define the pixel size for the radiation discretization). On each pixel, FloVENT or FloTHERM will consider a uniform temperature for ray tracing method. This pixel is at least the size of the cells, but the pixel can be and will often be wider than the local cell size. \u201cSingle Radiating\u201d : create a single pixel on the surface. Define \u201cSingle Radiating\u201d for small parts of the models or low temperature gradient on the surface of this part. \u201cSubdivided radiating\u201d: create multiple pixel on the surfaces based on your criteria. Define \u201cSubdivided radiating\u201d for big surface or when the temperature gradients are high on the surface of this part. Flotherm\u4f7f\u7528\u5c04\u7ebf\u8ffd\u8e2a\u6cd5\u8ba1\u7b97\u8f90\u5c04 JESD51-14 \u7528\u7535\u6c14\u6d4b\u8bd5\u65b9\u6cd5\u5f97\u5230\u5143\u5668\u4ef6\u7684 \\(R_{\\theta-JC}\\) \u6587\u6863\u53ef\u4ee5\u4eceJEDEC\u5b98\u7f51\u514d\u8d39\u83b7\u53d6\u3002 sec4\uff0c \u6d4b\u8bd5\u9700\u6c42\uff0c\u5b9a\u4e49\u4e86\u4e24\u79cd\u6d4b\u8bd5\u65b9\u6cd5\uff1a\u5e72\u754c\u9762\uff0c\u5bfc\u70ed\u80f6\u754c\u9762 Sec 5\uff0c\u6d4b\u8bd5\u7ed3\u679c\u5206\u6790 \u7a7a\u6c14\u6e29\u5ea6\u8bbe\u7f6e\u7684\u533a\u522b Why do I see two different places to specify ambient temperature? Which one takes precedence if they are different? What is the temperature of the air coming into the computational domain? What is the temperature of my surroundings outside the computational domain? System Ambients: These settings prescribe the boundary conditions at each face of the domain. Any air entering the system across an open boundary will be at the temperature set by the ambient attached to that face of the computational domain. If a solid touches the edge of the solution domain that is defined as open boundary. The heat removed from that surface will be determined by the value of heat transfer coefficient (HTC) that is set under the ambient. For example if the domain size is the same as the enclosure, then the ambient set on domain face defines the heat transfer coefficient on the external surface of enclosure walls. If a face of the domain is open, but does not have an ambient attached to it, then the user is given a WARN about it. The solver will use the values set under Model Setup>Default Ambient Temperature as the temperature for the air entering through that open face. Model Setup: This setting is used by the software for several purposes: To provide defaults used at the beginning of a solve to give all of the grid cells a reasonable start value for temperature, pressure and velocities. To provide default values to be used if an open boundary is defined without a System>Ambient attached. To provide a reference on which to calculate buoyancy. (i.e. fluid at a temperature higher than the Model Setup> Default Ambient Temperature will rise and fluid at a lower temperature will sink). To provide a background (External Radiant Temperature) temperature value to which all objects can radiate to, if radiation is activated under modeling options. \u81ea\u7136\u6563\u70ed\u6c42\u89e3\u57df Natural convection model for a sealed system does not converge. Residuals do not converge (Natural convection scenario) The domain size should be larger than the sealed system. No material attached to the enclosure. Radiation is not activated When modeling natural convection for a sealed system it is important to have the solution domain size larger than the sealed system. This allows the CFD solver to simulate the fluid flow around the chassis and in turn calculate the heat transfer coefficient on the chassis walls. The rule of thumb is to have the domain size larger by a minimum of two heights above and one height below the sealed system assuming gravity acts vertically down (say -Y) and height refers to the dimension parallel to gravity (along Y). On the sides the domain size has to be larger by at least half the width and length. So if gravity was acting along -Y direction the domain size has to be +2Y above and 1Y below the box. On the sides it has to be larger by 0.5X and 0.5Z. This ensures that the hot plume rising due to buoyancy effects gets enough height to rise and expand into the still air around it. The extended domain on the sides allows for air to enter the solution domain through the side faces. Please check to see if these side faces are modeled as open or symmetry faces ( Right Click on System > Faces ). Also it is important to attach a material attribute to the enclosure to ensure that there is heat transfer across the walls of the enclosure. The walls of the enclosure need to be modeled as thick rather than thin or collapsed (default) if Heat spreading effects within the wall are important Radiation is activated and a radiation attribute is attached to the enclosure. Suggested further reading Tech Note : MG245386 App Note: MG575808","title":"Flotherm Tips"},{"location":"Flotherm/Flotherm%20Tips/#heatsink","text":"Heat sink fins are not key-pointed. The fluid flow and heat transfer in the narrow channels between the fins is not modeled accurately. Heat sinks are extruded surfaces which help in spreading the heat over a greater surface area so that the heat can be dissipated more effectively [Q=h A (Ts-Tfluid)]. Modeling the flow within these narrow channels is critical to capture the pressure loss and heat transfer . When performing analysis using CFD software such as FloTHERM, this translates to having a good mesh resolution for the regions between and around the fins. The most efficient way of modeling a heat sink in FloTHERM is to use a heat sink smart part. When you open the Heat sink smart construction dialog box, review the value for number of cells between fins, the default value is 3 cells. If higher accuracy of pressure drop is desired, you may want to increase this number to 5 cells between the fins. Next step is to set grid constraints on the heat sink. Along the length of Heat Sink fins set an inflation to resolve the entry and exit pressure losses. Set a grid constraint to resolve the thickness of the fins. Max size = fin thickness, min size allowed < (1/3)*channel width. Localize the grid on the Heat Sink. You will note that the fine grid is set only for the heat sink region along with the inflated region. Plesae refer to Tech-Note MG576603 : FloTHERM - Gridding Tools and Recommendations. See the attached snapshots illustrating the same. Heat sink smart part allows the user to conveniently set the number of cells between the fins. It is recommended to have atleast 3 cells (which is the default) between the fins to resolve the fluid flow and heat transfer within the narrow channels (refer to MG516365). However there isn't an analogous way to enter the number of cells across fin thickness or heat sink base thickness in the smart part construction dialog box. For most scenarios having a single grid cell across the fin thickness gives reasonably accurate results because the temperature gradient within the thickness is not significant. However there could be some exceptions where the user wants to have more than 1 cell across the fin thickness to resolve the temperature gradient within the fin thickness, especially for the end fins. There is a trick users can use to specify the number of cells within the thickness of individual components of heat sink i.e. fins and heat sink base. Create a default heat sink smart part which already has setting for 3 cells between the fins. Make a copy of the heat sink smart part in the same assembly & same location as original smart part. Select this copy and go to Geometry>Decompose to decompose the smart part into its individual cuboids. You will see a new subassembly 'HeatSink:1' created containing the individual cuboid for all the fins and base. Multiple select all the heat sink fins ( HSInnerFin 1:1 , HSInnerFin 2:1 ....) and attach a grid constraint in the Yo direction ( ie. thickness) with min number = 2. Make sure you activate the Min size under the grid constraint so that this Min size overrides the system grid Min size. If the heat spreading within heat sink base is significant attach a grid constraint to the Zo direction of HSBase cuboid with min number =3 and Min size activated. Rename this newly created sub-assembly to 'Heat Sink: Fin Gridding' for ease of understanding and then deactivate it (please refer to Fig. 2 below). When an assembly/object is deactivated the grid associated with it (grid constraints etc.) is still applied in the model even though the object itself is not active in the simulation. Figure 1 . There is only one grid cell resolving the fin thickness Figure 2. Using deactivated assembly 2 cells were obtained across fin thickness.","title":"Heatsink \u7f51\u683c\u5212\u5206"},{"location":"Flotherm/Flotherm%20Tips/#enclosure-walls","text":"When modeling enclosure walls as thick, the wall thickness is usually an order of magnitude smaller than the overall dimension of the enclosure. It is important to review the grid closely to make sure that there is at least one grid cell to resolve the wall thickness. In order to capture heat spreading effects it is recommended to have at least three cells within the wall thickness. When chassis walls are modeled using enclosure smart part a user can specify grid constraints to specify the Max size or Min. no. of cells in any of the specified directions for the enclosure smart part, but this applies to the overall dimensions of the enclosure and does not always ensure that the enclosure walls (when modeled thick) thickness is resolved. If the user is modeling the enclosure walls as thick and wants to capture the heat spreading effects within the walls of the enclosure it is recommended to have at least 3 cells within the thickness of the enclosure walls. In the current version of FloTHERM there isn't an option to specify or constrain the no. of grid cells for the enclosure wall thickness. Below are some modeling/gridding techniques to resolve enclosure walls Create a volume region the size of inner volume of the enclosure and specify a grid inflation same as the wall thickness 't' and min no. = 3 or Max size <= 't'/3 for both the low and high sides. Attach this grid constraint to all the three directions. After attaching this grid constraint localize the mesh on the volume region to truncate this fine mesh, right at the edge of the inflated boundary which in this case is the enclosure smart part itself. Below is an example of setting grid constraint to have a minimum of 3 cells within the enclosure walls which have thickness 't = 6 mm'. Another option is to decompose the enclosure smart part into its individual cuboids and then attach a grid constraint to each of the six cuboids to have at least 3 or more cells to resolve the wall thickness. This modeling option however is more tedious than the former.","title":"Enclosure walls \u7f51\u683c\u5212\u5206"},{"location":"Flotherm/Flotherm%20Tips/#inflation-on-a-localized-grid","text":"When an object/geometry touches the boundary of a localized grid, the keypoint grid associated with it bleeds beyond the localized region. When an object/geometry touches the boundary of a localized grid, the fine grid associated with it bleeds beyond the edges of the region being localized. Setting an inflation under the grid constraints, inflates the size of this localized region (prevents the geometry from touching the localized boundary) thus preventing the fine grid from bleeding. This can be best illustrated by Figure 1 shown below. Three identical assemblies of a detailed component with heat sinks mounted on them are placed next to each other. the assembly on the left is not localized the assembly in the center is localized, but you will notice that the keypoint grid from the heat sink fins and detailed component bleeds beyond the localized region. the last assembly on the right has a grid constraint with inflation set in all the three directions. The fine grid in this case truncates right at the edge of inflated grid. \u200b Figure 1: Localizing with inflation prevents keypoint grid from bleeding Sometimes setting an inflation has an added advantage of capturing physics of the problem. For example: Having a fine grid at the entry & exit of heat sinks fins helps capture the pressure losses with greater accuracy (see Fig. 2 below) It is strongly recommended to have grid inflation on boards and high power components to resolve the convective heat transfer close to their external surface. Figure 2: Grid inflation helps resolve the entry/exit losses associated with heat sinks.","title":"inflation on a localized grid"},{"location":"Flotherm/Flotherm%20Tips/#tim","text":"When two solid surfaces are in contact there are small air gaps at interface due to imperfections on the surface smoothness. A thermal interface material (TIM) is placed between the two solid surfaces to fill in the air gaps and enable better heat transfer across this interface. Hence modeling the effect of TIM is critical. In FloTHERM when modeling TIMs there are two approaches the user can take. Create a collapsed cuboid of thickness 't' between the two surfaces in contact and assign a material property (conductivity k ) to this collapsed cuboid. FloTHERM calculates the through plane resistance of this collapsed cuboid R_th_throughPlane = (t/k), then it takes into account this R_th for heat transfer (1D) normal to the contact surface. The in-plane conductivity (heat spreading) of the TIM cuboid is ignored. Assign a surface attribute to one of the surfaces in contact and specify a value of Rsurf-solid ( SI units Km^2/W). The advantage of this approach over approach 1 is that project tree is simpler. When using this approach to model TIM between component and heat sink it is best to attach the surface property to the component surface. This is assuming the entire component surface is in contact with the heat sink. When using option #1 above it is important to make sure that the TIM collapsed cuboid is placed lower in the hierarchy below the two objects in contact to make sure it is not overwritten by one of the non-collapsed cuboids in contact. In order to model contact resistance between two solid surfaces the modeling approach is to attach a surface attribute to one of the surfaces in contact and specify a value of Rsurf-solid resistance value ( units = K m^2/W or C in^2/W). In order to do this - select one of the two objects (cuboid or smart part) Right Click>Surface =>Rsurf-solid ; you can attach this surface resistance to the appropriate surface of the object. One practical application of this is when modeling the thermal interface material (TIM) between a component top surface and heat sink base.A surface resistance Rsurf-solid can be attached to either of the surfaces to model the thermal resistance of the TIM when heat moves from the component into the heat sink base. The advantage of this approach is that typically the TIM thickness is very very small when compared with the other objects. If TIM was to be modeled discretely as a cuboid it can lead to very thin grid cells leading to high aspect ratios. Using the Rsurf-solid approach this can be avoided.","title":"TIM\u5efa\u6a21"},{"location":"Flotherm/Flotherm%20Tips/#compact","text":"When a package is modeled as 2 Resistor or Delphi compact component smart part and if its top surface (Zo high) was tocuhing a solid object for example a heat sink base then a surface temperature plot of the compact component does not show the top surface of compact component. A workaround for this is to place a collapsed cuboid between the compact component top surface and the solid object say heat sink base. You can attach a really high conductivity (k = 1000 W/m-K) to the collapsed cuboid so that its through plane resistance is negligibly small. Below is an example comparing two identical 2 resistor components. Component 2 has a solid heat sink base touching its top surface- when surface temperature is generated on both the components the top surface of component 2 becomes invisible (Fig.1). Figure 1: Component 2 top surface is invisible In order to avoid above, create a collapsed cuboid sandwiched between Comp 2 top surface and Heat sink base. After the simulation is re-run, generate the surface temperarure on the compact component and also on the collapsed cuboid we created. Since the collapsed cuboid has high conductivity material attached to it, its surface temperature is almost same as Tcase of component 2 as seen in the Fig.2 below. Note : Please make sure that the collapsed cuboid is placed lower in the project tree than both the compact component and the Heat sink base. This ensures that the collapsed cuboid is not overwritten by the two solid objects in contact. Figure 2: Component 2 top surface has a collapsed cuboid ( high k) on its top surface Tables Results for the model can be seen below.","title":"Compact\u6a21\u578b\u7684\u8868\u9762\u6e29\u5ea6"},{"location":"Flotherm/Flotherm%20Tips/#system-grid-settings","text":"No \"minimum size\" has been defined on the local mesh. Make it simple to guarantee a success in the mesh strategy: Always add a \"grid constraint\" to each localized region to ensure grid quality in all three direction Xo, Yo and Zo. Always define a \"minimum size\" and \"maximum size\" for the system grid and each local grid: \"maximum size\" guarantees to obtain a regular mesh on the local region. The minimum size guaranties the minimum solid grid and minimum fluid grid in channel in the area that is needed in this area. - \"minimum size\" on the local grid guarantees to be independent from the system grid. Try to adjust the parameters as closest to the needs to gain some grid cells and to improve the grid ratios. The \"minimum size\" of the grid constraint will have only an effect if it is smaller than the system minimum size, but as local grid is used to get smaller mesh than the system, then always specify this local \"minimum size\" parameter.","title":"System grid settings"},{"location":"Flotherm/Flotherm%20Tips/#modeling-faqs","text":"Answers to frequently asked questions (FAQs) about modeling. Q: What is the difference between global and ambient? A: The external ambient temperature settings made in the Model Setup Tab - Global System Settings Section is used for the following: As a reference temperature for buoyancy calculations As the initial condition at the start of a solution As a default temperature of air convected into the model The external radiant temperature is used as a default external temperature that is radiated to, from any object within the solution domain that is part of the radiation calculation and can \u2018see through\u2019 to the outside of the solution domain. Ambient attributes attached to the sides of the solution domain or a solution domain cutout can be used to override the Global temperature values. Q: When do I have to use a source? A: A source attribute attached to a source primitive, as opposed to a thermal attribute attached to a cuboid, is useful for the following reasons: Definition of a source of heat in a portion of a cuboid. Ability to define heat dissipation in terms of W/m3 (for an uncollapsed source), W/m2 (for a collapsed source) or as a linear function of the temperature. In addition to this, a source can be placed in air and values of pressure, velocity, and so on, defined for that portion of air space.","title":"Modeling FAQs"},{"location":"Flotherm/Flotherm%20Tips/#flotherm","text":"flotherm\u9690\u85cf\u548c\u53d6\u6d88\u9690\u85cf\u7684\u5feb\u6377\u952e\u5206\u522b\u662fF12\u548cShit+F12\u3002 \u6709\u65f6\u5019\u5e0c\u671b\u663e\u793a\u5168\u90e8\u9690\u85cf\u5bf9\u8c61\uff0c\u5728Project Manager\u754c\u9762\u4e0b\u6ca1\u6709\u8fd9\u79cd\u64cd\u4f5c\u3002\u4e0d\u8fc7\u53ef\u4ee5\u6253\u5f00Visual Editor\uff0c\u6309Ctrl+F12\u53d6\u6d88\u9690\u85cf\uff0c\u518d\u8fd4\u56deProject Manager\u754c\u9762\u5c31\u884c\u4e86\u3002","title":"flotherm\u5982\u4f55\u53d6\u6d88\u5168\u90e8\u9690\u85cf\uff1f"},{"location":"Flotherm/Flotherm%20Tips/#_1","text":"\u5bf9\u4e8e\u6709\u5927\u91cf\u7f51\u683c\u6a21\u578b\u9700\u8981\u65f6\u95f4\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\uff0c\u4f1a\u6709\u505c\u6ede\u611f\u3002 \u4e0b\u5217\u4efb\u4f55\u5f62\u5f0f\u663e\u793a\u7f51\u683c\u65f6\u5c31\u4f1a\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\uff1a \u5728\u7ed8\u56fe\u677f\u4e2d\u663e\u793a\u7f51\u683c \u663e\u793a\u201c\u7f51\u683c\u6458\u8981\u201d\u5bf9\u8bdd\u6846 \u7cfb\u7edf\u7f51\u683c\u5c5e\u6027\u8868\u663e\u793a \u663e\u793a de-keypointed \u6458\u8981\u5217 \u6240\u4ee5\uff0c\u5982\u679c\u9700\u8981\u8fdb\u884c\u591a\u9879\u4fee\u6539\uff0c\u5efa\u8bae\u5173\u95ed\u4ee5\u4e0a\u9009\u9879\uff0c\u4f7f\u5f97\u4e0d\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\u3002","title":"\u4fee\u6539\u6a21\u578b\u65f6\u52a0\u8f7d\u5f88\u6162"},{"location":"Flotherm/Flotherm%20Tips/#batch-mode","text":"\u6253\u5f00\u9879\u76ee\u6587\u4ef6\uff0csanity check \u5e76 re-initialize \u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0a\u7ea7\u76ee\u5f55\u521b\u5efa\u6279\u5904\u7406\u6587\u4ef6xxx.bat \u5185\u5bb9 @echo off call \"C:\\Program Files\\MentorMA\\flosuite_v12\\flotherm\\WinXP\\bin\\flotherm\" -b \\\"ProjectA\\\" call \"C:\\Program Files\\MentorMA\\flosuite_v12\\flotherm\\WinXP\\bin\\flotherm\" -b \\\"ProjectB\\\" :end \u53cc\u51fb\u8fd0\u884c\u6b64\u6279\u5904\u7406\u6587\u4ef6xxx.bat\u5373\u53ef\u5f00\u59cb\u6c42\u89e3\u3002 \u8fd0\u884c\u540e\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e00\u4e2a floerror.log \u6587\u4ef6\uff0c\u91cc\u9762\u6709\u7b80\u5355\u6458\u8981\u4fe1\u606f\u3002","title":"Batch Mode"},{"location":"Flotherm/Flotherm%20Tips/#_2","text":"\u9700\u8981\u8fdb\u884c\u9879\u76ee\u8bbe\u7f6e\u548c\u9762\u5c5e\u6027\u8bbe\u7f6e\u3002 [Model/Modeling] \u9009\u4e2d \u201c Radiation On \u201d \u6307\u5b9a\u5bf9\u8c61 \u9762\u5c5e\u6027 \u4e2d\u7684\u8f90\u5c04\u7387 \u6307\u5b9a \u8f90\u5c04 \u5c5e\u6027\uff0c\u5b9a\u4e49\u8f90\u5c04\u79bb\u6563\u5316\u7684\u50cf\u7d20\u5927\u5c0f\u3002 Specify [ Radiation ] attribute (to define the pixel size for the radiation discretization). On each pixel, FloVENT or FloTHERM will consider a uniform temperature for ray tracing method. This pixel is at least the size of the cells, but the pixel can be and will often be wider than the local cell size. \u201cSingle Radiating\u201d : create a single pixel on the surface. Define \u201cSingle Radiating\u201d for small parts of the models or low temperature gradient on the surface of this part. \u201cSubdivided radiating\u201d: create multiple pixel on the surfaces based on your criteria. Define \u201cSubdivided radiating\u201d for big surface or when the temperature gradients are high on the surface of this part. Flotherm\u4f7f\u7528\u5c04\u7ebf\u8ffd\u8e2a\u6cd5\u8ba1\u7b97\u8f90\u5c04","title":"\u8ba1\u7b97\u70ed\u8f90\u5c04"},{"location":"Flotherm/Flotherm%20Tips/#jesd51-14","text":"\u7528\u7535\u6c14\u6d4b\u8bd5\u65b9\u6cd5\u5f97\u5230\u5143\u5668\u4ef6\u7684 \\(R_{\\theta-JC}\\) \u6587\u6863\u53ef\u4ee5\u4eceJEDEC\u5b98\u7f51\u514d\u8d39\u83b7\u53d6\u3002 sec4\uff0c \u6d4b\u8bd5\u9700\u6c42\uff0c\u5b9a\u4e49\u4e86\u4e24\u79cd\u6d4b\u8bd5\u65b9\u6cd5\uff1a\u5e72\u754c\u9762\uff0c\u5bfc\u70ed\u80f6\u754c\u9762 Sec 5\uff0c\u6d4b\u8bd5\u7ed3\u679c\u5206\u6790","title":"JESD51-14"},{"location":"Flotherm/Flotherm%20Tips/#_3","text":"Why do I see two different places to specify ambient temperature? Which one takes precedence if they are different? What is the temperature of the air coming into the computational domain? What is the temperature of my surroundings outside the computational domain? System Ambients: These settings prescribe the boundary conditions at each face of the domain. Any air entering the system across an open boundary will be at the temperature set by the ambient attached to that face of the computational domain. If a solid touches the edge of the solution domain that is defined as open boundary. The heat removed from that surface will be determined by the value of heat transfer coefficient (HTC) that is set under the ambient. For example if the domain size is the same as the enclosure, then the ambient set on domain face defines the heat transfer coefficient on the external surface of enclosure walls. If a face of the domain is open, but does not have an ambient attached to it, then the user is given a WARN about it. The solver will use the values set under Model Setup>Default Ambient Temperature as the temperature for the air entering through that open face. Model Setup: This setting is used by the software for several purposes: To provide defaults used at the beginning of a solve to give all of the grid cells a reasonable start value for temperature, pressure and velocities. To provide default values to be used if an open boundary is defined without a System>Ambient attached. To provide a reference on which to calculate buoyancy. (i.e. fluid at a temperature higher than the Model Setup> Default Ambient Temperature will rise and fluid at a lower temperature will sink). To provide a background (External Radiant Temperature) temperature value to which all objects can radiate to, if radiation is activated under modeling options.","title":"\u7a7a\u6c14\u6e29\u5ea6\u8bbe\u7f6e\u7684\u533a\u522b"},{"location":"Flotherm/Flotherm%20Tips/#_4","text":"Natural convection model for a sealed system does not converge. Residuals do not converge (Natural convection scenario) The domain size should be larger than the sealed system. No material attached to the enclosure. Radiation is not activated When modeling natural convection for a sealed system it is important to have the solution domain size larger than the sealed system. This allows the CFD solver to simulate the fluid flow around the chassis and in turn calculate the heat transfer coefficient on the chassis walls. The rule of thumb is to have the domain size larger by a minimum of two heights above and one height below the sealed system assuming gravity acts vertically down (say -Y) and height refers to the dimension parallel to gravity (along Y). On the sides the domain size has to be larger by at least half the width and length. So if gravity was acting along -Y direction the domain size has to be +2Y above and 1Y below the box. On the sides it has to be larger by 0.5X and 0.5Z. This ensures that the hot plume rising due to buoyancy effects gets enough height to rise and expand into the still air around it. The extended domain on the sides allows for air to enter the solution domain through the side faces. Please check to see if these side faces are modeled as open or symmetry faces ( Right Click on System > Faces ). Also it is important to attach a material attribute to the enclosure to ensure that there is heat transfer across the walls of the enclosure. The walls of the enclosure need to be modeled as thick rather than thin or collapsed (default) if Heat spreading effects within the wall are important Radiation is activated and a radiation attribute is attached to the enclosure. Suggested further reading Tech Note : MG245386 App Note: MG575808","title":"\u81ea\u7136\u6563\u70ed\u6c42\u89e3\u57df"},{"location":"Flotherm/Flotherm%20batch%20mode/","text":"\u6279\u5904\u7406\u6a21\u5f0f\u8fd0\u884cFlotherm \u6709\u65f6\u5019\u6211\u4eec\u5e0c\u671bFlotherm\u80fd\u591f\u81ea\u52a8\u6c42\u89e3\u591a\u4e2a\u9879\u76ee\uff0c\u4f8b\u5982\u767d\u5929\u5efa\u597d\u6a21\u578b\uff0c\u665a\u4e0a\u8ba9\u5176\u6c42\u89e3\u3002\u6216\u5728\u7b14\u8bb0\u672c\u4e2d\u5efa\u597d\u6a21\u578b\uff0c\u7136\u540e\u9001\u5230\u670d\u52a1\u5668\u4e2d\u6c42\u89e3\u3002\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528\u6279\u5904\u7406\u6a21\u5f0f\u8fd0\u884cFlotherm\u3002 \u65b9\u6cd5\u5f88\u7b80\u5355\uff0cFlotherm\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u547d\u4ee4\u3002 Tip \u5728\u8fd0\u884c\u6279\u5904\u7406\u547d\u4ee4\u524d\uff0c\u9700\u8981\u68c0\u67e5\u6240\u6709\u6a21\u578b\u4e2d\u662f\u5426\u6709\u9519\u8bef\u3002\u7528Flotherm\u6253\u5f00\u9879\u76ee\uff0c\u5e76\u6267\u884csanity check\uff0c\u7136\u540e re-initialize \u9879\u76ee\uff0c\u7136\u540e\u53ef\u9000\u51faFlotherm\u3002 \u521b\u5efa\u6279\u5904\u7406\u547d\u4ee4 \u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0a\u7ea7\u76ee\u5f55\u521b\u5efa\u6279\u5904\u7406\u6587\u4ef6xxx.bat \u5185\u5bb9\u5982\u4e0b\uff1a @echo off call \"C:\\Program Files\\MentorMA\\flosuite_v2021.1\\flotherm\\WinXP\\bin\\flotherm\" -b \\\"ProjectA\\\" call \"C:\\Program Files\\MentorMA\\flosuite_v2021.1\\flotherm\\WinXP\\bin\\flotherm\" -b \\\"ProjectB\\\" :end \u5176\u4e2d\uff0c C:\\Program Files\\MentorMA\\flosuite_v12\\Flotherm\\WinXP\\bin\\Flotherm \u4e3aFlotherm\u7684\u5b89\u88c5\u8def\u5f84\uff0c\u5982\u679c\u627e\u4e0d\u5230\u53ef\u4ee5\u53f3\u952e\u70b9\u51fbFlotherm\u542f\u52a8\u56fe\u6807\uff0c\u67e5\u770b\u5c5e\u6027\u627e\u5230\u76f8\u5e94\u7684\u8def\u5f84\u3002 ProjectA\uff0cProjectB\u4e3a\u9879\u76ee\u540d\u79f0\u3002\u5982\u679c\u4e0d\u786e\u5b9a\u9879\u76ee\u540d\u79f0\u662f\u4ec0\u4e48\uff0c\u53ef\u4ee5\u6253\u5f00\u6587\u4ef6 group.cat \u627e\u5230\u6b63\u786e\u7684\u9879\u76ee\u540d\u79f0\u3002 \u53cc\u51fb\u8fd0\u884c\u6b64\u6279\u5904\u7406\u6587\u4ef6 xxx.bat \u5373\u53ef\u5f00\u59cb\u6c42\u89e3\u3002 \u8fd0\u884c\u540e\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e00\u4e2a floerror.log \u6587\u4ef6\uff0c\u91cc\u9762\u6709\u7b80\u5355\u6458\u8981\u4fe1\u606f\uff0c\u5185\u5bb9\u4e0e\u666e\u901a\u6c42\u89e3\u4e2dMessage\u5bf9\u8bdd\u6846\u7684\u5185\u5bb9\u4e00\u6837\u3002 \u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u662f\u5b89\u5fc3\u7761\u89c9\uff0c\u7761\u5230\u81ea\u7136\u9192\u518d\u63a5\u7740\u5e72\u3002 \u5982\u679c\u6c42\u89e3\u5b8c\u6210\uff0c\u5f53\u518d\u6253\u5f00Flotherm load\u9879\u76ee\u754c\u9762\u65f6\uff0c\u5bf9\u5e94\u9879\u76ee\u7684\u56fe\u6807\u4f1a\u53d8\u6210\u5f69\u8272\u7684\uff0c\u8868\u793a\u5df2\u7ecf\u6709\u6c42\u89e3\u7ed3\u679c\u4e86\u3002 \u4e2d\u6b62\u6c42\u89e3 \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a stopnow \u7684\u7a7a\u6587\u4ef6\uff0c\u653e\u5230\u76ee\u5f55 project_set_dir/DataSets/BaseSolution/ \uff0cFlotherm\u7ee7\u7eed\u6c42\u89e3\u4e24\u6b65\u540e\u4f1a\u7ec8\u6b62\u6c42\u89e3\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5220\u9664 stopnow \u6587\u4ef6 \u3002 \u5728\u6279\u5904\u7406\u6a21\u5f0f\u4e0b\u67e5\u770b\u6536\u655b\u60c5\u51b5 \u5982\u679c\u9700\u8981\u5728\u6279\u5904\u7406\u6c42\u89e3\u6a21\u5f0f\u4e0b\u67e5\u770b\u9879\u76ee\u6536\u655b\u60c5\u51b5\uff0c\u53ef\u4ee5\u68c0\u67e5 logit \u6587\u4ef6\u3002\u8be5\u6587\u4ef6\u4f4d\u4e8e project_set_dir/DataSets/BaseSolution/PDTemp/logit \u6587\u4ef6\u4e2d\u6709\u6b8b\u5dee\u6570\u636e\u8bb0\u5f55 \u5982\u679clogit\u6587\u4ef6\u7684\u5927\u5c0f\u5728\u589e\u52a0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9879\u76ee\u8fd8\u5728\u6c42\u89e3\u4e4b\u4e2d\u3002 \u8fdb\u9636\u4ecb\u7ecd \u5982\u679c\u5e0c\u671b\u8fdb\u4e00\u6b65\u4e86\u89e3Flotherm\u547d\u4ee4\uff0c\u5b9e\u73b0\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u5185\u5bb9\u3002 Flotherm\u547d\u4ee4\u7684\u683c\u5f0f\u5982\u4e0b\uff1a Flotherm -b|-p project [options] | -env] | [-f floscript] -b \u6279\u5904\u7406\u6a21\u5f0f\u8fd0\u884c -p \u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u3002\u4f1a\u6253\u5f00Flotherm GUI\u754c\u9762\u3002 project \u9879\u76ee\u540d\u79f0\u3002\u9879\u76eePDML\u6216FloXML\u6587\u4ef6\u7684\u540d\u79f0\u3002\u9879\u76ee\u540d\u79f0\u5fc5\u987b\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\uff0c\u5176\u4e2d\\\u662fDos\u547d\u4ee4\u7684\u8f6c\u4e49\u7b26\u3002 -X \u53ea\u8ba1\u7b97\u9879\u76ee\u4e2d\u7684\u8f90\u5c04\u4ea4\u6362\u7cfb\u6570 -s \u53ea\u8ba1\u7b97\u9879\u76ee\u4e2d\u7684CFD\u65b9\u7a0b\uff0c\u4e0d\u8ba1\u7b97\u8f90\u5c04 -z pack_filename \u5c06\u6c42\u89e3\u7684\u9879\u76ee\u5bfc\u51fa\u4e3a\u538b\u7f29\u6587\u4ef6\uff0c\u4ee5\u4fbf\u5b58\u6863\u6216\u4f20\u8f93\u5230\u5176\u4ed6\u7cfb\u7edf\u3002 -r htmfile \u5c06\u6240\u6709Tables\u89c4\u8303\u548c\u7ed3\u679c\u6570\u636e\u5bfc\u51fa\u5230\u6307\u5b9a\u7684html\u6587\u4ef6\u3002 -C \u4e0d\u4f46\u6c42\u89e3\u6279\u5904\u7406\u4e2d\u7684\u9879\u76ee\u6587\u4ef6\uff0c\u540c\u65f6\u6c42\u89e3\u9879\u76ee\u6587\u4ef6\u6240\u5305\u62ec\u7684\u4f18\u5316Command Center\u3002 \u8981\u5728\u89e3\u51b3\u65b9\u6848\u65f6\u4f7f\u7528\u5e76\u884c\u5904\u7406\u4ee5\u53caCommand Center\u9879\u76ee\u7684\u57fa\u672c\u60c5\u51b5\uff0c\u5fc5\u987b\u4f7f\u7528CCNUMBERTHREADS\u73af\u5883\u53d8\u91cf\uff08\u5ffd\u7565\u201c\u7528\u6237\u9996\u9009\u9879\u201d\u5bf9\u8bdd\u6846\u4e2d\u7684\u5904\u7406\u5668\u6570\u91cf\u8bbe\u7f6e\uff09\u6307\u5b9a\u5904\u7406\u5668\u7684\u6570\u91cf\u3002\u4f7f\u7528FLOVOLUNTEERMAXJOBS\u73af\u5883\u53d8\u91cf\u6765\u8bbe\u7f6e\u8981\u540c\u65f6\u89e3\u51b3\u7684\u6700\u5927\u9879\u76ee\u6570\u91cf\u3002 -o output_directory \u4ee5CSV\u6587\u4ef6\u683c\u5f0f\u8f93\u51fa\u8868\u683c\u7ed3\u679c\u6570\u636e\u5230\u6307\u5b9a\u7684\u76ee\u5f55output_directory\u3002\u80fd\u591f\u8f93\u51fa\u54ea\u4e9b\u8868\u683c\uff0c\u53ef\u4ee5\u67e5\u770b\u5e2e\u52a9\u624b\u518c\u3002 \u5b9e\u4f8b \u4ea4\u4e92\u5f0f\u542f\u52a8Flotherm\uff0c\u52a0\u8f7d\u9879\u76eemyproject \uff1a Flotherm -p myproject \u7701\u7565-p\u9009\u9879\u4f1a\u5bfc\u81f4Flotherm\u6b63\u5728\u4f7f\u7528\u968f\u8f6f\u4ef6\u4e00\u8d77\u5b89\u88c5\u7684\u9ed8\u8ba4\u9879\u76ee\u52a0\u8f7d\u3002 \u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u4e00\u4e2ahtml\u6587\u4ef6\uff1a Flotherm -b \\\"my project\\\" -r \\\"result.html\\\" \u8981\u4eceFloSCRIPT\u6587\u4ef6 My_logFile_saved.xml \u8fd0\u884cFlotherm\uff0c\uff1a Flotherm -f \\\"<install_dir>\\flosuite_v<version>\\Flotherm\\WinXP\\bin\\LogFiles\\ My_logFile_saved.xml\\\"","title":"\u6279\u5904\u7406\u6a21\u5f0f\u8fd0\u884cFlotherm"},{"location":"Flotherm/Flotherm%20batch%20mode/#flotherm","text":"\u6709\u65f6\u5019\u6211\u4eec\u5e0c\u671bFlotherm\u80fd\u591f\u81ea\u52a8\u6c42\u89e3\u591a\u4e2a\u9879\u76ee\uff0c\u4f8b\u5982\u767d\u5929\u5efa\u597d\u6a21\u578b\uff0c\u665a\u4e0a\u8ba9\u5176\u6c42\u89e3\u3002\u6216\u5728\u7b14\u8bb0\u672c\u4e2d\u5efa\u597d\u6a21\u578b\uff0c\u7136\u540e\u9001\u5230\u670d\u52a1\u5668\u4e2d\u6c42\u89e3\u3002\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528\u6279\u5904\u7406\u6a21\u5f0f\u8fd0\u884cFlotherm\u3002 \u65b9\u6cd5\u5f88\u7b80\u5355\uff0cFlotherm\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u547d\u4ee4\u3002 Tip \u5728\u8fd0\u884c\u6279\u5904\u7406\u547d\u4ee4\u524d\uff0c\u9700\u8981\u68c0\u67e5\u6240\u6709\u6a21\u578b\u4e2d\u662f\u5426\u6709\u9519\u8bef\u3002\u7528Flotherm\u6253\u5f00\u9879\u76ee\uff0c\u5e76\u6267\u884csanity check\uff0c\u7136\u540e re-initialize \u9879\u76ee\uff0c\u7136\u540e\u53ef\u9000\u51faFlotherm\u3002","title":"\u6279\u5904\u7406\u6a21\u5f0f\u8fd0\u884cFlotherm"},{"location":"Flotherm/Flotherm%20batch%20mode/#_1","text":"\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0a\u7ea7\u76ee\u5f55\u521b\u5efa\u6279\u5904\u7406\u6587\u4ef6xxx.bat \u5185\u5bb9\u5982\u4e0b\uff1a @echo off call \"C:\\Program Files\\MentorMA\\flosuite_v2021.1\\flotherm\\WinXP\\bin\\flotherm\" -b \\\"ProjectA\\\" call \"C:\\Program Files\\MentorMA\\flosuite_v2021.1\\flotherm\\WinXP\\bin\\flotherm\" -b \\\"ProjectB\\\" :end \u5176\u4e2d\uff0c C:\\Program Files\\MentorMA\\flosuite_v12\\Flotherm\\WinXP\\bin\\Flotherm \u4e3aFlotherm\u7684\u5b89\u88c5\u8def\u5f84\uff0c\u5982\u679c\u627e\u4e0d\u5230\u53ef\u4ee5\u53f3\u952e\u70b9\u51fbFlotherm\u542f\u52a8\u56fe\u6807\uff0c\u67e5\u770b\u5c5e\u6027\u627e\u5230\u76f8\u5e94\u7684\u8def\u5f84\u3002 ProjectA\uff0cProjectB\u4e3a\u9879\u76ee\u540d\u79f0\u3002\u5982\u679c\u4e0d\u786e\u5b9a\u9879\u76ee\u540d\u79f0\u662f\u4ec0\u4e48\uff0c\u53ef\u4ee5\u6253\u5f00\u6587\u4ef6 group.cat \u627e\u5230\u6b63\u786e\u7684\u9879\u76ee\u540d\u79f0\u3002 \u53cc\u51fb\u8fd0\u884c\u6b64\u6279\u5904\u7406\u6587\u4ef6 xxx.bat \u5373\u53ef\u5f00\u59cb\u6c42\u89e3\u3002 \u8fd0\u884c\u540e\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e00\u4e2a floerror.log \u6587\u4ef6\uff0c\u91cc\u9762\u6709\u7b80\u5355\u6458\u8981\u4fe1\u606f\uff0c\u5185\u5bb9\u4e0e\u666e\u901a\u6c42\u89e3\u4e2dMessage\u5bf9\u8bdd\u6846\u7684\u5185\u5bb9\u4e00\u6837\u3002 \u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u662f\u5b89\u5fc3\u7761\u89c9\uff0c\u7761\u5230\u81ea\u7136\u9192\u518d\u63a5\u7740\u5e72\u3002 \u5982\u679c\u6c42\u89e3\u5b8c\u6210\uff0c\u5f53\u518d\u6253\u5f00Flotherm load\u9879\u76ee\u754c\u9762\u65f6\uff0c\u5bf9\u5e94\u9879\u76ee\u7684\u56fe\u6807\u4f1a\u53d8\u6210\u5f69\u8272\u7684\uff0c\u8868\u793a\u5df2\u7ecf\u6709\u6c42\u89e3\u7ed3\u679c\u4e86\u3002","title":"\u521b\u5efa\u6279\u5904\u7406\u547d\u4ee4"},{"location":"Flotherm/Flotherm%20batch%20mode/#_2","text":"\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a stopnow \u7684\u7a7a\u6587\u4ef6\uff0c\u653e\u5230\u76ee\u5f55 project_set_dir/DataSets/BaseSolution/ \uff0cFlotherm\u7ee7\u7eed\u6c42\u89e3\u4e24\u6b65\u540e\u4f1a\u7ec8\u6b62\u6c42\u89e3\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5220\u9664 stopnow \u6587\u4ef6 \u3002","title":"\u4e2d\u6b62\u6c42\u89e3"},{"location":"Flotherm/Flotherm%20batch%20mode/#_3","text":"\u5982\u679c\u9700\u8981\u5728\u6279\u5904\u7406\u6c42\u89e3\u6a21\u5f0f\u4e0b\u67e5\u770b\u9879\u76ee\u6536\u655b\u60c5\u51b5\uff0c\u53ef\u4ee5\u68c0\u67e5 logit \u6587\u4ef6\u3002\u8be5\u6587\u4ef6\u4f4d\u4e8e project_set_dir/DataSets/BaseSolution/PDTemp/logit \u6587\u4ef6\u4e2d\u6709\u6b8b\u5dee\u6570\u636e\u8bb0\u5f55 \u5982\u679clogit\u6587\u4ef6\u7684\u5927\u5c0f\u5728\u589e\u52a0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9879\u76ee\u8fd8\u5728\u6c42\u89e3\u4e4b\u4e2d\u3002","title":"\u5728\u6279\u5904\u7406\u6a21\u5f0f\u4e0b\u67e5\u770b\u6536\u655b\u60c5\u51b5"},{"location":"Flotherm/Flotherm%20batch%20mode/#_4","text":"\u5982\u679c\u5e0c\u671b\u8fdb\u4e00\u6b65\u4e86\u89e3Flotherm\u547d\u4ee4\uff0c\u5b9e\u73b0\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u5185\u5bb9\u3002 Flotherm\u547d\u4ee4\u7684\u683c\u5f0f\u5982\u4e0b\uff1a Flotherm -b|-p project [options] | -env] | [-f floscript] -b \u6279\u5904\u7406\u6a21\u5f0f\u8fd0\u884c -p \u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u3002\u4f1a\u6253\u5f00Flotherm GUI\u754c\u9762\u3002 project \u9879\u76ee\u540d\u79f0\u3002\u9879\u76eePDML\u6216FloXML\u6587\u4ef6\u7684\u540d\u79f0\u3002\u9879\u76ee\u540d\u79f0\u5fc5\u987b\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\uff0c\u5176\u4e2d\\\u662fDos\u547d\u4ee4\u7684\u8f6c\u4e49\u7b26\u3002 -X \u53ea\u8ba1\u7b97\u9879\u76ee\u4e2d\u7684\u8f90\u5c04\u4ea4\u6362\u7cfb\u6570 -s \u53ea\u8ba1\u7b97\u9879\u76ee\u4e2d\u7684CFD\u65b9\u7a0b\uff0c\u4e0d\u8ba1\u7b97\u8f90\u5c04 -z pack_filename \u5c06\u6c42\u89e3\u7684\u9879\u76ee\u5bfc\u51fa\u4e3a\u538b\u7f29\u6587\u4ef6\uff0c\u4ee5\u4fbf\u5b58\u6863\u6216\u4f20\u8f93\u5230\u5176\u4ed6\u7cfb\u7edf\u3002 -r htmfile \u5c06\u6240\u6709Tables\u89c4\u8303\u548c\u7ed3\u679c\u6570\u636e\u5bfc\u51fa\u5230\u6307\u5b9a\u7684html\u6587\u4ef6\u3002 -C \u4e0d\u4f46\u6c42\u89e3\u6279\u5904\u7406\u4e2d\u7684\u9879\u76ee\u6587\u4ef6\uff0c\u540c\u65f6\u6c42\u89e3\u9879\u76ee\u6587\u4ef6\u6240\u5305\u62ec\u7684\u4f18\u5316Command Center\u3002 \u8981\u5728\u89e3\u51b3\u65b9\u6848\u65f6\u4f7f\u7528\u5e76\u884c\u5904\u7406\u4ee5\u53caCommand Center\u9879\u76ee\u7684\u57fa\u672c\u60c5\u51b5\uff0c\u5fc5\u987b\u4f7f\u7528CCNUMBERTHREADS\u73af\u5883\u53d8\u91cf\uff08\u5ffd\u7565\u201c\u7528\u6237\u9996\u9009\u9879\u201d\u5bf9\u8bdd\u6846\u4e2d\u7684\u5904\u7406\u5668\u6570\u91cf\u8bbe\u7f6e\uff09\u6307\u5b9a\u5904\u7406\u5668\u7684\u6570\u91cf\u3002\u4f7f\u7528FLOVOLUNTEERMAXJOBS\u73af\u5883\u53d8\u91cf\u6765\u8bbe\u7f6e\u8981\u540c\u65f6\u89e3\u51b3\u7684\u6700\u5927\u9879\u76ee\u6570\u91cf\u3002 -o output_directory \u4ee5CSV\u6587\u4ef6\u683c\u5f0f\u8f93\u51fa\u8868\u683c\u7ed3\u679c\u6570\u636e\u5230\u6307\u5b9a\u7684\u76ee\u5f55output_directory\u3002\u80fd\u591f\u8f93\u51fa\u54ea\u4e9b\u8868\u683c\uff0c\u53ef\u4ee5\u67e5\u770b\u5e2e\u52a9\u624b\u518c\u3002","title":"\u8fdb\u9636\u4ecb\u7ecd"},{"location":"Flotherm/Flotherm%20batch%20mode/#_5","text":"\u4ea4\u4e92\u5f0f\u542f\u52a8Flotherm\uff0c\u52a0\u8f7d\u9879\u76eemyproject \uff1a Flotherm -p myproject \u7701\u7565-p\u9009\u9879\u4f1a\u5bfc\u81f4Flotherm\u6b63\u5728\u4f7f\u7528\u968f\u8f6f\u4ef6\u4e00\u8d77\u5b89\u88c5\u7684\u9ed8\u8ba4\u9879\u76ee\u52a0\u8f7d\u3002 \u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u4e00\u4e2ahtml\u6587\u4ef6\uff1a Flotherm -b \\\"my project\\\" -r \\\"result.html\\\" \u8981\u4eceFloSCRIPT\u6587\u4ef6 My_logFile_saved.xml \u8fd0\u884cFlotherm\uff0c\uff1a Flotherm -f \\\"<install_dir>\\flosuite_v<version>\\Flotherm\\WinXP\\bin\\LogFiles\\ My_logFile_saved.xml\\\"","title":"\u5b9e\u4f8b"},{"location":"Flotherm/Flotherm%20%E6%A8%A1%E6%8B%9F%E6%95%A3%E7%83%AD%E5%99%A8%E7%9A%84%E5%BB%BA%E8%AE%AE/","text":"Flotherm \u6a21\u62df\u6563\u70ed\u5668\u7684\u5efa\u8bae \u6563\u70ed\u5668\u6709\u52a9\u4e8e\u5c06\u70ed\u91cf\u6563\u5e03\u5728\u66f4\u5927\u7684\u8868\u9762\u79ef\u4e0a\uff0c\u4ece\u800c\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u6563\u70ed \\[ Q=hA(T_s-T_{air}) \\] \u5bf9\u8fd9\u4e9b\u72ed\u7a84\u901a\u9053\u5185\u7684\u6d41\u52a8\u7a7a\u6c14\u8fdb\u884c\u5efa\u6a21\u5bf9\u4e8e\u6355\u83b7\u538b\u529b\u635f\u5931\u548c\u70ed\u4f20\u9012\u81f3\u5173\u91cd\u8981\u3002\u5f53\u4f7f\u7528\u8f6f\u4ef6\u8fdb\u884c\u4eff\u771f\u5206\u6790\u65f6\uff0c\u7fc5\u7247\u95f4\u7684\u533a\u57df\u5fc5\u987b\u5177\u6709\u8db3\u591f\u7684\u7f51\u683c\u5206\u8fa8\u7387\u3002 FloTHERM\u4e2d\u6a21\u62df\u6563\u70ed\u5668\u9700\u6ce8\u610f\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u5728FloTHERM\u4e2d\u5efa\u6a21\u6563\u70ed\u5668\u6700\u7b80\u5355\u6709\u6548\u65b9\u6cd5\u662f\u4f7f\u7528\u6563\u70ed\u5668\u667a\u80fd\u90e8\u4ef6\u5efa\u6a21\u3002 \u6253\u5f00\u6563\u70ed\u5668\u667a\u80fd\u6784\u5efa\u5bf9\u8bdd\u6846\u65f6\uff0c\u67e5\u770b\u6563\u70ed\u7247\u4e4b\u95f4\u7684\u5355\u5143\u683c\u6570\u503c\uff0c\u9ed8\u8ba4\u503c\u4e3a3\u4e2a\u5355\u5143\u683c\u3002\u5982\u679c\u9700\u8981\u66f4\u9ad8\u7684\u538b\u964d\u7cbe\u5ea6\uff0c\u53ef\u80fd\u9700\u8981\u5c06\u7fc5\u7247\u4e4b\u95f4\u7f51\u683c\u6570\u91cf\u589e\u52a0\u5230\u76845\u4e2a\u5355\u5143\u3002 \u5bf9\u6563\u70ed\u5668\u8bbe\u7f6e\u7f51\u683c\u7ea6\u675f\u3002 \u6cbf\u7740\u6563\u70ed\u7247\u957f\u5ea6\u65b9\u5411\u8bbe\u7f6e\u901a\u80c0\u4ee5\u66f4\u597d\u5730\u6a21\u62df\u5165\u53e3\u548c\u51fa\u53e3\u538b\u529b\u635f\u5931\u3002 \u8bbe\u7f6e\u7f51\u683c\u7ea6\u675f\u4ee5\u89e3\u6790\u7fc5\u7247\u7684\u539a\u5ea6\u3002\u7f51\u683c\u6700\u5927\u5c3a\u5bf8=\u7fc5\u7247\u539a\u5ea6\uff0c\u5141\u8bb8\u7684\u6700\u5c0f\u5c3a\u5bf8 < \u901a\u9053\u5bbd\u5ea6/3\u3002 \u5728\u6563\u70ed\u5668\u4e0a\u672c\u5730\u5316\u7f51\u683c\u3002\u4f7f\u5f97\u7cbe\u7ec6\u7f51\u683c\u4ec5\u9002\u7528\u4e8e\u6563\u70ed\u533a\u57df\uff0c\u51cf\u5c11\u7f51\u683c\u6570\u91cf\u3002 \u8bf7\u53c2\u9605\u9644\u56fe\u8bf4\u660e","title":"Flotherm \u6a21\u62df\u6563\u70ed\u5668\u7684\u5efa\u8bae"},{"location":"Flotherm/Flotherm%20%E6%A8%A1%E6%8B%9F%E6%95%A3%E7%83%AD%E5%99%A8%E7%9A%84%E5%BB%BA%E8%AE%AE/#flotherm","text":"\u6563\u70ed\u5668\u6709\u52a9\u4e8e\u5c06\u70ed\u91cf\u6563\u5e03\u5728\u66f4\u5927\u7684\u8868\u9762\u79ef\u4e0a\uff0c\u4ece\u800c\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u6563\u70ed \\[ Q=hA(T_s-T_{air}) \\] \u5bf9\u8fd9\u4e9b\u72ed\u7a84\u901a\u9053\u5185\u7684\u6d41\u52a8\u7a7a\u6c14\u8fdb\u884c\u5efa\u6a21\u5bf9\u4e8e\u6355\u83b7\u538b\u529b\u635f\u5931\u548c\u70ed\u4f20\u9012\u81f3\u5173\u91cd\u8981\u3002\u5f53\u4f7f\u7528\u8f6f\u4ef6\u8fdb\u884c\u4eff\u771f\u5206\u6790\u65f6\uff0c\u7fc5\u7247\u95f4\u7684\u533a\u57df\u5fc5\u987b\u5177\u6709\u8db3\u591f\u7684\u7f51\u683c\u5206\u8fa8\u7387\u3002 FloTHERM\u4e2d\u6a21\u62df\u6563\u70ed\u5668\u9700\u6ce8\u610f\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u5728FloTHERM\u4e2d\u5efa\u6a21\u6563\u70ed\u5668\u6700\u7b80\u5355\u6709\u6548\u65b9\u6cd5\u662f\u4f7f\u7528\u6563\u70ed\u5668\u667a\u80fd\u90e8\u4ef6\u5efa\u6a21\u3002 \u6253\u5f00\u6563\u70ed\u5668\u667a\u80fd\u6784\u5efa\u5bf9\u8bdd\u6846\u65f6\uff0c\u67e5\u770b\u6563\u70ed\u7247\u4e4b\u95f4\u7684\u5355\u5143\u683c\u6570\u503c\uff0c\u9ed8\u8ba4\u503c\u4e3a3\u4e2a\u5355\u5143\u683c\u3002\u5982\u679c\u9700\u8981\u66f4\u9ad8\u7684\u538b\u964d\u7cbe\u5ea6\uff0c\u53ef\u80fd\u9700\u8981\u5c06\u7fc5\u7247\u4e4b\u95f4\u7f51\u683c\u6570\u91cf\u589e\u52a0\u5230\u76845\u4e2a\u5355\u5143\u3002 \u5bf9\u6563\u70ed\u5668\u8bbe\u7f6e\u7f51\u683c\u7ea6\u675f\u3002 \u6cbf\u7740\u6563\u70ed\u7247\u957f\u5ea6\u65b9\u5411\u8bbe\u7f6e\u901a\u80c0\u4ee5\u66f4\u597d\u5730\u6a21\u62df\u5165\u53e3\u548c\u51fa\u53e3\u538b\u529b\u635f\u5931\u3002 \u8bbe\u7f6e\u7f51\u683c\u7ea6\u675f\u4ee5\u89e3\u6790\u7fc5\u7247\u7684\u539a\u5ea6\u3002\u7f51\u683c\u6700\u5927\u5c3a\u5bf8=\u7fc5\u7247\u539a\u5ea6\uff0c\u5141\u8bb8\u7684\u6700\u5c0f\u5c3a\u5bf8 < \u901a\u9053\u5bbd\u5ea6/3\u3002 \u5728\u6563\u70ed\u5668\u4e0a\u672c\u5730\u5316\u7f51\u683c\u3002\u4f7f\u5f97\u7cbe\u7ec6\u7f51\u683c\u4ec5\u9002\u7528\u4e8e\u6563\u70ed\u533a\u57df\uff0c\u51cf\u5c11\u7f51\u683c\u6570\u91cf\u3002 \u8bf7\u53c2\u9605\u9644\u56fe\u8bf4\u660e","title":"Flotherm \u6a21\u62df\u6563\u70ed\u5668\u7684\u5efa\u8bae"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/","text":"## Flotherm\u4e2d\u52a0\u5165\u70ed\u7ba1\u6a21\u578b\u540e\u6536\u655b\u56f0\u96be\u3002 \u70ed\u7ba1\u5177\u6709\u975e\u5e38\u9ad8\u7684\u6709\u6548\u5bfc\u70ed\u7387\u3002\u56e0\u6b64\uff0c\u5f53\u6d89\u53ca\u4f7f\u7528\u6e29\u5ea6\u53d8\u91cf\u6536\u655b\u65f6\uff0c\u53ef\u80fd\u4ea7\u751f\u95ee\u9898\u3002 \u4e3a\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\uff0c\u5efa\u8bae\u7528\u6237\uff1a \u4f7f\u7528\u53cc\u7cbe\u5ea6\u6c42\u89e3\u5668\uff08double precision solver \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u4f7f\u7528\u201c\u5171\u8f6d\u6b8b\u5dee\u201d\u9009\u9879\uff08conjugate residual \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u5c06\u6e29\u5ea6\u7684\u9519\u8bef\u65f6\u95f4\u6b65\u957f\u589e\u52a0~x20\uff08\u5728\u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\u4e0b\uff09 \u4f7f\u7528\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP \u5b9a\u4e49\u65b0\u7684\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7b49\u4e8e\u4efb\u4f55\u503c ### Collapsed object\u8f90\u5c04 Radiation is calculated based on the temperature difference between objects. Therefore for the software to compute these temperature differences it must know the temperatures of the objects partaking in the Radiative exchange. In fixed temperature cuboids (collapsed or uncollapsed) the temperature of the object is explicitly set. Therefore these objects partake in Radiation but can only pass heat to other objects cooler than themselves. They cannot become warmer or cooler because their temperature is fixed by you. Objects set to have a fixed heatflow give out energy to the neighbouring grid cells but do not have a temperature calculated within them. Therefore there is insufficient data for the software to compute its radiation calculation and therefore they will not partake in the radiative exchange. Collapsed objects can only take part in the radiation calculation if they are set to be fixed temperature. If set to be conducting they cannot take part in the radiation calculation because they don't have grid-cells within them to store the temperature data. Note: These objects will all act as obstructions to radiation, inhibitting the view factor between other radiating objects. ### Open Domain \u8fd0\u884c\u8f90\u5c04\u6a21\u578b\u65f6\uff0c\u5f00\u653e\u8fb9\u754c\u5982\u4f55\u5f71\u54cd\u8f90\u5c04\u4f20\u8f93\uff1f\u662f\u5426\u8ba1\u7b97\u51fa\u4ea4\u6362\u56e0\u5b50\uff1f\u4ec0\u4e48\u662f\u8f90\u5c04\u6e29\u5ea6\uff1f All radiating geometry inside the domain will radiate towards \u201cinfinity outside the domain\u201d, the domain boundaries. Therefore exchanges factor are calculated. Domain boundaries are ideally \u201cblack\u201d. Radiation is always a two-way process. Hence, if the radiation temperature of the domain boundary is higher than the body temperatures inside there will be a positive net radiation heat flow into the domain and heat will be added. If the radiation temperature is lower than the body temperatures heat will be extracted from the system. The temperature used to calculate the radiation of each domain boundary is set in the Project Manager in o [Model Setup] \u2013 Default Radiant Temperature Ambient Attributes may be used to overwrite the above settings with Radiation Temperature other than the Default Radiant Temperature. You may use different Ambient Attributes for different sides and hence different Radiation Temperatures on different sides of the domain. Domain boundaries which are set to \u201cSymmetry\u201d are adiabatic. To prevent violation of the energy conservation, one side will be opened to radiation transfer (but only for radiation transfer!) automatically. In this case there will be a warning displayed in the Message Window. \u57df\u5185\u7684\u6240\u6709\u8f90\u5c04\u51e0\u4f55\u4f53\u90fd\u5c06\u5411\u201c\u57df\u5916\u65e0\u9650\u57df\u201d\uff08\u57df\u8fb9\u754c\uff09\u8f90\u5c04\u3002 \u56e0\u6b64\u8ba1\u7b97\u4ea4\u6362\u56e0\u5b50\u3002 \u57df\u8fb9\u754c\u7406\u60f3\u5730\u662f\u201c\u9ed1\u8272\u201d\u3002 \u8f90\u5c04\u59cb\u7ec8\u662f\u4e00\u4e2a\u53cc\u5411\u8fc7\u7a0b\u3002\u56e0\u6b64\uff0c\u5982\u679c\u7574\u8fb9\u754c\u7684\u8f90\u5c04\u6e29\u5ea6\u9ad8\u4e8e\u4f53\u5185\u7684\u4f53\u6e29\uff0c\u5219\u5c06\u6709\u6b63\u7684\u51c0\u8f90\u5c04\u70ed\u6d41\u8fdb\u5165\u533a\u57df\u5e76\u4e14\u5c06\u52a0\u70ed\u3002\u5982\u679c\u8f90\u5c04\u6e29\u5ea6\u4f4e\u4e8e\u4f53\u6e29\uff0c\u5219\u5c06\u4ece\u7cfb\u7edf\u4e2d\u63d0\u53d6\u70ed\u91cf\u3002 \u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u57df\u8fb9\u754c\u8f90\u5c04\u7684\u6e29\u5ea6\u5728\u9879\u76ee\u4e2d\u8bbe\u7f6e[Model Setup] \u2013 Default Radiant Temperature \u73af\u5883\u5c5e\u6027\u53ef\u7528\u4e8e\u4f7f\u7528\u9664\u9ed8\u8ba4\u8f90\u5c04\u6e29\u5ea6\u4e4b\u5916\u7684\u8f90\u5c04\u6e29\u5ea6\u8986\u76d6\u4e0a\u8ff0\u8bbe\u7f6e\u3002\u60a8\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u4fa7\u9762\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u5c5e\u6027\uff0c\u4ece\u800c\u5728\u57df\u7684\u4e0d\u540c\u4fa7\u9762\u4e0a\u4f7f\u7528\u4e0d\u540c\u7684\u8f90\u5c04\u6e29\u5ea6\u3002 \u8bbe\u7f6e\u4e3a\u201c\u5bf9\u79f0\u201d\u7684\u57df\u8fb9\u754c\u662f\u7edd\u70ed\u7684\u3002\u4e3a\u4e86\u9632\u6b62\u8fdd\u53cd\u8282\u80fd\u63aa\u65bd\uff0c\u4e00\u65b9\u5c06\u81ea\u52a8\u5f00\u653e\u8f90\u5c04\u4f20\u8f93\uff08\u4f46\u4ec5\u7528\u4e8e\u8f90\u5c04\u4f20\u8f93\uff01\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u7a97\u53e3\u4e2d\u5c06\u663e\u793a\u8b66\u544a\u3002 ## \u6c42\u89e3 Insufficient Memory < Exchange Factor Calculation performed abnormal exit > The total radiating faces is above the limit. The number of radiating faces is limitating to 120000 radiating faces by default. If the number of radiating surfaces exceeds this value, an exception is thrown and the EFG aborted. To increase the number of radiating faces using Environment variable, you can set System environment variable: EFGFACELIMIT System environment value: Number When the calculation is done, the number of radiating faces can be found on the first line of the following file: BaseSolution\\Exchange\\facelist (Open with Wordpad) Flotherm\u4e2d\u52a0\u5165\u70ed\u7ba1\u6a21\u578b\u540e\u6536\u655b\u56f0\u96be\u3002 \u70ed\u7ba1\u5177\u6709\u975e\u5e38\u9ad8\u7684\u6709\u6548\u5bfc\u70ed\u7387\u3002\u56e0\u6b64\uff0c\u5f53\u6d89\u53ca\u4f7f\u7528\u6e29\u5ea6\u53d8\u91cf\u6536\u655b\u65f6\uff0c\u53ef\u80fd\u4ea7\u751f\u95ee\u9898\u3002 \u4e3a\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\uff0c\u5efa\u8bae\u7528\u6237\uff1a \u4f7f\u7528\u53cc\u7cbe\u5ea6\u6c42\u89e3\u5668\uff08double precision solver \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u4f7f\u7528\u201c\u5171\u8f6d\u6b8b\u5dee\u201d\u9009\u9879\uff08conjugate residual \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u5c06\u6e29\u5ea6\u7684\u9519\u8bef\u65f6\u95f4\u6b65\u957f\u589e\u52a0~x20\uff08\u5728\u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\u4e0b\uff09 \u4f7f\u7528\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP \u5b9a\u4e49\u65b0\u7684\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7b49\u4e8e\u4efb\u4f55\u503c Collapsed object\u8f90\u5c04 Radiation is calculated based on the temperature difference between objects. Therefore for the software to compute these temperature differences it must know the temperatures of the objects partaking in the Radiative exchange. In fixed temperature cuboids (collapsed or uncollapsed) the temperature of the object is explicitly set. Therefore these objects partake in Radiation but can only pass heat to other objects cooler than themselves. They cannot become warmer or cooler because their temperature is fixed by you. Objects set to have a fixed heatflow give out energy to the neighbouring grid cells but do not have a temperature calculated within them. Therefore there is insufficient data for the software to compute its radiation calculation and therefore they will not partake in the radiative exchange. Collapsed objects can only take part in the radiation calculation if they are set to be fixed temperature. If set to be conducting they cannot take part in the radiation calculation because they don't have grid-cells within them to store the temperature data. Note: These objects will all act as obstructions to radiation, inhibitting the view factor between other radiating objects. Open Domain \u8fd0\u884c\u8f90\u5c04\u6a21\u578b\u65f6\uff0c\u5f00\u653e\u8fb9\u754c\u5982\u4f55\u5f71\u54cd\u8f90\u5c04\u4f20\u8f93\uff1f\u662f\u5426\u8ba1\u7b97\u51fa\u4ea4\u6362\u56e0\u5b50\uff1f\u4ec0\u4e48\u662f\u8f90\u5c04\u6e29\u5ea6\uff1f All radiating geometry inside the domain will radiate towards \u201cinfinity outside the domain\u201d, the domain boundaries. Therefore exchanges factor are calculated. Domain boundaries are ideally \u201cblack\u201d. Radiation is always a two-way process. Hence, if the radiation temperature of the domain boundary is higher than the body temperatures inside there will be a positive net radiation heat flow into the domain and heat will be added. If the radiation temperature is lower than the body temperatures heat will be extracted from the system. The temperature used to calculate the radiation of each domain boundary is set in the Project Manager in o [Model Setup] \u2013 Default Radiant Temperature Ambient Attributes may be used to overwrite the above settings with Radiation Temperature other than the Default Radiant Temperature. You may use different Ambient Attributes for different sides and hence different Radiation Temperatures on different sides of the domain. Domain boundaries which are set to \u201cSymmetry\u201d are adiabatic. To prevent violation of the energy conservation, one side will be opened to radiation transfer (but only for radiation transfer!) automatically. In this case there will be a warning displayed in the Message Window. \u57df\u5185\u7684\u6240\u6709\u8f90\u5c04\u51e0\u4f55\u4f53\u90fd\u5c06\u5411\u201c\u57df\u5916\u65e0\u9650\u57df\u201d\uff08\u57df\u8fb9\u754c\uff09\u8f90\u5c04\u3002 \u56e0\u6b64\u8ba1\u7b97\u4ea4\u6362\u56e0\u5b50\u3002 \u57df\u8fb9\u754c\u7406\u60f3\u5730\u662f\u201c\u9ed1\u8272\u201d\u3002 \u8f90\u5c04\u59cb\u7ec8\u662f\u4e00\u4e2a\u53cc\u5411\u8fc7\u7a0b\u3002\u56e0\u6b64\uff0c\u5982\u679c\u7574\u8fb9\u754c\u7684\u8f90\u5c04\u6e29\u5ea6\u9ad8\u4e8e\u4f53\u5185\u7684\u4f53\u6e29\uff0c\u5219\u5c06\u6709\u6b63\u7684\u51c0\u8f90\u5c04\u70ed\u6d41\u8fdb\u5165\u533a\u57df\u5e76\u4e14\u5c06\u52a0\u70ed\u3002\u5982\u679c\u8f90\u5c04\u6e29\u5ea6\u4f4e\u4e8e\u4f53\u6e29\uff0c\u5219\u5c06\u4ece\u7cfb\u7edf\u4e2d\u63d0\u53d6\u70ed\u91cf\u3002 \u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u57df\u8fb9\u754c\u8f90\u5c04\u7684\u6e29\u5ea6\u5728\u9879\u76ee\u4e2d\u8bbe\u7f6e[Model Setup] \u2013 Default Radiant Temperature \u73af\u5883\u5c5e\u6027\u53ef\u7528\u4e8e\u4f7f\u7528\u9664\u9ed8\u8ba4\u8f90\u5c04\u6e29\u5ea6\u4e4b\u5916\u7684\u8f90\u5c04\u6e29\u5ea6\u8986\u76d6\u4e0a\u8ff0\u8bbe\u7f6e\u3002\u60a8\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u4fa7\u9762\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u5c5e\u6027\uff0c\u4ece\u800c\u5728\u57df\u7684\u4e0d\u540c\u4fa7\u9762\u4e0a\u4f7f\u7528\u4e0d\u540c\u7684\u8f90\u5c04\u6e29\u5ea6\u3002 \u8bbe\u7f6e\u4e3a\u201c\u5bf9\u79f0\u201d\u7684\u57df\u8fb9\u754c\u662f\u7edd\u70ed\u7684\u3002\u4e3a\u4e86\u9632\u6b62\u8fdd\u53cd\u8282\u80fd\u63aa\u65bd\uff0c\u4e00\u65b9\u5c06\u81ea\u52a8\u5f00\u653e\u8f90\u5c04\u4f20\u8f93\uff08\u4f46\u4ec5\u7528\u4e8e\u8f90\u5c04\u4f20\u8f93\uff01\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u7a97\u53e3\u4e2d\u5c06\u663e\u793a\u8b66\u544a\u3002 \u6c42\u89e3 Insufficient Memory < Exchange Factor Calculation performed abnormal exit > The total radiating faces is above the limit. The number of radiating faces is limitating to 120000 radiating faces by default. If the number of radiating surfaces exceeds this value, an exception is thrown and the EFG aborted. To increase the number of radiating faces using Environment variable, you can set System environment variable: EFGFACELIMIT System environment value: Number When the calculation is done, the number of radiating faces can be found on the first line of the following file: BaseSolution\\Exchange\\facelist (Open with Wordpad) \u7ec6\u8282 \u8fdb\u884c\u66f4\u6539\uff08\u4f8b\u5982\u8c03\u6574\u6a21\u578b\u4e2d\u7684\u5bf9\u8c61\u5927\u5c0f\u6216\u79fb\u52a8\u5bf9\u8c61\uff09\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u66f4\u65b0FloTHERM\u3002 \u5177\u6709\u9ad8\u7f51\u683c\u5355\u5143\u6570\u7684\u8f83\u5927\u6a21\u578b\u53ef\u80fd\u9700\u8981\u51e0\u79d2\u949f\u6765\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\u3002 \u4ec5\u5f53\u7f51\u683c\u4fe1\u606f\u4ee5\u4e0b\u5217\u4efb\u4f55\u4e00\u79cd\u5f62\u5f0f\u663e\u793a\u65f6\uff0c\u624d\u4f1a\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\uff1a \u5f53\u7ed8\u56fe\u677f\u4e2d\u663e\u793a\u7f51\u683c\u65f6 \u663e\u793a\u201c\u7f51\u683c\u6458\u8981\u201d\u5bf9\u8bdd\u6846\u65f6 \u663e\u793a\u201c\u7cfb\u7edf\u7f51\u683c\u201d\u5c5e\u6027\u8868\u65f6 \u663e\u793a\u89e3\u9664\u952e\u7684\u6458\u8981\u5217\u65f6 When the grid is shown in the Drawing Board When the Grid Summary dialog is displayed When the System Grid property sheet is displayed When the de-keypointed summary column is displayed \u5982\u679c\u60a8\u60f3\u5728\u4e0d\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u591a\u9879\u66f4\u6539\uff0c\u8bf7\u786e\u4fdd\u4e0a\u8ff0\u4efb\u4f55\u663e\u793a\u90fd\u4e0d\u662f\u6d3b\u52a8\u7684\u3002 How to Set Solar Radiation in FloTHERM Updated October 09, 2018 SUMMARY This KB article seeks to address questions such as: How do I set solar radiation in FloTHERM? What angle value should be entered under 'Model Orientation From North'? How do I define a solar load? Do I need to provide a solar reflectivity and emissivity for my surface attributes? DETAILS To include solar radiation in a FloTHERM model, toggle on 'Solar Radiation' under the Model Set Up tab. It is important to turn on thermal radiation as well; otherwise, the model will appear too hot. Select 'Click to Edit' to open the Solar Configuration Window. 'Model Orientation From North' is the first setting that needs to be defined. This allows the user to identify where North is in the corresponding project. If the gravity is set to -Y direction for the project, then the X or Z axis will be used to define the model's orientation. If North lined up with the Z axis for example, set the 'Angle Measured From' to 'Z Axis' and leave the default angle of 0 deg. If North doesn't lie along an axis, use the angle to define this location from either the X or Z axis. The next section of the Solar Configuration Window defines solar position using latitude, date, and solar time. For this example, the latitude will be set to 30.25 degrees for Austin, Texas. Additionally, the date will be set to November 20th, 2018 with a mean solar time (clock time) of 07:00:00. These settings are used to calculate the azimuth angle and solar altitude. Note: The mean solar time may not be the same as local time. The user may want to find a website or program that converts local time to mean solar time for accurate analysis. Note: The solar time is a 24- hour clock, so 4PM would look like 16:00:00. Keep in mind that Command Center scenarios can be used to look at solar radiation over various times, such as throughout the day. If solar intensity/load data is available, this can be defined using the solar intensity option for 'Solar Calculation Type.' Notice this value is applied at the calculated location (Azimuth Angle and Solar Altitude). As an alternative, FloTHERM can calculate a solar intensity if the 'Solar Calculation Type' is set to cloudiness. This calculated value is based on the entered latitude, date, and solar time. A 'cloudiness' of 0 is clear skies, and this value can be adjusted to capture the expected cloud coverage, up to a value of 1. Therefore, the calculated solar intensity is reduced by the defined cloudiness. As shown below, the calculated solar intensity with zero cloudiness is about 100W/m^2. If the cloudiness is set to 0.3, the calculated solar intensity is reduced by 30%, to about 70W/m^2. Notice for either case, the solar vector is displayed in yellow in the upper right hand corner of the Visual Editor. There are a couple attributes that need to be applied in the model prior to solving. -material attribute -surface attribute -radiation attribute Make sure components have an associated material attribute so they can conduct heat. Additionally, apply a surface attribute to define a solar reflectivity and emissivity. Solar reflectivity only applies when solar radiation is turned on. This determines how much of the solar load is being applied to the system. If an object has a solar reflectivity of 0.5 then only 50% of the solar load for that object is applied. The reflected solar radiation is removed from the system. Solar radiation is like applying a collapsed source SmartPart to parts in your model. Setting an emissivity comes in for regular radiation, which again, should be turned on whenever there is solar radiation being modelled. The emissivity encompasses surface finishes and roughness of a part. This value will determine how much the object will radiate; the lower the emissivity, the less radiative heat transfer. Note: Color, Shininess, and Brightness are settings for changing only the visual representation of the model. Lastly, a radiation attribute needs to be applied to object surfaces as necessary to be included in the thermal radiation calculation. How to set thermal radiation? Updated May 01, 2013 SUMMARY Which settings need to be activated to calculate Thermal Radiation in FloTHERM or FloVENT ? DETAILS There are projects settings and surface settings. Here is a list of all settings needed to perform a thermal radiation calculation. FloVENT or FloTHERM doesn\u2019t use a direct view factors calculation. The software uses a ray tracing method to send rays in every direction ( *diffuse thermal radiation). It\u2019s a surface to surface method with *no interaction of fluid ** in between. To consider thermal radiation inside FloVENT or FloTHERM, you need to activate following settings: [Model/Modeling] and activate \u201c Radiation On \u201d Use 3D cuboids (non-collapsed) Or 2D cuboids if you tick on \u201cActivate Plate Conduction\u201d Specify an emissivity for each [ Surface ] attribut (high for paint surfaces. ex 0.8 to 0.9 as it depends on surface roughness. And low for non-paint polished plate). The [Surface] attribute can be attached to any [Material] attribute. Specify [ Radiation ] attribute (to define the pixel size for the radiation discretization). On each pixel, FloVENT or FloTHERM will consider a uniform temperature for ray tracing method. This pixel is at least the size of the cells, but the pixel can be and will often be wider than the local cell size. \u201cSingle Radiating\u201d : create a single pixel on the surface. Define \u201cSingle Radiating\u201d for small parts of the models or low temperature gradient on the surface of this part. \u201cSubdivided radiating\u201d: create multiple pixel on the surfaces based on your criteria. Define \u201cSubdivided radiating\u201d for big surface or when the temperature gradients are high on the surface of this part. Modeling Thermal Vias in FloTHERM using FloEDA Bridge Updated July 14, 2016 SUMMARY What is a good way to represent thermal vias in FloTHERM? How to create such a representation easily? DETAILS Modeling each thermal via discretely leads to lot of grid hence it is recommended to model them as a lumped cuboid with orthotropic conductivity. This can be done fairly easily using FloEDA Bridge. Thermal vias help to provide a good conductive path from the component into the PCB. In other words it increase the thermal conductivity of the PCB locally under the powered component. If the board details are brought into FloTHERM via FloEDA.Bridge then thermal vias can be added as a daughter of a component in the tree. Below are the default values for diamter, plating thickness of an individual vis and pitch for via pattern. The use can choose to have a filling material ( like Solder within the via) or leave to None. Once the board is transferred into FloTHERM, thermal vias come in as a lumped cuboid with an orthotropic conductivity. In this particular case kz = 7.03 W/(mK) and kx,y = 0.339 W/(mK) Even when not modeling the board in detail users can use the above steps to estimate the orthtropic conductivity of a lumped cuboid representing the thermal via pattern.","title":"Flotherm\u4e2d\u52a0\u5165\u70ed\u7ba1\u6a21\u578b\u540e\u6536\u655b\u56f0\u96be"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#flotherm","text":"\u70ed\u7ba1\u5177\u6709\u975e\u5e38\u9ad8\u7684\u6709\u6548\u5bfc\u70ed\u7387\u3002\u56e0\u6b64\uff0c\u5f53\u6d89\u53ca\u4f7f\u7528\u6e29\u5ea6\u53d8\u91cf\u6536\u655b\u65f6\uff0c\u53ef\u80fd\u4ea7\u751f\u95ee\u9898\u3002 \u4e3a\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\uff0c\u5efa\u8bae\u7528\u6237\uff1a \u4f7f\u7528\u53cc\u7cbe\u5ea6\u6c42\u89e3\u5668\uff08double precision solver \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u4f7f\u7528\u201c\u5171\u8f6d\u6b8b\u5dee\u201d\u9009\u9879\uff08conjugate residual \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u5c06\u6e29\u5ea6\u7684\u9519\u8bef\u65f6\u95f4\u6b65\u957f\u589e\u52a0~x20\uff08\u5728\u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\u4e0b\uff09 \u4f7f\u7528\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP \u5b9a\u4e49\u65b0\u7684\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7b49\u4e8e\u4efb\u4f55\u503c","title":"Flotherm\u4e2d\u52a0\u5165\u70ed\u7ba1\u6a21\u578b\u540e\u6536\u655b\u56f0\u96be\u3002"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#collapsed-object","text":"Radiation is calculated based on the temperature difference between objects. Therefore for the software to compute these temperature differences it must know the temperatures of the objects partaking in the Radiative exchange. In fixed temperature cuboids (collapsed or uncollapsed) the temperature of the object is explicitly set. Therefore these objects partake in Radiation but can only pass heat to other objects cooler than themselves. They cannot become warmer or cooler because their temperature is fixed by you. Objects set to have a fixed heatflow give out energy to the neighbouring grid cells but do not have a temperature calculated within them. Therefore there is insufficient data for the software to compute its radiation calculation and therefore they will not partake in the radiative exchange. Collapsed objects can only take part in the radiation calculation if they are set to be fixed temperature. If set to be conducting they cannot take part in the radiation calculation because they don't have grid-cells within them to store the temperature data. Note: These objects will all act as obstructions to radiation, inhibitting the view factor between other radiating objects.","title":"Collapsed object\u8f90\u5c04"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#open-domain","text":"\u8fd0\u884c\u8f90\u5c04\u6a21\u578b\u65f6\uff0c\u5f00\u653e\u8fb9\u754c\u5982\u4f55\u5f71\u54cd\u8f90\u5c04\u4f20\u8f93\uff1f\u662f\u5426\u8ba1\u7b97\u51fa\u4ea4\u6362\u56e0\u5b50\uff1f\u4ec0\u4e48\u662f\u8f90\u5c04\u6e29\u5ea6\uff1f All radiating geometry inside the domain will radiate towards \u201cinfinity outside the domain\u201d, the domain boundaries. Therefore exchanges factor are calculated. Domain boundaries are ideally \u201cblack\u201d. Radiation is always a two-way process. Hence, if the radiation temperature of the domain boundary is higher than the body temperatures inside there will be a positive net radiation heat flow into the domain and heat will be added. If the radiation temperature is lower than the body temperatures heat will be extracted from the system. The temperature used to calculate the radiation of each domain boundary is set in the Project Manager in o [Model Setup] \u2013 Default Radiant Temperature Ambient Attributes may be used to overwrite the above settings with Radiation Temperature other than the Default Radiant Temperature. You may use different Ambient Attributes for different sides and hence different Radiation Temperatures on different sides of the domain. Domain boundaries which are set to \u201cSymmetry\u201d are adiabatic. To prevent violation of the energy conservation, one side will be opened to radiation transfer (but only for radiation transfer!) automatically. In this case there will be a warning displayed in the Message Window. \u57df\u5185\u7684\u6240\u6709\u8f90\u5c04\u51e0\u4f55\u4f53\u90fd\u5c06\u5411\u201c\u57df\u5916\u65e0\u9650\u57df\u201d\uff08\u57df\u8fb9\u754c\uff09\u8f90\u5c04\u3002 \u56e0\u6b64\u8ba1\u7b97\u4ea4\u6362\u56e0\u5b50\u3002 \u57df\u8fb9\u754c\u7406\u60f3\u5730\u662f\u201c\u9ed1\u8272\u201d\u3002 \u8f90\u5c04\u59cb\u7ec8\u662f\u4e00\u4e2a\u53cc\u5411\u8fc7\u7a0b\u3002\u56e0\u6b64\uff0c\u5982\u679c\u7574\u8fb9\u754c\u7684\u8f90\u5c04\u6e29\u5ea6\u9ad8\u4e8e\u4f53\u5185\u7684\u4f53\u6e29\uff0c\u5219\u5c06\u6709\u6b63\u7684\u51c0\u8f90\u5c04\u70ed\u6d41\u8fdb\u5165\u533a\u57df\u5e76\u4e14\u5c06\u52a0\u70ed\u3002\u5982\u679c\u8f90\u5c04\u6e29\u5ea6\u4f4e\u4e8e\u4f53\u6e29\uff0c\u5219\u5c06\u4ece\u7cfb\u7edf\u4e2d\u63d0\u53d6\u70ed\u91cf\u3002 \u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u57df\u8fb9\u754c\u8f90\u5c04\u7684\u6e29\u5ea6\u5728\u9879\u76ee\u4e2d\u8bbe\u7f6e[Model Setup] \u2013 Default Radiant Temperature \u73af\u5883\u5c5e\u6027\u53ef\u7528\u4e8e\u4f7f\u7528\u9664\u9ed8\u8ba4\u8f90\u5c04\u6e29\u5ea6\u4e4b\u5916\u7684\u8f90\u5c04\u6e29\u5ea6\u8986\u76d6\u4e0a\u8ff0\u8bbe\u7f6e\u3002\u60a8\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u4fa7\u9762\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u5c5e\u6027\uff0c\u4ece\u800c\u5728\u57df\u7684\u4e0d\u540c\u4fa7\u9762\u4e0a\u4f7f\u7528\u4e0d\u540c\u7684\u8f90\u5c04\u6e29\u5ea6\u3002 \u8bbe\u7f6e\u4e3a\u201c\u5bf9\u79f0\u201d\u7684\u57df\u8fb9\u754c\u662f\u7edd\u70ed\u7684\u3002\u4e3a\u4e86\u9632\u6b62\u8fdd\u53cd\u8282\u80fd\u63aa\u65bd\uff0c\u4e00\u65b9\u5c06\u81ea\u52a8\u5f00\u653e\u8f90\u5c04\u4f20\u8f93\uff08\u4f46\u4ec5\u7528\u4e8e\u8f90\u5c04\u4f20\u8f93\uff01\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u7a97\u53e3\u4e2d\u5c06\u663e\u793a\u8b66\u544a\u3002","title":"Open Domain"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#_1","text":"Insufficient Memory < Exchange Factor Calculation performed abnormal exit > The total radiating faces is above the limit. The number of radiating faces is limitating to 120000 radiating faces by default. If the number of radiating surfaces exceeds this value, an exception is thrown and the EFG aborted. To increase the number of radiating faces using Environment variable, you can set System environment variable: EFGFACELIMIT System environment value: Number When the calculation is done, the number of radiating faces can be found on the first line of the following file: BaseSolution\\Exchange\\facelist (Open with Wordpad)","title":"\u6c42\u89e3"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#_2","text":"\u8fdb\u884c\u66f4\u6539\uff08\u4f8b\u5982\u8c03\u6574\u6a21\u578b\u4e2d\u7684\u5bf9\u8c61\u5927\u5c0f\u6216\u79fb\u52a8\u5bf9\u8c61\uff09\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u66f4\u65b0FloTHERM\u3002 \u5177\u6709\u9ad8\u7f51\u683c\u5355\u5143\u6570\u7684\u8f83\u5927\u6a21\u578b\u53ef\u80fd\u9700\u8981\u51e0\u79d2\u949f\u6765\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\u3002 \u4ec5\u5f53\u7f51\u683c\u4fe1\u606f\u4ee5\u4e0b\u5217\u4efb\u4f55\u4e00\u79cd\u5f62\u5f0f\u663e\u793a\u65f6\uff0c\u624d\u4f1a\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\uff1a \u5f53\u7ed8\u56fe\u677f\u4e2d\u663e\u793a\u7f51\u683c\u65f6 \u663e\u793a\u201c\u7f51\u683c\u6458\u8981\u201d\u5bf9\u8bdd\u6846\u65f6 \u663e\u793a\u201c\u7cfb\u7edf\u7f51\u683c\u201d\u5c5e\u6027\u8868\u65f6 \u663e\u793a\u89e3\u9664\u952e\u7684\u6458\u8981\u5217\u65f6 When the grid is shown in the Drawing Board When the Grid Summary dialog is displayed When the System Grid property sheet is displayed When the de-keypointed summary column is displayed \u5982\u679c\u60a8\u60f3\u5728\u4e0d\u91cd\u65b0\u8ba1\u7b97\u7f51\u683c\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u591a\u9879\u66f4\u6539\uff0c\u8bf7\u786e\u4fdd\u4e0a\u8ff0\u4efb\u4f55\u663e\u793a\u90fd\u4e0d\u662f\u6d3b\u52a8\u7684\u3002","title":"\u7ec6\u8282"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#how-to-set-solar-radiation-in-flotherm","text":"Updated October 09, 2018","title":"How to Set Solar Radiation in FloTHERM"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#summary","text":"This KB article seeks to address questions such as: How do I set solar radiation in FloTHERM? What angle value should be entered under 'Model Orientation From North'? How do I define a solar load? Do I need to provide a solar reflectivity and emissivity for my surface attributes?","title":"SUMMARY"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#details","text":"To include solar radiation in a FloTHERM model, toggle on 'Solar Radiation' under the Model Set Up tab. It is important to turn on thermal radiation as well; otherwise, the model will appear too hot. Select 'Click to Edit' to open the Solar Configuration Window. 'Model Orientation From North' is the first setting that needs to be defined. This allows the user to identify where North is in the corresponding project. If the gravity is set to -Y direction for the project, then the X or Z axis will be used to define the model's orientation. If North lined up with the Z axis for example, set the 'Angle Measured From' to 'Z Axis' and leave the default angle of 0 deg. If North doesn't lie along an axis, use the angle to define this location from either the X or Z axis. The next section of the Solar Configuration Window defines solar position using latitude, date, and solar time. For this example, the latitude will be set to 30.25 degrees for Austin, Texas. Additionally, the date will be set to November 20th, 2018 with a mean solar time (clock time) of 07:00:00. These settings are used to calculate the azimuth angle and solar altitude. Note: The mean solar time may not be the same as local time. The user may want to find a website or program that converts local time to mean solar time for accurate analysis. Note: The solar time is a 24- hour clock, so 4PM would look like 16:00:00. Keep in mind that Command Center scenarios can be used to look at solar radiation over various times, such as throughout the day. If solar intensity/load data is available, this can be defined using the solar intensity option for 'Solar Calculation Type.' Notice this value is applied at the calculated location (Azimuth Angle and Solar Altitude). As an alternative, FloTHERM can calculate a solar intensity if the 'Solar Calculation Type' is set to cloudiness. This calculated value is based on the entered latitude, date, and solar time. A 'cloudiness' of 0 is clear skies, and this value can be adjusted to capture the expected cloud coverage, up to a value of 1. Therefore, the calculated solar intensity is reduced by the defined cloudiness. As shown below, the calculated solar intensity with zero cloudiness is about 100W/m^2. If the cloudiness is set to 0.3, the calculated solar intensity is reduced by 30%, to about 70W/m^2. Notice for either case, the solar vector is displayed in yellow in the upper right hand corner of the Visual Editor. There are a couple attributes that need to be applied in the model prior to solving. -material attribute -surface attribute -radiation attribute Make sure components have an associated material attribute so they can conduct heat. Additionally, apply a surface attribute to define a solar reflectivity and emissivity. Solar reflectivity only applies when solar radiation is turned on. This determines how much of the solar load is being applied to the system. If an object has a solar reflectivity of 0.5 then only 50% of the solar load for that object is applied. The reflected solar radiation is removed from the system. Solar radiation is like applying a collapsed source SmartPart to parts in your model. Setting an emissivity comes in for regular radiation, which again, should be turned on whenever there is solar radiation being modelled. The emissivity encompasses surface finishes and roughness of a part. This value will determine how much the object will radiate; the lower the emissivity, the less radiative heat transfer. Note: Color, Shininess, and Brightness are settings for changing only the visual representation of the model. Lastly, a radiation attribute needs to be applied to object surfaces as necessary to be included in the thermal radiation calculation.","title":"DETAILS"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#how-to-set-thermal-radiation","text":"Updated May 01, 2013","title":"How to set thermal radiation?"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#summary_1","text":"Which settings need to be activated to calculate Thermal Radiation in FloTHERM or FloVENT ?","title":"SUMMARY"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#details_1","text":"There are projects settings and surface settings. Here is a list of all settings needed to perform a thermal radiation calculation. FloVENT or FloTHERM doesn\u2019t use a direct view factors calculation. The software uses a ray tracing method to send rays in every direction ( *diffuse thermal radiation). It\u2019s a surface to surface method with *no interaction of fluid ** in between. To consider thermal radiation inside FloVENT or FloTHERM, you need to activate following settings: [Model/Modeling] and activate \u201c Radiation On \u201d Use 3D cuboids (non-collapsed) Or 2D cuboids if you tick on \u201cActivate Plate Conduction\u201d Specify an emissivity for each [ Surface ] attribut (high for paint surfaces. ex 0.8 to 0.9 as it depends on surface roughness. And low for non-paint polished plate). The [Surface] attribute can be attached to any [Material] attribute. Specify [ Radiation ] attribute (to define the pixel size for the radiation discretization). On each pixel, FloVENT or FloTHERM will consider a uniform temperature for ray tracing method. This pixel is at least the size of the cells, but the pixel can be and will often be wider than the local cell size. \u201cSingle Radiating\u201d : create a single pixel on the surface. Define \u201cSingle Radiating\u201d for small parts of the models or low temperature gradient on the surface of this part. \u201cSubdivided radiating\u201d: create multiple pixel on the surfaces based on your criteria. Define \u201cSubdivided radiating\u201d for big surface or when the temperature gradients are high on the surface of this part.","title":"DETAILS"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#modeling-thermal-vias-in-flotherm-using-floeda-bridge","text":"Updated July 14, 2016","title":"Modeling Thermal Vias in FloTHERM using FloEDA Bridge"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#summary_2","text":"What is a good way to represent thermal vias in FloTHERM? How to create such a representation easily?","title":"SUMMARY"},{"location":"Flotherm/Flotherm%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%83%AD%E7%AE%A1%E6%A8%A1%E5%9E%8B%E5%90%8E%E6%94%B6%E6%95%9B%E5%9B%B0%E9%9A%BE/#details_2","text":"Modeling each thermal via discretely leads to lot of grid hence it is recommended to model them as a lumped cuboid with orthotropic conductivity. This can be done fairly easily using FloEDA Bridge. Thermal vias help to provide a good conductive path from the component into the PCB. In other words it increase the thermal conductivity of the PCB locally under the powered component. If the board details are brought into FloTHERM via FloEDA.Bridge then thermal vias can be added as a daughter of a component in the tree. Below are the default values for diamter, plating thickness of an individual vis and pitch for via pattern. The use can choose to have a filling material ( like Solder within the via) or leave to None. Once the board is transferred into FloTHERM, thermal vias come in as a lumped cuboid with an orthotropic conductivity. In this particular case kz = 7.03 W/(mK) and kx,y = 0.339 W/(mK) Even when not modeling the board in detail users can use the above steps to estimate the orthtropic conductivity of a lumped cuboid representing the thermal via pattern.","title":"DETAILS"},{"location":"Flotherm/Flotherm%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB/","text":"Flotherm\u4e2d\u7684\u5750\u6807\u7cfb Flotherm\u8f6f\u4ef6\u4e2d\u6709\u5168\u5c40\u5750\u6807\u7cfb\uff0c\u800c\u6bcf\u4e2a\u5668\u4ef6\u53c8\u6709\u81ea\u5df1\u7684\u5750\u6807\u7cfb\uff0c\u7ecf\u5e38\u8ba9\u4eba\u6478\u4e0d\u7740\u5934\u8111\u3002\u8fd9\u91cc\u603b\u7ed3\u4e0b\u5728\u5404\u79cd\u60c5\u51b5\u4e0b\u5230\u5e95\u7528\u7684\u662f\u4ec0\u4e48\u5750\u6807\u7cfb\u3002 \u5750\u6807\u7cfb\u7684\u663e\u793a \u5728Edit -- User Preferences \uff08 F11 \uff09\u9762\u677f\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u5168\u5c40\u5750\u6807\u7cfb\u548c\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u3002 \u5bf9\u8c61Location\u5c5e\u6027\u9762\u677f\u4e2d\u7684\u5750\u6807 \u5bf9\u8c61Location\u5c5e\u6027\u9762\u677f\u4e2d\u7684\u5750\u6807\u4e3a\u5168\u5c40\u5750\u6807\u3002\u5982\u4e0b\u56fe\uff0cCuboid\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u548c\u5168\u5c40\u5750\u6807\u7cfb\u4e0d\u4e00\u81f4\uff0c\u4f46\u662f\u5728Position\u548cSize\u4e2d\u7684\u6570\u503c\u662f\u6309\u7167\u5168\u5c40\u5750\u6807\u7cfb\u6765\u7684\u3002 Warning \u9700\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136\u8fd9\u91cc\u7684\u4f4d\u7f6e\u5750\u6807\u662f\u4ee5\u5168\u5c40\u5750\u6807\u7cfb\u4e3a\u51c6\uff0c\u4f46\u662fX\uff0cY\uff0cZ\u503c\u8868\u793a\u7684\u662f\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u539f\u70b9\u5728\u5168\u5c40\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u6709\u65f6\u5019\u6211\u4eec\u4f1a\u53d1\u73b0\u5373\u4f7f\u4e24\u4e2a\u5bf9\u8c61\u91cd\u5408\uff0c\u4f46\u4ed6\u4eec\u7684\u4f4d\u7f6e\u5750\u6807\u5374\u65e0\u6cd5\u4fdd\u6301\u4e00\u81f4\u3002 Assembly\u7684\u5750\u6807\u7cfb Assembly\u548c\u5176\u4e2d\u5bf9\u8c61\u7684\u7684\u5750\u6807\u7cfb\u5173\u7cfb\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49Assembly\u4e2d\u5bf9\u8c61\u7684\u5750\u6807\u7cfb\uff0c\u4e00\u79cd\u662f\u7edd\u5bf9\u5750\u6807\u7cfb\uff0c\u4e00\u79cd\u662f\u76f8\u5173\u5750\u6807\u7cfb\u3002 \u7edd\u5bf9\u5750\u6807\u7cfb\u9009\u9879\u4e0b\uff0cAssembly\u4e2d\u5bf9\u8c61\u7684\u5750\u6807\u4ee5\u5168\u5c40\u5750\u6807\u7cfb\u4e3a\u51c6\u3002\u5982\u679c\u79fb\u52a8Assembly\u4f1a\u6539\u53d8\u5176\u4e2d\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u540c\u65f6\u6539\u53d8\u5176\u4e2d\u5bf9\u8c61\u7684\u5750\u6807\u503c\u3002 \u76f8\u5bf9\u5750\u6807\u7cfb\u9009\u9879\u4e0b\uff0cAssembly\u4e2d\u5bf9\u8c61\u7684\u5750\u6807\u4ee5Assembly\u7684\u5750\u6807\u7cfb\u4e3a\u51c6\u3002\u5982\u679c\u79fb\u52a8Assembly\u4f1a\u6539\u53d8\u5176\u4e2d\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u4f46\u662f\u5176\u5750\u6807\u503c\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u4e3a\u5b83\u4eec\u59cb\u7ec8\u662f\u76f8\u5bf9\u4e8e\u7236\u8282\u70b9Assembly\u7684\u5750\u6807\u7cfb\u7684\u3002 \u8fd9\u91cc\u5efa\u8bae\u8fd8\u662f\u4ee5\u8f6f\u4ef6\u7684\u9ed8\u8ba4\u9009\u9879Absolute Coordinates\u8bbe\u7f6e\u3002\u5982\u679c\u91c7\u7528\u76f8\u5bf9\u5750\u6807\u7cfb\uff0c\u4e00\u5c42\u5c42Assembly\u5957\u5d4c\u4e0b\u53bb\uff0c\u6700\u540e\u5bf9\u8c61\u7684\u4f4d\u7f6e\u53ef\u80fd\u4ee4\u4eba\u53d1\u72c2\u3002 \u5bf9\u8c61\u7f51\u683c\u7ea6\u675f\u7684\u5750\u6807\u7cfb \u5728\u5bf9\u8c61\u7684\u7f51\u683c\u7ea6\u675f\u4e2d\uff0c\u662f\u6309\u7167\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u6765\u5b9a\u4e49\u7684\u3002\u5982\u4e0b\u56fe\uff0c\u7ed9\u5bf9\u8c61\u7684Z0\u7f51\u683c\u7ea6\u675f\u9009\u9879\u8bbe\u7f6e\u4e3aMinimum Number\u4e3a2\uff0c\u7ed3\u679c\u53ef\u4ee5\u770b\u5230\u5b83\u662f\u5c06\u5c40\u90e8\u5750\u6807\u7cfb\u7684Z\u5411\u5212\u5206\u6210\u4e86\u4e24\u4e2a\u7f51\u683c\u3002 \u6750\u6599\u5c5e\u6027\u4e2d\u7684\u5750\u6807\u7cfb \u5728Flotherm\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u6750\u6599\u5bfc\u70ed\u7387\u4e3a\u5404\u9879\u5f02\u6027\u6216\u8005\u53cc\u5411\u6027\u3002\u5982\u4e0b\u56fe\uff0c\u5c06\u67d0\u79cd\u6750\u6599\u5b9a\u4e49\u4e3a\u5404\u5411\u5f02\u6027\uff0c\u8fd9\u91cc\u7684X\uff0cY\uff0cZ\u5750\u6807\u4ee5\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u4e3a\u51c6\u3002\u56e0\u6b64\uff0c\u5728\u4f7f\u7528\u8fd9\u79cd\u6750\u6599\u7684\u65f6\u5019\u8981\u6ce8\u610f\u4e0e\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u4fdd\u6301\u4e00\u81f4\u3002 \u6c47\u603b\u4fe1\u606f\u4e2d\u5bf9\u8c61\u7f51\u683c\u63d0\u793a\u7684\u5750\u6807\u7cfb \u5feb\u6377\u952e i \u53ef\u4ee5\u67e5\u770b\u5bf9\u8c61\u7684\u6c47\u603b\u4fe1\u606f\uff0c\u8fd9\u91cc\u53ef\u4ee5\u68c0\u67e5\u5bf9\u8c61\u7684\u5404\u9876\u70b9\u662f\u5426\u6709\u7f51\u683c\u3002\u5982\u4e0b\u56fe\uff0c\u63d0\u793a\u5bf9\u8c61\u7684 X High\u548cZ Low \u65b9\u5411\u4e0a\u6ca1\u6709\u7f51\u683c\u3002\u7ed3\u5408\u4e0b\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u63d0\u793a\u4fe1\u606f\u4f7f\u7528\u7684\u662f\u5168\u5c40\u5750\u6807\u7cfb\u3002","title":"Flotherm\u4e2d\u7684\u5750\u6807\u7cfb"},{"location":"Flotherm/Flotherm%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB/#flotherm","text":"Flotherm\u8f6f\u4ef6\u4e2d\u6709\u5168\u5c40\u5750\u6807\u7cfb\uff0c\u800c\u6bcf\u4e2a\u5668\u4ef6\u53c8\u6709\u81ea\u5df1\u7684\u5750\u6807\u7cfb\uff0c\u7ecf\u5e38\u8ba9\u4eba\u6478\u4e0d\u7740\u5934\u8111\u3002\u8fd9\u91cc\u603b\u7ed3\u4e0b\u5728\u5404\u79cd\u60c5\u51b5\u4e0b\u5230\u5e95\u7528\u7684\u662f\u4ec0\u4e48\u5750\u6807\u7cfb\u3002","title":"Flotherm\u4e2d\u7684\u5750\u6807\u7cfb"},{"location":"Flotherm/Flotherm%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB/#_1","text":"\u5728Edit -- User Preferences \uff08 F11 \uff09\u9762\u677f\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u5168\u5c40\u5750\u6807\u7cfb\u548c\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u3002","title":"\u5750\u6807\u7cfb\u7684\u663e\u793a"},{"location":"Flotherm/Flotherm%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB/#location","text":"\u5bf9\u8c61Location\u5c5e\u6027\u9762\u677f\u4e2d\u7684\u5750\u6807\u4e3a\u5168\u5c40\u5750\u6807\u3002\u5982\u4e0b\u56fe\uff0cCuboid\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u548c\u5168\u5c40\u5750\u6807\u7cfb\u4e0d\u4e00\u81f4\uff0c\u4f46\u662f\u5728Position\u548cSize\u4e2d\u7684\u6570\u503c\u662f\u6309\u7167\u5168\u5c40\u5750\u6807\u7cfb\u6765\u7684\u3002 Warning \u9700\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136\u8fd9\u91cc\u7684\u4f4d\u7f6e\u5750\u6807\u662f\u4ee5\u5168\u5c40\u5750\u6807\u7cfb\u4e3a\u51c6\uff0c\u4f46\u662fX\uff0cY\uff0cZ\u503c\u8868\u793a\u7684\u662f\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u539f\u70b9\u5728\u5168\u5c40\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u6709\u65f6\u5019\u6211\u4eec\u4f1a\u53d1\u73b0\u5373\u4f7f\u4e24\u4e2a\u5bf9\u8c61\u91cd\u5408\uff0c\u4f46\u4ed6\u4eec\u7684\u4f4d\u7f6e\u5750\u6807\u5374\u65e0\u6cd5\u4fdd\u6301\u4e00\u81f4\u3002","title":"\u5bf9\u8c61Location\u5c5e\u6027\u9762\u677f\u4e2d\u7684\u5750\u6807"},{"location":"Flotherm/Flotherm%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB/#assembly","text":"Assembly\u548c\u5176\u4e2d\u5bf9\u8c61\u7684\u7684\u5750\u6807\u7cfb\u5173\u7cfb\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49Assembly\u4e2d\u5bf9\u8c61\u7684\u5750\u6807\u7cfb\uff0c\u4e00\u79cd\u662f\u7edd\u5bf9\u5750\u6807\u7cfb\uff0c\u4e00\u79cd\u662f\u76f8\u5173\u5750\u6807\u7cfb\u3002 \u7edd\u5bf9\u5750\u6807\u7cfb\u9009\u9879\u4e0b\uff0cAssembly\u4e2d\u5bf9\u8c61\u7684\u5750\u6807\u4ee5\u5168\u5c40\u5750\u6807\u7cfb\u4e3a\u51c6\u3002\u5982\u679c\u79fb\u52a8Assembly\u4f1a\u6539\u53d8\u5176\u4e2d\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u540c\u65f6\u6539\u53d8\u5176\u4e2d\u5bf9\u8c61\u7684\u5750\u6807\u503c\u3002 \u76f8\u5bf9\u5750\u6807\u7cfb\u9009\u9879\u4e0b\uff0cAssembly\u4e2d\u5bf9\u8c61\u7684\u5750\u6807\u4ee5Assembly\u7684\u5750\u6807\u7cfb\u4e3a\u51c6\u3002\u5982\u679c\u79fb\u52a8Assembly\u4f1a\u6539\u53d8\u5176\u4e2d\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u4f46\u662f\u5176\u5750\u6807\u503c\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u4e3a\u5b83\u4eec\u59cb\u7ec8\u662f\u76f8\u5bf9\u4e8e\u7236\u8282\u70b9Assembly\u7684\u5750\u6807\u7cfb\u7684\u3002 \u8fd9\u91cc\u5efa\u8bae\u8fd8\u662f\u4ee5\u8f6f\u4ef6\u7684\u9ed8\u8ba4\u9009\u9879Absolute Coordinates\u8bbe\u7f6e\u3002\u5982\u679c\u91c7\u7528\u76f8\u5bf9\u5750\u6807\u7cfb\uff0c\u4e00\u5c42\u5c42Assembly\u5957\u5d4c\u4e0b\u53bb\uff0c\u6700\u540e\u5bf9\u8c61\u7684\u4f4d\u7f6e\u53ef\u80fd\u4ee4\u4eba\u53d1\u72c2\u3002","title":"Assembly\u7684\u5750\u6807\u7cfb"},{"location":"Flotherm/Flotherm%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB/#_2","text":"\u5728\u5bf9\u8c61\u7684\u7f51\u683c\u7ea6\u675f\u4e2d\uff0c\u662f\u6309\u7167\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u6765\u5b9a\u4e49\u7684\u3002\u5982\u4e0b\u56fe\uff0c\u7ed9\u5bf9\u8c61\u7684Z0\u7f51\u683c\u7ea6\u675f\u9009\u9879\u8bbe\u7f6e\u4e3aMinimum Number\u4e3a2\uff0c\u7ed3\u679c\u53ef\u4ee5\u770b\u5230\u5b83\u662f\u5c06\u5c40\u90e8\u5750\u6807\u7cfb\u7684Z\u5411\u5212\u5206\u6210\u4e86\u4e24\u4e2a\u7f51\u683c\u3002","title":"\u5bf9\u8c61\u7f51\u683c\u7ea6\u675f\u7684\u5750\u6807\u7cfb"},{"location":"Flotherm/Flotherm%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB/#_3","text":"\u5728Flotherm\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u6750\u6599\u5bfc\u70ed\u7387\u4e3a\u5404\u9879\u5f02\u6027\u6216\u8005\u53cc\u5411\u6027\u3002\u5982\u4e0b\u56fe\uff0c\u5c06\u67d0\u79cd\u6750\u6599\u5b9a\u4e49\u4e3a\u5404\u5411\u5f02\u6027\uff0c\u8fd9\u91cc\u7684X\uff0cY\uff0cZ\u5750\u6807\u4ee5\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u4e3a\u51c6\u3002\u56e0\u6b64\uff0c\u5728\u4f7f\u7528\u8fd9\u79cd\u6750\u6599\u7684\u65f6\u5019\u8981\u6ce8\u610f\u4e0e\u5bf9\u8c61\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u4fdd\u6301\u4e00\u81f4\u3002","title":"\u6750\u6599\u5c5e\u6027\u4e2d\u7684\u5750\u6807\u7cfb"},{"location":"Flotherm/Flotherm%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB/#_4","text":"\u5feb\u6377\u952e i \u53ef\u4ee5\u67e5\u770b\u5bf9\u8c61\u7684\u6c47\u603b\u4fe1\u606f\uff0c\u8fd9\u91cc\u53ef\u4ee5\u68c0\u67e5\u5bf9\u8c61\u7684\u5404\u9876\u70b9\u662f\u5426\u6709\u7f51\u683c\u3002\u5982\u4e0b\u56fe\uff0c\u63d0\u793a\u5bf9\u8c61\u7684 X High\u548cZ Low \u65b9\u5411\u4e0a\u6ca1\u6709\u7f51\u683c\u3002\u7ed3\u5408\u4e0b\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u63d0\u793a\u4fe1\u606f\u4f7f\u7528\u7684\u662f\u5168\u5c40\u5750\u6807\u7cfb\u3002","title":"\u6c47\u603b\u4fe1\u606f\u4e2d\u5bf9\u8c61\u7f51\u683c\u63d0\u793a\u7684\u5750\u6807\u7cfb"},{"location":"Flotherm/Flotherm%E6%9D%82%E9%A1%B9/","text":"\u9879\u76ee\u6587\u4ef6\u65e0\u6cd5\u6253\u5f00\u600e\u4e48\u529e \u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u627e\u5230 PDProject \u6587\u4ef6\u5939\u4e0b\u4e00\u822c\u4f1a\u6709\u4e09\u4e2a\u6587\u4ef6 group group.bak groupTrans \u5c06\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u91cd\u547d\u540d\u4e3a.pdml\u6587\u4ef6\u3002 \u7136\u540e\u5728Flotherm\u4e2d\u5bfc\u5165\u8fd9\u4e2a.pdml\u6587\u4ef6\uff0c\u5c1d\u8bd5\u6062\u590d\u9879\u76ee\u3002 \u8fd9\u79cd\u65b9\u5f0f\u540c\u6837\u9002\u7528\u4e8e\u6253\u5305\u7684.pack\u6587\u4ef6\u3002\u56e0\u4e3a.pack\u6587\u4ef6\u53ea\u662f\u5c06\u8fd9\u4e2a\u9879\u76ee\u547d\u4ee4\u6253\u5305\u6210\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\uff0c\u7528\u5e38\u7528\u89e3\u538b\u8f6f\u4ef6\u89e3\u538b\uff0c\u5373\u53ef\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\u76ee\u5f55\u3002 \u5982\u4f55\u4fee\u6539\u6253\u5f00\u5e2e\u52a9\u624b\u518c\u7684\u9ed8\u8ba4\u6d4f\u89c8\u5668 \u4fee\u6539windows\u73af\u5883\u53d8\u91cf MGC_HTML_BROWSER: C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe","title":"Flotherm\u6742\u9879"},{"location":"Flotherm/Flotherm%E6%9D%82%E9%A1%B9/#_1","text":"\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u627e\u5230 PDProject \u6587\u4ef6\u5939\u4e0b\u4e00\u822c\u4f1a\u6709\u4e09\u4e2a\u6587\u4ef6 group group.bak groupTrans \u5c06\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u91cd\u547d\u540d\u4e3a.pdml\u6587\u4ef6\u3002 \u7136\u540e\u5728Flotherm\u4e2d\u5bfc\u5165\u8fd9\u4e2a.pdml\u6587\u4ef6\uff0c\u5c1d\u8bd5\u6062\u590d\u9879\u76ee\u3002 \u8fd9\u79cd\u65b9\u5f0f\u540c\u6837\u9002\u7528\u4e8e\u6253\u5305\u7684.pack\u6587\u4ef6\u3002\u56e0\u4e3a.pack\u6587\u4ef6\u53ea\u662f\u5c06\u8fd9\u4e2a\u9879\u76ee\u547d\u4ee4\u6253\u5305\u6210\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\uff0c\u7528\u5e38\u7528\u89e3\u538b\u8f6f\u4ef6\u89e3\u538b\uff0c\u5373\u53ef\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\u76ee\u5f55\u3002","title":"\u9879\u76ee\u6587\u4ef6\u65e0\u6cd5\u6253\u5f00\u600e\u4e48\u529e"},{"location":"Flotherm/Flotherm%E6%9D%82%E9%A1%B9/#_2","text":"\u4fee\u6539windows\u73af\u5883\u53d8\u91cf MGC_HTML_BROWSER: C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe","title":"\u5982\u4f55\u4fee\u6539\u6253\u5f00\u5e2e\u52a9\u624b\u518c\u7684\u9ed8\u8ba4\u6d4f\u89c8\u5668"},{"location":"Flotherm/Flotherm%E8%BE%90%E5%B0%84/","text":"Flotherm\u4e2d\u52a0\u5165\u70ed\u7ba1\u6a21\u578b\u540e\u6536\u655b\u56f0\u96be\u3002 \u70ed\u7ba1\u5177\u6709\u975e\u5e38\u9ad8\u7684\u6709\u6548\u5bfc\u70ed\u7387\u3002\u56e0\u6b64\uff0c\u5f53\u6d89\u53ca\u4f7f\u7528\u6e29\u5ea6\u53d8\u91cf\u6536\u655b\u65f6\uff0c\u53ef\u80fd\u4ea7\u751f\u95ee\u9898\u3002 \u4e3a\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\uff0c\u5efa\u8bae\u7528\u6237\uff1a \u4f7f\u7528\u53cc\u7cbe\u5ea6\u6c42\u89e3\u5668\uff08double precision solver \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u4f7f\u7528\u201c\u5171\u8f6d\u6b8b\u5dee\u201d\u9009\u9879\uff08conjugate residual \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u5c06\u6e29\u5ea6\u7684\u9519\u8bef\u65f6\u95f4\u6b65\u957f\u589e\u52a0~x20\uff08\u5728\u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\u4e0b\uff09 \u4f7f\u7528\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP \u5b9a\u4e49\u65b0\u7684\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7b49\u4e8e\u4efb\u4f55\u503c Collapsed object Radiation is calculated based on the temperature difference between objects. Therefore for the software to compute these temperature differences it must know the temperatures of the objects partaking in the Radiative exchange. In fixed temperature cuboids (collapsed or uncollapsed) the temperature of the object is explicitly set. Therefore these objects partake in Radiation but can only pass heat to other objects cooler than themselves. They cannot become warmer or cooler because their temperature is fixed by you. Objects set to have a fixed heatflow give out energy to the neighbouring grid cells but do not have a temperature calculated within them. Therefore there is insufficient data for the software to compute its radiation calculation and therefore they will not partake in the radiative exchange. Collapsed objects can only take part in the radiation calculation if they are set to be fixed temperature. If set to be conducting they cannot take part in the radiation calculation because they don't have grid-cells within them to store the temperature data. Note: These objects will all act as obstructions to radiation, inhibitting the view factor between other radiating objects. Open Domain \u8fd0\u884c\u8f90\u5c04\u6a21\u578b\u65f6\uff0c\u5f00\u653e\u8fb9\u754c\u5982\u4f55\u5f71\u54cd\u8f90\u5c04\u4f20\u8f93\uff1f\u662f\u5426\u8ba1\u7b97\u51fa\u4ea4\u6362\u56e0\u5b50\uff1f\u4ec0\u4e48\u662f\u8f90\u5c04\u6e29\u5ea6\uff1f All radiating geometry inside the domain will radiate towards \u201cinfinity outside the domain\u201d, the domain boundaries. Therefore exchanges factor are calculated. Domain boundaries are ideally \u201cblack\u201d. Radiation is always a two-way process. Hence, if the radiation temperature of the domain boundary is higher than the body temperatures inside there will be a positive net radiation heat flow into the domain and heat will be added. If the radiation temperature is lower than the body temperatures heat will be extracted from the system. The temperature used to calculate the radiation of each domain boundary is set in the Project Manager in o [Model Setup] \u2013 Default Radiant Temperature Ambient Attributes may be used to overwrite the above settings with Radiation Temperature other than the Default Radiant Temperature. You may use different Ambient Attributes for different sides and hence different Radiation Temperatures on different sides of the domain. Domain boundaries which are set to \u201cSymmetry\u201d are adiabatic. To prevent violation of the energy conservation, one side will be opened to radiation transfer (but only for radiation transfer!) automatically. In this case there will be a warning displayed in the Message Window. \u57df\u5185\u7684\u6240\u6709\u8f90\u5c04\u51e0\u4f55\u4f53\u90fd\u5c06\u5411\u201c\u57df\u5916\u65e0\u9650\u57df\u201d\uff08\u57df\u8fb9\u754c\uff09\u8f90\u5c04\u3002 \u56e0\u6b64\u8ba1\u7b97\u4ea4\u6362\u56e0\u5b50\u3002 \u57df\u8fb9\u754c\u7406\u60f3\u5730\u662f\u201c\u9ed1\u8272\u201d\u3002 \u8f90\u5c04\u59cb\u7ec8\u662f\u4e00\u4e2a\u53cc\u5411\u8fc7\u7a0b\u3002\u56e0\u6b64\uff0c\u5982\u679c\u7574\u8fb9\u754c\u7684\u8f90\u5c04\u6e29\u5ea6\u9ad8\u4e8e\u4f53\u5185\u7684\u4f53\u6e29\uff0c\u5219\u5c06\u6709\u6b63\u7684\u51c0\u8f90\u5c04\u70ed\u6d41\u8fdb\u5165\u533a\u57df\u5e76\u4e14\u5c06\u52a0\u70ed\u3002\u5982\u679c\u8f90\u5c04\u6e29\u5ea6\u4f4e\u4e8e\u4f53\u6e29\uff0c\u5219\u5c06\u4ece\u7cfb\u7edf\u4e2d\u63d0\u53d6\u70ed\u91cf\u3002 \u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u57df\u8fb9\u754c\u8f90\u5c04\u7684\u6e29\u5ea6\u5728\u9879\u76ee\u4e2d\u8bbe\u7f6e[Model Setup] \u2013 Default Radiant Temperature \u73af\u5883\u5c5e\u6027\u53ef\u7528\u4e8e\u4f7f\u7528\u9664\u9ed8\u8ba4\u8f90\u5c04\u6e29\u5ea6\u4e4b\u5916\u7684\u8f90\u5c04\u6e29\u5ea6\u8986\u76d6\u4e0a\u8ff0\u8bbe\u7f6e\u3002\u60a8\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u4fa7\u9762\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u5c5e\u6027\uff0c\u4ece\u800c\u5728\u57df\u7684\u4e0d\u540c\u4fa7\u9762\u4e0a\u4f7f\u7528\u4e0d\u540c\u7684\u8f90\u5c04\u6e29\u5ea6\u3002 \u8bbe\u7f6e\u4e3a\u201c\u5bf9\u79f0\u201d\u7684\u57df\u8fb9\u754c\u662f\u7edd\u70ed\u7684\u3002\u4e3a\u4e86\u9632\u6b62\u8fdd\u53cd\u8282\u80fd\u63aa\u65bd\uff0c\u4e00\u65b9\u5c06\u81ea\u52a8\u5f00\u653e\u8f90\u5c04\u4f20\u8f93\uff08\u4f46\u4ec5\u7528\u4e8e\u8f90\u5c04\u4f20\u8f93\uff01\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u7a97\u53e3\u4e2d\u5c06\u663e\u793a\u8b66\u544a\u3002 \u6c42\u89e3 Insufficient Memory < Exchange Factor Calculation performed abnormal exit > The total radiating faces is above the limit. The number of radiating faces is limitating to 120000 radiating faces by default. If the number of radiating surfaces exceeds this value, an exception is thrown and the EFG aborted. To increase the number of radiating faces using Environment variable, you can set System environment variable: EFGFACELIMIT System environment value: Number When the calculation is done, the number of radiating faces can be found on the first line of the following file: BaseSolution\\Exchange\\facelist (Open with Wordpad)","title":"Flotherm\u4e2d\u52a0\u5165\u70ed\u7ba1\u6a21\u578b\u540e\u6536\u655b\u56f0\u96be"},{"location":"Flotherm/Flotherm%E8%BE%90%E5%B0%84/#flotherm","text":"\u70ed\u7ba1\u5177\u6709\u975e\u5e38\u9ad8\u7684\u6709\u6548\u5bfc\u70ed\u7387\u3002\u56e0\u6b64\uff0c\u5f53\u6d89\u53ca\u4f7f\u7528\u6e29\u5ea6\u53d8\u91cf\u6536\u655b\u65f6\uff0c\u53ef\u80fd\u4ea7\u751f\u95ee\u9898\u3002 \u4e3a\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\uff0c\u5efa\u8bae\u7528\u6237\uff1a \u4f7f\u7528\u53cc\u7cbe\u5ea6\u6c42\u89e3\u5668\uff08double precision solver \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u4f7f\u7528\u201c\u5171\u8f6d\u6b8b\u5dee\u201d\u9009\u9879\uff08conjugate residual \u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\uff09 \u5c06\u6e29\u5ea6\u7684\u9519\u8bef\u65f6\u95f4\u6b65\u957f\u589e\u52a0~x20\uff08\u5728\u201c\u6c42\u89e3\u5668\u63a7\u5236\u201d\u9009\u9879\u5361\u4e0b\uff09 \u4f7f\u7528\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP \u5b9a\u4e49\u65b0\u7684\u73af\u5883\u53d8\u91cfFLOMAXITFORTEMP\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7b49\u4e8e\u4efb\u4f55\u503c","title":"Flotherm\u4e2d\u52a0\u5165\u70ed\u7ba1\u6a21\u578b\u540e\u6536\u655b\u56f0\u96be\u3002"},{"location":"Flotherm/Flotherm%E8%BE%90%E5%B0%84/#collapsed-object","text":"Radiation is calculated based on the temperature difference between objects. Therefore for the software to compute these temperature differences it must know the temperatures of the objects partaking in the Radiative exchange. In fixed temperature cuboids (collapsed or uncollapsed) the temperature of the object is explicitly set. Therefore these objects partake in Radiation but can only pass heat to other objects cooler than themselves. They cannot become warmer or cooler because their temperature is fixed by you. Objects set to have a fixed heatflow give out energy to the neighbouring grid cells but do not have a temperature calculated within them. Therefore there is insufficient data for the software to compute its radiation calculation and therefore they will not partake in the radiative exchange. Collapsed objects can only take part in the radiation calculation if they are set to be fixed temperature. If set to be conducting they cannot take part in the radiation calculation because they don't have grid-cells within them to store the temperature data. Note: These objects will all act as obstructions to radiation, inhibitting the view factor between other radiating objects.","title":"Collapsed object"},{"location":"Flotherm/Flotherm%E8%BE%90%E5%B0%84/#open-domain","text":"\u8fd0\u884c\u8f90\u5c04\u6a21\u578b\u65f6\uff0c\u5f00\u653e\u8fb9\u754c\u5982\u4f55\u5f71\u54cd\u8f90\u5c04\u4f20\u8f93\uff1f\u662f\u5426\u8ba1\u7b97\u51fa\u4ea4\u6362\u56e0\u5b50\uff1f\u4ec0\u4e48\u662f\u8f90\u5c04\u6e29\u5ea6\uff1f All radiating geometry inside the domain will radiate towards \u201cinfinity outside the domain\u201d, the domain boundaries. Therefore exchanges factor are calculated. Domain boundaries are ideally \u201cblack\u201d. Radiation is always a two-way process. Hence, if the radiation temperature of the domain boundary is higher than the body temperatures inside there will be a positive net radiation heat flow into the domain and heat will be added. If the radiation temperature is lower than the body temperatures heat will be extracted from the system. The temperature used to calculate the radiation of each domain boundary is set in the Project Manager in o [Model Setup] \u2013 Default Radiant Temperature Ambient Attributes may be used to overwrite the above settings with Radiation Temperature other than the Default Radiant Temperature. You may use different Ambient Attributes for different sides and hence different Radiation Temperatures on different sides of the domain. Domain boundaries which are set to \u201cSymmetry\u201d are adiabatic. To prevent violation of the energy conservation, one side will be opened to radiation transfer (but only for radiation transfer!) automatically. In this case there will be a warning displayed in the Message Window. \u57df\u5185\u7684\u6240\u6709\u8f90\u5c04\u51e0\u4f55\u4f53\u90fd\u5c06\u5411\u201c\u57df\u5916\u65e0\u9650\u57df\u201d\uff08\u57df\u8fb9\u754c\uff09\u8f90\u5c04\u3002 \u56e0\u6b64\u8ba1\u7b97\u4ea4\u6362\u56e0\u5b50\u3002 \u57df\u8fb9\u754c\u7406\u60f3\u5730\u662f\u201c\u9ed1\u8272\u201d\u3002 \u8f90\u5c04\u59cb\u7ec8\u662f\u4e00\u4e2a\u53cc\u5411\u8fc7\u7a0b\u3002\u56e0\u6b64\uff0c\u5982\u679c\u7574\u8fb9\u754c\u7684\u8f90\u5c04\u6e29\u5ea6\u9ad8\u4e8e\u4f53\u5185\u7684\u4f53\u6e29\uff0c\u5219\u5c06\u6709\u6b63\u7684\u51c0\u8f90\u5c04\u70ed\u6d41\u8fdb\u5165\u533a\u57df\u5e76\u4e14\u5c06\u52a0\u70ed\u3002\u5982\u679c\u8f90\u5c04\u6e29\u5ea6\u4f4e\u4e8e\u4f53\u6e29\uff0c\u5219\u5c06\u4ece\u7cfb\u7edf\u4e2d\u63d0\u53d6\u70ed\u91cf\u3002 \u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u57df\u8fb9\u754c\u8f90\u5c04\u7684\u6e29\u5ea6\u5728\u9879\u76ee\u4e2d\u8bbe\u7f6e[Model Setup] \u2013 Default Radiant Temperature \u73af\u5883\u5c5e\u6027\u53ef\u7528\u4e8e\u4f7f\u7528\u9664\u9ed8\u8ba4\u8f90\u5c04\u6e29\u5ea6\u4e4b\u5916\u7684\u8f90\u5c04\u6e29\u5ea6\u8986\u76d6\u4e0a\u8ff0\u8bbe\u7f6e\u3002\u60a8\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u4fa7\u9762\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u5c5e\u6027\uff0c\u4ece\u800c\u5728\u57df\u7684\u4e0d\u540c\u4fa7\u9762\u4e0a\u4f7f\u7528\u4e0d\u540c\u7684\u8f90\u5c04\u6e29\u5ea6\u3002 \u8bbe\u7f6e\u4e3a\u201c\u5bf9\u79f0\u201d\u7684\u57df\u8fb9\u754c\u662f\u7edd\u70ed\u7684\u3002\u4e3a\u4e86\u9632\u6b62\u8fdd\u53cd\u8282\u80fd\u63aa\u65bd\uff0c\u4e00\u65b9\u5c06\u81ea\u52a8\u5f00\u653e\u8f90\u5c04\u4f20\u8f93\uff08\u4f46\u4ec5\u7528\u4e8e\u8f90\u5c04\u4f20\u8f93\uff01\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u7a97\u53e3\u4e2d\u5c06\u663e\u793a\u8b66\u544a\u3002","title":"Open Domain"},{"location":"Flotherm/Flotherm%E8%BE%90%E5%B0%84/#_1","text":"Insufficient Memory < Exchange Factor Calculation performed abnormal exit > The total radiating faces is above the limit. The number of radiating faces is limitating to 120000 radiating faces by default. If the number of radiating surfaces exceeds this value, an exception is thrown and the EFG aborted. To increase the number of radiating faces using Environment variable, you can set System environment variable: EFGFACELIMIT System environment value: Number When the calculation is done, the number of radiating faces can be found on the first line of the following file: BaseSolution\\Exchange\\facelist (Open with Wordpad)","title":"\u6c42\u89e3"},{"location":"Flotherm/TIM%E5%BB%BA%E6%A8%A1/","text":"\u4ec0\u4e48\u662f\u63a5\u89e6\u70ed\u963b\uff1f \u5f53\u4e24\u4e2a\u4e0d\u540c\u6e29\u5ea6\u7684\u6750\u6599\u63a5\u89e6\u65f6\uff0c\u4e24\u4e2a\u6750\u6599\u7684\u8868\u9762\u4f3c\u4e4e\u5b8c\u5168\u76f4\u63a5\u63a5\u89e6\u5728\u4e00\u8d77\uff0c\u4f46\u5f53\u6211\u4eec\u653e\u5927\u63a5\u89e6\u90e8\u5206\u7684\u754c\u9762\u65f6\uff0c\u4f1a\u53d1\u73b0\u8bb8\u591a\u6750\u6599\u5728\u5fae\u7c73\u6216\u7eb3\u7c73\u5c3a\u5ea6\u5177\u6709\u660e\u663e\u7684\u51f9\u51f8\u4e0d\u5e73\uff0c\u4e24\u4e2a\u754c\u9762\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u662f\u5b8c\u5168\u63a5\u89e6\u7684\uff0c\u5982\u56fe (a)\u3002 \u6240\u4ee5\uff0c\u8868\u9762\u7c97\u7cd9\u5ea6\u5728\u63a5\u89e6\u7684\u6750\u6599\u4e4b\u95f4\u5f15\u5165\u4e86\u7a7a\u9699\uff0c\u901a\u5e38\u5176\u4e2d\u4f1a\u5145\u6ee1\u7a7a\u6c14\u3002\u6c14\u4f53\u7684\u70ed\u5bfc\u7387\uff0c\u901a\u5e38\u8fdc\u4f4e\u4e8e\u5e38\u89c1\u56fa\u4f53\u6750\u6599\u7684\u70ed\u5bfc\u7387\u3002\u56e0\u6b64\uff0c\u5728\u6ca1\u6709\u63a5\u89e6\u5230\u7684\u533a\u57df\u4e2d\u70ed\u6d41\u7387\u8f83\u5c0f\uff0c\u5bfc\u81f4\u754c\u9762\u4e0a\u7684\u70ed\u963b\u589e\u52a0\u3002 Grujicic \u7b49\u4eba 1 \u7814\u7a76\u4e86\u4e0b\u9762\u53c2\u6570\u5bf9\u754c\u9762\u63a5\u89e6\u70ed\u963b\u7684\u5f71\u54cd\uff1a \u63a5\u89e6\u538b\u529b \u5fae\u786c\u5ea6 \u8868\u9762\u7c97\u7cd9\u5ea6 \u8868\u9762\u7c97\u7cd9\u5ea6\u5761\u5ea6 \u5982\u679c\u589e\u52a0\u6c14\u9699\u5904\u7684\u7ed3\u6784\u5e94\u529b\uff0c\u5c06\u51cf\u5c0f\u6c14\u9699\u7684\u5c3a\u5bf8\u548c\u5bbd\u5ea6\uff0c\u4ece\u800c\u5f71\u54cd\u5230\u70ed\u963b\u7387\u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5728\u6c14\u9699\u4e2d\u8fd8\u5b58\u5728\u8868\u9762\u5bf9\u8868\u9762\u7684\u8f90\u5c04\uff0c\u53ea\u662f\u5728\u5f88\u591a\u5e94\u7528\u4e2d\u7531\u4e8e\u6750\u6599\u95f4\u7684\u6e29\u5dee\u8db3\u591f\u5c0f\u3002 \u53e6\u5916\uff0c\u4e0a\u6d77\u4f9d\u9633\u5b9e\u4e1a\u6709\u9650\u516c\u53f8\u6d4b\u8bd5\u3001\u7814\u7a76\u4e86\u4e24\u5757\u63a5\u89e6\u6750\u6599\u7684\u70ed\u5bfc\u7387\u968f\u771f\u7a7a\u5ea6\u7684\u63d0\u9ad8\u800c\u4e0b\u964d\u7684\u73b0\u8c61 2 \u3002 \u6240\u4ee5\uff0c\u4e3a\u4e86\u51cf\u5c0f\u754c\u9762\u70ed\u963b\u5e26\u6765\u7684\u5f71\u54cd\uff0c\u901a\u5e38\u4eba\u4eec\u4f1a\u5728\u63a5\u89e6\u754c\u9762\u5904\u586b\u5145\u6bd4\u8f83\u67d4\u8f6f\u7684\u5bfc\u70ed\u6750\u6599\uff0c\u79f0\u4e3a\u754c\u9762\u6750\u6599\uff08TIM\uff09\uff0c\u5982\u56fe (b)\u3002\u6839\u636e\u5e94\u7528\u573a\u666f\u7684\u4e0d\u540c\uff0c\u6709\u5404\u79cd\u6027\u80fd\u7684TIM\u6750\u6599\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u9700\u6c42\u3002\u4ee5\u524d\uff0cTIM\u6750\u6599\u53ea\u6709\u56fd\u5916\u5382\u5bb6\u80fd\u63d0\u4f9b\uff0c\u73b0\u5728\u4ed6\u4eec\u7684\u5e02\u573a\u4efd\u989d\u88ab\u8d8a\u6765\u8d8a\u591a\u7684\u56fd\u5185\u516c\u53f8\u6240\u66ff\u4ee3\u3002\u8fd9\u4e2a\u5c0f\u5c0f\u7684\u754c\u9762\u5c42\u57f9\u517b\u4e86\u4e0d\u5c11\u4e0a\u5e02\u516c\u53f8\uff0c\u517b\u6d3b\u4e86\u591a\u5c11\u8001\u677f\u548c\u5458\u5de5\u3002 Foltherm\u4e2d\u6a21\u62dfTIM\u5c42\u6216\u754c\u9762\u70ed\u963b\u7684\u65b9\u6cd5 \u5728\u5bf9\u754c\u9762\u70ed\u963b\u6216TIM\u5c42\u5efa\u6a21\u65f6\u7684FloTHERM\u4e2d\uff0c\u7528\u6237\u53ef\u4ee5\u91c7\u7528\u591a\u79cd\u65b9\u6cd5\u3002 \u5728\u63a5\u89e6\u7684\u4e24\u4e2a\u8868\u9762\u4e4b\u95f4\u521b\u5efa\u4e00\u4e2a\u957f\u65b9\u4f53(Cuboid). \u5b9a\u4e493\u4e2a\u65b9\u5411\u7684\u5c3a\u5bf8, \u5e76\u6307\u5b9a\u5408\u9002\u7684\u6750\u6599\u5c5e\u6027\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u7f3a\u70b9\u662f\uff0c\u901a\u5e38\u7531\u4e8eTIM\u5c42\u5f88\u8584\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4TIM\u957f\u65b9\u4f53\u5782\u76f4\u65b9\u5411\u7684\u7f51\u683c\u5fc5\u987b\u6bd4\u8f83\u7ec6\uff0c\u624d\u80fd\u6a21\u62df\u5bfc\u70ed\u8fc7\u7a0b\u3002 \u5728\u63a5\u89e6\u7684\u4e24\u4e2a\u8868\u9762\u4e4b\u95f4\u521b\u5efa\u539a\u5ea6\u4e3a \\(t\\) \u7684\u6298\u53e0\u957f\u65b9\u4f53(collapsed cuboid)\uff0c\u5e76\u4e3a\u6b64\u6298\u53e0\u957f\u65b9\u4f53\u5b9a\u4e49\u5408\u9002\u7684\u5bfc\u70ed\u7387 \\(k\\) \u3002FloTHERM\u8ba1\u7b97\u8be5\u6298\u53e0\u957f\u65b9\u4f53\u7684\u5782\u76f4\u65b9\u5411\u70ed\u963b\u3002 $$ R_{\\mathrm{throughPlane}} = t / k $$ \u53ea\u8003\u8651\u5782\u76f4\u65b9\u4e8e\u63a5\u89e6\u8868\u9762\u7684\u70ed\u4f20\u9012\uff0c\u800c\u5ffd\u7565TIM\u5c42\u6c34\u5e73\u65b9\u5411\u4e0a\u70ed\u4f20\u9012\u3002\u6240\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u592a\u9002\u5408\u4e8e\u6bd4\u8f83\u539a\u7684TIM\u5c42\uff0c\u6216\u5404\u5411\u5f02\u6027\u7684TIM\u6750\u6599\uff0c\u5982\u77f3\u58a8\u70ef\u57ab\u7247\u3002 \u53e6\u5916\u9700\u6ce8\u610f\uff0c\u5728\u7ed3\u6784\u6811\u4e2d\u8981\u5c06\u6a21\u62dfTIM\u5c42\u7684\u6298\u53e0\u957f\u65b9\u4f53\u653e\u5230\u4e24\u4e2a\u5bf9\u8c61\u7684\u540e\u9762\uff0c\u4ee5\u4fdd\u8bc1\u5b83\u4e0d\u4f1a\u88ab\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u8986\u76d6\u3002 \u901a\u8fc7\u6307\u5b9a\u4e00\u4e2a\u63a5\u89e6\u9762\u7684\u8868\u9762\u5c5e\u6027\u6765\u5b9a\u4e49\u63a5\u89e6\u70ed\u963b\u3002\u5728\u6750\u6599\u7684\u8868\u9762\u5c5e\u6027\u4e2d\u6709\u4e00\u9879Rsurf-solid\u53ef\u4ee5\u5b9a\u4e49\u8868\u9762\u70ed\u963b, \u5355\u4f4d\u4e3a(Km ^ 2 / W)\u3002 The effect of thermal contact resistance on heat management in the electronic packaging. \u21a9 \u91c7\u7528\u77ac\u6001\u5e73\u9762\u70ed\u6e90\u6cd5\u6d4b\u91cfNIST\u6807\u51c6\u53c2\u8003\u6750\u6599SRM 1453\u70ed\u5bfc\u7387\u968f\u771f\u7a7a\u5ea6\u7684\u53d8\u5316 \u21a9","title":"TIM\u5efa\u6a21"},{"location":"Flotherm/TIM%E5%BB%BA%E6%A8%A1/#_1","text":"\u5f53\u4e24\u4e2a\u4e0d\u540c\u6e29\u5ea6\u7684\u6750\u6599\u63a5\u89e6\u65f6\uff0c\u4e24\u4e2a\u6750\u6599\u7684\u8868\u9762\u4f3c\u4e4e\u5b8c\u5168\u76f4\u63a5\u63a5\u89e6\u5728\u4e00\u8d77\uff0c\u4f46\u5f53\u6211\u4eec\u653e\u5927\u63a5\u89e6\u90e8\u5206\u7684\u754c\u9762\u65f6\uff0c\u4f1a\u53d1\u73b0\u8bb8\u591a\u6750\u6599\u5728\u5fae\u7c73\u6216\u7eb3\u7c73\u5c3a\u5ea6\u5177\u6709\u660e\u663e\u7684\u51f9\u51f8\u4e0d\u5e73\uff0c\u4e24\u4e2a\u754c\u9762\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u662f\u5b8c\u5168\u63a5\u89e6\u7684\uff0c\u5982\u56fe (a)\u3002 \u6240\u4ee5\uff0c\u8868\u9762\u7c97\u7cd9\u5ea6\u5728\u63a5\u89e6\u7684\u6750\u6599\u4e4b\u95f4\u5f15\u5165\u4e86\u7a7a\u9699\uff0c\u901a\u5e38\u5176\u4e2d\u4f1a\u5145\u6ee1\u7a7a\u6c14\u3002\u6c14\u4f53\u7684\u70ed\u5bfc\u7387\uff0c\u901a\u5e38\u8fdc\u4f4e\u4e8e\u5e38\u89c1\u56fa\u4f53\u6750\u6599\u7684\u70ed\u5bfc\u7387\u3002\u56e0\u6b64\uff0c\u5728\u6ca1\u6709\u63a5\u89e6\u5230\u7684\u533a\u57df\u4e2d\u70ed\u6d41\u7387\u8f83\u5c0f\uff0c\u5bfc\u81f4\u754c\u9762\u4e0a\u7684\u70ed\u963b\u589e\u52a0\u3002 Grujicic \u7b49\u4eba 1 \u7814\u7a76\u4e86\u4e0b\u9762\u53c2\u6570\u5bf9\u754c\u9762\u63a5\u89e6\u70ed\u963b\u7684\u5f71\u54cd\uff1a \u63a5\u89e6\u538b\u529b \u5fae\u786c\u5ea6 \u8868\u9762\u7c97\u7cd9\u5ea6 \u8868\u9762\u7c97\u7cd9\u5ea6\u5761\u5ea6 \u5982\u679c\u589e\u52a0\u6c14\u9699\u5904\u7684\u7ed3\u6784\u5e94\u529b\uff0c\u5c06\u51cf\u5c0f\u6c14\u9699\u7684\u5c3a\u5bf8\u548c\u5bbd\u5ea6\uff0c\u4ece\u800c\u5f71\u54cd\u5230\u70ed\u963b\u7387\u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5728\u6c14\u9699\u4e2d\u8fd8\u5b58\u5728\u8868\u9762\u5bf9\u8868\u9762\u7684\u8f90\u5c04\uff0c\u53ea\u662f\u5728\u5f88\u591a\u5e94\u7528\u4e2d\u7531\u4e8e\u6750\u6599\u95f4\u7684\u6e29\u5dee\u8db3\u591f\u5c0f\u3002 \u53e6\u5916\uff0c\u4e0a\u6d77\u4f9d\u9633\u5b9e\u4e1a\u6709\u9650\u516c\u53f8\u6d4b\u8bd5\u3001\u7814\u7a76\u4e86\u4e24\u5757\u63a5\u89e6\u6750\u6599\u7684\u70ed\u5bfc\u7387\u968f\u771f\u7a7a\u5ea6\u7684\u63d0\u9ad8\u800c\u4e0b\u964d\u7684\u73b0\u8c61 2 \u3002 \u6240\u4ee5\uff0c\u4e3a\u4e86\u51cf\u5c0f\u754c\u9762\u70ed\u963b\u5e26\u6765\u7684\u5f71\u54cd\uff0c\u901a\u5e38\u4eba\u4eec\u4f1a\u5728\u63a5\u89e6\u754c\u9762\u5904\u586b\u5145\u6bd4\u8f83\u67d4\u8f6f\u7684\u5bfc\u70ed\u6750\u6599\uff0c\u79f0\u4e3a\u754c\u9762\u6750\u6599\uff08TIM\uff09\uff0c\u5982\u56fe (b)\u3002\u6839\u636e\u5e94\u7528\u573a\u666f\u7684\u4e0d\u540c\uff0c\u6709\u5404\u79cd\u6027\u80fd\u7684TIM\u6750\u6599\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u9700\u6c42\u3002\u4ee5\u524d\uff0cTIM\u6750\u6599\u53ea\u6709\u56fd\u5916\u5382\u5bb6\u80fd\u63d0\u4f9b\uff0c\u73b0\u5728\u4ed6\u4eec\u7684\u5e02\u573a\u4efd\u989d\u88ab\u8d8a\u6765\u8d8a\u591a\u7684\u56fd\u5185\u516c\u53f8\u6240\u66ff\u4ee3\u3002\u8fd9\u4e2a\u5c0f\u5c0f\u7684\u754c\u9762\u5c42\u57f9\u517b\u4e86\u4e0d\u5c11\u4e0a\u5e02\u516c\u53f8\uff0c\u517b\u6d3b\u4e86\u591a\u5c11\u8001\u677f\u548c\u5458\u5de5\u3002","title":"\u4ec0\u4e48\u662f\u63a5\u89e6\u70ed\u963b\uff1f"},{"location":"Flotherm/TIM%E5%BB%BA%E6%A8%A1/#folthermtim","text":"\u5728\u5bf9\u754c\u9762\u70ed\u963b\u6216TIM\u5c42\u5efa\u6a21\u65f6\u7684FloTHERM\u4e2d\uff0c\u7528\u6237\u53ef\u4ee5\u91c7\u7528\u591a\u79cd\u65b9\u6cd5\u3002 \u5728\u63a5\u89e6\u7684\u4e24\u4e2a\u8868\u9762\u4e4b\u95f4\u521b\u5efa\u4e00\u4e2a\u957f\u65b9\u4f53(Cuboid). \u5b9a\u4e493\u4e2a\u65b9\u5411\u7684\u5c3a\u5bf8, \u5e76\u6307\u5b9a\u5408\u9002\u7684\u6750\u6599\u5c5e\u6027\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u7f3a\u70b9\u662f\uff0c\u901a\u5e38\u7531\u4e8eTIM\u5c42\u5f88\u8584\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4TIM\u957f\u65b9\u4f53\u5782\u76f4\u65b9\u5411\u7684\u7f51\u683c\u5fc5\u987b\u6bd4\u8f83\u7ec6\uff0c\u624d\u80fd\u6a21\u62df\u5bfc\u70ed\u8fc7\u7a0b\u3002 \u5728\u63a5\u89e6\u7684\u4e24\u4e2a\u8868\u9762\u4e4b\u95f4\u521b\u5efa\u539a\u5ea6\u4e3a \\(t\\) \u7684\u6298\u53e0\u957f\u65b9\u4f53(collapsed cuboid)\uff0c\u5e76\u4e3a\u6b64\u6298\u53e0\u957f\u65b9\u4f53\u5b9a\u4e49\u5408\u9002\u7684\u5bfc\u70ed\u7387 \\(k\\) \u3002FloTHERM\u8ba1\u7b97\u8be5\u6298\u53e0\u957f\u65b9\u4f53\u7684\u5782\u76f4\u65b9\u5411\u70ed\u963b\u3002 $$ R_{\\mathrm{throughPlane}} = t / k $$ \u53ea\u8003\u8651\u5782\u76f4\u65b9\u4e8e\u63a5\u89e6\u8868\u9762\u7684\u70ed\u4f20\u9012\uff0c\u800c\u5ffd\u7565TIM\u5c42\u6c34\u5e73\u65b9\u5411\u4e0a\u70ed\u4f20\u9012\u3002\u6240\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u592a\u9002\u5408\u4e8e\u6bd4\u8f83\u539a\u7684TIM\u5c42\uff0c\u6216\u5404\u5411\u5f02\u6027\u7684TIM\u6750\u6599\uff0c\u5982\u77f3\u58a8\u70ef\u57ab\u7247\u3002 \u53e6\u5916\u9700\u6ce8\u610f\uff0c\u5728\u7ed3\u6784\u6811\u4e2d\u8981\u5c06\u6a21\u62dfTIM\u5c42\u7684\u6298\u53e0\u957f\u65b9\u4f53\u653e\u5230\u4e24\u4e2a\u5bf9\u8c61\u7684\u540e\u9762\uff0c\u4ee5\u4fdd\u8bc1\u5b83\u4e0d\u4f1a\u88ab\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u8986\u76d6\u3002 \u901a\u8fc7\u6307\u5b9a\u4e00\u4e2a\u63a5\u89e6\u9762\u7684\u8868\u9762\u5c5e\u6027\u6765\u5b9a\u4e49\u63a5\u89e6\u70ed\u963b\u3002\u5728\u6750\u6599\u7684\u8868\u9762\u5c5e\u6027\u4e2d\u6709\u4e00\u9879Rsurf-solid\u53ef\u4ee5\u5b9a\u4e49\u8868\u9762\u70ed\u963b, \u5355\u4f4d\u4e3a(Km ^ 2 / W)\u3002 The effect of thermal contact resistance on heat management in the electronic packaging. \u21a9 \u91c7\u7528\u77ac\u6001\u5e73\u9762\u70ed\u6e90\u6cd5\u6d4b\u91cfNIST\u6807\u51c6\u53c2\u8003\u6750\u6599SRM 1453\u70ed\u5bfc\u7387\u968f\u771f\u7a7a\u5ea6\u7684\u53d8\u5316 \u21a9","title":"Foltherm\u4e2d\u6a21\u62dfTIM\u5c42\u6216\u754c\u9762\u70ed\u963b\u7684\u65b9\u6cd5"},{"location":"Flotherm/solar/","text":"FloTHERM\u4e2d\u6a21\u62df\u592a\u9633\u8f90\u5c04 Floterhm\u6a21\u62df\u592a\u9633\u8f90\u5c04\u9700\u8981\u8bbe\u7f6e\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u9762\u7684\u5185\u5bb9\uff1a \u6a21\u578b\u8bbe\u7f6e\u4e2d\u6253\u5f00\u592a\u9633\u8f90\u5c04\u9009\u9879 \u8bbe\u7f6e\u592a\u9633\u8f90\u5c04\u5f3a\u5ea6\u548c\u89d2\u5ea6 \u8bbe\u7f6e\u8868\u9762\u6750\u6599\u5c5e\u6027 \u6a21\u578b\u8bbe\u7f6e \u6253\u5f00Model Setup \u7a97\u53e3\uff0c\u6fc0\u6d3bSolar Radiation\uff0c\u5982\u679c\u8bbe\u5907\u5bf9\u5916\u70ed\u8f90\u5c04\u5360\u6bd4\u8f83\u5927\uff0c\u540c\u65f6\u6253\u5f00Radiation\u3002 \u5355\u51fb\u201cClick To Edit\u201d\u6253\u5f00\u592a\u9633\u80fd\u914d\u7f6e\u7a97\u53e3\u3002 \u592a\u9633\u80fd\u914d\u7f6e \u65b9\u5411\u5b9a\u4e49 'Model Orientation From North'\u7528\u6765\u5b9a\u4e49\u201c\u5317\u65b9\u201d\u5728\u9879\u76ee\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002 \u5982\u4e0b\u56fe\uff0c\u5982\u679c\u9879\u76ee\u7684\u91cd\u529b\u8bbe\u7f6e\u4e3a-Y\u65b9\u5411\uff0c\u5219X\u8f74\u6216Z\u8f74\u5c06\u7528\u4e8e\u5b9a\u4e49\u6a21\u578b\u7684\u5317\u65b9\u3002\u4f8b\u5982\uff0c\u5982\u679cNorth\u4e0eZ\u8f74\u5bf9\u9f50\uff0c\u5219\u5c06'Angle Measured From' \u8bbe\u7f6e\u4e3a 'Z Axis'\uff0c\u89d2\u5ea6\u8bbe\u4e3a0\u5ea6\u3002\u5982\u679cNorth\u4e0d\u6cbf\u8f74\u653e\u7f6e\uff0c\u8bf7\u4f7f\u7528\u89d2\u5ea6\u4eceX\u8f74\u6216Z\u8f74\u5b9a\u4e49\u6b64\u4f4d\u7f6e\u3002 \u592a\u9633\u4f4d\u7f6e\u5b9a\u4e49 Flotherm\u4f7f\u7528\u7eac\u5ea6\uff0c\u65e5\u671f\u548c\u5e73\u592a\u9633\u65f6\u95f4\u6765\u5b9a\u4e49\u592a\u9633\u4f4d\u7f6e\u3002\u5982\u4e0b\u56fe\uff0c\u5317\u4eac\u7684\u7ef4\u5ea6\u4e3a39.92\u00b0\uff0c\u65e5\u671f\u5c06\u8bbe\u5b9a\u4e3a2019\u5e743\u67086\u65e5\uff0c\u592a\u9633\u65f6\u4e3a12:00:00\u3002 \u5e73\u592a\u9633\u65f6\u95f4\u53ef\u80fd\u4e0e\u5f53\u5730\u65f6\u95f4\u4e0d\u540c\u3002\u9700\u8981\u5c06\u672c\u5730\u65f6\u95f4\u8f6c\u6362\u4e3a\u5e73\u5747\u592a\u9633\u65f6\u8fdb\u884c\u51c6\u786e\u5206\u6790\u3002 \u6ce8\uff1a\u4e0d\u592a\u786e\u5b9aFlotherm\u4f7f\u7528\u7684\u662f\u5e73\u592a\u9633\u65f6\u8fd8\u662f\u771f\u592a\u9633\u65f6\uff0c\u867d\u7136\u4e24\u8005\u76f8\u5dee\u4e0d\u662f\u5f88\u5927\uff0c\u6709\u5f85\u9a8c\u8bc1\u3002 \u8fd9\u4e9b\u8bbe\u7f6e\u7528\u4e8e\u8ba1\u7b97\u65b9\u4f4d\u89d2\u548c\u592a\u9633\u9ad8\u5ea6\u89d2\u3002 \u7ed3\u5408Command Center\u6c42\u89e3\u5728\u4e0d\u540c\u65f6\u95f4\u592a\u9633\u8f90\u5c04\uff0c\u4f8b\u5982\u5168\u5929\u7684\u4eff\u771f\u60c5\u51b5\u3002 \u592a\u9633\u5f3a\u5ea6 \u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u592a\u9633\u5f3a\u5ea6\uff0cSolar Intensity\u9009\u9879\u4e2d\u8f93\u5165\uff0c\u4f46\u662f\u592a\u9633\u7684\u65b9\u4f4d\u89d2\u548c\u9ad8\u5ea6\u89d2\u8fd8\u662f\u7531\u8f6f\u4ef6\u6839\u636e\u7eac\u5ea6\u548c\u65f6\u95f4\u8ba1\u7b97\u5f97\u5230\u7684\u3002 \u53e6\u5916\uff0c'Solar Calculation Type' \u53ef\u4ee5\u8bbe\u7f6e\u4e3acloudiness\u3002\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u5b83\u5c06\u8ba1\u7b97\u51fa\u7684\u592a\u9633\u5f3a\u5ea6\u6253\u4e2a\u6298\u3002\u503c\u57280~1\u4e4b\u95f4\u3002 \u5982\u4e0b\u6240\u793a\uff0c\u8ba1\u7b97\u51faCloudiness\u4e3a0\u65f6\uff0c\u592a\u9633\u80fd\u5f3a\u5ea6\u7ea6\u4e3a \\(100 W/m^2\\) \u3002 \u5982\u679cCloudiness\u8bbe\u5b9a\u4e3a0.3\uff0c\u5219\u8ba1\u7b97\u51fa\u7684\u592a\u9633\u80fd\u5f3a\u5ea6\u964d\u4f4e30\uff05\uff0c\u964d\u81f3\u7ea6 \\(70 W/m^2\\) \u3002 \u592a\u9633\u80fd\u77e2\u91cf\u5728\u7f16\u8f91\u7a97\u53e3\u7684\u53f3\u4e0a\u89d2\u663e\u793a\u4e3a\u9ec4\u8272\u3002 \u8868\u9762\u6750\u6599\u5c5e\u6027 \u5728\u89e3\u51b3\u4e4b\u524d\uff0c\u9700\u8981\u5728\u6a21\u578b\u4e2d\u5e94\u7528\u51e0\u4e2a\u5c5e\u6027\u3002 \u6750\u6599\u5c5e\u6027 \u8868\u9762\u5c5e\u6027 radiation\u5c5e\u6027 \u786e\u4fdd\u7ec4\u4ef6\u5177\u6709\u76f8\u5173\u7684\u6750\u6599\u5c5e\u6027\uff0c\u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u4f20\u5bfc\u70ed\u91cf\u3002\u6b64\u5916\uff0c\u5e94\u7528\u8868\u9762\u5c5e\u6027\u6765\u5b9a\u4e49\u592a\u9633\u80fd\u53cd\u5c04\u7387\u548c\u53d1\u5c04\u7387\u3002 \u592a\u9633\u80fd\u53cd\u5c04\u7387\u4ec5\u9002\u7528\u4e8e\u592a\u9633\u8f90\u5c04\u6253\u5f00\u65f6\u3002\u8fd9\u51b3\u5b9a\u4e86\u592a\u9633\u80fd\u8d1f\u8f7d\u5e94\u7528\u4e8e\u7cfb\u7edf\u7684\u7a0b\u5ea6\u3002\u5982\u679c\u7269\u4f53\u7684\u592a\u9633\u53cd\u5c04\u7387\u4e3a0.5\uff0c\u5219\u4ec5\u5e94\u7528\u8be5\u7269\u4f53\u768450\uff05\u592a\u9633\u80fd\u8d1f\u8377\u3002\u4ece\u7cfb\u7edf\u4e2d\u79fb\u9664\u53cd\u5c04\u7684\u592a\u9633\u8f90\u5c04\u3002\u592a\u9633\u8f90\u5c04\u5c31\u50cf\u5c06\u6298\u53e0\u7684\u6e90SmartPart\u5e94\u7528\u4e8e\u6a21\u578b\u4e2d\u7684\u96f6\u4ef6\u3002 \u8bbe\u5b9a\u53d1\u5c04\u7387\u662f\u4e3a\u4e86\u5b9a\u671f\u8f90\u5c04\uff0c\u5728\u5efa\u6a21\u592a\u9633\u8f90\u5c04\u65f6\u5e94\u518d\u6b21\u5f00\u542f\u8f90\u5c04\u3002\u53d1\u5c04\u7387\u5305\u62ec\u8868\u9762\u5149\u6d01\u5ea6\u548c\u96f6\u4ef6\u7684\u7c97\u7cd9\u5ea6\u3002\u8be5\u503c\u5c06\u51b3\u5b9a\u5bf9\u8c61\u8f90\u5c04\u7684\u7a0b\u5ea6; \u53d1\u5c04\u7387\u8d8a\u4f4e\uff0c\u8f90\u5c04\u4f20\u70ed\u8d8a\u5c11\u3002 \u6ce8\u610f\uff1a\u201c\u989c\u8272\u201d\uff0c\u201c\u5149\u6cfd\u5ea6\u201d\u548c\u201c\u4eae\u5ea6\u201d\u662f\u4ec5\u66f4\u6539\u6a21\u578b\u7684\u53ef\u89c6\u5316\u8868\u793a\u7684\u8bbe\u7f6e\u3002 \u6700\u540e\uff0c\u9700\u8981\u5c06\u8f90\u5c04\u5c5e\u6027\u5e94\u7528\u4e8e\u5bf9\u8c61\u8868\u9762\uff0c\u4ee5\u5305\u62ec\u5728\u70ed\u8f90\u5c04\u8ba1\u7b97\u4e2d\u3002","title":"FloTHERM\u4e2d\u6a21\u62df\u592a\u9633\u8f90\u5c04"},{"location":"Flotherm/solar/#flotherm","text":"Floterhm\u6a21\u62df\u592a\u9633\u8f90\u5c04\u9700\u8981\u8bbe\u7f6e\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u9762\u7684\u5185\u5bb9\uff1a \u6a21\u578b\u8bbe\u7f6e\u4e2d\u6253\u5f00\u592a\u9633\u8f90\u5c04\u9009\u9879 \u8bbe\u7f6e\u592a\u9633\u8f90\u5c04\u5f3a\u5ea6\u548c\u89d2\u5ea6 \u8bbe\u7f6e\u8868\u9762\u6750\u6599\u5c5e\u6027","title":"FloTHERM\u4e2d\u6a21\u62df\u592a\u9633\u8f90\u5c04"},{"location":"Flotherm/solar/#_1","text":"\u6253\u5f00Model Setup \u7a97\u53e3\uff0c\u6fc0\u6d3bSolar Radiation\uff0c\u5982\u679c\u8bbe\u5907\u5bf9\u5916\u70ed\u8f90\u5c04\u5360\u6bd4\u8f83\u5927\uff0c\u540c\u65f6\u6253\u5f00Radiation\u3002 \u5355\u51fb\u201cClick To Edit\u201d\u6253\u5f00\u592a\u9633\u80fd\u914d\u7f6e\u7a97\u53e3\u3002","title":"\u6a21\u578b\u8bbe\u7f6e"},{"location":"Flotherm/solar/#_2","text":"","title":"\u592a\u9633\u80fd\u914d\u7f6e"},{"location":"Flotherm/solar/#_3","text":"'Model Orientation From North'\u7528\u6765\u5b9a\u4e49\u201c\u5317\u65b9\u201d\u5728\u9879\u76ee\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002 \u5982\u4e0b\u56fe\uff0c\u5982\u679c\u9879\u76ee\u7684\u91cd\u529b\u8bbe\u7f6e\u4e3a-Y\u65b9\u5411\uff0c\u5219X\u8f74\u6216Z\u8f74\u5c06\u7528\u4e8e\u5b9a\u4e49\u6a21\u578b\u7684\u5317\u65b9\u3002\u4f8b\u5982\uff0c\u5982\u679cNorth\u4e0eZ\u8f74\u5bf9\u9f50\uff0c\u5219\u5c06'Angle Measured From' \u8bbe\u7f6e\u4e3a 'Z Axis'\uff0c\u89d2\u5ea6\u8bbe\u4e3a0\u5ea6\u3002\u5982\u679cNorth\u4e0d\u6cbf\u8f74\u653e\u7f6e\uff0c\u8bf7\u4f7f\u7528\u89d2\u5ea6\u4eceX\u8f74\u6216Z\u8f74\u5b9a\u4e49\u6b64\u4f4d\u7f6e\u3002","title":"\u65b9\u5411\u5b9a\u4e49"},{"location":"Flotherm/solar/#_4","text":"Flotherm\u4f7f\u7528\u7eac\u5ea6\uff0c\u65e5\u671f\u548c\u5e73\u592a\u9633\u65f6\u95f4\u6765\u5b9a\u4e49\u592a\u9633\u4f4d\u7f6e\u3002\u5982\u4e0b\u56fe\uff0c\u5317\u4eac\u7684\u7ef4\u5ea6\u4e3a39.92\u00b0\uff0c\u65e5\u671f\u5c06\u8bbe\u5b9a\u4e3a2019\u5e743\u67086\u65e5\uff0c\u592a\u9633\u65f6\u4e3a12:00:00\u3002 \u5e73\u592a\u9633\u65f6\u95f4\u53ef\u80fd\u4e0e\u5f53\u5730\u65f6\u95f4\u4e0d\u540c\u3002\u9700\u8981\u5c06\u672c\u5730\u65f6\u95f4\u8f6c\u6362\u4e3a\u5e73\u5747\u592a\u9633\u65f6\u8fdb\u884c\u51c6\u786e\u5206\u6790\u3002 \u6ce8\uff1a\u4e0d\u592a\u786e\u5b9aFlotherm\u4f7f\u7528\u7684\u662f\u5e73\u592a\u9633\u65f6\u8fd8\u662f\u771f\u592a\u9633\u65f6\uff0c\u867d\u7136\u4e24\u8005\u76f8\u5dee\u4e0d\u662f\u5f88\u5927\uff0c\u6709\u5f85\u9a8c\u8bc1\u3002 \u8fd9\u4e9b\u8bbe\u7f6e\u7528\u4e8e\u8ba1\u7b97\u65b9\u4f4d\u89d2\u548c\u592a\u9633\u9ad8\u5ea6\u89d2\u3002 \u7ed3\u5408Command Center\u6c42\u89e3\u5728\u4e0d\u540c\u65f6\u95f4\u592a\u9633\u8f90\u5c04\uff0c\u4f8b\u5982\u5168\u5929\u7684\u4eff\u771f\u60c5\u51b5\u3002","title":"\u592a\u9633\u4f4d\u7f6e\u5b9a\u4e49"},{"location":"Flotherm/solar/#_5","text":"\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u592a\u9633\u5f3a\u5ea6\uff0cSolar Intensity\u9009\u9879\u4e2d\u8f93\u5165\uff0c\u4f46\u662f\u592a\u9633\u7684\u65b9\u4f4d\u89d2\u548c\u9ad8\u5ea6\u89d2\u8fd8\u662f\u7531\u8f6f\u4ef6\u6839\u636e\u7eac\u5ea6\u548c\u65f6\u95f4\u8ba1\u7b97\u5f97\u5230\u7684\u3002 \u53e6\u5916\uff0c'Solar Calculation Type' \u53ef\u4ee5\u8bbe\u7f6e\u4e3acloudiness\u3002\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u5b83\u5c06\u8ba1\u7b97\u51fa\u7684\u592a\u9633\u5f3a\u5ea6\u6253\u4e2a\u6298\u3002\u503c\u57280~1\u4e4b\u95f4\u3002 \u5982\u4e0b\u6240\u793a\uff0c\u8ba1\u7b97\u51faCloudiness\u4e3a0\u65f6\uff0c\u592a\u9633\u80fd\u5f3a\u5ea6\u7ea6\u4e3a \\(100 W/m^2\\) \u3002 \u5982\u679cCloudiness\u8bbe\u5b9a\u4e3a0.3\uff0c\u5219\u8ba1\u7b97\u51fa\u7684\u592a\u9633\u80fd\u5f3a\u5ea6\u964d\u4f4e30\uff05\uff0c\u964d\u81f3\u7ea6 \\(70 W/m^2\\) \u3002 \u592a\u9633\u80fd\u77e2\u91cf\u5728\u7f16\u8f91\u7a97\u53e3\u7684\u53f3\u4e0a\u89d2\u663e\u793a\u4e3a\u9ec4\u8272\u3002","title":"\u592a\u9633\u5f3a\u5ea6"},{"location":"Flotherm/solar/#_6","text":"\u5728\u89e3\u51b3\u4e4b\u524d\uff0c\u9700\u8981\u5728\u6a21\u578b\u4e2d\u5e94\u7528\u51e0\u4e2a\u5c5e\u6027\u3002 \u6750\u6599\u5c5e\u6027 \u8868\u9762\u5c5e\u6027 radiation\u5c5e\u6027 \u786e\u4fdd\u7ec4\u4ef6\u5177\u6709\u76f8\u5173\u7684\u6750\u6599\u5c5e\u6027\uff0c\u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u4f20\u5bfc\u70ed\u91cf\u3002\u6b64\u5916\uff0c\u5e94\u7528\u8868\u9762\u5c5e\u6027\u6765\u5b9a\u4e49\u592a\u9633\u80fd\u53cd\u5c04\u7387\u548c\u53d1\u5c04\u7387\u3002 \u592a\u9633\u80fd\u53cd\u5c04\u7387\u4ec5\u9002\u7528\u4e8e\u592a\u9633\u8f90\u5c04\u6253\u5f00\u65f6\u3002\u8fd9\u51b3\u5b9a\u4e86\u592a\u9633\u80fd\u8d1f\u8f7d\u5e94\u7528\u4e8e\u7cfb\u7edf\u7684\u7a0b\u5ea6\u3002\u5982\u679c\u7269\u4f53\u7684\u592a\u9633\u53cd\u5c04\u7387\u4e3a0.5\uff0c\u5219\u4ec5\u5e94\u7528\u8be5\u7269\u4f53\u768450\uff05\u592a\u9633\u80fd\u8d1f\u8377\u3002\u4ece\u7cfb\u7edf\u4e2d\u79fb\u9664\u53cd\u5c04\u7684\u592a\u9633\u8f90\u5c04\u3002\u592a\u9633\u8f90\u5c04\u5c31\u50cf\u5c06\u6298\u53e0\u7684\u6e90SmartPart\u5e94\u7528\u4e8e\u6a21\u578b\u4e2d\u7684\u96f6\u4ef6\u3002 \u8bbe\u5b9a\u53d1\u5c04\u7387\u662f\u4e3a\u4e86\u5b9a\u671f\u8f90\u5c04\uff0c\u5728\u5efa\u6a21\u592a\u9633\u8f90\u5c04\u65f6\u5e94\u518d\u6b21\u5f00\u542f\u8f90\u5c04\u3002\u53d1\u5c04\u7387\u5305\u62ec\u8868\u9762\u5149\u6d01\u5ea6\u548c\u96f6\u4ef6\u7684\u7c97\u7cd9\u5ea6\u3002\u8be5\u503c\u5c06\u51b3\u5b9a\u5bf9\u8c61\u8f90\u5c04\u7684\u7a0b\u5ea6; \u53d1\u5c04\u7387\u8d8a\u4f4e\uff0c\u8f90\u5c04\u4f20\u70ed\u8d8a\u5c11\u3002 \u6ce8\u610f\uff1a\u201c\u989c\u8272\u201d\uff0c\u201c\u5149\u6cfd\u5ea6\u201d\u548c\u201c\u4eae\u5ea6\u201d\u662f\u4ec5\u66f4\u6539\u6a21\u578b\u7684\u53ef\u89c6\u5316\u8868\u793a\u7684\u8bbe\u7f6e\u3002 \u6700\u540e\uff0c\u9700\u8981\u5c06\u8f90\u5c04\u5c5e\u6027\u5e94\u7528\u4e8e\u5bf9\u8c61\u8868\u9762\uff0c\u4ee5\u5305\u62ec\u5728\u70ed\u8f90\u5c04\u8ba1\u7b97\u4e2d\u3002","title":"\u8868\u9762\u6750\u6599\u5c5e\u6027"},{"location":"Flotherm/%E4%BD%BF%E7%94%A8JEDEC%E7%83%AD%E5%BA%A6%E9%87%8F%E8%AE%A1%E7%AE%97%E8%8A%AF%E7%89%87%E6%B8%A9%E5%BA%A6%E6%97%A0%E9%99%84%E5%8A%A0%E6%95%A3%E7%83%AD%E5%99%A8/","text":"\u4f7f\u7528JEDEC\u70ed\u5ea6\u91cf\u8ba1\u7b97\u82af\u7247\u6e29\u5ea6\uff08\u65e0\u9644\u52a0\u6563\u70ed\u5668\uff09 By: Bruce Guenin \u4ecb\u7ecd JEDEC\u5355\u82af\u7247\u5c01\u88c5\u70ed\u5ea6\u6307\u6807\u88ab\u5e7f\u6cdb\u7528\u4f5c\u8868\u5f81\u534a\u5bfc\u4f53\u5c01\u88c5\u70ed\u6027\u80fd\u7684\u624b\u6bb5\u3002\u5b83\u4eec\u5c06\u5747\u5300\u52a0\u70ed\u7684\u534a\u5bfc\u4f53\u82af\u7247\u7684\u5cf0\u503c\u6e29\u5ea6\uff08\u7ed3\u6e29 \\(T_j\\) \uff09\u4e0e\u6cbf\u7740\u70ed\u6d41\u8def\u5f84\u7684\u7279\u5b9a\u533a\u57df\u7684\u6e29\u5ea6\u76f8\u5173\u8054\u3002\u8fd9\u4e9b\u6307\u6807\u7684\u503c\u7531\u6807\u51c6\u5316\u6761\u4ef6\u4e0b\u7684\u6e29\u5ea6\u6d4b\u91cf\u786e\u5b9a\uff0c\u8be6\u7ec6\u89c4\u5b9a\u4e86\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u6d4b\u8bd5\u677f\u548c\u70ed\u73af\u5883[1]\u3002 \u8fd9\u4e9b\u6307\u6807\u91c7\u7528\u6b27\u59c6\u5b9a\u5f8b\u7535\u963b\u8ba1\u7b97\u7684\u5f62\u5f0f\u3002\u4f7f\u7528\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\u70ed\u963b\uff1a $$ \\theta_{jx}=\\frac{T_j-T_x}{P} $$ \u5176\u4e2d \\(T_x\\) \u662f\u70ed\u91cf\u6d41\u5165\u7684\u533a\u57df\u7684\u6e29\u5ea6\uff0c \\(P\\) \u662f\u5668\u4ef6\u7684\u603b\u53d1\u70ed\u529f\u7387\u3002 a\uff09\u81ea\u7136\u5bf9\u6d41 b) \u5f3a\u5236\u5bf9\u6d41\uff0c\u7ed3\u5230\u5916\u58f3 c\uff09\u4f20\u5bfc\u6563\u70ed\uff0c\u7ed3\u5230\u7535\u8def\u677f \u56fe1\u663e\u793a\u4e86\u5b89\u88c5\u5728\u56db\u4e2aJEDEC\u6807\u51c6\u6d4b\u8bd5\u73af\u5883\u7684\u6d4b\u8bd5\u677f\u4e0a\u7684\u5c01\u88c5\u5178\u578b\u70ed\u6d41\u8def\u5f84\u7684\u56fe\u8868\u3002\u6307\u793a\u7684\u6e29\u5ea6\u6d4b\u91cf\u4f4d\u7f6e\u662f\u7531\u76f8\u5e94\u6d4b\u8bd5\u6807\u51c6\u4e3a\u6bcf\u4e2a\u73af\u5883\u6307\u5b9a\u7684\u3002 \u7ed3\u5230\u58f3\u548c\u7ed3\u5230\u677f\u7684\u6d4b\u8bd5\u73af\u5883\u8feb\u4f7f\u51e0\u4e4e100\uff05\u7684\u70ed\u91cf\u6cbf\u6307\u5b9a\u7684\u8def\u5f84\u6d41\u52a8\u3002 \u81ea\u7136\u5bf9\u6d41\u548c\u5f3a\u5236\u5bf9\u6d41\u73af\u5883\u4e0e\u5176\u4ed6\u4e24\u79cd\u7535\u5b50\u4ea7\u54c1\u7684\u5927\u591a\u6570\u6700\u7ec8\u4f7f\u7528\u73af\u5883\u6709\u7740\u975e\u5e38\u76f8\u4f3c\u7684\u5730\u65b9\u3002\u5728\u8fd9\u4e9b\u5bf9\u6d41\u51b7\u5374\u7684\u73af\u5883\u4e2d\uff0c\u5c01\u88c5\u5c06\u4e00\u90e8\u5206\u6563\u53d1\u7684\u70ed\u91cf\u4ece\u7a7a\u6c14\u7684\u9876\u90e8\u8868\u9762\u4e2d\u6392\u51fa\uff0c\u5176\u4f59\u90e8\u5206\u5219\u6563\u53d1\u5230\u677f\u4e0a\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u6765\u8bf4\uff0c\u8fd9\u4e24\u6761\u8def\u5f84\u51e0\u4e4e\u6db5\u76d6\u4e86\u5305\u88f9\u5916\u7684\u6240\u6709\u70ed\u6d41\u3002 \u8fd8\u6709\u53e6\u4e00\u7c7bJEDEC\u70ed\u6027\u80fd\u6307\u6807\uff0c\u5bf9\u4e8e\u8ba1\u7b97\u5e94\u7528\u73af\u5883\u7684\u7ed3\u6e29\u975e\u5e38\u6709\u7528\u3002\u5b83\u4eec\u88ab\u79f0\u4e3a\u70ed\u7279\u6027\u53c2\u6570\uff0c\u7531\u5e0c\u814a\u5b57\u6bcd \\(\\Psi\\) \uff08\u53d1\u97f3\u4e3a\u201cpsi\u201d\uff09\u8868\u793a[1]\u3002\u5b83\u4eec\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e0e \\(\\theta\\) \u6307\u6807\u76f8\u540c\uff0c\u5982\u4e0b\u6240\u793a\uff1a \\[ \\Psi_{jx}=\\frac{T_j-T_x}{P} \\] \u70ed\u7279\u6027\u53c2\u6570 \\(\\Psi\\) \u4e0e\u70ed\u963b \\(\\theta\\) \u4e4b\u95f4\u7684\u5173\u952e\u5dee\u5f02\u5728\u4e8e\uff1a\u5728\u524d\u8005\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u90e8\u5206\u70ed\u91cf\u6d41\u5411\u7531\u6e29\u5ea6 \\(T_x\\) \u8868\u793a\u7684\u533a\u57df\u3002\u5f53 \\(T_x\\) \u548c \\(P\\) \u5df2\u77e5\u65f6\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u6765\u4f30\u8ba1 \\(T_j\\) \u3002\u6700\u76f8\u5173\u5230\u6211\u4eec\u7684\u76ee\u7684\u7684\u5ea6\u91cf\u662f \\(\\Psi_{jt}\\) \u548c \\(\\Psi_{jb}\\) \uff0c\u5176\u4e2d \\(T_{T}\\) \u8868\u793a\u5728\u5c01\u88c5\u7684\u9876\u90e8\u4e2d\u5fc3\u7684\u6e29\u5ea6\u548c \\(T_{B}\\) \u662f\u677f\u7684\u6e29\u5ea6\uff0c\u4e0a\u81f3\u6240\u8ff0\u5c01\u88c5\u5185\u710a\u63a5\u7684\u8868\u9762\u8ff9\u7ebf\u6d4b\u91cf\u8ddd\u5c01\u88c5\u8fb9\u7f181\u6beb\u7c73\u3002\u75d5\u8ff9\u5e94\u8be5\u5728\u5176\u4e00\u4fa7\u7684\u4e2d\u95f4\u4e0e\u5305\u88c5\u63a5\u89e6\u3002 \u56fe2a\u3002\u70ed\u7535\u963b\u7f51\u7edc\u4ee3\u8868\u7ed3\u5230\u677f\u5230\u7a7a\u6c14\u8def\u5f84\u548c\u7ed3\u5230\u58f3\u5230\u7a7a\u6c14\u8def\u5f84\u3002 \u56fe2b\u3002\u56fe\u89e3\u8bf4\u660e\u4e86 \\(\\theta\\) \u548c\u7b49\u6548 \\(\\Psi\\) \u503c\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4f5c\u4e3a\u70ed\u91cf\u4ece\u5c01\u88c5\u9876\u90e8\u6d41\u51fa\u5230\u7a7a\u6c14\u7684\u51fd\u6570\u3002 \u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u578b\u6765\u6df1\u5165\u4e86\u89e3\u5c01\u88c5/\u7535\u8def\u677f\u7ec4\u4ef6\u7684\u6563\u70ed\u6027\u80fd\u3002\u56fe2a\u8868\u793a\u4f7f\u7528\u7b80\u5355\u70ed\u963b\u7f51\u7edc\u7684\u4e24\u6761\u70ed\u6d41\u8def\u5f84\u3002\u8fd9\u4e24\u6761\u8def\u5f84\u4e4b\u95f4\u7684\u603b\u70ed\u91cf\u7684\u5212\u5206\u6700\u7ec8\u662f\u7531\u6cbf\u6bcf\u6761\u8def\u5f84\u7684\u603b\u70ed\u963b\uff0c\u8fd9\u662f\u7b49\u4e8e\u0398\u786e\u5b9aJC +\u0398 CA\u548c\u0398 JB +\u0398 BA\u5206\u522b\u3002\u7535\u963b\u0398 CA\u548c\u0398 BA\u8868\u793a\u70ed\u8f93\u9001\u7684\u5206\u522b\u4ece\u5c01\u88c5\u548c\u677f\uff0c\u4e0a\u65b9\u7684\u6548\u7387\uff0c\u73af\u5883\u7a7a\u6c14\uff0c\u5e76\u4e14\u5404\u81ea\u7684\u7a7a\u6c14\u901f\u5ea6\u7684\u51fd\u6570\u3002\u9664\u975e\u6563\u70ed\u5668\u9644\u63a5\u81f3\u5305\u88c5\u7684\u9876\u90e8\uff0c\u0398 BA\u5c06\u6bd4\u0398\u5c0f\u5f97\u591aCA\u7531\u4e8e\u5bf9\u76f8\u6bd4\u4e8e\u5305\u88c5\u7684\u9876\u90e8\u7684\u70ed\u4ea4\u6362\u5728\u7a7a\u6c14\u4e2d\u7684\u677f\u8868\u9762\u7684\u66f4\u5927\u7684\u533a\u57df\u3002\u8fd9\u4e2a\u7535\u8def\u7684\u68c0\u67e5\u8868\u660e\uff0c\u5728\u7a7a\u6c14\u4e2d\u7684\u901f\u5ea6\u7684\u53d8\u5316\u5c06\u4fee\u6539\u0398\u7684\u503cCA\u548c\u0398 BA\uff0c\u5bfc\u81f4\u5728\u529f\u7387\u6cbf\u4e24\u4e2a\u8def\u5f84\u5e76\u4e14\u5728\u03a8\u540e\u7eed\u6539\u53d8\u6d41\u52a8\u53d8\u5316\u0164\u548c\u03a8 \u4e59\u548c \\(\\Psi_{JT}\\) \u548c \\(\\Psi_{JB}\\) \u3002 \u5728\u56fe2b\u7684\u56fe\u8868\u8bf4\u660e\u03a8\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfbJT\u548c \\(\\Psi_{JB}\\) \u4f5c\u4e3a\u6d41\u51fa\u7684\u5305\uff08P\u9876\u90e8\u7684\u7535\u6e90TOP\uff09\u7684\u53d8\u5316\u3002\u5b83\u663e\u793a\u4e86\u5982\u4f55\u5728P\u7684\u503c\u5c0fTOP\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u7535\u529b\u6d41\u5411\u677f\u548c \\(\\Psi_{JB}\\) \u63a5\u8fd1\u0398\u7684\u503cJB\u3002\u76f8\u53cd\uff0c\u5982\u679c\u4e00\u4e2a\u6563\u70ed\u7247\u9644\u63a5\u81f3\u5305\u88c5\u7684\u9876\u90e8\uff0c\u4f7f\u5f97P TOP\u51e0\u4e4e\u7b49\u4e8e\u603b\u529f\u7387\uff0c\u5219 \\(\\Psi_{JT}\\) \u8fd1\u4f3c\u4e8e\u0398\u7684\u503cJC\u3002 \u672c\u6587\u63a2\u8ba8\u4e86\u8fd9\u4e9b\u4e0d\u540c\u6307\u6807\u4e4b\u95f4\u7684\u5173\u7cfb\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u6307\u68071\uff09\u7528\u73b0\u6709\u7684\u7535\u5b50\u7cfb\u7edf\u6765\u4f30\u7b97\u7ed3\u6e29\u62162\uff09\u5728\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u9884\u6d4b\u7cfb\u7edf\u7684\u7ed3\u6e29\u3002 JEDEC\u70ed\u6d4b\u91cf\u5728\u5f3a\u5236\u7a7a\u6c14\u6d4b\u8bd5\u73af\u5883\u4e2d\u7684\u884c\u4e3a \u56fe3a\u5305\u542b\u572835 x 35 mm\uff0c388\u7403\uff0cPBGA\u5c01\u88c5\u4e0a\u6d4b\u91cf\u7684\u51e0\u4e2a\u5ea6\u91cf\u56fe\uff0c\u5176\u4e2d\u5305\u542b\u4e24\u4e2a\u94dc\u5e73\u9762\u76844\u5c42\u53e0\u5c42\u3002\u8be5\u5c01\u88c5\u88ab\u5b89\u88c5\u5230\u4e00\u4e2a100\u5e73\u65b9\u6beb\u7c73\u7684JEDEC\u6807\u51c6\u7535\u8def\u677f\u4e0a\uff0c\u5e76\u5e26\u6709\u4e24\u4e2a\u94dc\u5185\u90e8\u5e73\u9762\u3002\u4e24\u4e2a\u4e0a\u90e8\u66f2\u7ebf\u662f \\(\\theta_{JA}\\) \u548c \\(\\Psi_{JB}\\) \u3002\u7b2c\u4e09\u66f2\u7ebf\uff0c \\(\\Psi_{BA}\\) \u662f\u901a\u8fc7\u51cf\u53bb\u03a8\u5f97\u5230JB\u4ece \\(\\theta_{JA}\\) \u3002 \u7684 \\(\\theta_{JA}\\) \u66f2\u7ebf\u663e\u793a\u5728\u7a7a\u6c14\u901f\u5ea6\u7684\u4f9d\u8d56\u6027\u663e\u8457\uff0c\u4e3b\u8981\u662f\u7531\u4e8e\u7535\u8def\u677f\u7684\u4f5c\u7528\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6563\u70ed\u7247\uff0c\u56e0\u4e3a\u5b83\u8fdb\u884c\u70ed\u4ea4\u6362\u4ee5\u5728\u5176\u6574\u4e2a\u533a\u57df\u4e2d\u7684\u5bf9\u6d41\u6c14\u6d41\u3002 \u76f8\u6bd4\u4e4b\u4e0b\uff0c \\(\\Psi_{JB}\\) \u51e0\u4e4e\u662f\u72ec\u7acb\u7684\u7a7a\u6c14\u6d41\u901f\u3002\u8fd9\u662f\u56e0\u4e3a\u5927\u90e8\u5206\u6765\u81ea\u63a5\u70b9\u7684\u70ed\u6d41\u901a\u8fc7\u5185\u90e8\u4f20\u5bfc\u8fc7\u7a0b\u6d41\u5411\u677f\u3002\u8fd9\u8868\u660e\uff0c \\(\\Psi_{JB}\\) \u662f\u76f8\u5bf9\u575a\u56fa\u7684\uff0c\u5e76\u4e14\u662f\u5728\u5c01\u88c5\u7684\u5177\u6709\u5bf9\u6d41\u73af\u5883\u7684\u8d21\u732e\u76f8\u5bf9\u8f83\u5c0f\u7684\u70ed\u4f20\u5bfc\u6548\u7387\u7684\u6709\u6548\u63aa\u65bd\u3002 \u5728 \\(\\Psi_{BA}\\) \u66f2\u7ebf\u8868\u73b0\u5728\u7a7a\u6c14\u901f\u5ea6\u6700\u5927\u7684\u7075\u654f\u5ea6\uff0c\u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\uff0c\u5b83\u7684\u5e45\u5ea6\u662f\u5728\u677f\u7684\u8026\u5408\u4f20\u5bfc\u5bf9\u6d41\u51b7\u5374\u673a\u6784\u7684\u76f4\u63a5\u7ed3\u679c\u3002 \u56fe3.\u5e26\u67094\u5c42JEDEC\u6807\u51c6\u7535\u8def\u677f\u768435X35mm\uff0c388\u7403PBGA\u5c01\u88c5\u7684\u70ed\u6d4b\u8bd5\u7ed3\u679c\u4e0e\u7a7a\u6c14\u6d41\u901f\u7684\u5173\u7cfb\u3002 \u56fe3b\u66f2\u7ebf \\(\\Psi_{JT}\\) \u4e0e\u7a7a\u6c14\u901f\u5ea6\u3002\u6b63\u5982\u6240\u6599\uff0c\u5b83\u662f\u4e00\u4e2a\u654f\u611f\u7684\u7a7a\u6c14\u901f\u5ea6\u51fd\u6570\uff0c\u56e0\u4e3a\u4ece\u6a21\u5177\u901a\u8fc7\u5305\u8986\u6210\u578b\u5851\u6599\u76d6\u7684\u70ed\u6d41\u91cf\u4e0e\u4e00\u5b9a\u7684\u7a7a\u6c14\u6d41\u901f\u76f8\u5173\u7684\u4f20\u70ed\u7cfb\u6570\u6210\u6b63\u6bd4\u3002\u4e00\u4e2a\u8fd8\u6ce8\u610f\u5230\u5728\u7a7a\u6c14\u901f\u5ea6\u9ad8\u8fbe2.5\u7c73/\u79d2\uff0c \\(\\Psi_{JT}\\) \u662f\u5c0f\u4e8e1\u2103/ W\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u9002\u5ea6\u7684\u529f\u7387\u6c34\u5e73\uff0c\u5c01\u88c5\u9876\u90e8\u4e2d\u5fc3\u7684\u6e29\u5ea6\u53ea\u6bd4\u8fde\u63a5\u70b9\u7565\u4f4e\u3002\u8fd9\u7528\u4e8e\u51cf\u5c11\u5728\u8ba1\u7b97T\u4e2d\u7684\u9519\u8bef\u0134\u7531\u4e8e\u0394T\u7684\u503cJT\u4f7f\u7528\u7b49\u5f0f2\u968f\u540e\u5c06\u662f\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u6821\u6b63\uff0c\u4ee5\u589e\u52a0T\u7684\u5927\u5f97\u591a\u7684\u6d4b\u91cf\u503c\u6765\u8ba1\u7b97\u0164\u3002 \u8be5\u5206\u6790\u5bfc\u81f4\u8fd9\u6837\u7684\u7ed3\u8bba\uff1a\u03a8\u7684\u4e3b\u8981\u4ef7\u503cJB\u662f\uff0c\u5b83\u662f\u9002\u5ea6\u7a33\u5065\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u6765\u9884\u6d4b\u7ed3\u548c\u4e00\u4e2a\u677f\uff0c\u5f53\u8017\u6563\u529f\u7387\u662f\u5df2\u77e5\u4e4b\u95f4\u7684\u6e29\u5ea6\u5dee\u3002\u76f8\u53cd\uff0c\u5982\u679c\u5728\u4ed6\u9762\u524d\u6709\u4e00\u4e2a\u64cd\u4f5c\u7535\u5b50\u7cfb\u7edf\uff0c\u5e76\u4e14\u5e0c\u671b\u901a\u8fc7\u6d4b\u91cf\u5c01\u88c5\u9876\u90e8\u7684\u6e29\u5ea6\u6765\u4e86\u89e3\u5851\u6599\u5c01\u88c5\u4e2d\u7684\u7ba1\u82af\u6e29\u5ea6\uff0c\u5219 \\(\\Psi_{JT}\\) \u66f4\u6709\u7528\u3002 \u5b83\u5e76\u4e0d\u603b\u662f\u03a8\u60c5\u51b5JT\u7531\u5305\u4f9b\u5e94\u5546\u63d0\u4f9b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u8d77\u6765\u76f8\u5bf9\u5bb9\u6613\u3002 \u5728\u524d\u9762\u4e00\u5217\u4e2d\uff0c\u63a8\u5bfc\u51fa\u4ee5\u4e0b\u7b49\u5f0f[6]\uff1a $$ \\Psi_{JT}=\\frac{h\\theta_{JA}t_{EMC}}{K_{EMC}} $$ \u5176\u4e2d \\(h\\) \u662f\u5728\u611f\u5174\u8da3\u7684\u7a7a\u6c14\u901f\u5ea6\u4e0b\u8ba1\u7b97\u7684\u4f20\u70ed\u7cfb\u6570\u7684\u503c\uff0c\u5e76\u4e14 \\(t_{EMC}\\) \u548c \\(K_{EMC}\\) \u662f\u6a21\u5177\u4e0a\u65b9\u7684\u73af\u6c27\u6811\u8102\u6a21\u5851\u6599\u7684\u539a\u5ea6\u53ca\u5176\u5bfc\u70ed\u7387\u3002\u5728\u672c\u4f8b\u4e2d\uff0c \\(t_{EMC}\\) \u548c \\(K_{EMC}\\) \u5206\u522b\u4e3a0.86 mm\u548c0.7 W / mK\u3002 \u03a8\u7684\u8ba1\u7b97\u503cJT\u7ed8\u5236\u5728\u56fe3b\u548c\u4e5f\u5217\u5728\u4e0e\u5269\u4f59\u7684\u53c2\u6570\u8f93\u5165\u6cbf\u4e0b\u8868\u5165\u7b49\u5f0f3\u03a8\u7684\u6d4b\u91cf\u548c\u8ba1\u7b97\u503c\u4e4b\u95f4\u7684\u5dee\u5f02JT\u662f\u5c0f\u7684\u7edd\u5bf9\u503c\u3002 \u4f7f\u7528 \\(\\Psi_{JB}\\) \u9884\u6d4b\u7ed3\u6e29 \u4e3a\u4e86\u6210\u529f\u5730\u4f7f\u7528 \\(\\Psi_{JB}\\) \u5ea6\u91cf\u5728\u9884\u6d4b\u7ed3\u6e29\uff0c\u9700\u8981\u77e5\u9053 \\(T_B\\) \u5e76\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u8017\u6563\u529f\u7387\u548c\u7a7a\u6c14\u7684\u6d41\u52a8\u6761\u4ef6\u3002 \u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u4f30\u7b97 \\(T_B\\) \u3002\u5176\u4e2d\u7684\u9009\u62e9\u662f\u5efa\u7acb\u4e00\u4e2a\u8d1f\u8f7d\u677f\uff0c\u5177\u6709\u5b9e\u9645\u7535\u8def\u677f\u7684\u603b\u4f53\u5c3a\u5bf8\u548c\u7535\u5bfc\u7387\uff0c\u5e76\u4f7f\u7528\u52a0\u70ed\u5668\u9884\u671f\u7684\u70ed\u8d1f\u8377\uff0c\u4ee5\u53ca\u9002\u5f53\u7684\u51b7\u5374\u65b9\u6cd5[7]\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u521b\u5efa\u9002\u5f53\u7684\u8ba1\u7b97\u6d41\u4f53\u52a8\u529b\u5b66\uff08CFD\uff09\u6216\u677f\u7684\u6709\u9650\u5143\u6216\u6709\u9650\u5dee\u5206\u4f20\u5bfc\u6a21\u578b\uff0c\u5e76\u8003\u8651\u70ed\u8d1f\u8377\u548c\u51b7\u5374\u3002\u6700\u540e\uff0c\u5982\u679c\u9700\u8981\u5feb\u901f\u800c\u9002\u5ea6\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5728\u6a21\u578b\u4e2d\u5305\u542b\u5355\u5c01\u88c5\u677f\u6765\u4f30\u7b97\u7535\u8def\u677f\u6e29\u5ea6\u3002\u9002\u5f53\u7684\u7535\u8def\u677f\u5c3a\u5bf8\u5c06\u53d6\u51b3\u4e8e\u5b9e\u9645\u7535\u8def\u677f\u7684\u9762\u79ef\uff0c\u4e58\u4ee5\u611f\u5174\u8da3\u7684\u5668\u4ef6\u529f\u7387\u4e0e\u7535\u8def\u677f\u4e0a\u6240\u6709\u5668\u4ef6\u7684\u603b\u529f\u7387\u7684\u6bd4\u503c[8]\u3002 \u03a8\u7684\u6709\u7528JB\uff0c\u8fd9\u662f\u5728\u4e00\u4e2a\u6807\u51c6\u7684\u6d4b\u8bd5\u73af\u5883\u4e2d\u4ea7\u751f\uff0c\u4ee5\u7ed3\u6e29\u7684\u9884\u6d4b\u4e2d\u7684\u4e8b\u5b9e\uff0c\u5728\u4e24\u79cd\u73af\u5883\u4e0b\uff0c\u5b58\u5728\u65bd\u52a0\u5230\u5c01\u88c5\u7684\u9876\u90e8\uff0c\u5bf9\u6d41\u8fb9\u754c\u6761\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\uff0c\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u5c06\u4ee5\u76f8\u540c\u7684\u98ce\u901f\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4ece\u6a21\u5177\u5230\u5c01\u88c5\u9876\u90e8\u7684\u5355\u4e2a\u7535\u963b\u8fde\u63a5\u5bf9\u4e8e\u4efb\u610f\u7684\u8fb9\u754c\u6761\u4ef6\u800c\u8a00\u5e76\u4e0d\u603b\u662f\u51c6\u786e\u7684\u3002\u4e3a\u4e86\u5177\u6709\u7a33\u5065\u7684\u8fb9\u754c\u6761\u4ef6\u72ec\u7acb\u6027\uff0c\u9700\u8981\u4e00\u4e2a\u7d27\u51d1\u7684\u70ed\u6a21\u578b\uff0c\u4f8b\u5982[9]\u3002 \u65e0\u8bba\u662f\u5728JEDEC\u6807\u51c6\u591a\u5c42\u677f\u4e0a\u8fd8\u662f\u5728\u5e94\u7528\u677f\u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5c01\u88c5\u6765\u8bf4\uff0c\u81f4\u529b\u4e8e\u5f00\u53d1 \\(\\Psi_{JB}\\) \u6807\u51c6\u7684\u521d\u59cb\u5de5\u4f5c\u90fd\u8868\u73b0\u51fa\u4e86\u76f8\u4f3c\u7684\u503c[10]\u3002 \u7ed3\u8bba \u7684JEDEC\u6807\u51c6\u70ed\u7279\u6027\u53c2\u6570\uff0c \\(\\Psi_{JB}\\) \u548c \\(\\Psi_{JT}\\) \uff0c\u53ef\u4ee5\u5728\u4fc3\u8fdb\u7ed3\u6e29\u5728\u534a\u5bfc\u4f53\u5c01\u88c5\u7684\u8ba1\u7b97\u65e2\u4e3a\u5b9e\u65f6\u7cfb\u7edf\uff0c\u5e76\u4e14\u8fd8\u5728\u9884\u6d4b\u8ba1\u7b97\u662f\u6709\u4ef7\u503c\u7684\u3002\u901a\u8fc7\u6d4b\u91cf\u786e\u5b9a\u7684\u8fd9\u4e9b\u6307\u6807\u901a\u8fc7\u63d0\u4f9b\u6a21\u62df\u7ed3\u6e29\u5ea6\u7684\u65b9\u4fbf\u5b9e\u9a8c\u9a8c\u8bc1\u6765\u8865\u5145\u7eaf\u70ed\u6a21\u62df\u65b9\u6cd5\u3002 \u53c2\u8003 \\1. JEDEC\u6807\u51c6JESD51-12\uff0c\u201c\u7535\u5b50\u5c01\u88c5\u6563\u70ed\u4fe1\u606f\u62a5\u544a\u548c\u4f7f\u7528\u6307\u5357\u201d\u3002\u6240\u6709JEDEC\u6807\u51c6\u53ef\u4ecewww.jedec.org\u514d\u8d39\u4e0b\u8f7d\u3002 \\2. JEDEC\u6807\u51c6JESD51-2A\u201c\u96c6\u6210\u7535\u8def\u70ed\u6d4b\u8bd5\u65b9\u6cd5\u73af\u5883\u6761\u4ef6 - \u81ea\u7136\u5bf9\u6d41\uff08\u9759\u6b62\u7a7a\u6c14\uff09\u201d \u30023. JEDEC\u6807\u51c6JESD51-6\uff0c\u201c\u96c6\u6210\u7535\u8def\u70ed\u6d4b\u8bd5\u65b9\u6cd5\u73af\u5883\u6761\u4ef6 - \u5f3a\u5236\u5bf9\u6d41\uff08\u79fb\u52a8\u7a7a\u6c14\uff09\u201d\u3002 \\4. JEDEC\u6807\u51c6JESD51-14\uff0c\u201c\u901a\u8fc7\u5355\u901a\u9053\u70ed\u6d41\u6d4b\u91cf\u534a\u5bfc\u4f53\u5668\u4ef6\u70ed\u963b\u7ed3\u7684\u77ac\u6001\u53cc\u63a5\u53e3\u6d4b\u8bd5\u65b9\u6cd5\u201d \u30025. JEDEC\u6807\u51c6JESD51-8\u201c\u96c6\u6210\u7535\u8def\u70ed\u6d4b\u8bd5\u65b9\u6cd5\u73af\u5883\u6761\u4ef6 - \u4ea4\u754c\u5904\u201c\u3002 \\6. B. Guenin\uff0c\u201c\u786e\u5b9a\u5851\u6599\u534a\u5bfc\u4f53\u5c01\u88c5\u4e2d\u7684\u7ed3\u6e29\uff0c\u7b2c\u4e00\u90e8\u5206\uff0c\u201dElectronicsCooling\uff0c\u7b2c5\u53f7\uff0c\u7b2c2\u53f7\uff0c1999\u5e745\u6708 \u30027. B. Siegal\uff0c\u201c\u70ed\u8d1f\u8f7d\u677f\u8bbe\u8ba1\u8003\u8651\u56e0\u7d20\uff0c\u201dElectronicsCooling\uff0c\u5377\u300218\uff0c\u7b2c3\u671f\uff0c\u4e5d\u6708\uff0c2009\u5e74 8 B. Guenin\uff0c\u201c\u5b9a\u6027\u4e0a\u7ec4\u88c5\u5370\u5237\u7535\u8def\u677f\u4e0a\u7684\u5c01\u88c5\uff0c\u201d ElectronicsCooling\uff0c\u5377\u3002\u7b2c7\u671f\uff0c\u7b2c2\u671f\uff0c2001\u5e745\u6708 \u30029. S. Shidore\uff0c\u201c\u7535\u5b50\u8bbe\u8ba1\u4e2d\u7684\u7d27\u51d1\u578b\u70ed\u6a21\u578b\u201dElectronicsCooling\uff0cVol\u300213\uff0c\u7b2c2\u53f7\uff0c\u6708\uff0c2007\u5e74 10 B.\u6728\u201c\u5728\u9884\u6d4b\u5de5\u7a0b\u4f7f\u7528\u7ed3\u5bf9\u677f\u70ed\u963b\uff0c\u201d\u7535\u5b50\u5236\u51b7\uff0c\u5377\u3002\u7b2c1\u53f7\uff0c1999\u5e741\u6708\u3002","title":"\u4f7f\u7528JEDEC\u70ed\u5ea6\u91cf\u8ba1\u7b97\u82af\u7247\u6e29\u5ea6\uff08\u65e0\u9644\u52a0\u6563\u70ed\u5668\uff09"},{"location":"Flotherm/%E4%BD%BF%E7%94%A8JEDEC%E7%83%AD%E5%BA%A6%E9%87%8F%E8%AE%A1%E7%AE%97%E8%8A%AF%E7%89%87%E6%B8%A9%E5%BA%A6%E6%97%A0%E9%99%84%E5%8A%A0%E6%95%A3%E7%83%AD%E5%99%A8/#jedec","text":"By: Bruce Guenin","title":"\u4f7f\u7528JEDEC\u70ed\u5ea6\u91cf\u8ba1\u7b97\u82af\u7247\u6e29\u5ea6\uff08\u65e0\u9644\u52a0\u6563\u70ed\u5668\uff09"},{"location":"Flotherm/%E4%BD%BF%E7%94%A8JEDEC%E7%83%AD%E5%BA%A6%E9%87%8F%E8%AE%A1%E7%AE%97%E8%8A%AF%E7%89%87%E6%B8%A9%E5%BA%A6%E6%97%A0%E9%99%84%E5%8A%A0%E6%95%A3%E7%83%AD%E5%99%A8/#_1","text":"JEDEC\u5355\u82af\u7247\u5c01\u88c5\u70ed\u5ea6\u6307\u6807\u88ab\u5e7f\u6cdb\u7528\u4f5c\u8868\u5f81\u534a\u5bfc\u4f53\u5c01\u88c5\u70ed\u6027\u80fd\u7684\u624b\u6bb5\u3002\u5b83\u4eec\u5c06\u5747\u5300\u52a0\u70ed\u7684\u534a\u5bfc\u4f53\u82af\u7247\u7684\u5cf0\u503c\u6e29\u5ea6\uff08\u7ed3\u6e29 \\(T_j\\) \uff09\u4e0e\u6cbf\u7740\u70ed\u6d41\u8def\u5f84\u7684\u7279\u5b9a\u533a\u57df\u7684\u6e29\u5ea6\u76f8\u5173\u8054\u3002\u8fd9\u4e9b\u6307\u6807\u7684\u503c\u7531\u6807\u51c6\u5316\u6761\u4ef6\u4e0b\u7684\u6e29\u5ea6\u6d4b\u91cf\u786e\u5b9a\uff0c\u8be6\u7ec6\u89c4\u5b9a\u4e86\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u6d4b\u8bd5\u677f\u548c\u70ed\u73af\u5883[1]\u3002 \u8fd9\u4e9b\u6307\u6807\u91c7\u7528\u6b27\u59c6\u5b9a\u5f8b\u7535\u963b\u8ba1\u7b97\u7684\u5f62\u5f0f\u3002\u4f7f\u7528\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\u70ed\u963b\uff1a $$ \\theta_{jx}=\\frac{T_j-T_x}{P} $$ \u5176\u4e2d \\(T_x\\) \u662f\u70ed\u91cf\u6d41\u5165\u7684\u533a\u57df\u7684\u6e29\u5ea6\uff0c \\(P\\) \u662f\u5668\u4ef6\u7684\u603b\u53d1\u70ed\u529f\u7387\u3002 a\uff09\u81ea\u7136\u5bf9\u6d41 b) \u5f3a\u5236\u5bf9\u6d41\uff0c\u7ed3\u5230\u5916\u58f3 c\uff09\u4f20\u5bfc\u6563\u70ed\uff0c\u7ed3\u5230\u7535\u8def\u677f \u56fe1\u663e\u793a\u4e86\u5b89\u88c5\u5728\u56db\u4e2aJEDEC\u6807\u51c6\u6d4b\u8bd5\u73af\u5883\u7684\u6d4b\u8bd5\u677f\u4e0a\u7684\u5c01\u88c5\u5178\u578b\u70ed\u6d41\u8def\u5f84\u7684\u56fe\u8868\u3002\u6307\u793a\u7684\u6e29\u5ea6\u6d4b\u91cf\u4f4d\u7f6e\u662f\u7531\u76f8\u5e94\u6d4b\u8bd5\u6807\u51c6\u4e3a\u6bcf\u4e2a\u73af\u5883\u6307\u5b9a\u7684\u3002 \u7ed3\u5230\u58f3\u548c\u7ed3\u5230\u677f\u7684\u6d4b\u8bd5\u73af\u5883\u8feb\u4f7f\u51e0\u4e4e100\uff05\u7684\u70ed\u91cf\u6cbf\u6307\u5b9a\u7684\u8def\u5f84\u6d41\u52a8\u3002 \u81ea\u7136\u5bf9\u6d41\u548c\u5f3a\u5236\u5bf9\u6d41\u73af\u5883\u4e0e\u5176\u4ed6\u4e24\u79cd\u7535\u5b50\u4ea7\u54c1\u7684\u5927\u591a\u6570\u6700\u7ec8\u4f7f\u7528\u73af\u5883\u6709\u7740\u975e\u5e38\u76f8\u4f3c\u7684\u5730\u65b9\u3002\u5728\u8fd9\u4e9b\u5bf9\u6d41\u51b7\u5374\u7684\u73af\u5883\u4e2d\uff0c\u5c01\u88c5\u5c06\u4e00\u90e8\u5206\u6563\u53d1\u7684\u70ed\u91cf\u4ece\u7a7a\u6c14\u7684\u9876\u90e8\u8868\u9762\u4e2d\u6392\u51fa\uff0c\u5176\u4f59\u90e8\u5206\u5219\u6563\u53d1\u5230\u677f\u4e0a\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u6765\u8bf4\uff0c\u8fd9\u4e24\u6761\u8def\u5f84\u51e0\u4e4e\u6db5\u76d6\u4e86\u5305\u88f9\u5916\u7684\u6240\u6709\u70ed\u6d41\u3002 \u8fd8\u6709\u53e6\u4e00\u7c7bJEDEC\u70ed\u6027\u80fd\u6307\u6807\uff0c\u5bf9\u4e8e\u8ba1\u7b97\u5e94\u7528\u73af\u5883\u7684\u7ed3\u6e29\u975e\u5e38\u6709\u7528\u3002\u5b83\u4eec\u88ab\u79f0\u4e3a\u70ed\u7279\u6027\u53c2\u6570\uff0c\u7531\u5e0c\u814a\u5b57\u6bcd \\(\\Psi\\) \uff08\u53d1\u97f3\u4e3a\u201cpsi\u201d\uff09\u8868\u793a[1]\u3002\u5b83\u4eec\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e0e \\(\\theta\\) \u6307\u6807\u76f8\u540c\uff0c\u5982\u4e0b\u6240\u793a\uff1a \\[ \\Psi_{jx}=\\frac{T_j-T_x}{P} \\] \u70ed\u7279\u6027\u53c2\u6570 \\(\\Psi\\) \u4e0e\u70ed\u963b \\(\\theta\\) \u4e4b\u95f4\u7684\u5173\u952e\u5dee\u5f02\u5728\u4e8e\uff1a\u5728\u524d\u8005\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u90e8\u5206\u70ed\u91cf\u6d41\u5411\u7531\u6e29\u5ea6 \\(T_x\\) \u8868\u793a\u7684\u533a\u57df\u3002\u5f53 \\(T_x\\) \u548c \\(P\\) \u5df2\u77e5\u65f6\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u6765\u4f30\u8ba1 \\(T_j\\) \u3002\u6700\u76f8\u5173\u5230\u6211\u4eec\u7684\u76ee\u7684\u7684\u5ea6\u91cf\u662f \\(\\Psi_{jt}\\) \u548c \\(\\Psi_{jb}\\) \uff0c\u5176\u4e2d \\(T_{T}\\) \u8868\u793a\u5728\u5c01\u88c5\u7684\u9876\u90e8\u4e2d\u5fc3\u7684\u6e29\u5ea6\u548c \\(T_{B}\\) \u662f\u677f\u7684\u6e29\u5ea6\uff0c\u4e0a\u81f3\u6240\u8ff0\u5c01\u88c5\u5185\u710a\u63a5\u7684\u8868\u9762\u8ff9\u7ebf\u6d4b\u91cf\u8ddd\u5c01\u88c5\u8fb9\u7f181\u6beb\u7c73\u3002\u75d5\u8ff9\u5e94\u8be5\u5728\u5176\u4e00\u4fa7\u7684\u4e2d\u95f4\u4e0e\u5305\u88c5\u63a5\u89e6\u3002 \u56fe2a\u3002\u70ed\u7535\u963b\u7f51\u7edc\u4ee3\u8868\u7ed3\u5230\u677f\u5230\u7a7a\u6c14\u8def\u5f84\u548c\u7ed3\u5230\u58f3\u5230\u7a7a\u6c14\u8def\u5f84\u3002 \u56fe2b\u3002\u56fe\u89e3\u8bf4\u660e\u4e86 \\(\\theta\\) \u548c\u7b49\u6548 \\(\\Psi\\) \u503c\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4f5c\u4e3a\u70ed\u91cf\u4ece\u5c01\u88c5\u9876\u90e8\u6d41\u51fa\u5230\u7a7a\u6c14\u7684\u51fd\u6570\u3002 \u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u578b\u6765\u6df1\u5165\u4e86\u89e3\u5c01\u88c5/\u7535\u8def\u677f\u7ec4\u4ef6\u7684\u6563\u70ed\u6027\u80fd\u3002\u56fe2a\u8868\u793a\u4f7f\u7528\u7b80\u5355\u70ed\u963b\u7f51\u7edc\u7684\u4e24\u6761\u70ed\u6d41\u8def\u5f84\u3002\u8fd9\u4e24\u6761\u8def\u5f84\u4e4b\u95f4\u7684\u603b\u70ed\u91cf\u7684\u5212\u5206\u6700\u7ec8\u662f\u7531\u6cbf\u6bcf\u6761\u8def\u5f84\u7684\u603b\u70ed\u963b\uff0c\u8fd9\u662f\u7b49\u4e8e\u0398\u786e\u5b9aJC +\u0398 CA\u548c\u0398 JB +\u0398 BA\u5206\u522b\u3002\u7535\u963b\u0398 CA\u548c\u0398 BA\u8868\u793a\u70ed\u8f93\u9001\u7684\u5206\u522b\u4ece\u5c01\u88c5\u548c\u677f\uff0c\u4e0a\u65b9\u7684\u6548\u7387\uff0c\u73af\u5883\u7a7a\u6c14\uff0c\u5e76\u4e14\u5404\u81ea\u7684\u7a7a\u6c14\u901f\u5ea6\u7684\u51fd\u6570\u3002\u9664\u975e\u6563\u70ed\u5668\u9644\u63a5\u81f3\u5305\u88c5\u7684\u9876\u90e8\uff0c\u0398 BA\u5c06\u6bd4\u0398\u5c0f\u5f97\u591aCA\u7531\u4e8e\u5bf9\u76f8\u6bd4\u4e8e\u5305\u88c5\u7684\u9876\u90e8\u7684\u70ed\u4ea4\u6362\u5728\u7a7a\u6c14\u4e2d\u7684\u677f\u8868\u9762\u7684\u66f4\u5927\u7684\u533a\u57df\u3002\u8fd9\u4e2a\u7535\u8def\u7684\u68c0\u67e5\u8868\u660e\uff0c\u5728\u7a7a\u6c14\u4e2d\u7684\u901f\u5ea6\u7684\u53d8\u5316\u5c06\u4fee\u6539\u0398\u7684\u503cCA\u548c\u0398 BA\uff0c\u5bfc\u81f4\u5728\u529f\u7387\u6cbf\u4e24\u4e2a\u8def\u5f84\u5e76\u4e14\u5728\u03a8\u540e\u7eed\u6539\u53d8\u6d41\u52a8\u53d8\u5316\u0164\u548c\u03a8 \u4e59\u548c \\(\\Psi_{JT}\\) \u548c \\(\\Psi_{JB}\\) \u3002 \u5728\u56fe2b\u7684\u56fe\u8868\u8bf4\u660e\u03a8\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfbJT\u548c \\(\\Psi_{JB}\\) \u4f5c\u4e3a\u6d41\u51fa\u7684\u5305\uff08P\u9876\u90e8\u7684\u7535\u6e90TOP\uff09\u7684\u53d8\u5316\u3002\u5b83\u663e\u793a\u4e86\u5982\u4f55\u5728P\u7684\u503c\u5c0fTOP\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u7535\u529b\u6d41\u5411\u677f\u548c \\(\\Psi_{JB}\\) \u63a5\u8fd1\u0398\u7684\u503cJB\u3002\u76f8\u53cd\uff0c\u5982\u679c\u4e00\u4e2a\u6563\u70ed\u7247\u9644\u63a5\u81f3\u5305\u88c5\u7684\u9876\u90e8\uff0c\u4f7f\u5f97P TOP\u51e0\u4e4e\u7b49\u4e8e\u603b\u529f\u7387\uff0c\u5219 \\(\\Psi_{JT}\\) \u8fd1\u4f3c\u4e8e\u0398\u7684\u503cJC\u3002 \u672c\u6587\u63a2\u8ba8\u4e86\u8fd9\u4e9b\u4e0d\u540c\u6307\u6807\u4e4b\u95f4\u7684\u5173\u7cfb\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u6307\u68071\uff09\u7528\u73b0\u6709\u7684\u7535\u5b50\u7cfb\u7edf\u6765\u4f30\u7b97\u7ed3\u6e29\u62162\uff09\u5728\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u9884\u6d4b\u7cfb\u7edf\u7684\u7ed3\u6e29\u3002","title":"\u4ecb\u7ecd"},{"location":"Flotherm/%E4%BD%BF%E7%94%A8JEDEC%E7%83%AD%E5%BA%A6%E9%87%8F%E8%AE%A1%E7%AE%97%E8%8A%AF%E7%89%87%E6%B8%A9%E5%BA%A6%E6%97%A0%E9%99%84%E5%8A%A0%E6%95%A3%E7%83%AD%E5%99%A8/#jedec_1","text":"\u56fe3a\u5305\u542b\u572835 x 35 mm\uff0c388\u7403\uff0cPBGA\u5c01\u88c5\u4e0a\u6d4b\u91cf\u7684\u51e0\u4e2a\u5ea6\u91cf\u56fe\uff0c\u5176\u4e2d\u5305\u542b\u4e24\u4e2a\u94dc\u5e73\u9762\u76844\u5c42\u53e0\u5c42\u3002\u8be5\u5c01\u88c5\u88ab\u5b89\u88c5\u5230\u4e00\u4e2a100\u5e73\u65b9\u6beb\u7c73\u7684JEDEC\u6807\u51c6\u7535\u8def\u677f\u4e0a\uff0c\u5e76\u5e26\u6709\u4e24\u4e2a\u94dc\u5185\u90e8\u5e73\u9762\u3002\u4e24\u4e2a\u4e0a\u90e8\u66f2\u7ebf\u662f \\(\\theta_{JA}\\) \u548c \\(\\Psi_{JB}\\) \u3002\u7b2c\u4e09\u66f2\u7ebf\uff0c \\(\\Psi_{BA}\\) \u662f\u901a\u8fc7\u51cf\u53bb\u03a8\u5f97\u5230JB\u4ece \\(\\theta_{JA}\\) \u3002 \u7684 \\(\\theta_{JA}\\) \u66f2\u7ebf\u663e\u793a\u5728\u7a7a\u6c14\u901f\u5ea6\u7684\u4f9d\u8d56\u6027\u663e\u8457\uff0c\u4e3b\u8981\u662f\u7531\u4e8e\u7535\u8def\u677f\u7684\u4f5c\u7528\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6563\u70ed\u7247\uff0c\u56e0\u4e3a\u5b83\u8fdb\u884c\u70ed\u4ea4\u6362\u4ee5\u5728\u5176\u6574\u4e2a\u533a\u57df\u4e2d\u7684\u5bf9\u6d41\u6c14\u6d41\u3002 \u76f8\u6bd4\u4e4b\u4e0b\uff0c \\(\\Psi_{JB}\\) \u51e0\u4e4e\u662f\u72ec\u7acb\u7684\u7a7a\u6c14\u6d41\u901f\u3002\u8fd9\u662f\u56e0\u4e3a\u5927\u90e8\u5206\u6765\u81ea\u63a5\u70b9\u7684\u70ed\u6d41\u901a\u8fc7\u5185\u90e8\u4f20\u5bfc\u8fc7\u7a0b\u6d41\u5411\u677f\u3002\u8fd9\u8868\u660e\uff0c \\(\\Psi_{JB}\\) \u662f\u76f8\u5bf9\u575a\u56fa\u7684\uff0c\u5e76\u4e14\u662f\u5728\u5c01\u88c5\u7684\u5177\u6709\u5bf9\u6d41\u73af\u5883\u7684\u8d21\u732e\u76f8\u5bf9\u8f83\u5c0f\u7684\u70ed\u4f20\u5bfc\u6548\u7387\u7684\u6709\u6548\u63aa\u65bd\u3002 \u5728 \\(\\Psi_{BA}\\) \u66f2\u7ebf\u8868\u73b0\u5728\u7a7a\u6c14\u901f\u5ea6\u6700\u5927\u7684\u7075\u654f\u5ea6\uff0c\u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\uff0c\u5b83\u7684\u5e45\u5ea6\u662f\u5728\u677f\u7684\u8026\u5408\u4f20\u5bfc\u5bf9\u6d41\u51b7\u5374\u673a\u6784\u7684\u76f4\u63a5\u7ed3\u679c\u3002 \u56fe3.\u5e26\u67094\u5c42JEDEC\u6807\u51c6\u7535\u8def\u677f\u768435X35mm\uff0c388\u7403PBGA\u5c01\u88c5\u7684\u70ed\u6d4b\u8bd5\u7ed3\u679c\u4e0e\u7a7a\u6c14\u6d41\u901f\u7684\u5173\u7cfb\u3002 \u56fe3b\u66f2\u7ebf \\(\\Psi_{JT}\\) \u4e0e\u7a7a\u6c14\u901f\u5ea6\u3002\u6b63\u5982\u6240\u6599\uff0c\u5b83\u662f\u4e00\u4e2a\u654f\u611f\u7684\u7a7a\u6c14\u901f\u5ea6\u51fd\u6570\uff0c\u56e0\u4e3a\u4ece\u6a21\u5177\u901a\u8fc7\u5305\u8986\u6210\u578b\u5851\u6599\u76d6\u7684\u70ed\u6d41\u91cf\u4e0e\u4e00\u5b9a\u7684\u7a7a\u6c14\u6d41\u901f\u76f8\u5173\u7684\u4f20\u70ed\u7cfb\u6570\u6210\u6b63\u6bd4\u3002\u4e00\u4e2a\u8fd8\u6ce8\u610f\u5230\u5728\u7a7a\u6c14\u901f\u5ea6\u9ad8\u8fbe2.5\u7c73/\u79d2\uff0c \\(\\Psi_{JT}\\) \u662f\u5c0f\u4e8e1\u2103/ W\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u9002\u5ea6\u7684\u529f\u7387\u6c34\u5e73\uff0c\u5c01\u88c5\u9876\u90e8\u4e2d\u5fc3\u7684\u6e29\u5ea6\u53ea\u6bd4\u8fde\u63a5\u70b9\u7565\u4f4e\u3002\u8fd9\u7528\u4e8e\u51cf\u5c11\u5728\u8ba1\u7b97T\u4e2d\u7684\u9519\u8bef\u0134\u7531\u4e8e\u0394T\u7684\u503cJT\u4f7f\u7528\u7b49\u5f0f2\u968f\u540e\u5c06\u662f\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u6821\u6b63\uff0c\u4ee5\u589e\u52a0T\u7684\u5927\u5f97\u591a\u7684\u6d4b\u91cf\u503c\u6765\u8ba1\u7b97\u0164\u3002 \u8be5\u5206\u6790\u5bfc\u81f4\u8fd9\u6837\u7684\u7ed3\u8bba\uff1a\u03a8\u7684\u4e3b\u8981\u4ef7\u503cJB\u662f\uff0c\u5b83\u662f\u9002\u5ea6\u7a33\u5065\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u6765\u9884\u6d4b\u7ed3\u548c\u4e00\u4e2a\u677f\uff0c\u5f53\u8017\u6563\u529f\u7387\u662f\u5df2\u77e5\u4e4b\u95f4\u7684\u6e29\u5ea6\u5dee\u3002\u76f8\u53cd\uff0c\u5982\u679c\u5728\u4ed6\u9762\u524d\u6709\u4e00\u4e2a\u64cd\u4f5c\u7535\u5b50\u7cfb\u7edf\uff0c\u5e76\u4e14\u5e0c\u671b\u901a\u8fc7\u6d4b\u91cf\u5c01\u88c5\u9876\u90e8\u7684\u6e29\u5ea6\u6765\u4e86\u89e3\u5851\u6599\u5c01\u88c5\u4e2d\u7684\u7ba1\u82af\u6e29\u5ea6\uff0c\u5219 \\(\\Psi_{JT}\\) \u66f4\u6709\u7528\u3002 \u5b83\u5e76\u4e0d\u603b\u662f\u03a8\u60c5\u51b5JT\u7531\u5305\u4f9b\u5e94\u5546\u63d0\u4f9b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u8d77\u6765\u76f8\u5bf9\u5bb9\u6613\u3002 \u5728\u524d\u9762\u4e00\u5217\u4e2d\uff0c\u63a8\u5bfc\u51fa\u4ee5\u4e0b\u7b49\u5f0f[6]\uff1a $$ \\Psi_{JT}=\\frac{h\\theta_{JA}t_{EMC}}{K_{EMC}} $$ \u5176\u4e2d \\(h\\) \u662f\u5728\u611f\u5174\u8da3\u7684\u7a7a\u6c14\u901f\u5ea6\u4e0b\u8ba1\u7b97\u7684\u4f20\u70ed\u7cfb\u6570\u7684\u503c\uff0c\u5e76\u4e14 \\(t_{EMC}\\) \u548c \\(K_{EMC}\\) \u662f\u6a21\u5177\u4e0a\u65b9\u7684\u73af\u6c27\u6811\u8102\u6a21\u5851\u6599\u7684\u539a\u5ea6\u53ca\u5176\u5bfc\u70ed\u7387\u3002\u5728\u672c\u4f8b\u4e2d\uff0c \\(t_{EMC}\\) \u548c \\(K_{EMC}\\) \u5206\u522b\u4e3a0.86 mm\u548c0.7 W / mK\u3002 \u03a8\u7684\u8ba1\u7b97\u503cJT\u7ed8\u5236\u5728\u56fe3b\u548c\u4e5f\u5217\u5728\u4e0e\u5269\u4f59\u7684\u53c2\u6570\u8f93\u5165\u6cbf\u4e0b\u8868\u5165\u7b49\u5f0f3\u03a8\u7684\u6d4b\u91cf\u548c\u8ba1\u7b97\u503c\u4e4b\u95f4\u7684\u5dee\u5f02JT\u662f\u5c0f\u7684\u7edd\u5bf9\u503c\u3002","title":"JEDEC\u70ed\u6d4b\u91cf\u5728\u5f3a\u5236\u7a7a\u6c14\u6d4b\u8bd5\u73af\u5883\u4e2d\u7684\u884c\u4e3a"},{"location":"Flotherm/%E4%BD%BF%E7%94%A8JEDEC%E7%83%AD%E5%BA%A6%E9%87%8F%E8%AE%A1%E7%AE%97%E8%8A%AF%E7%89%87%E6%B8%A9%E5%BA%A6%E6%97%A0%E9%99%84%E5%8A%A0%E6%95%A3%E7%83%AD%E5%99%A8/#psi_jb","text":"\u4e3a\u4e86\u6210\u529f\u5730\u4f7f\u7528 \\(\\Psi_{JB}\\) \u5ea6\u91cf\u5728\u9884\u6d4b\u7ed3\u6e29\uff0c\u9700\u8981\u77e5\u9053 \\(T_B\\) \u5e76\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u8017\u6563\u529f\u7387\u548c\u7a7a\u6c14\u7684\u6d41\u52a8\u6761\u4ef6\u3002 \u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u4f30\u7b97 \\(T_B\\) \u3002\u5176\u4e2d\u7684\u9009\u62e9\u662f\u5efa\u7acb\u4e00\u4e2a\u8d1f\u8f7d\u677f\uff0c\u5177\u6709\u5b9e\u9645\u7535\u8def\u677f\u7684\u603b\u4f53\u5c3a\u5bf8\u548c\u7535\u5bfc\u7387\uff0c\u5e76\u4f7f\u7528\u52a0\u70ed\u5668\u9884\u671f\u7684\u70ed\u8d1f\u8377\uff0c\u4ee5\u53ca\u9002\u5f53\u7684\u51b7\u5374\u65b9\u6cd5[7]\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u521b\u5efa\u9002\u5f53\u7684\u8ba1\u7b97\u6d41\u4f53\u52a8\u529b\u5b66\uff08CFD\uff09\u6216\u677f\u7684\u6709\u9650\u5143\u6216\u6709\u9650\u5dee\u5206\u4f20\u5bfc\u6a21\u578b\uff0c\u5e76\u8003\u8651\u70ed\u8d1f\u8377\u548c\u51b7\u5374\u3002\u6700\u540e\uff0c\u5982\u679c\u9700\u8981\u5feb\u901f\u800c\u9002\u5ea6\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5728\u6a21\u578b\u4e2d\u5305\u542b\u5355\u5c01\u88c5\u677f\u6765\u4f30\u7b97\u7535\u8def\u677f\u6e29\u5ea6\u3002\u9002\u5f53\u7684\u7535\u8def\u677f\u5c3a\u5bf8\u5c06\u53d6\u51b3\u4e8e\u5b9e\u9645\u7535\u8def\u677f\u7684\u9762\u79ef\uff0c\u4e58\u4ee5\u611f\u5174\u8da3\u7684\u5668\u4ef6\u529f\u7387\u4e0e\u7535\u8def\u677f\u4e0a\u6240\u6709\u5668\u4ef6\u7684\u603b\u529f\u7387\u7684\u6bd4\u503c[8]\u3002 \u03a8\u7684\u6709\u7528JB\uff0c\u8fd9\u662f\u5728\u4e00\u4e2a\u6807\u51c6\u7684\u6d4b\u8bd5\u73af\u5883\u4e2d\u4ea7\u751f\uff0c\u4ee5\u7ed3\u6e29\u7684\u9884\u6d4b\u4e2d\u7684\u4e8b\u5b9e\uff0c\u5728\u4e24\u79cd\u73af\u5883\u4e0b\uff0c\u5b58\u5728\u65bd\u52a0\u5230\u5c01\u88c5\u7684\u9876\u90e8\uff0c\u5bf9\u6d41\u8fb9\u754c\u6761\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\uff0c\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u5c06\u4ee5\u76f8\u540c\u7684\u98ce\u901f\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4ece\u6a21\u5177\u5230\u5c01\u88c5\u9876\u90e8\u7684\u5355\u4e2a\u7535\u963b\u8fde\u63a5\u5bf9\u4e8e\u4efb\u610f\u7684\u8fb9\u754c\u6761\u4ef6\u800c\u8a00\u5e76\u4e0d\u603b\u662f\u51c6\u786e\u7684\u3002\u4e3a\u4e86\u5177\u6709\u7a33\u5065\u7684\u8fb9\u754c\u6761\u4ef6\u72ec\u7acb\u6027\uff0c\u9700\u8981\u4e00\u4e2a\u7d27\u51d1\u7684\u70ed\u6a21\u578b\uff0c\u4f8b\u5982[9]\u3002 \u65e0\u8bba\u662f\u5728JEDEC\u6807\u51c6\u591a\u5c42\u677f\u4e0a\u8fd8\u662f\u5728\u5e94\u7528\u677f\u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5c01\u88c5\u6765\u8bf4\uff0c\u81f4\u529b\u4e8e\u5f00\u53d1 \\(\\Psi_{JB}\\) \u6807\u51c6\u7684\u521d\u59cb\u5de5\u4f5c\u90fd\u8868\u73b0\u51fa\u4e86\u76f8\u4f3c\u7684\u503c[10]\u3002","title":"\u4f7f\u7528\\(\\Psi_{JB}\\)\u9884\u6d4b\u7ed3\u6e29"},{"location":"Flotherm/%E4%BD%BF%E7%94%A8JEDEC%E7%83%AD%E5%BA%A6%E9%87%8F%E8%AE%A1%E7%AE%97%E8%8A%AF%E7%89%87%E6%B8%A9%E5%BA%A6%E6%97%A0%E9%99%84%E5%8A%A0%E6%95%A3%E7%83%AD%E5%99%A8/#_2","text":"\u7684JEDEC\u6807\u51c6\u70ed\u7279\u6027\u53c2\u6570\uff0c \\(\\Psi_{JB}\\) \u548c \\(\\Psi_{JT}\\) \uff0c\u53ef\u4ee5\u5728\u4fc3\u8fdb\u7ed3\u6e29\u5728\u534a\u5bfc\u4f53\u5c01\u88c5\u7684\u8ba1\u7b97\u65e2\u4e3a\u5b9e\u65f6\u7cfb\u7edf\uff0c\u5e76\u4e14\u8fd8\u5728\u9884\u6d4b\u8ba1\u7b97\u662f\u6709\u4ef7\u503c\u7684\u3002\u901a\u8fc7\u6d4b\u91cf\u786e\u5b9a\u7684\u8fd9\u4e9b\u6307\u6807\u901a\u8fc7\u63d0\u4f9b\u6a21\u62df\u7ed3\u6e29\u5ea6\u7684\u65b9\u4fbf\u5b9e\u9a8c\u9a8c\u8bc1\u6765\u8865\u5145\u7eaf\u70ed\u6a21\u62df\u65b9\u6cd5\u3002 \u53c2\u8003 \\1. JEDEC\u6807\u51c6JESD51-12\uff0c\u201c\u7535\u5b50\u5c01\u88c5\u6563\u70ed\u4fe1\u606f\u62a5\u544a\u548c\u4f7f\u7528\u6307\u5357\u201d\u3002\u6240\u6709JEDEC\u6807\u51c6\u53ef\u4ecewww.jedec.org\u514d\u8d39\u4e0b\u8f7d\u3002 \\2. JEDEC\u6807\u51c6JESD51-2A\u201c\u96c6\u6210\u7535\u8def\u70ed\u6d4b\u8bd5\u65b9\u6cd5\u73af\u5883\u6761\u4ef6 - \u81ea\u7136\u5bf9\u6d41\uff08\u9759\u6b62\u7a7a\u6c14\uff09\u201d \u30023. JEDEC\u6807\u51c6JESD51-6\uff0c\u201c\u96c6\u6210\u7535\u8def\u70ed\u6d4b\u8bd5\u65b9\u6cd5\u73af\u5883\u6761\u4ef6 - \u5f3a\u5236\u5bf9\u6d41\uff08\u79fb\u52a8\u7a7a\u6c14\uff09\u201d\u3002 \\4. JEDEC\u6807\u51c6JESD51-14\uff0c\u201c\u901a\u8fc7\u5355\u901a\u9053\u70ed\u6d41\u6d4b\u91cf\u534a\u5bfc\u4f53\u5668\u4ef6\u70ed\u963b\u7ed3\u7684\u77ac\u6001\u53cc\u63a5\u53e3\u6d4b\u8bd5\u65b9\u6cd5\u201d \u30025. JEDEC\u6807\u51c6JESD51-8\u201c\u96c6\u6210\u7535\u8def\u70ed\u6d4b\u8bd5\u65b9\u6cd5\u73af\u5883\u6761\u4ef6 - \u4ea4\u754c\u5904\u201c\u3002 \\6. B. Guenin\uff0c\u201c\u786e\u5b9a\u5851\u6599\u534a\u5bfc\u4f53\u5c01\u88c5\u4e2d\u7684\u7ed3\u6e29\uff0c\u7b2c\u4e00\u90e8\u5206\uff0c\u201dElectronicsCooling\uff0c\u7b2c5\u53f7\uff0c\u7b2c2\u53f7\uff0c1999\u5e745\u6708 \u30027. B. Siegal\uff0c\u201c\u70ed\u8d1f\u8f7d\u677f\u8bbe\u8ba1\u8003\u8651\u56e0\u7d20\uff0c\u201dElectronicsCooling\uff0c\u5377\u300218\uff0c\u7b2c3\u671f\uff0c\u4e5d\u6708\uff0c2009\u5e74 8 B. Guenin\uff0c\u201c\u5b9a\u6027\u4e0a\u7ec4\u88c5\u5370\u5237\u7535\u8def\u677f\u4e0a\u7684\u5c01\u88c5\uff0c\u201d ElectronicsCooling\uff0c\u5377\u3002\u7b2c7\u671f\uff0c\u7b2c2\u671f\uff0c2001\u5e745\u6708 \u30029. S. Shidore\uff0c\u201c\u7535\u5b50\u8bbe\u8ba1\u4e2d\u7684\u7d27\u51d1\u578b\u70ed\u6a21\u578b\u201dElectronicsCooling\uff0cVol\u300213\uff0c\u7b2c2\u53f7\uff0c\u6708\uff0c2007\u5e74 10 B.\u6728\u201c\u5728\u9884\u6d4b\u5de5\u7a0b\u4f7f\u7528\u7ed3\u5bf9\u677f\u70ed\u963b\uff0c\u201d\u7535\u5b50\u5236\u51b7\uff0c\u5377\u3002\u7b2c1\u53f7\uff0c1999\u5e741\u6708\u3002","title":"\u7ed3\u8bba"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/","text":"\u5171\u8f6d\u4f20\u70ed \u6211\u4eec\u5c06\u5728\u672c\u7bc7\u535a\u5ba2\u4e2d\u89e3\u91ca \u5171\u8f6d\u4f20\u70ed \u8fd9\u4e00\u6982\u5ff5\uff0c\u5e76\u4f1a\u5c55\u793a\u76f8\u5173\u5e94\u7528\u3002\u5171\u8f6d\u4f20\u70ed\u7efc\u5408\u4e86\u56fa\u4f53\u4f20\u70ed\u548c\u6d41\u4f53\u4f20\u70ed\u3002\u56fa\u4f53\u4f20\u70ed\u4ee5\u4f20\u5bfc\u4e3a\u4e3b\uff1b\u6d41\u4f53\u4f20\u70ed\u5219\u4ee5\u5bf9\u6d41\u4e3a\u4e3b\u3002\u6211\u4eec\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u90fd\u80fd\u89c2\u5bdf\u5230\u5171\u8f6d\u4f20\u70ed\u3002\u5982\u8bbe\u8ba1\u6563\u70ed\u5668\u65f6\uff0c\u5c31\u53ef\u4ee5\u7ed3\u5408\u6563\u70ed\u5668\u4e2d\u7684\u4f20\u5bfc\u548c\u5468\u56f4\u6d41\u4f53\u4e2d\u7684\u5bf9\u6d41\u6765\u8fdb\u884c\u4f18\u5316\u3002 \u56fa\u4f53\u548c\u6d41\u4f53\u4f20\u70ed \u56fa\u4f53\u4e2d\u7684\u4f20\u70ed \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u56fa\u4f53\u4f20\u70ed\u4ec5\u8003\u8651\u4f20\u5bfc\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 Fourier\u5b9a\u5f8b\u8fdb\u884c\u63cf\u8ff0\uff0c\u6b64\u65f6\u5c06\u5b9a\u4e49\u4f20\u5bfc\u70ed\u901a\u91cf \\(q\\) \u4e0e\u6e29\u5ea6\u68af\u5ea6\u6210\u6b63\u6bd4\uff0c\u5373\uff1a \\[ q=k \\nabla T \\] \u5bf9\u4e8e\u77ac\u6001\u95ee\u9898\uff0c\u9759\u6b62\u56fa\u4f53\u4e2d\u7684\u6e29\u5ea6\u573a\u5219\u8bc1\u660e\u4e86\u4f20\u70ed\u65b9\u7a0b\u7684\u4ee5\u4e0b\u5f62\u5f0f\uff1a $$ \\rho C_p\\frac{\\partial T}{\\partial t} = \\nabla \\cdot (k\\nabla T) +Q $$ \u6d41\u4f53\u4e2d\u7684\u4f20\u70ed \u7531\u4e8e\u6d41\u4f53\u8fd0\u52a8\uff0c\u4f20\u70ed\u65b9\u7a0b\u4e2d\u7684\u4e09\u4e2a\u8d21\u732e\u9879\u5206\u522b\u4e3a\uff1a \u6d41\u4f53\u4f20\u9012\u610f\u5473\u7740\u80fd\u91cf\u4f20\u9012\uff0c\u5728\u4f20\u70ed\u65b9\u7a0b\u4e2d\uff0c\u8be5\u9879\u4f5c\u4e3a\u5bf9\u6d41\u8d21\u732e\u3002\u6839\u636e\u6d41\u4f53\u548c\u6d41\u578b\u7684\u70ed\u5b66\u5c5e\u6027\uff0c\u53ef\u80fd\u4ee5\u5bf9\u6d41\u6216\u4f20\u5bfc\u4f20\u70ed\u4e3a\u4e3b\u3002 \u6d41\u4f53\u6d41\u52a8\u7684\u7c98\u6027\u6548\u5e94\u5c06\u5bfc\u81f4\u6d41\u4f53\u52a0\u70ed\u3002\u901a\u5e38\u5ffd\u7565\u8be5\u9879\uff0c\u4f46\u5728\u5feb\u901f\u6d41\u52a8\u7684\u7c98\u6027\u6d41\u4f53\u4e2d\uff0c\u5219\u5e94\u8003\u8651\u3002 \u5982\u679c\u6d41\u4f53\u5bc6\u5ea6\u4f1a\u6839\u636e\u6e29\u5ea6\u53d8\u5316\uff0c\u5219\u5e94\u5728\u4f20\u70ed\u65b9\u7a0b\u4e2d\u52a0\u5165\u538b\u529b\u529f\u8d21\u732e\u9879\u3002\u5b83\u4ee3\u8868\u4e86\u8bf8\u5982\u538b\u7f29\u7a7a\u6c14\u4f1a\u4ea7\u751f\u70ed\u4e4b\u7c7b\u7684\u8457\u540d\u6548\u5e94\u3002 \u4e3a\u4e86\u8bf4\u660e\u4f20\u5bfc\u53ca\u6240\u6709\u8fd9\u4e9b\u8d21\u732e\u9879\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e0b\u65b9\u7684\u77ac\u6001\u4f20\u70ed\u65b9\u7a0b\u4ee5\u8bf4\u660e\u6d41\u4f53\u4e2d\u7684\u6e29\u5ea6\u573a\uff1a $$ \\rho C_{p} \\frac{\\partial T}{\\partial t}+\\rho C_p\\bold{u}\\cdot\\nabla T = \\alpha_p {T}\\left( \\frac{\\partial p_\\mathrm{A}}{\\partial t}+\\bold{u}\\cdot\\nabla p_\\mathrm{A}\\right)+\\tau : S+\\nabla \\cdot (k\\nabla T) +Q $$ \u5171\u8f6d\u4f20\u70ed\u5e94\u7528 \u6709\u6548\u4f20\u70ed \u8bbe\u8ba1\u9ad8\u6548\u51b7\u5374\u5668\u3001\u52a0\u70ed\u5668\u6216\u6362\u70ed\u5668\u65f6\uff0c\u80fd\u5426\u6709\u6548\u7ed3\u5408\u6d41\u4f53\u548c\u56fa\u4f53\u4e2d\u7684\u4f20\u70ed\u8fd9\u4e00\u70b9\u975e\u5e38\u5173\u952e\u3002 \u6d41\u4f53\u901a\u5e38\u5728\u957f\u8ddd\u79bb\u4e2d\u626e\u6f14\u8f7d\u80fd\u4f53\u7684\u89d2\u8272\u3002\u5f3a\u5236\u5bf9\u6d41\u662f\u5b9e\u73b0\u9ad8\u6362\u70ed\u7387\u7684\u6700\u5e38\u89c1\u65b9\u6cd5\u3002\u5728\u4e00\u4e9b\u5e94\u7528\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7ed3\u5408\u5bf9\u6d41\u4e0e\u76f8\u53d8\u6765\u8fdb\u4e00\u6b65\u63d0\u5347\u5176\u6027\u80fd\uff0c\u4f8b\u5982\uff0c\u4ece\u6db2\u6001\u6c34\u5230\u84b8\u6c7d\u7684\u76f8\u53d8\u3002 \u5373\u4fbf\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u662f\u9700\u8981\u56fa\u4f53\uff0c\u7279\u522b\u662f\u5728\u6362\u70ed\u5668\u4e2d\u5206\u9694\u5404\u79cd\u6d41\u4f53\uff0c\u907f\u514d\u5b83\u4eec\u5728\u80fd\u91cf\u4ea4\u6362\u8fc7\u7a0b\u4e2d\u53d1\u751f\u6df7\u5408\u3002 \u58f3\u7ba1\u5f0f\u6362\u70ed\u5668\u4e2d\u7684\u6d41\u52a8\u548c\u6e29\u5ea6\u573a\u663e\u793a\u4e86\u8584\u91d1\u5c5e\u58c1\u5206\u9694\u7684\u4e24\u79cd\u6d41\u4f53\u4e4b\u95f4\u7684\u4f20\u70ed \u3002 \u6563\u70ed\u5668\u901a\u5e38\u7531\u5177\u6709\u8f83\u9ad8\u5bfc\u70ed\u7cfb\u6570\u7684\u91d1\u5c5e\u5236\u6210\uff0c\u5982\u94dc\u6216\u94dd\u3002\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u56fa\u4f53\u90e8\u4ef6\u4e0e\u5468\u56f4\u6db2\u4f53\u95f4\u7684\u4ea4\u6362\u9762\u79ef\u6765\u589e\u5f3a\u6563\u70ed\u3002 \u6392\u6c14\u6247\u548c\u591a\u5b54\u683c\u6805\u5e26\u6765\u7684\u7a7a\u6c14\u6d41\u63d0\u4f9b\u51b7\u5374\u7684\u7535\u6e90\u5355\u5143\u4e2d\u7684\u6e29\u5ea6\u573a\u3002\u4f7f\u7528\u4e24\u4e2a\u94dd\u5236\u7fc5\u7247\u6765\u589e\u52a0\u6d41\u52a8\u548c\u7535\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4ea4\u6362\u9762\u79ef \u3002 \u8282\u80fd \u4e5f\u53ef\u4ee5\u7ed3\u5408\u6d41\u4f53\u548c\u56fa\u4f53\u4e2d\u7684\u4f20\u70ed\u6765\u5c06\u5404\u79cd\u5668\u4ef6\u4e2d\u7684\u70ed\u635f\u964d\u5230\u6700\u4f4e\u3002\u7531\u4e8e\u5927\u90e8\u5206\u6c14\u4f53\uff08\u5c24\u5176\u662f\u5728\u4f4e\u538b\u73af\u5883\u4e0b\uff09\u7684\u5bfc\u70ed\u7cfb\u6570\u8f83\u4f4e\uff0c\u56e0\u6b64\u9759\u6001\u6c14\u4f53\u53ef\u7528\u4f5c\u7edd\u70ed\u4f53\u3002\u56e0\u4e3a\u6c14\u4f53\u7684\u91cd\u91cf\u5f88\u4f4e\uff0c\u6240\u4ee5\u4f18\u5148\u7528\u4e8e\u5404\u7c7b\u5e94\u7528\u3002\u4f46\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u90fd\u5fc5\u987b\u9650\u5236\u5bf9\u6d41\u4f20\u70ed\uff0c\u7279\u522b\u662f\u8981\u964d\u4f4e\u81ea\u7136\u5bf9\u6d41\u6548\u5e94\u3002\u53ef\u901a\u8fc7\u58c1\u9762\u7684\u5b89\u653e\u4f4d\u7f6e\u548c\u5c0f\u578b\u7a7a\u8154\u6765\u63a7\u5236\u81ea\u7136\u5bf9\u6d41\u3002\u5f53\u7528\u4e8e\u5fae\u5c0f\u5c3a\u5ea6\u65f6\uff0c\u8be5\u539f\u5219\u4e5f\u5c31\u5f15\u7533\u51fa\u4e86\u7edd\u7f18\u6ce1\u6cab\u7684\u6982\u5ff5\uff0c\u5728\u7edd\u7f18\u6ce1\u6cab\u4e2d\uff0c\u5fae\u5c0f\u7a7a\u6c14\u8154\uff08\u6c14\u6ce1\uff09\u88ab\u9650\u5236\u5728\u6ce1\u6cab\u6750\u8d28\u4e2d\uff08\u5982\u805a\u6c28\u916f\uff09\uff0c\u4f7f\u8fd9\u79cd\u6750\u6599\u7edd\u7f18\u6027\u80fd\u8f83\u9ad8\u4e14\u8d28\u91cf\u8f83\u8f7b\u3002 \u7a97\u6237\u6a2a\u622a\u9762\uff08\u5de6\uff09\u548c\u7a97\u6846\u653e\u5927\u56fe\uff08\u53f3\uff09 ISO 10077-2:2012 \u6807\u51c6\u7684\u7a97\u6846\u548c\u73bb\u7483\u6a2a\u622a\u9762\u7684\u6e29\u5ea6\u5256\u9762\u56fe (\u7a97\u6237\u7684\u70ed\u6027\u80fd) \u6d41\u56fa\u8026\u5408 \u6d41\u4f53/\u56fa\u4f53\u754c\u9762 \u6e29\u5ea6\u573a\u548c\u70ed\u901a\u91cf\u5728\u6d41\u4f53/\u56fa\u4f53\u754c\u9762\u8fde\u7eed\uff0c\u7136\u800c\u5728\u8fd0\u52a8\u7684\u6d41\u4f53\u4e2d\uff0c\u6e29\u5ea6\u573a\u4f1a\u5feb\u901f\u53d8\u5316\uff1a\u5728\u9760\u8fd1\u56fa\u4f53\u5904\uff0c\u6d41\u4f53\u7684\u6e29\u5ea6\u4e0e\u56fa\u4f53\u63a5\u8fd1\uff1b\u4f46\u5728\u8fdc\u79bb\u754c\u9762\u7684\u5730\u65b9\uff0c\u6d41\u4f53\u6e29\u5ea6\u5219\u63a5\u8fd1\u4e8e\u5165\u53e3\u6216\u5468\u56f4\u6d41\u4f53\u7684\u6e29\u5ea6\u3002\u6d41\u4f53\u6e29\u5ea6\u4ece\u56fa\u4f53\u6e29\u5ea6\u53d8\u4e3a\u6d41\u4f53\u6574\u4f53\u6e29\u5ea6\u7684\u533a\u57df\u79f0\u4f5c \u70ed\u8fb9\u754c\u5c42 \u3002\u5229\u7528 Prandtl \u6570 \\(Pr=C_p \\mu/k\\) \u6765\u8868\u793a\u70ed\u8fb9\u754c\u5c42\u7684\u5927\u5c0f\u4e0e\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u76f8\u5bf9\u5927\u5c0f\uff1a\u5f53 Prandtl \u6570\u7b49\u4e8e 1 \u65f6\uff0c\u70ed\u548c\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u539a\u5ea6\u5e94\u76f8\u540c\uff1b\u5f53Prandtl \u6570\u5927\u4e8e 1 \u65f6\uff0c\u52a8\u91cf\u5c42\u8f83\u539a\uff1b\u4e0e\u4e4b\u76f8\u5bf9\uff0c\u5f53 Prandtl \u6570\u5c0f\u4e8e 1 \u65f6\uff0c \u52a8\u91cf\u8fb9\u754c\u5c42\u8981\u8584\u4e8e\u70ed\u8fb9\u754c\u5c42\u300220\u00b0C \u5927\u6c14\u538b\u4e0b\uff0c\u7a7a\u6c14\u7684 Prandtl \u6570\u4e3a 0.7\uff1b\u8fd9\u662f\u7531\u4e8e\u7a7a\u6c14\u4e2d\u52a8\u91cf\u548c\u70ed\u8fb9\u754c\u5c42\u7684\u5c3a\u5bf8\u7c7b\u4f3c\uff0c\u4f46\u52a8\u91cf\u8fb9\u754c\u5c42\u7565\u8584\u4e8e\u70ed\u8fb9\u754c\u5c42\u300220\u00b0C \u6c34\u7684 Prandtl \u6570\u4e3a 7\uff1b\u56e0\u6b64\uff0c\u6c34\u6e29\u5728\u9760\u8fd1\u58c1\u9762\u5904\u7684\u53d8\u5316\u8981\u6bd4\u901f\u5ea6\u53d8\u5316\u66f4\u5267\u70c8\u3002 \u9760\u8fd1\u8f83\u51b7\u56fa\u4f53\u58c1\u9762\u5904\u7684\u81ea\u7136\u5bf9\u6d41\u7a7a\u6c14\u7684\u5f52\u4e00\u5316\u6e29\u5ea6(\u7ea2\u8272) \u548c\u901f\u5ea6 (\u84dd\u8272) \u66f2\u7ebf \u81ea\u7136\u5bf9\u6d41 \u81ea\u7136\u5bf9\u6d41\u6a21\u5f0f\u5bf9\u5e94\u7531\u6d6e\u529b\u6548\u5e94\u9a71\u52a8\u6d41\u52a8\u7684\u7ed3\u6784\u3002\u57fa\u4e8e\u9884\u671f\u7684\u70ed\u6027\u80fd\uff0c\u81ea\u7136\u5bf9\u6d41\u53ef\u80fd\u6709\u76ca\uff08\u4f8b\u5982\u5728\u51b7\u5374\u5e94\u7528\u4e2d\uff09\uff0c\u4e5f\u53ef\u80fd\u6709\u5bb3\uff08\u5982\u7edd\u70ed\u5c42\u4e2d\u7684\u81ea\u7136\u5bf9\u6d41\uff09\u3002 Rayleigh \u6570 \\(Ra\\) \u7528\u4e8e\u8868\u5f81\u7531\u81ea\u7136\u5bf9\u6d41\u5e26\u6765\u7684\u6d41\u578b\u548c\u4f20\u70ed\u3002Rayleigh \u6570\u7531\u6d41\u4f53\u6750\u6599\u5c5e\u6027\u3001\u7a7a\u8154\u5c3a\u5bf8 \\(L\\) \uff0c\u4ee5\u53ca\u6e29\u5dee \\(\\Delta T\\) \u5b9a\u4e49\uff0c\u800c\u6e29\u5ea6\u5dee\u5219\u6839\u636e\u6d41\u4f53\u5468\u56f4\u7684\u56fa\u4f53\u6765\u8bbe\u5b9a\uff1a \\[ Ra=\\frac{\\rho^2g\\alpha_p C_p}{\\mu k}\\Delta T L^3 \\] Grashof \u6570\u662f\u53e6\u4e00\u4e2a\u6d41\u578b\u6307\u6807\uff0c\u5b83\u662f\u6d6e\u529b\u76f8\u5bf9\u7c98\u6027\u529b\u7684\u6bd4\u4f8b\uff1a \\[ Gr=\\frac{\\rho^2g\\alpha_p}{\\mu^2}\\Delta T L^3 \\] Rayleigh \u6570\u53ef\u901a\u8fc7 Prandtl \u548c Grashof \u6570\u7684\u5173\u7cfb\u5f0f\u8868\u793a\uff1a \\[ Ra=Pr Gr \\] \u5982\u679c Rayleigh \u6570\u8f83\u5c0f\uff08\u901a\u5e38<103\uff09\uff0c\u5219\u53ef\u4ee5\u5ffd\u7565\u5bf9\u6d41\uff0c\u5927\u90e8\u5206\u4f20\u70ed\u7531\u6d41\u4f53\u4e2d\u7684\u4f20\u5bfc\u9020\u6210\u3002 \u4e8e\u8f83\u5927\u7684 Rayleigh \u6570\uff0c\u5219\u9700\u8981\u8003\u8651\u5bf9\u6d41\u4f20\u70ed\u3002\u6d6e\u529b\u76f8\u5bf9\u4e8e\u7c98\u7c98\u529b\u8f83\u5927\u65f6\uff0c\u6d41\u578b\u4e3a\u6e4d\u6d41\uff0c\u5426\u5219\u4e3a\u5c42\u6d41\u3002\u4e24\u4e2a\u6d41\u578b\u4e4b\u95f4\u7684\u8fc7\u6e21\u7531 Grashof \u6570\u7684\u4e34\u754c\u9636\u6b21\u786e\u5b9a\uff0c\u5373$ 10^9 \\(\u3002\u5f53\\) Pr$\u7684\u91cf\u7ea7\u8fd1\u4f3c\u4e3a 1 \u6216\u66f4\u5927\u65f6\uff0c\u70ed\u8fb9\u754c\u5c42\uff0c\u5373\u56fa\u4f53\u58c1\u9762\u548c\u6d41\u4f53\u6574\u4f53\u4e4b\u95f4\u7684\u5178\u578b\u6e29\u5ea6\u8f6c\u53d8\u8ddd\u79bb\uff0c\u53ef\u8fd1\u4f3c\u4e3a \\[ \\delta_\\mathrm{T} \\approx \\frac{L}{\\sqrt[4\\,]{Ra}} \\] \u5f53\u4e0e\u70ed\u8868\u9762\u63a5\u89e6\u65f6\uff0c\u4e00\u676f\u51b7\u6c34\u4e2d\u7684\u81ea\u7136\u5bf9\u6d41\u6240\u5e26\u6765\u7684\u6e29\u5ea6\u5256\u9762\u56fe \u5f3a\u5236\u5bf9\u6d41 \u5f3a\u5236\u5bf9\u6d41\u6a21\u5f0f\u5bf9\u5e94\u4e8e\u8fd9\u4e00\u7ed3\u6784\uff1a\u6d41\u52a8\u7531\u5e26\u6765\u4e3b\u8981\u6d6e\u529b\u6548\u5e94\u7684\u5916\u90e8\u73b0\u8c61\uff08\u4f8b\u5982\u3001\u98ce\uff09\u6216\u5668\u4ef6\uff08\u4f8b\u5982\u3001\u98ce\u6247\u548c\u6cf5\uff09\u9a71\u52a8\u3002 \u6b64\u65f6\uff0c\u6d41\u578b\u53ef\u4f7f\u7528\u96f7\u8bfa\u6570\u4f5c\u4e3a\u6307\u6807\u8fd1\u4f3c\u8868\u5f81\u4e3a\u7b49\u6e29\u6d41\uff1a \\[ Re= \\frac{\\rho U L}{\\mu} \\] \u96f7\u8bfa\u6570\u4ee3\u8868\u4e86\u60ef\u6027\u529b\u5bf9\u7c98\u6027\u529b\u7684\u6bd4\u4f8b\u3002\u5f53\u96f7\u8bfa\u6570\u8f83\u4f4e\u65f6\uff0c\u4ee5\u7c98\u6027\u529b\u4e3a\u4e3b\uff0c\u5e76\u80fd\u89c2\u5bdf\u5230\u5c42\u6d41\uff1b\u5f53\u96f7\u8bfa\u6570\u8f83\u9ad8\u65f6\uff0c\u7cfb\u7edf\u963b\u5c3c\u975e\u5e38\u4f4e\uff0c\u4f1a\u5e26\u6765\u8f83\u5c0f\u7684\u6270\u52a8\uff1b\u5982\u679c\u96f7\u8bfa\u6570\u8db3\u591f\u9ad8\uff0c\u6d41\u573a\u6700\u7ec8\u5c06\u6f14\u53d8\u4e3a\u6e4d\u6d41\u7684\u6d41\u578b\u3002 \u53ef\u4ee5\u4f7f\u7528\u96f7\u8bfa\u6570\u8ba1\u7b97\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u539a\u5ea6\uff0c\u5373 \\[ \\delta_\\mathrm{M} \\approx \\frac{L}{\\sqrt{Re}} \\] \u7531\u5f3a\u5236\u5bf9\u6d41\u63d0\u4f9b\u51b7\u5374\u7684\u6563\u70ed\u5668\u5468\u56f4\u7684\u6d41\u7ebf\u548c\u6e29\u5ea6\u5256\u9762\u56fe \u8f90\u5c04\u4f20\u70ed \u8f90\u5c04\u4f20\u70ed\u53ef\u4ee5\u4e0e\u4e0a\u6587\u4ecb\u7ecd\u7684\u5bf9\u6d41\u548c\u4f20\u5bfc\u4f20\u70ed\u76f8\u7ed3\u5408\u3002 \u5728\u5927\u90e8\u5206\u5e94\u7528\u4e2d\uff0c\u6d41\u4f53\u76f8\u5bf9\u70ed\u8f90\u5c04\u662f\u900f\u660e\u7684\uff0c\u56fa\u4f53\u5219\u4e3a\u975e\u900f\u660e\u3002\u56e0\u6b64\uff0c\u8f90\u5c04\u4f20\u70ed\u53ef\u8868\u793a\u4e3a\u8868\u9762\u5bf9\u8868\u9762\u8f90\u5c04\uff0c\u5728\u5b9e\u4f53\u58c1\u9762\u4e4b\u95f4\u901a\u8fc7\u900f\u660e\u7684\u7a7a\u8154\u4f20\u9012\u80fd\u91cf\u3002\u7531\u6f2b\u53cd\u5c04\u7070\u4f53\u8868\u9762\u6240\u53d1\u5c04\u7684\u8f90\u5c04\u70ed\u901a\u91cf\u7b49\u4e8e $$ \\varepsilon n^2 \\sigma T^4 $$ \u5f53\u4e00\u4e2a\u8868\u9762\u88ab\u5e26\u6709\u5747\u5300 \\(T_\\mathrm{amb}\\) \u7684\u7269\u4f53\u5305\u56f4\u65f6\uff0c\u51c0\u8f90\u5c04\u901a\u91cf\u4e3a $$ q_\\mathrm{r} = \\varepsilon n^2 \\sigma (T_\\mathrm{amb}^4-T^4) $$ \u5f53\u56f4\u7ed5\u8868\u9762\u7684\u6e29\u5ea6\u4e0d\u540c\u65f6\uff0c\u6bcf\u4e2a\u8868\u9762\u5bf9\u8868\u9762\u7684\u4ea4\u6362\u5219\u7531\u8868\u9762\u7684\u89c6\u89d2\u56e0\u5b50\u786e\u5b9a\u3002 \u4e0d\u8fc7\uff0c\u6d41\u4f53\u548c\u56fa\u4f53\u90fd\u53ef\u4ee5\u662f\u900f\u660e\u6216\u534a\u900f\u660e\u7684\uff1b\u56e0\u6b64\u8f90\u5c04\u53ef\u4ee5\u5728\u6d41\u4f53\u548c\u56fa\u4f53\u4e2d\u53d1\u751f\u3002\u5728\u53c2\u4e0e\uff08\u6216\u534a\u900f\u660e\uff09\u4ecb\u8d28\u4e2d\uff0c\u8f90\u5c04\u7ebf\u5c06\u4e0e\u4ecb\u8d28\uff08\u56fa\u4f53\u6216\u6d41\u4f53\uff09\u76f8\u4e92\u4f5c\u7528\uff0c\u968f\u5373\u5438\u6536\u3001\u91ca\u653e\u548c\u6563\u5c04\u8f90\u5c04\u3002 \u6e29\u5ea6\u5dee\u8f83\u5c0f\u4e14\u53d1\u5c04\u7387\u8f83\u4f4e\u7684\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u5ffd\u7565\u8f90\u5c04\u4f20\u70ed\uff1b\u4f46\u5728\u6e29\u5ea6\u5dee\u8f83\u5927\u4e14\u53d1\u5c04\u7387\u8f83\u9ad8\u7684\u5e94\u7528\u4e2d\uff0c\u8f90\u5c04\u4f20\u70ed\u76f8\u5f53\u91cd\u8981\u3002 \u8868\u9762\u53d1\u5c04\u7387\u5206\u522b\u4e3a \uff08\u5de6\uff09 and \uff08\u53f3\uff09\u7684\u6563\u70ed\u5668\u6e29\u5ea6\u5256\u9762\u56fe\u5bf9\u6bd4 \u5c0f\u7ed3 \u5927\u90e8\u5206\u5e94\u7528\u4e2d\u90fd\u7efc\u5408\u4e86\u56fa\u4f53\u4f20\u70ed\u548c\u6d41\u4f53\u4f20\u70ed\u3002\u8fd9\u662f\u56e0\u4e3a\u56fa\u4f53\u5468\u56f4\u6216\u56fa\u4f53\u58c1\u9762\u4e4b\u95f4\u7684\u6d41\u4f53\u53d1\u751f\u4e86\u6d41\u52a8\uff0c\u4e14\u56fa\u4f53\u6d78\u5728\u6d41\u4f53\u4e2d\u3002\u5bf9\u4f20\u70ed\u6a21\u5f0f\u3001\u6750\u6599\u5c5e\u6027\u3001\u6d41\u578b\u548c\u51e0\u4f55\u7ed3\u6784\u7684\u7cbe\u786e\u63cf\u8ff0\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u5bf9\u6e29\u5ea6\u573a\u548c\u4f20\u70ed\u8fdb\u884c\u5206\u6790\u3002\u8fd9\u7c7b\u63cf\u8ff0\u4e5f\u662f\u6570\u503c\u4eff\u771f\u7684\u8d77\u70b9\uff0c\u6211\u4eec\u53ef\u636e\u6b64\u9884\u6d4b\u5171\u8f6d\u4f20\u70ed\u6548\u5e94\u3001\u6216\u6d4b\u8bd5\u4e0d\u540c\u7684\u7ed3\u6784\uff0c\u4ece\u800c\u6539\u8fdb\u7279\u5b9a\u5e94\u7528\u7684\u70ed\u5b66\u6027\u80fd\u3002","title":"\u5171\u8f6d\u4f20\u70ed"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_1","text":"\u6211\u4eec\u5c06\u5728\u672c\u7bc7\u535a\u5ba2\u4e2d\u89e3\u91ca \u5171\u8f6d\u4f20\u70ed \u8fd9\u4e00\u6982\u5ff5\uff0c\u5e76\u4f1a\u5c55\u793a\u76f8\u5173\u5e94\u7528\u3002\u5171\u8f6d\u4f20\u70ed\u7efc\u5408\u4e86\u56fa\u4f53\u4f20\u70ed\u548c\u6d41\u4f53\u4f20\u70ed\u3002\u56fa\u4f53\u4f20\u70ed\u4ee5\u4f20\u5bfc\u4e3a\u4e3b\uff1b\u6d41\u4f53\u4f20\u70ed\u5219\u4ee5\u5bf9\u6d41\u4e3a\u4e3b\u3002\u6211\u4eec\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u90fd\u80fd\u89c2\u5bdf\u5230\u5171\u8f6d\u4f20\u70ed\u3002\u5982\u8bbe\u8ba1\u6563\u70ed\u5668\u65f6\uff0c\u5c31\u53ef\u4ee5\u7ed3\u5408\u6563\u70ed\u5668\u4e2d\u7684\u4f20\u5bfc\u548c\u5468\u56f4\u6d41\u4f53\u4e2d\u7684\u5bf9\u6d41\u6765\u8fdb\u884c\u4f18\u5316\u3002","title":"\u5171\u8f6d\u4f20\u70ed"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_2","text":"","title":"\u56fa\u4f53\u548c\u6d41\u4f53\u4f20\u70ed"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_3","text":"\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u56fa\u4f53\u4f20\u70ed\u4ec5\u8003\u8651\u4f20\u5bfc\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 Fourier\u5b9a\u5f8b\u8fdb\u884c\u63cf\u8ff0\uff0c\u6b64\u65f6\u5c06\u5b9a\u4e49\u4f20\u5bfc\u70ed\u901a\u91cf \\(q\\) \u4e0e\u6e29\u5ea6\u68af\u5ea6\u6210\u6b63\u6bd4\uff0c\u5373\uff1a \\[ q=k \\nabla T \\] \u5bf9\u4e8e\u77ac\u6001\u95ee\u9898\uff0c\u9759\u6b62\u56fa\u4f53\u4e2d\u7684\u6e29\u5ea6\u573a\u5219\u8bc1\u660e\u4e86\u4f20\u70ed\u65b9\u7a0b\u7684\u4ee5\u4e0b\u5f62\u5f0f\uff1a $$ \\rho C_p\\frac{\\partial T}{\\partial t} = \\nabla \\cdot (k\\nabla T) +Q $$","title":"\u56fa\u4f53\u4e2d\u7684\u4f20\u70ed"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_4","text":"\u7531\u4e8e\u6d41\u4f53\u8fd0\u52a8\uff0c\u4f20\u70ed\u65b9\u7a0b\u4e2d\u7684\u4e09\u4e2a\u8d21\u732e\u9879\u5206\u522b\u4e3a\uff1a \u6d41\u4f53\u4f20\u9012\u610f\u5473\u7740\u80fd\u91cf\u4f20\u9012\uff0c\u5728\u4f20\u70ed\u65b9\u7a0b\u4e2d\uff0c\u8be5\u9879\u4f5c\u4e3a\u5bf9\u6d41\u8d21\u732e\u3002\u6839\u636e\u6d41\u4f53\u548c\u6d41\u578b\u7684\u70ed\u5b66\u5c5e\u6027\uff0c\u53ef\u80fd\u4ee5\u5bf9\u6d41\u6216\u4f20\u5bfc\u4f20\u70ed\u4e3a\u4e3b\u3002 \u6d41\u4f53\u6d41\u52a8\u7684\u7c98\u6027\u6548\u5e94\u5c06\u5bfc\u81f4\u6d41\u4f53\u52a0\u70ed\u3002\u901a\u5e38\u5ffd\u7565\u8be5\u9879\uff0c\u4f46\u5728\u5feb\u901f\u6d41\u52a8\u7684\u7c98\u6027\u6d41\u4f53\u4e2d\uff0c\u5219\u5e94\u8003\u8651\u3002 \u5982\u679c\u6d41\u4f53\u5bc6\u5ea6\u4f1a\u6839\u636e\u6e29\u5ea6\u53d8\u5316\uff0c\u5219\u5e94\u5728\u4f20\u70ed\u65b9\u7a0b\u4e2d\u52a0\u5165\u538b\u529b\u529f\u8d21\u732e\u9879\u3002\u5b83\u4ee3\u8868\u4e86\u8bf8\u5982\u538b\u7f29\u7a7a\u6c14\u4f1a\u4ea7\u751f\u70ed\u4e4b\u7c7b\u7684\u8457\u540d\u6548\u5e94\u3002 \u4e3a\u4e86\u8bf4\u660e\u4f20\u5bfc\u53ca\u6240\u6709\u8fd9\u4e9b\u8d21\u732e\u9879\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e0b\u65b9\u7684\u77ac\u6001\u4f20\u70ed\u65b9\u7a0b\u4ee5\u8bf4\u660e\u6d41\u4f53\u4e2d\u7684\u6e29\u5ea6\u573a\uff1a $$ \\rho C_{p} \\frac{\\partial T}{\\partial t}+\\rho C_p\\bold{u}\\cdot\\nabla T = \\alpha_p {T}\\left( \\frac{\\partial p_\\mathrm{A}}{\\partial t}+\\bold{u}\\cdot\\nabla p_\\mathrm{A}\\right)+\\tau : S+\\nabla \\cdot (k\\nabla T) +Q $$","title":"\u6d41\u4f53\u4e2d\u7684\u4f20\u70ed"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_5","text":"","title":"\u5171\u8f6d\u4f20\u70ed\u5e94\u7528"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_6","text":"\u8bbe\u8ba1\u9ad8\u6548\u51b7\u5374\u5668\u3001\u52a0\u70ed\u5668\u6216\u6362\u70ed\u5668\u65f6\uff0c\u80fd\u5426\u6709\u6548\u7ed3\u5408\u6d41\u4f53\u548c\u56fa\u4f53\u4e2d\u7684\u4f20\u70ed\u8fd9\u4e00\u70b9\u975e\u5e38\u5173\u952e\u3002 \u6d41\u4f53\u901a\u5e38\u5728\u957f\u8ddd\u79bb\u4e2d\u626e\u6f14\u8f7d\u80fd\u4f53\u7684\u89d2\u8272\u3002\u5f3a\u5236\u5bf9\u6d41\u662f\u5b9e\u73b0\u9ad8\u6362\u70ed\u7387\u7684\u6700\u5e38\u89c1\u65b9\u6cd5\u3002\u5728\u4e00\u4e9b\u5e94\u7528\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7ed3\u5408\u5bf9\u6d41\u4e0e\u76f8\u53d8\u6765\u8fdb\u4e00\u6b65\u63d0\u5347\u5176\u6027\u80fd\uff0c\u4f8b\u5982\uff0c\u4ece\u6db2\u6001\u6c34\u5230\u84b8\u6c7d\u7684\u76f8\u53d8\u3002 \u5373\u4fbf\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u662f\u9700\u8981\u56fa\u4f53\uff0c\u7279\u522b\u662f\u5728\u6362\u70ed\u5668\u4e2d\u5206\u9694\u5404\u79cd\u6d41\u4f53\uff0c\u907f\u514d\u5b83\u4eec\u5728\u80fd\u91cf\u4ea4\u6362\u8fc7\u7a0b\u4e2d\u53d1\u751f\u6df7\u5408\u3002 \u58f3\u7ba1\u5f0f\u6362\u70ed\u5668\u4e2d\u7684\u6d41\u52a8\u548c\u6e29\u5ea6\u573a\u663e\u793a\u4e86\u8584\u91d1\u5c5e\u58c1\u5206\u9694\u7684\u4e24\u79cd\u6d41\u4f53\u4e4b\u95f4\u7684\u4f20\u70ed \u3002 \u6563\u70ed\u5668\u901a\u5e38\u7531\u5177\u6709\u8f83\u9ad8\u5bfc\u70ed\u7cfb\u6570\u7684\u91d1\u5c5e\u5236\u6210\uff0c\u5982\u94dc\u6216\u94dd\u3002\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u56fa\u4f53\u90e8\u4ef6\u4e0e\u5468\u56f4\u6db2\u4f53\u95f4\u7684\u4ea4\u6362\u9762\u79ef\u6765\u589e\u5f3a\u6563\u70ed\u3002 \u6392\u6c14\u6247\u548c\u591a\u5b54\u683c\u6805\u5e26\u6765\u7684\u7a7a\u6c14\u6d41\u63d0\u4f9b\u51b7\u5374\u7684\u7535\u6e90\u5355\u5143\u4e2d\u7684\u6e29\u5ea6\u573a\u3002\u4f7f\u7528\u4e24\u4e2a\u94dd\u5236\u7fc5\u7247\u6765\u589e\u52a0\u6d41\u52a8\u548c\u7535\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4ea4\u6362\u9762\u79ef \u3002","title":"\u6709\u6548\u4f20\u70ed"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_7","text":"\u4e5f\u53ef\u4ee5\u7ed3\u5408\u6d41\u4f53\u548c\u56fa\u4f53\u4e2d\u7684\u4f20\u70ed\u6765\u5c06\u5404\u79cd\u5668\u4ef6\u4e2d\u7684\u70ed\u635f\u964d\u5230\u6700\u4f4e\u3002\u7531\u4e8e\u5927\u90e8\u5206\u6c14\u4f53\uff08\u5c24\u5176\u662f\u5728\u4f4e\u538b\u73af\u5883\u4e0b\uff09\u7684\u5bfc\u70ed\u7cfb\u6570\u8f83\u4f4e\uff0c\u56e0\u6b64\u9759\u6001\u6c14\u4f53\u53ef\u7528\u4f5c\u7edd\u70ed\u4f53\u3002\u56e0\u4e3a\u6c14\u4f53\u7684\u91cd\u91cf\u5f88\u4f4e\uff0c\u6240\u4ee5\u4f18\u5148\u7528\u4e8e\u5404\u7c7b\u5e94\u7528\u3002\u4f46\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u90fd\u5fc5\u987b\u9650\u5236\u5bf9\u6d41\u4f20\u70ed\uff0c\u7279\u522b\u662f\u8981\u964d\u4f4e\u81ea\u7136\u5bf9\u6d41\u6548\u5e94\u3002\u53ef\u901a\u8fc7\u58c1\u9762\u7684\u5b89\u653e\u4f4d\u7f6e\u548c\u5c0f\u578b\u7a7a\u8154\u6765\u63a7\u5236\u81ea\u7136\u5bf9\u6d41\u3002\u5f53\u7528\u4e8e\u5fae\u5c0f\u5c3a\u5ea6\u65f6\uff0c\u8be5\u539f\u5219\u4e5f\u5c31\u5f15\u7533\u51fa\u4e86\u7edd\u7f18\u6ce1\u6cab\u7684\u6982\u5ff5\uff0c\u5728\u7edd\u7f18\u6ce1\u6cab\u4e2d\uff0c\u5fae\u5c0f\u7a7a\u6c14\u8154\uff08\u6c14\u6ce1\uff09\u88ab\u9650\u5236\u5728\u6ce1\u6cab\u6750\u8d28\u4e2d\uff08\u5982\u805a\u6c28\u916f\uff09\uff0c\u4f7f\u8fd9\u79cd\u6750\u6599\u7edd\u7f18\u6027\u80fd\u8f83\u9ad8\u4e14\u8d28\u91cf\u8f83\u8f7b\u3002 \u7a97\u6237\u6a2a\u622a\u9762\uff08\u5de6\uff09\u548c\u7a97\u6846\u653e\u5927\u56fe\uff08\u53f3\uff09 ISO 10077-2:2012 \u6807\u51c6\u7684\u7a97\u6846\u548c\u73bb\u7483\u6a2a\u622a\u9762\u7684\u6e29\u5ea6\u5256\u9762\u56fe (\u7a97\u6237\u7684\u70ed\u6027\u80fd)","title":"\u8282\u80fd"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_8","text":"","title":"\u6d41\u56fa\u8026\u5408"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_9","text":"\u6e29\u5ea6\u573a\u548c\u70ed\u901a\u91cf\u5728\u6d41\u4f53/\u56fa\u4f53\u754c\u9762\u8fde\u7eed\uff0c\u7136\u800c\u5728\u8fd0\u52a8\u7684\u6d41\u4f53\u4e2d\uff0c\u6e29\u5ea6\u573a\u4f1a\u5feb\u901f\u53d8\u5316\uff1a\u5728\u9760\u8fd1\u56fa\u4f53\u5904\uff0c\u6d41\u4f53\u7684\u6e29\u5ea6\u4e0e\u56fa\u4f53\u63a5\u8fd1\uff1b\u4f46\u5728\u8fdc\u79bb\u754c\u9762\u7684\u5730\u65b9\uff0c\u6d41\u4f53\u6e29\u5ea6\u5219\u63a5\u8fd1\u4e8e\u5165\u53e3\u6216\u5468\u56f4\u6d41\u4f53\u7684\u6e29\u5ea6\u3002\u6d41\u4f53\u6e29\u5ea6\u4ece\u56fa\u4f53\u6e29\u5ea6\u53d8\u4e3a\u6d41\u4f53\u6574\u4f53\u6e29\u5ea6\u7684\u533a\u57df\u79f0\u4f5c \u70ed\u8fb9\u754c\u5c42 \u3002\u5229\u7528 Prandtl \u6570 \\(Pr=C_p \\mu/k\\) \u6765\u8868\u793a\u70ed\u8fb9\u754c\u5c42\u7684\u5927\u5c0f\u4e0e\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u76f8\u5bf9\u5927\u5c0f\uff1a\u5f53 Prandtl \u6570\u7b49\u4e8e 1 \u65f6\uff0c\u70ed\u548c\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u539a\u5ea6\u5e94\u76f8\u540c\uff1b\u5f53Prandtl \u6570\u5927\u4e8e 1 \u65f6\uff0c\u52a8\u91cf\u5c42\u8f83\u539a\uff1b\u4e0e\u4e4b\u76f8\u5bf9\uff0c\u5f53 Prandtl \u6570\u5c0f\u4e8e 1 \u65f6\uff0c \u52a8\u91cf\u8fb9\u754c\u5c42\u8981\u8584\u4e8e\u70ed\u8fb9\u754c\u5c42\u300220\u00b0C \u5927\u6c14\u538b\u4e0b\uff0c\u7a7a\u6c14\u7684 Prandtl \u6570\u4e3a 0.7\uff1b\u8fd9\u662f\u7531\u4e8e\u7a7a\u6c14\u4e2d\u52a8\u91cf\u548c\u70ed\u8fb9\u754c\u5c42\u7684\u5c3a\u5bf8\u7c7b\u4f3c\uff0c\u4f46\u52a8\u91cf\u8fb9\u754c\u5c42\u7565\u8584\u4e8e\u70ed\u8fb9\u754c\u5c42\u300220\u00b0C \u6c34\u7684 Prandtl \u6570\u4e3a 7\uff1b\u56e0\u6b64\uff0c\u6c34\u6e29\u5728\u9760\u8fd1\u58c1\u9762\u5904\u7684\u53d8\u5316\u8981\u6bd4\u901f\u5ea6\u53d8\u5316\u66f4\u5267\u70c8\u3002 \u9760\u8fd1\u8f83\u51b7\u56fa\u4f53\u58c1\u9762\u5904\u7684\u81ea\u7136\u5bf9\u6d41\u7a7a\u6c14\u7684\u5f52\u4e00\u5316\u6e29\u5ea6(\u7ea2\u8272) \u548c\u901f\u5ea6 (\u84dd\u8272) \u66f2\u7ebf","title":"\u6d41\u4f53/\u56fa\u4f53\u754c\u9762"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_10","text":"\u81ea\u7136\u5bf9\u6d41\u6a21\u5f0f\u5bf9\u5e94\u7531\u6d6e\u529b\u6548\u5e94\u9a71\u52a8\u6d41\u52a8\u7684\u7ed3\u6784\u3002\u57fa\u4e8e\u9884\u671f\u7684\u70ed\u6027\u80fd\uff0c\u81ea\u7136\u5bf9\u6d41\u53ef\u80fd\u6709\u76ca\uff08\u4f8b\u5982\u5728\u51b7\u5374\u5e94\u7528\u4e2d\uff09\uff0c\u4e5f\u53ef\u80fd\u6709\u5bb3\uff08\u5982\u7edd\u70ed\u5c42\u4e2d\u7684\u81ea\u7136\u5bf9\u6d41\uff09\u3002 Rayleigh \u6570 \\(Ra\\) \u7528\u4e8e\u8868\u5f81\u7531\u81ea\u7136\u5bf9\u6d41\u5e26\u6765\u7684\u6d41\u578b\u548c\u4f20\u70ed\u3002Rayleigh \u6570\u7531\u6d41\u4f53\u6750\u6599\u5c5e\u6027\u3001\u7a7a\u8154\u5c3a\u5bf8 \\(L\\) \uff0c\u4ee5\u53ca\u6e29\u5dee \\(\\Delta T\\) \u5b9a\u4e49\uff0c\u800c\u6e29\u5ea6\u5dee\u5219\u6839\u636e\u6d41\u4f53\u5468\u56f4\u7684\u56fa\u4f53\u6765\u8bbe\u5b9a\uff1a \\[ Ra=\\frac{\\rho^2g\\alpha_p C_p}{\\mu k}\\Delta T L^3 \\] Grashof \u6570\u662f\u53e6\u4e00\u4e2a\u6d41\u578b\u6307\u6807\uff0c\u5b83\u662f\u6d6e\u529b\u76f8\u5bf9\u7c98\u6027\u529b\u7684\u6bd4\u4f8b\uff1a \\[ Gr=\\frac{\\rho^2g\\alpha_p}{\\mu^2}\\Delta T L^3 \\] Rayleigh \u6570\u53ef\u901a\u8fc7 Prandtl \u548c Grashof \u6570\u7684\u5173\u7cfb\u5f0f\u8868\u793a\uff1a \\[ Ra=Pr Gr \\] \u5982\u679c Rayleigh \u6570\u8f83\u5c0f\uff08\u901a\u5e38<103\uff09\uff0c\u5219\u53ef\u4ee5\u5ffd\u7565\u5bf9\u6d41\uff0c\u5927\u90e8\u5206\u4f20\u70ed\u7531\u6d41\u4f53\u4e2d\u7684\u4f20\u5bfc\u9020\u6210\u3002 \u4e8e\u8f83\u5927\u7684 Rayleigh \u6570\uff0c\u5219\u9700\u8981\u8003\u8651\u5bf9\u6d41\u4f20\u70ed\u3002\u6d6e\u529b\u76f8\u5bf9\u4e8e\u7c98\u7c98\u529b\u8f83\u5927\u65f6\uff0c\u6d41\u578b\u4e3a\u6e4d\u6d41\uff0c\u5426\u5219\u4e3a\u5c42\u6d41\u3002\u4e24\u4e2a\u6d41\u578b\u4e4b\u95f4\u7684\u8fc7\u6e21\u7531 Grashof \u6570\u7684\u4e34\u754c\u9636\u6b21\u786e\u5b9a\uff0c\u5373$ 10^9 \\(\u3002\u5f53\\) Pr$\u7684\u91cf\u7ea7\u8fd1\u4f3c\u4e3a 1 \u6216\u66f4\u5927\u65f6\uff0c\u70ed\u8fb9\u754c\u5c42\uff0c\u5373\u56fa\u4f53\u58c1\u9762\u548c\u6d41\u4f53\u6574\u4f53\u4e4b\u95f4\u7684\u5178\u578b\u6e29\u5ea6\u8f6c\u53d8\u8ddd\u79bb\uff0c\u53ef\u8fd1\u4f3c\u4e3a \\[ \\delta_\\mathrm{T} \\approx \\frac{L}{\\sqrt[4\\,]{Ra}} \\] \u5f53\u4e0e\u70ed\u8868\u9762\u63a5\u89e6\u65f6\uff0c\u4e00\u676f\u51b7\u6c34\u4e2d\u7684\u81ea\u7136\u5bf9\u6d41\u6240\u5e26\u6765\u7684\u6e29\u5ea6\u5256\u9762\u56fe","title":"\u81ea\u7136\u5bf9\u6d41"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_11","text":"\u5f3a\u5236\u5bf9\u6d41\u6a21\u5f0f\u5bf9\u5e94\u4e8e\u8fd9\u4e00\u7ed3\u6784\uff1a\u6d41\u52a8\u7531\u5e26\u6765\u4e3b\u8981\u6d6e\u529b\u6548\u5e94\u7684\u5916\u90e8\u73b0\u8c61\uff08\u4f8b\u5982\u3001\u98ce\uff09\u6216\u5668\u4ef6\uff08\u4f8b\u5982\u3001\u98ce\u6247\u548c\u6cf5\uff09\u9a71\u52a8\u3002 \u6b64\u65f6\uff0c\u6d41\u578b\u53ef\u4f7f\u7528\u96f7\u8bfa\u6570\u4f5c\u4e3a\u6307\u6807\u8fd1\u4f3c\u8868\u5f81\u4e3a\u7b49\u6e29\u6d41\uff1a \\[ Re= \\frac{\\rho U L}{\\mu} \\] \u96f7\u8bfa\u6570\u4ee3\u8868\u4e86\u60ef\u6027\u529b\u5bf9\u7c98\u6027\u529b\u7684\u6bd4\u4f8b\u3002\u5f53\u96f7\u8bfa\u6570\u8f83\u4f4e\u65f6\uff0c\u4ee5\u7c98\u6027\u529b\u4e3a\u4e3b\uff0c\u5e76\u80fd\u89c2\u5bdf\u5230\u5c42\u6d41\uff1b\u5f53\u96f7\u8bfa\u6570\u8f83\u9ad8\u65f6\uff0c\u7cfb\u7edf\u963b\u5c3c\u975e\u5e38\u4f4e\uff0c\u4f1a\u5e26\u6765\u8f83\u5c0f\u7684\u6270\u52a8\uff1b\u5982\u679c\u96f7\u8bfa\u6570\u8db3\u591f\u9ad8\uff0c\u6d41\u573a\u6700\u7ec8\u5c06\u6f14\u53d8\u4e3a\u6e4d\u6d41\u7684\u6d41\u578b\u3002 \u53ef\u4ee5\u4f7f\u7528\u96f7\u8bfa\u6570\u8ba1\u7b97\u52a8\u91cf\u8fb9\u754c\u5c42\u7684\u539a\u5ea6\uff0c\u5373 \\[ \\delta_\\mathrm{M} \\approx \\frac{L}{\\sqrt{Re}} \\] \u7531\u5f3a\u5236\u5bf9\u6d41\u63d0\u4f9b\u51b7\u5374\u7684\u6563\u70ed\u5668\u5468\u56f4\u7684\u6d41\u7ebf\u548c\u6e29\u5ea6\u5256\u9762\u56fe","title":"\u5f3a\u5236\u5bf9\u6d41"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_12","text":"\u8f90\u5c04\u4f20\u70ed\u53ef\u4ee5\u4e0e\u4e0a\u6587\u4ecb\u7ecd\u7684\u5bf9\u6d41\u548c\u4f20\u5bfc\u4f20\u70ed\u76f8\u7ed3\u5408\u3002 \u5728\u5927\u90e8\u5206\u5e94\u7528\u4e2d\uff0c\u6d41\u4f53\u76f8\u5bf9\u70ed\u8f90\u5c04\u662f\u900f\u660e\u7684\uff0c\u56fa\u4f53\u5219\u4e3a\u975e\u900f\u660e\u3002\u56e0\u6b64\uff0c\u8f90\u5c04\u4f20\u70ed\u53ef\u8868\u793a\u4e3a\u8868\u9762\u5bf9\u8868\u9762\u8f90\u5c04\uff0c\u5728\u5b9e\u4f53\u58c1\u9762\u4e4b\u95f4\u901a\u8fc7\u900f\u660e\u7684\u7a7a\u8154\u4f20\u9012\u80fd\u91cf\u3002\u7531\u6f2b\u53cd\u5c04\u7070\u4f53\u8868\u9762\u6240\u53d1\u5c04\u7684\u8f90\u5c04\u70ed\u901a\u91cf\u7b49\u4e8e $$ \\varepsilon n^2 \\sigma T^4 $$ \u5f53\u4e00\u4e2a\u8868\u9762\u88ab\u5e26\u6709\u5747\u5300 \\(T_\\mathrm{amb}\\) \u7684\u7269\u4f53\u5305\u56f4\u65f6\uff0c\u51c0\u8f90\u5c04\u901a\u91cf\u4e3a $$ q_\\mathrm{r} = \\varepsilon n^2 \\sigma (T_\\mathrm{amb}^4-T^4) $$ \u5f53\u56f4\u7ed5\u8868\u9762\u7684\u6e29\u5ea6\u4e0d\u540c\u65f6\uff0c\u6bcf\u4e2a\u8868\u9762\u5bf9\u8868\u9762\u7684\u4ea4\u6362\u5219\u7531\u8868\u9762\u7684\u89c6\u89d2\u56e0\u5b50\u786e\u5b9a\u3002 \u4e0d\u8fc7\uff0c\u6d41\u4f53\u548c\u56fa\u4f53\u90fd\u53ef\u4ee5\u662f\u900f\u660e\u6216\u534a\u900f\u660e\u7684\uff1b\u56e0\u6b64\u8f90\u5c04\u53ef\u4ee5\u5728\u6d41\u4f53\u548c\u56fa\u4f53\u4e2d\u53d1\u751f\u3002\u5728\u53c2\u4e0e\uff08\u6216\u534a\u900f\u660e\uff09\u4ecb\u8d28\u4e2d\uff0c\u8f90\u5c04\u7ebf\u5c06\u4e0e\u4ecb\u8d28\uff08\u56fa\u4f53\u6216\u6d41\u4f53\uff09\u76f8\u4e92\u4f5c\u7528\uff0c\u968f\u5373\u5438\u6536\u3001\u91ca\u653e\u548c\u6563\u5c04\u8f90\u5c04\u3002 \u6e29\u5ea6\u5dee\u8f83\u5c0f\u4e14\u53d1\u5c04\u7387\u8f83\u4f4e\u7684\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u5ffd\u7565\u8f90\u5c04\u4f20\u70ed\uff1b\u4f46\u5728\u6e29\u5ea6\u5dee\u8f83\u5927\u4e14\u53d1\u5c04\u7387\u8f83\u9ad8\u7684\u5e94\u7528\u4e2d\uff0c\u8f90\u5c04\u4f20\u70ed\u76f8\u5f53\u91cd\u8981\u3002 \u8868\u9762\u53d1\u5c04\u7387\u5206\u522b\u4e3a \uff08\u5de6\uff09 and \uff08\u53f3\uff09\u7684\u6563\u70ed\u5668\u6e29\u5ea6\u5256\u9762\u56fe\u5bf9\u6bd4","title":"\u8f90\u5c04\u4f20\u70ed"},{"location":"Flotherm/%E5%85%B1%E8%BD%AD%E4%BC%A0%E7%83%AD/#_13","text":"\u5927\u90e8\u5206\u5e94\u7528\u4e2d\u90fd\u7efc\u5408\u4e86\u56fa\u4f53\u4f20\u70ed\u548c\u6d41\u4f53\u4f20\u70ed\u3002\u8fd9\u662f\u56e0\u4e3a\u56fa\u4f53\u5468\u56f4\u6216\u56fa\u4f53\u58c1\u9762\u4e4b\u95f4\u7684\u6d41\u4f53\u53d1\u751f\u4e86\u6d41\u52a8\uff0c\u4e14\u56fa\u4f53\u6d78\u5728\u6d41\u4f53\u4e2d\u3002\u5bf9\u4f20\u70ed\u6a21\u5f0f\u3001\u6750\u6599\u5c5e\u6027\u3001\u6d41\u578b\u548c\u51e0\u4f55\u7ed3\u6784\u7684\u7cbe\u786e\u63cf\u8ff0\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u5bf9\u6e29\u5ea6\u573a\u548c\u4f20\u70ed\u8fdb\u884c\u5206\u6790\u3002\u8fd9\u7c7b\u63cf\u8ff0\u4e5f\u662f\u6570\u503c\u4eff\u771f\u7684\u8d77\u70b9\uff0c\u6211\u4eec\u53ef\u636e\u6b64\u9884\u6d4b\u5171\u8f6d\u4f20\u70ed\u6548\u5e94\u3001\u6216\u6d4b\u8bd5\u4e0d\u540c\u7684\u7ed3\u6784\uff0c\u4ece\u800c\u6539\u8fdb\u7279\u5b9a\u5e94\u7528\u7684\u70ed\u5b66\u6027\u80fd\u3002","title":"\u5c0f\u7ed3"},{"location":"Flotherm/%E5%9B%BA%E4%BD%93%E5%86%85%E9%83%A8%E7%83%AD%E6%B5%81%E5%9B%BE/","text":"01 \u56fa\u4f53\u5185\u90e8\u70ed\u6d41\u56fe \u8981\u4ec5\u663e\u793a\u5b9e\u5fc3\u90e8\u4ef6\u4e2d\u7684\u70ed\u901a\u91cf\uff0c\u8bf7\u6309\u4ee5\u4e0b\u6b65\u9aa4\u5904\u7406\uff1a \u5728\u201cModel Setup\u201d\u9009\u9879\u5361\u4e2d\u7684\u201cStored Variables\u201d\u4e0b\u52fe\u9009\u201cHeat Fluxes\u201d\u3002 \u5728Visual Editor\u7a97\u53e3\u4e2d\uff0c\u8bbe\u7f6e\u7c92\u5b50\u5c5e\u6027\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u5b9a\u4e49\u8db3\u591f\u77ed\u7684\u201cLifetime\u201d\uff0c\u4ec5\u5728\u5b9e\u4f53\u5185\u663e\u793aHeatFlux\u3002\u8bf7\u6ce8\u610f\uff0c\u70ed\u901a\u91cf\u5728\u56fa\u4f53\u4e2d\u6bd4\u5728\u6d41\u4f53\u4e2d\u66f4\u5feb\u5730\u4f20\u64ad\u3002\u56e0\u6b64\uff0c\u4fdd\u6301\u77ed\u5bff\u547d\u4ec5\u5141\u8bb8\u5728\u56fa\u4f53\u4e2d\u663e\u793a\u70ed\u901a\u91cf\u8def\u5f84\u3002 \u5f53\u70ed\u91cf\u901a\u91cf\u5feb\u901f\u6269\u6563\u65f6\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7b80\u77ed\u7684\u201cLifetime\u201d\u4ee5\u5c06\u70ed\u901a\u91cf\u663e\u793a\u4e3a\u7bad\u5934\u3002\u5982\u679c\u65f6\u95f4\u6b65\u957f\u592a\u9ad8\uff0c\u90a3\u4e48\u4f60\u4f1a\u770b\u5230\u50cf\u4e1d\u5e26\u8fd9\u6837\u7684\u7c92\u5b50 \u5b89\u88c5\u5728PCB\u4e0a\u7684TO\u793a\u4f8b\uff1a \u7ec4\u4ef6\u677f\u8f7d\u6587\u4ef6 \u3002 \u5728\u6b64\u5305\u6587\u4ef6\u4e2d\uff0c\u67e5\u770b\u7c92\u5b50\u8bbe\u7f6e\uff1a \u56fa\u6001\u70ed\u901a\u91cf\u7684\u663e\u793a\u5982\u4e0b\u6240\u793a\uff1a","title":"01 \u56fa\u4f53\u5185\u90e8\u70ed\u6d41\u56fe"},{"location":"Flotherm/%E5%9B%BA%E4%BD%93%E5%86%85%E9%83%A8%E7%83%AD%E6%B5%81%E5%9B%BE/#01","text":"\u8981\u4ec5\u663e\u793a\u5b9e\u5fc3\u90e8\u4ef6\u4e2d\u7684\u70ed\u901a\u91cf\uff0c\u8bf7\u6309\u4ee5\u4e0b\u6b65\u9aa4\u5904\u7406\uff1a \u5728\u201cModel Setup\u201d\u9009\u9879\u5361\u4e2d\u7684\u201cStored Variables\u201d\u4e0b\u52fe\u9009\u201cHeat Fluxes\u201d\u3002 \u5728Visual Editor\u7a97\u53e3\u4e2d\uff0c\u8bbe\u7f6e\u7c92\u5b50\u5c5e\u6027\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u5b9a\u4e49\u8db3\u591f\u77ed\u7684\u201cLifetime\u201d\uff0c\u4ec5\u5728\u5b9e\u4f53\u5185\u663e\u793aHeatFlux\u3002\u8bf7\u6ce8\u610f\uff0c\u70ed\u901a\u91cf\u5728\u56fa\u4f53\u4e2d\u6bd4\u5728\u6d41\u4f53\u4e2d\u66f4\u5feb\u5730\u4f20\u64ad\u3002\u56e0\u6b64\uff0c\u4fdd\u6301\u77ed\u5bff\u547d\u4ec5\u5141\u8bb8\u5728\u56fa\u4f53\u4e2d\u663e\u793a\u70ed\u901a\u91cf\u8def\u5f84\u3002 \u5f53\u70ed\u91cf\u901a\u91cf\u5feb\u901f\u6269\u6563\u65f6\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7b80\u77ed\u7684\u201cLifetime\u201d\u4ee5\u5c06\u70ed\u901a\u91cf\u663e\u793a\u4e3a\u7bad\u5934\u3002\u5982\u679c\u65f6\u95f4\u6b65\u957f\u592a\u9ad8\uff0c\u90a3\u4e48\u4f60\u4f1a\u770b\u5230\u50cf\u4e1d\u5e26\u8fd9\u6837\u7684\u7c92\u5b50 \u5b89\u88c5\u5728PCB\u4e0a\u7684TO\u793a\u4f8b\uff1a \u7ec4\u4ef6\u677f\u8f7d\u6587\u4ef6 \u3002 \u5728\u6b64\u5305\u6587\u4ef6\u4e2d\uff0c\u67e5\u770b\u7c92\u5b50\u8bbe\u7f6e\uff1a \u56fa\u6001\u70ed\u901a\u91cf\u7684\u663e\u793a\u5982\u4e0b\u6240\u793a\uff1a","title":"01 \u56fa\u4f53\u5185\u90e8\u70ed\u6d41\u56fe"},{"location":"Flotherm%20XT/Flotherm%20XT%20EDA%20Bridge/","text":"Flotherm XT EDA Bridge ODB ++\u6587\u4ef6\u662f\u4e00\u4e2azip\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u8bb8\u591a\u63cf\u8ff0PCB\u8be6\u7ec6\u4fe1\u606f\u7684\u6587\u4ef6\u5939/\u6587\u4ef6\u3002\u5982\u4f55\u68c0\u67e5 ODB++ \u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u8bbe\u7f6e\u662f\u5426\u6b63\u786e\uff1f ODB++ \u63d0\u4f9b\u4e86\u4e00\u79cd\u667a\u80fd\u7684\u5355\u4e00\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5c06 PCB \u8bbe\u8ba1\u8f6c\u6362\u4e3a\u5236\u9020\u3001\u7ec4\u88c5\u548c\u6d4b\u8bd5\u3002\u5b83\u7531 CAD \u548c CAM \u5200\u5177\u4f9b\u5e94\u5546\u7ec4\u6210\u7684\u6d3b\u8dc3\u793e\u533a\u901a\u8fc7\u5f00\u653e\u3001\u5305\u5bb9\u7684\u5408\u4f5c\u8ba1\u5212\u63d0\u4f9b\u652f\u6301\u3002 https://www.mentor.com/pcb/downloads/odb-plus-plus-viewer \u6211\u53ef\u4ee5\u5728FloEDA\u4e2d\u6253\u5f00odb ++\uff08tgz\u6587\u4ef6\uff09\uff0c\u4f46\u8bbe\u8ba1\u4e2d\u4e0d\u5b58\u5728\u4ecb\u7535\u5c42\u3002\u5f53\u8f6c\u79fb\u5230XT\uff08\u4eceFloEDA\uff09\u65f6\uff0c\u6240\u6709\u91d1\u5c5e\u5c42\u90fd\u5806\u53e0\u5728\u53e6\u4e00\u4e2a\u4e4b\u4e0a\uff0c\u6ca1\u6709\u7535\u4ecb\u8d28\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e5f\u6ca1\u6709\u901a\u5b54\u3002 ODB++ \u6587\u4ef6\u4e2d\u7f3a\u5c11\u7535\u4ecb\u8d28\u6587\u4ef6\u7684\u539a\u5ea6\u4fe1\u606f\u3002 \u6b64\u4fe1\u606f\u53ef\u4ee5\u624b\u52a8\u6dfb\u52a0\u5230 ODB++ \u6587\u4ef6\u4e2d\u3002 \u901a\u5e38\u5728 odb++ \u6587\u4ef6\u4e2d\uff0c\u5e94\u5305\u542b\u4ecb\u7535\u539a\u5ea6\u7684\u4fe1\u606f\u3002 \u68c0\u67e5 odbfolder\\steps\\job\\layers\\layer_name\\attrlist \u4e2d\u6bcf \u5c42\u3002\u5982\u679c\u5b58\u5728\u5e76\u8bbe\u7f6e\u4e86\".layer_dielectric\"\uff0c\u5219\u8fd9\u662f\u7d27\u6328\u7740\u88ab\u68c0\u6d4b\u5c42\u4e0b\u65b9\u7684\u7535\u4ecb\u8d28\u5c42\u7684\u539a\u5ea6\u3002 \u5982\u679c\u7f3a\u5c11\".layer_dielectric\"\uff0c\u53ea\u9700\u624b\u52a8\u6dfb\u52a0\u4fe1\u606f\u5e76\u4fdd\u5b58\u6587\u672c\u6587\u4ef6\u5373\u53ef\u3002 \u5bfc\u5165 ODB++\uff1a\u4ec5\u5bfc\u5165\u5b8c\u5168\u586b\u5145\u7684\u8fc7\u5b54 ODB++\u6587\u4ef6\u4e0d\u5305\u542b\u9540\u5c42\u94dc\u539a\u5ea6\u7684\u4fe1\u606f \u5728\u5236\u9020\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u9700\u8981\u9540\u94dc\u539a\u5ea6\u7684\u6b64\u4fe1\u606f\uff0c\u5e76\u4e14\u8be5\u4fe1\u606f\u4e0d\u5728ODB ++\u6587\u4ef6\u4e2d \\1. ODB ++\u6587\u4ef6\u7ed9\u51fa\u4e86\u94bb\u5934\u7684\u76f4\u5f84\u3002\u8fd9\u5bf9\u5e94\u4e8e\u8fc7\u5b54\u7684\u5916\u5f84\u3002 \\2. \u5728\u5bfc\u5165 ODB++ \u6587\u4ef6\u65f6\uff0cFloEDA \u6865\u63a5\u5668\u8ba4\u4e3a\u6240\u6709\u8fc7\u5b54\u90fd\u586b\u5145\u6709\u94dc\u6750\u6599\u3002 \u7126\u8033\u70ed NOTE: The Joule Heating analysis feature and Explicit Geometry Modeling (Thermal Territories) feature are only available with the Ultra License. Here is the procedure that should be used to perform this analysis: Import the desired PCB design into FloEDA bridge (ODB++ or CCE file both contain explicit geometry) Change Board Model Type to \u201cExplicit\u201d Select desired net under \u201cPower and Ground Nets\u201d If desired net is not available, open \u201cPower Nets Selector\u201d to make desired net selectable. Transfer FloEDA Bridge model to FloTHERM XT Assign boundary conditions to the net (typically Electrical Condition for Joule Heating analysis) Solve the model For purposes of demonstration, instead of applying Joule Heating boundary conditions to the sample model, we applied a heat source. The resultant model performance will be the same. Here is an example of the analysis using the procedure above. The first figure is the PCB (wireframe) with the desired net transferred separately. As can be seen, this net covers multiple layers. The figure below shows the thermal conductivity of the material around the net. The net thermal conductivity is that of copper (395 W/m-K) while the thermal conductivity of the board material around net on this layer is based on the copper content of the layer. In this case, the % copper is approximately 40% which results in a thermal conductivity of around 121 W/m-K. The high thermal conductivity material surrounding the net results in the following thermal profile. If you look at the actual net in the PCB, it is surrounded by FR4 which has a thermal conductivity of 0.3 W/m-K. In the figure below, the same net is shown in the PCB. The net is highlighted in red, and as can be seen it is surrounded by green color which is that of the FR4. The current modeling method results in much higher thermal conductivity around the net being analyzed. This will result in lower predicted temperatures in the model than if the net were modeled correctly. With the launch of FloTHERM XT V3.0, a new feature was added to FloEDA Bridge, Thermal Territories . Thermal Territories allows the user to transfer explicit geometry (FR4 and Copper) into designated volumes of a PCB. Thermal Territories are created around components on the board. So, in order to capture the explicit geometry around a net, the user will need to create components in the model to capture the geometry around the desired net. When the user creates the component, the created component can be filtered so the component is not transferred to FloTHERM XT but the Thermal Territory is transferred. Due to the serpentine nature of the net above, using one Thermal Territory around the net would result in excessive explicit geometry being transferred to FloTHERM XT and increased processing time to perform material attribute Boolean operations. In this case, multiple Thermal Territories are created (with components filtered) to minimize the size or amount of explicit geometry. Also, due to multiple layers of the net, all Thermal Territories are created with \u201cAll Layers\u201d selected for the depth. In the figure below, the net on Layer one is highlighted in red and the multiple Thermal Territories are highlighted in green. Since there is no grey box in the middle of the Thermal Territories, all of the components are \u201cFiltered\u201d. Even though there are three distinct Thermal Territories in FloEDA Bridge, when the model is transferred to FloTHERM XT, the dielectric will be modeled as one part and the explicit copper inside the Thermal Territories will be modeled as a separate part. Because the net is selected to be modeled explicitly, the net will be modeled separately and the geometry not repeated in the Thermal Territory explicit copper part. Again, the \u201cDepth to Layer\u201d setting for all three Thermal Territories is \u201cAll Layers\u201d. The next figure shows the thermal conductivity of the material around the desired net after the model has been transferred to FloTHERM XT and solved. As viewed in the above image, the material adjacent to the net to be analyzed now has a thermal conductivity of 0.3 W/m-K. This thermal isolation now results in a maximum temperature for the net to increase from 105.7 Degrees C to 242.2 Degrees C. By accurately modeling the explicit geometry around the net, the resultant temperature is higher than analyzing just the PCB with the PCB NGSP (Non-Geometric SmartPart). Here is the process to create a more accurate model: Import the desired PCB design into FloEDA bridge (ODB++ or CCE files both contain explicit geometry) Change the Board Model Type to \u201cExplicit\u201d Select the desired net under \u201cPower and Ground Nets\u201d If the desired net is not available, open \u201cPower Nets Selector\u201d to make the desired net selectable. Create New Component(s) Drag and size component to cover the net (if required use more than one component). Also, check net layout on other layers to ensure proper coverage. Set Thermal Territory to Enabled Set Inflation size to 0 mm (or what makes sense to cover net) Set \u201cDepth to Layer\u201d to \u201cAll Layers\u201d Set Component Model Type to \u201cFiltered\u201d Transfer FloEDA Bridge model to FloTHERM XT Check solid model for net to be analyzed Verify net to be analyzed is fully inside the Thermal Territory dielectric part. Assign boundary conditions to the net (typically Electrical Condition for Joule Heating analysis) Solve the model","title":"Flotherm XT EDA Bridge"},{"location":"Flotherm%20XT/Flotherm%20XT%20EDA%20Bridge/#flotherm-xt-eda-bridge","text":"ODB ++\u6587\u4ef6\u662f\u4e00\u4e2azip\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u8bb8\u591a\u63cf\u8ff0PCB\u8be6\u7ec6\u4fe1\u606f\u7684\u6587\u4ef6\u5939/\u6587\u4ef6\u3002\u5982\u4f55\u68c0\u67e5 ODB++ \u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u8bbe\u7f6e\u662f\u5426\u6b63\u786e\uff1f ODB++ \u63d0\u4f9b\u4e86\u4e00\u79cd\u667a\u80fd\u7684\u5355\u4e00\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5c06 PCB \u8bbe\u8ba1\u8f6c\u6362\u4e3a\u5236\u9020\u3001\u7ec4\u88c5\u548c\u6d4b\u8bd5\u3002\u5b83\u7531 CAD \u548c CAM \u5200\u5177\u4f9b\u5e94\u5546\u7ec4\u6210\u7684\u6d3b\u8dc3\u793e\u533a\u901a\u8fc7\u5f00\u653e\u3001\u5305\u5bb9\u7684\u5408\u4f5c\u8ba1\u5212\u63d0\u4f9b\u652f\u6301\u3002 https://www.mentor.com/pcb/downloads/odb-plus-plus-viewer \u6211\u53ef\u4ee5\u5728FloEDA\u4e2d\u6253\u5f00odb ++\uff08tgz\u6587\u4ef6\uff09\uff0c\u4f46\u8bbe\u8ba1\u4e2d\u4e0d\u5b58\u5728\u4ecb\u7535\u5c42\u3002\u5f53\u8f6c\u79fb\u5230XT\uff08\u4eceFloEDA\uff09\u65f6\uff0c\u6240\u6709\u91d1\u5c5e\u5c42\u90fd\u5806\u53e0\u5728\u53e6\u4e00\u4e2a\u4e4b\u4e0a\uff0c\u6ca1\u6709\u7535\u4ecb\u8d28\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e5f\u6ca1\u6709\u901a\u5b54\u3002 ODB++ \u6587\u4ef6\u4e2d\u7f3a\u5c11\u7535\u4ecb\u8d28\u6587\u4ef6\u7684\u539a\u5ea6\u4fe1\u606f\u3002 \u6b64\u4fe1\u606f\u53ef\u4ee5\u624b\u52a8\u6dfb\u52a0\u5230 ODB++ \u6587\u4ef6\u4e2d\u3002 \u901a\u5e38\u5728 odb++ \u6587\u4ef6\u4e2d\uff0c\u5e94\u5305\u542b\u4ecb\u7535\u539a\u5ea6\u7684\u4fe1\u606f\u3002 \u68c0\u67e5 odbfolder\\steps\\job\\layers\\layer_name\\attrlist \u4e2d\u6bcf \u5c42\u3002\u5982\u679c\u5b58\u5728\u5e76\u8bbe\u7f6e\u4e86\".layer_dielectric\"\uff0c\u5219\u8fd9\u662f\u7d27\u6328\u7740\u88ab\u68c0\u6d4b\u5c42\u4e0b\u65b9\u7684\u7535\u4ecb\u8d28\u5c42\u7684\u539a\u5ea6\u3002 \u5982\u679c\u7f3a\u5c11\".layer_dielectric\"\uff0c\u53ea\u9700\u624b\u52a8\u6dfb\u52a0\u4fe1\u606f\u5e76\u4fdd\u5b58\u6587\u672c\u6587\u4ef6\u5373\u53ef\u3002","title":"Flotherm XT EDA Bridge"},{"location":"Flotherm%20XT/Flotherm%20XT%20EDA%20Bridge/#odb","text":"ODB++\u6587\u4ef6\u4e0d\u5305\u542b\u9540\u5c42\u94dc\u539a\u5ea6\u7684\u4fe1\u606f \u5728\u5236\u9020\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u9700\u8981\u9540\u94dc\u539a\u5ea6\u7684\u6b64\u4fe1\u606f\uff0c\u5e76\u4e14\u8be5\u4fe1\u606f\u4e0d\u5728ODB ++\u6587\u4ef6\u4e2d \\1. ODB ++\u6587\u4ef6\u7ed9\u51fa\u4e86\u94bb\u5934\u7684\u76f4\u5f84\u3002\u8fd9\u5bf9\u5e94\u4e8e\u8fc7\u5b54\u7684\u5916\u5f84\u3002 \\2. \u5728\u5bfc\u5165 ODB++ \u6587\u4ef6\u65f6\uff0cFloEDA \u6865\u63a5\u5668\u8ba4\u4e3a\u6240\u6709\u8fc7\u5b54\u90fd\u586b\u5145\u6709\u94dc\u6750\u6599\u3002","title":"\u5bfc\u5165 ODB++\uff1a\u4ec5\u5bfc\u5165\u5b8c\u5168\u586b\u5145\u7684\u8fc7\u5b54"},{"location":"Flotherm%20XT/Flotherm%20XT%20EDA%20Bridge/#_1","text":"NOTE: The Joule Heating analysis feature and Explicit Geometry Modeling (Thermal Territories) feature are only available with the Ultra License. Here is the procedure that should be used to perform this analysis: Import the desired PCB design into FloEDA bridge (ODB++ or CCE file both contain explicit geometry) Change Board Model Type to \u201cExplicit\u201d Select desired net under \u201cPower and Ground Nets\u201d If desired net is not available, open \u201cPower Nets Selector\u201d to make desired net selectable. Transfer FloEDA Bridge model to FloTHERM XT Assign boundary conditions to the net (typically Electrical Condition for Joule Heating analysis) Solve the model For purposes of demonstration, instead of applying Joule Heating boundary conditions to the sample model, we applied a heat source. The resultant model performance will be the same. Here is an example of the analysis using the procedure above. The first figure is the PCB (wireframe) with the desired net transferred separately. As can be seen, this net covers multiple layers. The figure below shows the thermal conductivity of the material around the net. The net thermal conductivity is that of copper (395 W/m-K) while the thermal conductivity of the board material around net on this layer is based on the copper content of the layer. In this case, the % copper is approximately 40% which results in a thermal conductivity of around 121 W/m-K. The high thermal conductivity material surrounding the net results in the following thermal profile. If you look at the actual net in the PCB, it is surrounded by FR4 which has a thermal conductivity of 0.3 W/m-K. In the figure below, the same net is shown in the PCB. The net is highlighted in red, and as can be seen it is surrounded by green color which is that of the FR4. The current modeling method results in much higher thermal conductivity around the net being analyzed. This will result in lower predicted temperatures in the model than if the net were modeled correctly. With the launch of FloTHERM XT V3.0, a new feature was added to FloEDA Bridge, Thermal Territories . Thermal Territories allows the user to transfer explicit geometry (FR4 and Copper) into designated volumes of a PCB. Thermal Territories are created around components on the board. So, in order to capture the explicit geometry around a net, the user will need to create components in the model to capture the geometry around the desired net. When the user creates the component, the created component can be filtered so the component is not transferred to FloTHERM XT but the Thermal Territory is transferred. Due to the serpentine nature of the net above, using one Thermal Territory around the net would result in excessive explicit geometry being transferred to FloTHERM XT and increased processing time to perform material attribute Boolean operations. In this case, multiple Thermal Territories are created (with components filtered) to minimize the size or amount of explicit geometry. Also, due to multiple layers of the net, all Thermal Territories are created with \u201cAll Layers\u201d selected for the depth. In the figure below, the net on Layer one is highlighted in red and the multiple Thermal Territories are highlighted in green. Since there is no grey box in the middle of the Thermal Territories, all of the components are \u201cFiltered\u201d. Even though there are three distinct Thermal Territories in FloEDA Bridge, when the model is transferred to FloTHERM XT, the dielectric will be modeled as one part and the explicit copper inside the Thermal Territories will be modeled as a separate part. Because the net is selected to be modeled explicitly, the net will be modeled separately and the geometry not repeated in the Thermal Territory explicit copper part. Again, the \u201cDepth to Layer\u201d setting for all three Thermal Territories is \u201cAll Layers\u201d. The next figure shows the thermal conductivity of the material around the desired net after the model has been transferred to FloTHERM XT and solved. As viewed in the above image, the material adjacent to the net to be analyzed now has a thermal conductivity of 0.3 W/m-K. This thermal isolation now results in a maximum temperature for the net to increase from 105.7 Degrees C to 242.2 Degrees C. By accurately modeling the explicit geometry around the net, the resultant temperature is higher than analyzing just the PCB with the PCB NGSP (Non-Geometric SmartPart). Here is the process to create a more accurate model: Import the desired PCB design into FloEDA bridge (ODB++ or CCE files both contain explicit geometry) Change the Board Model Type to \u201cExplicit\u201d Select the desired net under \u201cPower and Ground Nets\u201d If the desired net is not available, open \u201cPower Nets Selector\u201d to make the desired net selectable. Create New Component(s) Drag and size component to cover the net (if required use more than one component). Also, check net layout on other layers to ensure proper coverage. Set Thermal Territory to Enabled Set Inflation size to 0 mm (or what makes sense to cover net) Set \u201cDepth to Layer\u201d to \u201cAll Layers\u201d Set Component Model Type to \u201cFiltered\u201d Transfer FloEDA Bridge model to FloTHERM XT Check solid model for net to be analyzed Verify net to be analyzed is fully inside the Thermal Territory dielectric part. Assign boundary conditions to the net (typically Electrical Condition for Joule Heating analysis) Solve the model","title":"\u7126\u8033\u70ed"},{"location":"Products/MK2101/","text":"MK2101 MK2101 is an adjustable 2A DCDC boost converter, the output power can be easily changed. MK2101 Features Input voltage: 2~24V Output voltage: 5~28V Output current: <2A Size: 30mmX17mmX1.4mm Download MK2101 Schematic","title":"MK2101"},{"location":"Products/MK2101/#mk2101","text":"MK2101 is an adjustable 2A DCDC boost converter, the output power can be easily changed. MK2101","title":"MK2101"},{"location":"Products/MK2101/#features","text":"Input voltage: 2~24V Output voltage: 5~28V Output current: <2A Size: 30mmX17mmX1.4mm","title":"Features"},{"location":"Products/MK2101/#download","text":"MK2101 Schematic","title":"Download"},{"location":"ml5/01%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/","text":"\u8fd9\u4e2a\u5b9e\u4f8b\u5b9e\u73b0\u56fe\u7247\u8bc6\u522b\u529f\u80fd\uff0c\u53ef\u4ee5\u5224\u65ad\u51fa\u56fe\u7247\u4e0a\u7684\u7269\u4f53\u540d\u79f0\uff0c\u7c7b\u4f3c\u8bc6\u522b\u690d\u7269\u540d\u79f0\u7684APP\u5f62\u8272\u3002 \u65b0\u5efa index.html \u6587\u4ef6 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Sketch </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"style.css\" > < script src = \"libraries/p5.min.js\" ></ script > < script src = \"libraries/p5.sound.min.js\" ></ script > < script src = \"https://unpkg.com/ml5@latest/dist/ml5.min.js\" type = \"text/javascript\" ></ script > </ head > < body > < script src = \"sketch.js\" ></ script > </ body > </ html > Tip \u9700\u8981\u6ce8\u610fml5.js\u8981\u653e\u5728p5.js\u6587\u4ef6\u7684\u540e\u9762\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u65b0\u5efa sketch.js \u6587\u4ef6 // Initialize the Image Classifier method with MobileNet. A callback needs to be passed. let classifier ; // A variable to hold the image we want to classify let img ; function preload () { classifier = ml5 . imageClassifier ( 'MobileNet' ); img = loadImage ( 'images/bee2.jpg' ); } function setup () { createCanvas ( 400 , 400 ); classifier . classify ( img , gotResult ); img . resize ( width , 0 ); image ( img , 0 , 0 ,); } // A function to run when we get any errors and the results function gotResult ( error , results ) { // Display error in the console if ( error ) { console . error ( error ); } // The results are in an array ordered by confidence. console . log ( results ); createDiv ( 'Label: ' + results [ 0 ]. label ); createDiv ( 'Confidence: ' + nf ( results [ 0 ]. confidence , 0 , 2 )); } \u6df1\u8e72\u7ec3\u4e60APP https://colab.research.google.com/drive/1OHTsNyr3Ry_bSw8dT9s77BZsXHe7i8HR#scrollTo=uIbljMew7Wje","title":"01\u56fe\u50cf\u5206\u7c7b"},{"location":"ml5/01%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/#app","text":"https://colab.research.google.com/drive/1OHTsNyr3Ry_bSw8dT9s77BZsXHe7i8HR#scrollTo=uIbljMew7Wje","title":"\u6df1\u8e72\u7ec3\u4e60APP"},{"location":"ml5/02%E4%BA%BA%E4%BD%93%E5%8A%A8%E4%BD%9C%E8%AF%86%E5%88%AB/","text":"1. p5.js \u83b7\u53d6\u6444\u50cf\u5934\u89c6\u9891 var capture ; function setup () { createCanvas ( 320 , 240 ); capture = createCapture ( VIDEO ); capture . hide (); } function draw () { push (); translate ( width , 0 ); scale ( - 1 , 1 ); image ( capture , 0 , 0 , 320 , 240 ); pop (); }; pop (); } 2. \u4f7f\u7528 ml5.poseNet \u8bc6\u522b\u4eba\u4f53\u5173\u952e\u70b9\u3002 var capture ; let poses = []; function setup () { createCanvas ( 320 , 240 ); capture = createCapture ( VIDEO ); capture . size ( width , height ); capture . hide (); poseNet = ml5 . poseNet ( capture ); poseNet . on ( 'pose' , gotpose ) } function gotpose ( results ) { poses = results ; } function draw () { push (); translate ( width , 0 ); scale ( - 1 , 1 ); image ( capture , 0 , 0 ); if ( poses . length ) { drawKeypoints (); drawSkeleton (); } pop (); } // A function to draw ellipses over the detected keypoints function drawKeypoints () { // For each pose detected, loop through all the keypoints let pose = poses [ 0 ]. pose ; for ( let j = 0 ; j < pose . keypoints . length ; j ++ ) { // A keypoint is an object describing a body part (like rightArm or leftShoulder) let keypoint = pose . keypoints [ j ]; // Only draw an ellipse is the pose probability is bigger than 0.2 if ( keypoint . score > 0.2 ) { fill ( 255 , 0 , 0 ); noStroke (); ellipse ( keypoint . position . x , keypoint . position . y , 10 , 10 ); } } } // A function to draw the skeletons function drawSkeleton () { // Loop through all the skeletons detected let skeleton = poses [ 0 ]. skeleton ; // For every skeleton, loop through all body connections for ( let j = 0 ; j < skeleton . length ; j ++ ) { let partA = skeleton [ j ][ 0 ]; let partB = skeleton [ j ][ 1 ]; stroke ( 255 , 0 , 0 ); line ( partA . position . x , partA . position . y , partB . position . x , partB . position . y ); } } \u8bbe\u7f6e\u9009\u578b\u4e2d\uff0c\u51cf\u5c0f\u8bc6\u522b\u51c6\u786e\u5ea6\u53ef\u4ee5\u589e\u52a0\u8bc6\u522b\u7ed3\u679c\u6570\u91cf\u3002 inputResolution \u8f93\u5165\u56fe\u50cf\u5206\u8fa8\u7387\uff0c\u9ed8\u8ba4257\uff0c\u5206\u8fa8\u7387\u8d8a\u5c0f\u7cbe\u5ea6\u8d8a\u5dee multiplier \u5c42\u6570\uff0c\u8d8a\u5c0f\u7cbe\u5ea6\u8d8a\u5dee 3. \u8bc6\u522b\u8df3\u7ef3\u6570\u636e \u53c2\u8003\u9879\u76ee \u6df1\u8e72\u7ec3\u4e60APP https://colab.research.google.com/drive/1OHTsNyr3Ry_bSw8dT9s77BZsXHe7i8HR#scrollTo=uIbljMew7Wje \u5934\u90e8\u6b6a\u659c\u68c0\u6d4b https://glitch.com/~false-lobe \u52a8\u4f5c\u8ba1\u6570 https://github.com/samsonleegh/workout_counter Python\u5199\u7684\u8fd0\u52a8\u8ba1\u6570\u5668 https://github.com/akshatkaush/exercise-count","title":"02\u4eba\u4f53\u52a8\u4f5c\u8bc6\u522b"},{"location":"ml5/02%E4%BA%BA%E4%BD%93%E5%8A%A8%E4%BD%9C%E8%AF%86%E5%88%AB/#1-p5js","text":"var capture ; function setup () { createCanvas ( 320 , 240 ); capture = createCapture ( VIDEO ); capture . hide (); } function draw () { push (); translate ( width , 0 ); scale ( - 1 , 1 ); image ( capture , 0 , 0 , 320 , 240 ); pop (); }; pop (); }","title":"1. p5.js \u83b7\u53d6\u6444\u50cf\u5934\u89c6\u9891"},{"location":"ml5/02%E4%BA%BA%E4%BD%93%E5%8A%A8%E4%BD%9C%E8%AF%86%E5%88%AB/#2-ml5posenet","text":"var capture ; let poses = []; function setup () { createCanvas ( 320 , 240 ); capture = createCapture ( VIDEO ); capture . size ( width , height ); capture . hide (); poseNet = ml5 . poseNet ( capture ); poseNet . on ( 'pose' , gotpose ) } function gotpose ( results ) { poses = results ; } function draw () { push (); translate ( width , 0 ); scale ( - 1 , 1 ); image ( capture , 0 , 0 ); if ( poses . length ) { drawKeypoints (); drawSkeleton (); } pop (); } // A function to draw ellipses over the detected keypoints function drawKeypoints () { // For each pose detected, loop through all the keypoints let pose = poses [ 0 ]. pose ; for ( let j = 0 ; j < pose . keypoints . length ; j ++ ) { // A keypoint is an object describing a body part (like rightArm or leftShoulder) let keypoint = pose . keypoints [ j ]; // Only draw an ellipse is the pose probability is bigger than 0.2 if ( keypoint . score > 0.2 ) { fill ( 255 , 0 , 0 ); noStroke (); ellipse ( keypoint . position . x , keypoint . position . y , 10 , 10 ); } } } // A function to draw the skeletons function drawSkeleton () { // Loop through all the skeletons detected let skeleton = poses [ 0 ]. skeleton ; // For every skeleton, loop through all body connections for ( let j = 0 ; j < skeleton . length ; j ++ ) { let partA = skeleton [ j ][ 0 ]; let partB = skeleton [ j ][ 1 ]; stroke ( 255 , 0 , 0 ); line ( partA . position . x , partA . position . y , partB . position . x , partB . position . y ); } } \u8bbe\u7f6e\u9009\u578b\u4e2d\uff0c\u51cf\u5c0f\u8bc6\u522b\u51c6\u786e\u5ea6\u53ef\u4ee5\u589e\u52a0\u8bc6\u522b\u7ed3\u679c\u6570\u91cf\u3002 inputResolution \u8f93\u5165\u56fe\u50cf\u5206\u8fa8\u7387\uff0c\u9ed8\u8ba4257\uff0c\u5206\u8fa8\u7387\u8d8a\u5c0f\u7cbe\u5ea6\u8d8a\u5dee multiplier \u5c42\u6570\uff0c\u8d8a\u5c0f\u7cbe\u5ea6\u8d8a\u5dee","title":"2. \u4f7f\u7528ml5.poseNet\u8bc6\u522b\u4eba\u4f53\u5173\u952e\u70b9\u3002"},{"location":"ml5/02%E4%BA%BA%E4%BD%93%E5%8A%A8%E4%BD%9C%E8%AF%86%E5%88%AB/#3","text":"","title":"3. \u8bc6\u522b\u8df3\u7ef3\u6570\u636e"},{"location":"ml5/02%E4%BA%BA%E4%BD%93%E5%8A%A8%E4%BD%9C%E8%AF%86%E5%88%AB/#_1","text":"\u6df1\u8e72\u7ec3\u4e60APP https://colab.research.google.com/drive/1OHTsNyr3Ry_bSw8dT9s77BZsXHe7i8HR#scrollTo=uIbljMew7Wje \u5934\u90e8\u6b6a\u659c\u68c0\u6d4b https://glitch.com/~false-lobe \u52a8\u4f5c\u8ba1\u6570 https://github.com/samsonleegh/workout_counter Python\u5199\u7684\u8fd0\u52a8\u8ba1\u6570\u5668 https://github.com/akshatkaush/exercise-count","title":"\u53c2\u8003\u9879\u76ee"},{"location":"ml5/03%E5%B0%8F%E7%A8%8B%E5%BA%8F/","text":"env.js\u4e2d\u5730\u5740\u6539\u4e3a export const POSENET_URL = 'H' ; posenet/models.js\u7b2c82\u884c const slc = tf . slice ( temp , sliceOptions . start , sliceOptions . size ) return tf . image . resizeBilinear ( slc ,[ this . displaySize . height , this . displaySize . width ])","title":"03\u5c0f\u7a0b\u5e8f"}]}